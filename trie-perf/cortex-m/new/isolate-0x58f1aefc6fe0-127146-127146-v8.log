v8-version,11,3,244,8,-node.23,0
v8-platform,linux,linux
shared-library,/usr/bin/node-20,0x58f171394000,0x58f171399000,0
shared-library,/usr/lib64/libstdc++.so.6.0.33,0x7ee819000000,0x7ee8191d5000,0
shared-library,/usr/lib64/libm.so.6,0x7ee81931c000,0x7ee8193a4000,0
shared-library,/usr/lib64/libcrypto.so.3.2.2,0x7ee819400000,0x7ee81978e000,0
shared-library,/usr/lib64/libssl.so.3.2.2,0x7ee819938000,0x7ee8199dd000,0
shared-library,/usr/lib64/libc.so.6,0x7ee819a0f000,0x7ee819ba4000,0
shared-library,/usr/lib64/libnode.so.115,0x7ee819c00000,0x7ee81c8fb000,0
shared-library,/usr/lib64/libbrotlicommon.so.1.1.0,0x7ee81d941000,0x7ee81d943000,0
shared-library,/usr/lib64/libgcc_s-14-20240912.so.1,0x7ee81d966000,0x7ee81d98e000,0
shared-library,/usr/lib64/libbrotlienc.so.1.1.0,0x7ee81d994000,0x7ee81d9e2000,0
shared-library,/usr/lib64/libbrotlidec.so.1.1.0,0x7ee81da36000,0x7ee81da3f000,0
shared-library,/usr/lib64/libuv.so.1.0.0,0x7ee81da44000,0x7ee81da70000,0
shared-library,/usr/lib64/libz.so.1.3.1.zlib-ng,0x7ee81da7b000,0x7ee81da93000,0
shared-library,/usr/lib64/ld-linux-x86-64.so.2,0x7ee81daab000,0x7ee81dad4000,0
shared-library,[vdso],0x7ffd28bfc000,0x7ffd28bfe000,0
shared-library-end
profiler,begin,1000
tick,0x7ee819aa2da9,459,0,0x0,6
new,CodeRange,0x7ee79be40000,0
new,MemoryChunk,0x371ddfa00000,262144
new,MemoryChunk,0x2a2cdce40000,262144
new,MemoryChunk,0x30e4be9c0000,262144
new,MemoryChunk,0x1be81fc40000,262144
new,MemoryChunk,0x2fbf5cc0000,262144
heap-capacity,1030880
heap-available,2112583104
new,MemoryChunk,0x14aabfc80000,262144
tick,0x7ee81c5b3a7a,1515,0,0x0,6
code-creation,Builtin,2,1615,0x7ee81bcd3000,768,DeoptimizationEntry_Eager
code-creation,Builtin,2,1622,0x7ee81bcd3340,772,DeoptimizationEntry_Lazy
code-creation,Builtin,2,1624,0x7ee81bcd3680,2720,RecordWriteSaveFP
code-creation,Builtin,2,1626,0x7ee81bcd4140,1180,RecordWriteIgnoreFP
code-creation,Builtin,2,1627,0x7ee81bcd4600,332,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,1629,0x7ee81bcd4780,116,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,1630,0x7ee81bcd4800,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,1632,0x7ee81bcd4880,256,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,1638,0x7ee81bcd49c0,304,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,1640,0x7ee81bcd4b00,340,CallFunction_ReceiverIsAny
code-creation,Builtin,2,1641,0x7ee81bcd4c80,100,CallBoundFunction
code-creation,Builtin,2,1643,0x7ee81bcd4d00,844,CallWrappedFunction
code-creation,Builtin,2,1644,0x7ee81bcd5080,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,1646,0x7ee81bcd5140,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,1647,0x7ee81bcd5200,168,Call_ReceiverIsAny
code-creation,Builtin,2,1649,0x7ee81bcd52c0,976,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,1651,0x7ee81bcd56c0,968,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,1652,0x7ee81bcd5ac0,1040,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,1665,0x7ee81bcd5f00,1032,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,1667,0x7ee81bcd6340,1040,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,1669,0x7ee81bcd6780,1032,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,1670,0x7ee81bcd6bc0,924,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,1672,0x7ee81bcd6f80,924,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,1674,0x7ee81bcd7340,924,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,1676,0x7ee81bcd7700,732,CallProxy
code-creation,Builtin,2,1677,0x7ee81bcd7a00,120,CallVarargs
code-creation,Builtin,2,1678,0x7ee81bcd7a80,936,CallWithSpread
code-creation,Builtin,2,1680,0x7ee81bcd7e40,1948,CallWithSpread_Baseline
code-creation,Builtin,2,1681,0x7ee81bcd8600,1908,CallWithSpread_WithFeedback
code-creation,Builtin,2,1683,0x7ee81bcd8d80,888,CallWithArrayLike
code-creation,Builtin,2,1684,0x7ee81bcd9100,1828,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,1686,0x7ee81bcd9840,124,CallForwardVarargs
code-creation,Builtin,2,1688,0x7ee81bcd98c0,124,CallFunctionForwardVarargs
code-creation,Builtin,2,1695,0x7ee81bcd9940,128,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,1697,0x7ee81bcd9a00,232,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,1699,0x7ee81bcd9b00,320,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,1701,0x7ee81bcd9c80,32,ConstructFunction
code-creation,Builtin,2,1702,0x7ee81bcd9cc0,100,ConstructBoundFunction
code-creation,Builtin,2,1703,0x7ee81bcd9d40,28,ConstructedNonConstructable
code-creation,Builtin,2,1705,0x7ee81bcd9d80,100,Construct
code-creation,Builtin,2,1707,0x7ee81bcd9e00,120,ConstructVarargs
code-creation,Builtin,2,1708,0x7ee81bcd9e80,968,ConstructWithSpread
code-creation,Builtin,2,1710,0x7ee81bcda280,1764,ConstructWithSpread_Baseline
code-creation,Builtin,2,1711,0x7ee81bcda980,1744,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,1713,0x7ee81bcdb080,952,ConstructWithArrayLike
code-creation,Builtin,2,1714,0x7ee81bcdb440,1684,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,1716,0x7ee81bcdbb00,164,ConstructForwardVarargs
code-creation,Builtin,2,1718,0x7ee81bcdbbc0,164,ConstructFunctionForwardVarargs
code-creation,Builtin,2,1719,0x7ee81bcdbc80,776,Construct_Baseline
code-creation,Builtin,2,1721,0x7ee81bcdbfc0,800,Construct_WithFeedback
code-creation,Builtin,2,1722,0x7ee81bcdc300,412,JSConstructStubGeneric
code-creation,Builtin,2,1724,0x7ee81bcdc4c0,308,JSBuiltinsConstructStub
code-creation,Builtin,2,1725,0x7ee81bcdc600,772,FastNewObject
code-creation,Builtin,2,1727,0x7ee81bcdc940,312,FastNewClosure
code-creation,Builtin,2,1728,0x7ee81bcdca80,764,ConstructProxy
code-creation,Builtin,2,1729,0x7ee81bcdcd80,192,JSEntry
code-creation,Builtin,2,1731,0x7ee81bcdce80,192,JSConstructEntry
code-creation,Builtin,2,1732,0x7ee81bcdcf80,192,JSRunMicrotasksEntry
code-creation,Builtin,2,1734,0x7ee81bcdd080,100,JSEntryTrampoline
code-creation,Builtin,2,1735,0x7ee81bcdd100,100,JSConstructEntryTrampoline
code-creation,Builtin,2,1737,0x7ee81bcdd180,256,ResumeGeneratorTrampoline
code-creation,Builtin,2,1738,0x7ee81bcdd2c0,1268,StringFromCodePointAt
code-creation,Builtin,2,1740,0x7ee81bcdd7c0,708,StringEqual
code-creation,Builtin,2,1741,0x7ee81bcddac0,328,StringGreaterThan
code-creation,Builtin,2,1743,0x7ee81bcddc40,328,StringGreaterThanOrEqual
code-creation,Builtin,2,1744,0x7ee81bcdddc0,328,StringLessThan
code-creation,Builtin,2,1746,0x7ee81bcddf40,328,StringLessThanOrEqual
code-creation,Builtin,2,1747,0x7ee81bcde0c0,328,StringCompare
code-creation,Builtin,2,1749,0x7ee81bcde240,2392,StringSubstring
code-creation,Builtin,2,1750,0x7ee81bcdebc0,80,OrderedHashTableHealIndex
code-creation,Builtin,2,1752,0x7ee81bcdec40,876,InterpreterEntryTrampoline
code-creation,Builtin,2,1753,0x7ee81bcdefc0,888,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,1755,0x7ee81bcdf340,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,1756,0x7ee81bcdf3c0,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,1758,0x7ee81bcdf440,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,1760,0x7ee81bcdf4c0,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,1761,0x7ee81bcdf540,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,1763,0x7ee81bcdf5c0,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,1908,0x7ee81bcdf640,80,InterpreterEnterAtBytecode
code-creation,Builtin,2,1929,0x7ee81bcdf6c0,216,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,1932,0x7ee81bcdf7c0,96,InterpreterOnStackReplacement
code-creation,Builtin,2,1934,0x7ee81bcdf840,388,BaselineOutOfLinePrologue
code-creation,Builtin,2,1936,0x7ee81bcdfa00,16,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,1938,0x7ee81bcdfa40,100,BaselineOnStackReplacement
code-creation,Builtin,2,1939,0x7ee81bcdfac0,84,BaselineLeaveFrame
code-creation,Builtin,2,1941,0x7ee81bcdfb40,208,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,1943,0x7ee81bcdfc40,216,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,1945,0x7ee81bcdfd40,184,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,1952,0x7ee81bcdfe00,36,MaglevOnStackReplacement
code-creation,Builtin,2,1954,0x7ee81bcdfe40,860,CompileLazy
code-creation,Builtin,2,1955,0x7ee81bce01c0,72,CompileLazyDeoptimizedCode
code-creation,Builtin,2,1957,0x7ee81bce0240,224,InstantiateAsmJs
code-creation,Builtin,2,1959,0x7ee81bce0340,32,NotifyDeoptimized
code-creation,Builtin,2,1960,0x7ee81bce0380,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,1962,0x7ee81bce03c0,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,1964,0x7ee81bce0400,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,1965,0x7ee81bce0440,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,1967,0x7ee81bce04c0,264,CallApiCallback
code-creation,Builtin,2,1969,0x7ee81bce0600,244,CallApiGetter
code-creation,Builtin,2,1970,0x7ee81bce0700,12,HandleApiCall
code-creation,Builtin,2,1972,0x7ee81bce0740,12,HandleApiCallAsFunction
code-creation,Builtin,2,1973,0x7ee81bce0780,12,HandleApiCallAsConstructor
code-creation,Builtin,2,1975,0x7ee81bce07c0,64,AllocateInYoungGeneration
code-creation,Builtin,2,1977,0x7ee81bce0840,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,1979,0x7ee81bce0880,64,AllocateInOldGeneration
code-creation,Builtin,2,1980,0x7ee81bce0900,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,1982,0x7ee81bce0940,144,NewHeapNumber
code-creation,Builtin,2,1984,0x7ee81bce0a00,508,CopyFastSmiOrObjectElements
code-creation,Builtin,2,1985,0x7ee81bce0c00,520,GrowFastDoubleElements
code-creation,Builtin,2,1987,0x7ee81bce0e40,420,GrowFastSmiOrObjectElements
code-creation,Builtin,2,1989,0x7ee81bce1000,444,DebugBreakTrampoline
code-creation,Builtin,2,1990,0x7ee81bce11c0,240,RestartFrameTrampoline
code-creation,Builtin,2,1992,0x7ee81bce12c0,188,ToNumber
code-creation,Builtin,2,1994,0x7ee81bce1380,88,ToBigInt
code-creation,Builtin,2,1995,0x7ee81bce1400,308,ToNumber_Baseline
code-creation,Builtin,2,1997,0x7ee81bce1540,372,ToNumeric_Baseline
code-creation,Builtin,2,1998,0x7ee81bce16c0,104,PlainPrimitiveToNumber
code-creation,Builtin,2,2000,0x7ee81bce1740,224,ToNumberConvertBigInt
code-creation,Builtin,2,2001,0x7ee81bce1840,60,ToBigIntConvertNumber
code-creation,Builtin,2,2003,0x7ee81bce1880,140,Typeof
code-creation,Builtin,2,2005,0x7ee81bce1940,112,BigIntToI64
code-creation,Builtin,2,2006,0x7ee81bce19c0,4,BigIntToI32Pair
code-creation,Builtin,2,2008,0x7ee81bce1a00,220,I64ToBigInt
code-creation,Builtin,2,2009,0x7ee81bce1b00,4,I32PairToBigInt
code-creation,Builtin,2,2011,0x7ee81bce1b40,116,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,2012,0x7ee81bce1bc0,356,MathCeilContinuation
code-creation,Builtin,2,2014,0x7ee81bce1d40,364,MathFloorContinuation
code-creation,Builtin,2,2016,0x7ee81bce1ec0,408,MathRoundContinuation
code-creation,Builtin,2,2017,0x7ee81bce2080,4468,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,2019,0x7ee81bce3200,16788,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,2021,0x7ee81bce73c0,13192,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,2022,0x7ee81bcea780,604,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,2024,0x7ee81bceaa00,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,2026,0x7ee81bceaa80,12,LoadIC_StringLength
code-creation,Builtin,2,2027,0x7ee81bceaac0,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,2029,0x7ee81bceab00,4444,LoadIC_NoFeedback
code-creation,Builtin,2,2030,0x7ee81bcebc80,32,StoreGlobalIC_Slow
code-creation,Builtin,2,2032,0x7ee81bcebcc0,7952,StoreIC_NoFeedback
code-creation,Builtin,2,2034,0x7ee81bcedc00,4324,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,2035,0x7ee81bceed00,188,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,2037,0x7ee81bceedc0,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,2039,0x7ee81bceee40,248,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,2041,0x7ee81bceef40,248,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,2043,0x7ee81bcef040,248,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,2045,0x7ee81bcef140,248,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,2050,0x7ee81bcef240,14848,StoreFastElementIC_Standard
code-creation,Builtin,2,2052,0x7ee81bcf2c80,10804,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,2054,0x7ee81bcf56c0,14108,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,2056,0x7ee81bcf8e00,6500,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,2058,0x7ee81bcfa780,8400,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,2060,0x7ee81bcfc880,19360,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,2062,0x7ee81bd01440,8400,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,2064,0x7ee81bd03540,11172,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,2066,0x7ee81bd06100,1116,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,2068,0x7ee81bd06580,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,2069,0x7ee81bd06640,72,HasIndexedInterceptorIC
code-creation,Builtin,2,2071,0x7ee81bd066c0,160,EnqueueMicrotask
code-creation,Builtin,2,2073,0x7ee81bd06780,8,RunMicrotasksTrampoline
code-creation,Builtin,2,2074,0x7ee81bd067c0,3720,RunMicrotasks
code-creation,Builtin,2,2076,0x7ee81bd07680,3456,HasProperty
code-creation,Builtin,2,2077,0x7ee81bd08440,1316,DeleteProperty
code-creation,Builtin,2,2079,0x7ee81bd08980,2596,CopyDataProperties
code-creation,Builtin,2,2080,0x7ee81bd093c0,10776,SetDataProperties
code-creation,Builtin,2,2082,0x7ee81bd0be00,3316,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,2084,0x7ee81bd0cb00,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,2086,0x7ee81bd0cb40,28,Abort
code-creation,Builtin,2,2087,0x7ee81bd0cb80,28,AbortCSADcheck
code-creation,Builtin,2,2089,0x7ee81bd0cbc0,12,EmptyFunction
code-creation,Builtin,2,2091,0x7ee81bd0cc00,12,Illegal
code-creation,Builtin,2,2092,0x7ee81bd0cc40,12,StrictPoisonPillThrower
code-creation,Builtin,2,2094,0x7ee81bd0cc80,12,UnsupportedThrower
code-creation,Builtin,2,2095,0x7ee81bd0ccc0,60,ReturnReceiver
code-creation,Builtin,2,2097,0x7ee81bd0cd00,36,ArrayConstructor
code-creation,Builtin,2,2098,0x7ee81bd0cd40,380,ArrayConstructorImpl
code-creation,Builtin,2,2100,0x7ee81bd0cec0,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,2102,0x7ee81bd0cfc0,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,2104,0x7ee81bd0d0c0,184,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,2106,0x7ee81bd0d180,184,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,2109,0x7ee81bd0d240,184,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,2111,0x7ee81bd0d300,184,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,2113,0x7ee81bd0d3c0,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,2115,0x7ee81bd0d4c0,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,2118,0x7ee81bd0d5c0,272,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,2131,0x7ee81bd0d700,476,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,2133,0x7ee81bd0d900,228,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,2136,0x7ee81bd0da00,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,2138,0x7ee81bd0dbc0,228,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,2140,0x7ee81bd0dcc0,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,2142,0x7ee81bd0de80,228,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,2145,0x7ee81bd0df80,408,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,2147,0x7ee81bd0e140,48,ArrayNArgumentsConstructor
code-creation,Builtin,2,2149,0x7ee81bd0e180,12,ArrayConcat
code-creation,Builtin,2,2150,0x7ee81bd0e1c0,12,ArrayPrototypeFill
code-creation,Builtin,2,2152,0x7ee81bd0e200,1164,ArrayIncludesSmi
code-creation,Builtin,2,2159,0x7ee81bd0e6c0,1164,ArrayIncludesSmiOrObject
code-creation,Builtin,2,2161,0x7ee81bd0eb80,152,ArrayIncludesPackedDoubles
code-creation,Builtin,2,2162,0x7ee81bd0ec40,220,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,2164,0x7ee81bd0ed40,584,ArrayIncludes
code-creation,Builtin,2,2165,0x7ee81bd0efc0,1076,ArrayIndexOfSmi
code-creation,Builtin,2,2167,0x7ee81bd0f400,1076,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,2169,0x7ee81bd0f840,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,2170,0x7ee81bd0f8c0,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,2172,0x7ee81bd0f940,584,ArrayIndexOf
code-creation,Builtin,2,2173,0x7ee81bd0fbc0,12,ArrayPop
code-creation,Builtin,2,2175,0x7ee81bd0fc00,568,ArrayPrototypePop
code-creation,Builtin,2,2176,0x7ee81bd0fe40,12,ArrayPrototypeGroup
code-creation,Builtin,2,2178,0x7ee81bd0fe80,12,ArrayPrototypeGroupToMap
code-creation,Builtin,2,2180,0x7ee81bd0fec0,12,ArrayPush
code-creation,Builtin,2,2181,0x7ee81bd0ff00,2416,ArrayPrototypePush
code-creation,Builtin,2,2183,0x7ee81bd10880,12,ArrayShift
code-creation,Builtin,2,2184,0x7ee81bd108c0,12,ArrayUnshift
code-creation,Builtin,2,2186,0x7ee81bd10900,12,ArrayFromAsync
code-creation,Builtin,2,2187,0x7ee81bd10940,1076,CloneFastJSArray
code-creation,Builtin,2,2189,0x7ee81bd10d80,2364,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,2190,0x7ee81bd116c0,1104,ExtractFastJSArray
code-creation,Builtin,2,2192,0x7ee81bd11b40,264,ArrayPrototypeEntries
code-creation,Builtin,2,2194,0x7ee81bd11c80,252,ArrayPrototypeKeys
code-creation,Builtin,2,2195,0x7ee81bd11d80,264,ArrayPrototypeValues
code-creation,Builtin,2,2197,0x7ee81bd11ec0,4256,ArrayIteratorPrototypeNext
code-creation,Builtin,2,2199,0x7ee81bd12f80,4900,FlattenIntoArray
code-creation,Builtin,2,2200,0x7ee81bd142c0,4812,FlatMapIntoArray
code-creation,Builtin,2,2202,0x7ee81bd155c0,368,ArrayPrototypeFlat
code-creation,Builtin,2,2203,0x7ee81bd15740,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,2205,0x7ee81bd15900,12,ArrayBufferConstructor
code-creation,Builtin,2,2207,0x7ee81bd15940,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,2214,0x7ee81bd15980,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,2216,0x7ee81bd159c0,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,2217,0x7ee81bd15a00,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,2219,0x7ee81bd15a40,12,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,2221,0x7ee81bd15a80,964,AsyncFunctionEnter
code-creation,Builtin,2,2223,0x7ee81bd15e80,80,AsyncFunctionReject
code-creation,Builtin,2,2224,0x7ee81bd15f00,76,AsyncFunctionResolve
code-creation,Builtin,2,2226,0x7ee81bd15f80,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,2228,0x7ee81bd15fc0,1564,AsyncFunctionAwaitCaught
code-creation,Builtin,2,2230,0x7ee81bd16600,1564,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,2231,0x7ee81bd16c40,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,2233,0x7ee81bd16d00,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,2235,0x7ee81bd16dc0,12,BigIntConstructor
code-creation,Builtin,2,2237,0x7ee81bd16e00,12,BigIntAsUintN
code-creation,Builtin,2,2238,0x7ee81bd16e40,12,BigIntAsIntN
code-creation,Builtin,2,2240,0x7ee81bd16e80,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,2241,0x7ee81bd16ec0,12,BigIntPrototypeToString
code-creation,Builtin,2,2243,0x7ee81bd16f00,12,BigIntPrototypeValueOf
code-creation,Builtin,2,2245,0x7ee81bd16f40,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,2247,0x7ee81bd16f80,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,2249,0x7ee81bd16fc0,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,2251,0x7ee81bd17000,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,2252,0x7ee81bd17040,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,2254,0x7ee81bd17080,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,2256,0x7ee81bd170c0,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,2258,0x7ee81bd17100,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,2271,0x7ee81bd17140,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,2273,0x7ee81bd17180,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,2275,0x7ee81bd171c0,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,2277,0x7ee81bd17200,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,2279,0x7ee81bd17240,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,2283,0x7ee81bd17280,12,CallSitePrototypeGetThis
code-creation,Builtin,2,2284,0x7ee81bd172c0,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,2286,0x7ee81bd17300,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,2288,0x7ee81bd17340,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,2289,0x7ee81bd17380,12,CallSitePrototypeIsEval
code-creation,Builtin,2,2291,0x7ee81bd173c0,12,CallSitePrototypeIsNative
code-creation,Builtin,2,2293,0x7ee81bd17400,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,2295,0x7ee81bd17440,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,2296,0x7ee81bd17480,12,CallSitePrototypeToString
code-creation,Builtin,2,2298,0x7ee81bd174c0,12,ConsoleDebug
code-creation,Builtin,2,2299,0x7ee81bd17500,12,ConsoleError
code-creation,Builtin,2,2301,0x7ee81bd17540,12,ConsoleInfo
code-creation,Builtin,2,2302,0x7ee81bd17580,12,ConsoleLog
code-creation,Builtin,2,2304,0x7ee81bd175c0,12,ConsoleWarn
code-creation,Builtin,2,2305,0x7ee81bd17600,12,ConsoleDir
code-creation,Builtin,2,2307,0x7ee81bd17640,12,ConsoleDirXml
code-creation,Builtin,2,2308,0x7ee81bd17680,12,ConsoleTable
code-creation,Builtin,2,2310,0x7ee81bd176c0,12,ConsoleTrace
code-creation,Builtin,2,2311,0x7ee81bd17700,12,ConsoleGroup
code-creation,Builtin,2,2313,0x7ee81bd17740,12,ConsoleGroupCollapsed
code-creation,Builtin,2,2314,0x7ee81bd17780,12,ConsoleGroupEnd
code-creation,Builtin,2,2316,0x7ee81bd177c0,12,ConsoleClear
code-creation,Builtin,2,2317,0x7ee81bd17800,12,ConsoleCount
code-creation,Builtin,2,2319,0x7ee81bd17840,12,ConsoleCountReset
code-creation,Builtin,2,2320,0x7ee81bd17880,12,ConsoleAssert
code-creation,Builtin,2,2322,0x7ee81bd178c0,12,ConsoleProfile
code-creation,Builtin,2,2323,0x7ee81bd17900,12,ConsoleProfileEnd
code-creation,Builtin,2,2325,0x7ee81bd17940,12,ConsoleTime
code-creation,Builtin,2,2326,0x7ee81bd17980,12,ConsoleTimeLog
code-creation,Builtin,2,2328,0x7ee81bd179c0,12,ConsoleTimeEnd
code-creation,Builtin,2,2329,0x7ee81bd17a00,12,ConsoleTimeStamp
code-creation,Builtin,2,2331,0x7ee81bd17a40,12,ConsoleContext
code-creation,Builtin,2,2332,0x7ee81bd17a80,12,DataViewConstructor
code-creation,Builtin,2,2334,0x7ee81bd17ac0,12,DateConstructor
code-creation,Builtin,2,2335,0x7ee81bd17b00,220,DatePrototypeGetDate
code-creation,Builtin,2,2337,0x7ee81bd17c00,220,DatePrototypeGetDay
code-creation,Builtin,2,2338,0x7ee81bd17d00,220,DatePrototypeGetFullYear
code-creation,Builtin,2,2340,0x7ee81bd17e00,220,DatePrototypeGetHours
code-creation,Builtin,2,2342,0x7ee81bd17f00,204,DatePrototypeGetMilliseconds
code-creation,Builtin,2,2344,0x7ee81bd18000,220,DatePrototypeGetMinutes
code-creation,Builtin,2,2346,0x7ee81bd18100,220,DatePrototypeGetMonth
code-creation,Builtin,2,2347,0x7ee81bd18200,220,DatePrototypeGetSeconds
code-creation,Builtin,2,2349,0x7ee81bd18300,128,DatePrototypeGetTime
code-creation,Builtin,2,2350,0x7ee81bd183c0,204,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,2352,0x7ee81bd184c0,204,DatePrototypeGetUTCDate
code-creation,Builtin,2,2354,0x7ee81bd185c0,204,DatePrototypeGetUTCDay
code-creation,Builtin,2,2356,0x7ee81bd186c0,204,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,2357,0x7ee81bd187c0,204,DatePrototypeGetUTCHours
code-creation,Builtin,2,2359,0x7ee81bd188c0,204,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,2361,0x7ee81bd189c0,204,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,2362,0x7ee81bd18ac0,204,DatePrototypeGetUTCMonth
code-creation,Builtin,2,2364,0x7ee81bd18bc0,204,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,2366,0x7ee81bd18cc0,128,DatePrototypeValueOf
code-creation,Builtin,2,2367,0x7ee81bd18d80,436,DatePrototypeToPrimitive
code-creation,Builtin,2,2372,0x7ee81bd18f40,12,DatePrototypeGetYear
code-creation,Builtin,2,2374,0x7ee81bd18f80,12,DatePrototypeSetYear
code-creation,Builtin,2,2375,0x7ee81bd18fc0,12,DateNow
code-creation,Builtin,2,2377,0x7ee81bd19000,12,DateParse
code-creation,Builtin,2,2378,0x7ee81bd19040,12,DatePrototypeSetDate
code-creation,Builtin,2,2380,0x7ee81bd19080,12,DatePrototypeSetFullYear
code-creation,Builtin,2,2390,0x7ee81bd190c0,12,DatePrototypeSetHours
code-creation,Builtin,2,2392,0x7ee81bd19100,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,2394,0x7ee81bd19140,12,DatePrototypeSetMinutes
code-creation,Builtin,2,2395,0x7ee81bd19180,12,DatePrototypeSetMonth
code-creation,Builtin,2,2397,0x7ee81bd191c0,12,DatePrototypeSetSeconds
code-creation,Builtin,2,2398,0x7ee81bd19200,12,DatePrototypeSetTime
code-creation,Builtin,2,2400,0x7ee81bd19240,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,2402,0x7ee81bd19280,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,2403,0x7ee81bd192c0,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,2405,0x7ee81bd19300,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,2407,0x7ee81bd19340,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,2409,0x7ee81bd19380,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,2410,0x7ee81bd193c0,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,2412,0x7ee81bd19400,12,DatePrototypeToDateString
code-creation,Builtin,2,2414,0x7ee81bd19440,12,DatePrototypeToISOString
code-creation,Builtin,2,2415,0x7ee81bd19480,12,DatePrototypeToUTCString
code-creation,Builtin,2,2417,0x7ee81bd194c0,12,DatePrototypeToString
code-creation,Builtin,2,2418,0x7ee81bd19500,12,DatePrototypeToTimeString
code-creation,Builtin,2,2420,0x7ee81bd19540,12,DatePrototypeToJson
code-creation,Builtin,2,2422,0x7ee81bd19580,12,DateUTC
code-creation,Builtin,2,2423,0x7ee81bd195c0,12,ErrorConstructor
code-creation,Builtin,2,2425,0x7ee81bd19600,12,ErrorCaptureStackTrace
code-creation,Builtin,2,2426,0x7ee81bd19640,12,ErrorPrototypeToString
code-creation,Builtin,2,2428,0x7ee81bd19680,12,FunctionConstructor
code-creation,Builtin,2,2429,0x7ee81bd196c0,80,FunctionPrototypeApply
code-creation,Builtin,2,2431,0x7ee81bd19740,12,FunctionPrototypeBind
code-creation,Builtin,2,2433,0x7ee81bd19780,36,FunctionPrototypeCall
code-creation,Builtin,2,2434,0x7ee81bd197c0,12,FunctionPrototypeToString
code-creation,Builtin,2,2436,0x7ee81bd19800,212,CreateIterResultObject
code-creation,Builtin,2,2438,0x7ee81bd19900,916,CreateGeneratorObject
code-creation,Builtin,2,2439,0x7ee81bd19cc0,12,GeneratorFunctionConstructor
code-creation,Builtin,2,2441,0x7ee81bd19d00,404,GeneratorPrototypeNext
code-creation,Builtin,2,2443,0x7ee81bd19ec0,404,GeneratorPrototypeReturn
code-creation,Builtin,2,2444,0x7ee81bd1a080,408,GeneratorPrototypeThrow
code-creation,Builtin,2,2446,0x7ee81bd1a240,12,AsyncFunctionConstructor
code-creation,Builtin,2,2448,0x7ee81bd1a280,376,SuspendGeneratorBaseline
code-creation,Builtin,2,2449,0x7ee81bd1a400,96,ResumeGeneratorBaseline
code-creation,Builtin,2,2451,0x7ee81bd1a480,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,2453,0x7ee81bd1a4c0,84,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,2455,0x7ee81bd1a540,12,GlobalDecodeURI
code-creation,Builtin,2,2457,0x7ee81bd1a580,12,GlobalDecodeURIComponent
code-creation,Builtin,2,2458,0x7ee81bd1a5c0,12,GlobalEncodeURI
code-creation,Builtin,2,2460,0x7ee81bd1a600,12,GlobalEncodeURIComponent
code-creation,Builtin,2,2462,0x7ee81bd1a640,12,GlobalEscape
code-creation,Builtin,2,2463,0x7ee81bd1a680,12,GlobalUnescape
code-creation,Builtin,2,2465,0x7ee81bd1a6c0,12,GlobalEval
code-creation,Builtin,2,2466,0x7ee81bd1a700,136,GlobalIsFinite
code-creation,Builtin,2,2476,0x7ee81bd1a7c0,132,GlobalIsNaN
code-creation,Builtin,2,2477,0x7ee81bd1a880,12,JsonParse
code-creation,Builtin,2,2479,0x7ee81bd1a8c0,12,JsonStringify
code-creation,Builtin,2,2480,0x7ee81bd1a900,12,JsonRawJson
code-creation,Builtin,2,2482,0x7ee81bd1a940,12,JsonIsRawJson
code-creation,Builtin,2,2483,0x7ee81bd1a980,5064,LoadIC
code-creation,Builtin,2,2484,0x7ee81bd1bd80,4696,LoadIC_Megamorphic
code-creation,Builtin,2,2489,0x7ee81bd1d000,4908,LoadIC_Noninlined
code-creation,Builtin,2,2490,0x7ee81bd1e340,44,LoadICTrampoline
code-creation,Builtin,2,2492,0x7ee81bd1e380,24,LoadICBaseline
code-creation,Builtin,2,2493,0x7ee81bd1e3c0,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,2495,0x7ee81bd1e400,8832,LoadSuperIC
code-creation,Builtin,2,2496,0x7ee81bd206c0,24,LoadSuperICBaseline
code-creation,Builtin,2,2498,0x7ee81bd20700,8196,KeyedLoadIC
code-creation,Builtin,2,2500,0x7ee81bd22740,16176,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,2501,0x7ee81bd26680,13232,KeyedLoadIC_MegamorphicStringKey
code-creation,Builtin,2,2503,0x7ee81bd29a40,44,KeyedLoadICTrampoline
code-creation,Builtin,2,2505,0x7ee81bd29a80,24,KeyedLoadICBaseline
code-creation,Builtin,2,2506,0x7ee81bd29ac0,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,2508,0x7ee81bd29b00,44,KeyedLoadICTrampoline_MegamorphicStringKey
code-creation,Builtin,2,2510,0x7ee81bd29b40,5408,StoreGlobalIC
code-creation,Builtin,2,2511,0x7ee81bd2b080,44,StoreGlobalICTrampoline
code-creation,Builtin,2,2513,0x7ee81bd2b0c0,24,StoreGlobalICBaseline
code-creation,Builtin,2,2515,0x7ee81bd2b100,5924,StoreIC
code-creation,Builtin,2,2516,0x7ee81bd2c840,44,StoreICTrampoline
code-creation,Builtin,2,2518,0x7ee81bd2c880,24,StoreICBaseline
code-creation,Builtin,2,2519,0x7ee81bd2c8c0,5720,DefineNamedOwnIC
code-creation,Builtin,2,2521,0x7ee81bd2df40,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,2522,0x7ee81bd2df80,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,2524,0x7ee81bd2dfc0,6388,KeyedStoreIC
code-creation,Builtin,2,2526,0x7ee81bd2f8c0,44,KeyedStoreICTrampoline
code-creation,Builtin,2,2527,0x7ee81bd2f900,24,KeyedStoreICBaseline
code-creation,Builtin,2,2529,0x7ee81bd2f940,6328,DefineKeyedOwnIC
code-creation,Builtin,2,2530,0x7ee81bd31200,52,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,2542,0x7ee81bd31240,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,2547,0x7ee81bd31280,320,StoreInArrayLiteralIC
code-creation,Builtin,2,2548,0x7ee81bd31400,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,2550,0x7ee81bd31440,144,LookupContextTrampoline
code-creation,Builtin,2,2552,0x7ee81bd31500,156,LookupContextBaseline
code-creation,Builtin,2,2565,0x7ee81bd315c0,144,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,2567,0x7ee81bd31680,156,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,2569,0x7ee81bd31740,3236,LoadGlobalIC
code-creation,Builtin,2,2570,0x7ee81bd32400,3216,LoadGlobalICInsideTypeof
code-creation,Builtin,2,2572,0x7ee81bd330c0,44,LoadGlobalICTrampoline
code-creation,Builtin,2,2576,0x7ee81bd33100,24,LoadGlobalICBaseline
code-creation,Builtin,2,2578,0x7ee81bd33140,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,2583,0x7ee81bd33180,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,2585,0x7ee81bd331c0,140,LookupGlobalIC
code-creation,Builtin,2,2586,0x7ee81bd33280,176,LookupGlobalICTrampoline
code-creation,Builtin,2,2588,0x7ee81bd33340,160,LookupGlobalICBaseline
code-creation,Builtin,2,2601,0x7ee81bd33400,140,LookupGlobalICInsideTypeof
code-creation,Builtin,2,2603,0x7ee81bd334c0,176,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,2605,0x7ee81bd33580,160,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,2607,0x7ee81bd33640,2664,CloneObjectIC
code-creation,Builtin,2,2610,0x7ee81bd340c0,24,CloneObjectICBaseline
code-creation,Builtin,2,2612,0x7ee81bd34100,2696,CloneObjectIC_Slow
code-creation,Builtin,2,2614,0x7ee81bd34bc0,3076,KeyedHasIC
code-creation,Builtin,2,2618,0x7ee81bd35800,24,KeyedHasICBaseline
code-creation,Builtin,2,2619,0x7ee81bd35840,3456,KeyedHasIC_Megamorphic
code-creation,Builtin,2,2621,0x7ee81bd36600,1708,IterableToList
code-creation,Builtin,2,2623,0x7ee81bd36cc0,1528,IterableToFixedArray
code-creation,Builtin,2,2625,0x7ee81bd372c0,728,IterableToListWithSymbolLookup
code-creation,Builtin,2,2629,0x7ee81bd375c0,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,2631,0x7ee81bd37600,112,IterableToListMayPreserveHoles
code-creation,Builtin,2,2633,0x7ee81bd37680,1228,IterableToFixedArrayForWasm
code-creation,Builtin,2,2640,0x7ee81bd37b80,1660,StringListFromIterable
code-creation,Builtin,2,2642,0x7ee81bd38200,1132,FindOrderedHashMapEntry
code-creation,Builtin,2,2644,0x7ee81bd38680,4292,MapConstructor
code-creation,Builtin,2,2656,0x7ee81bd39780,1852,MapPrototypeSet
code-creation,Builtin,2,2658,0x7ee81bd39ec0,1472,MapPrototypeDelete
code-creation,Builtin,2,2660,0x7ee81bd3a4c0,212,MapPrototypeGet
code-creation,Builtin,2,2661,0x7ee81bd3a5c0,172,MapPrototypeHas
code-creation,Builtin,2,2664,0x7ee81bd3a680,12,MapPrototypeClear
code-creation,Builtin,2,2666,0x7ee81bd3a6c0,288,MapPrototypeEntries
code-creation,Builtin,2,2668,0x7ee81bd3a800,144,MapPrototypeGetSize
code-creation,Builtin,2,2670,0x7ee81bd3a8c0,488,MapPrototypeForEach
code-creation,Builtin,2,2674,0x7ee81bd3aac0,288,MapPrototypeKeys
code-creation,Builtin,2,2675,0x7ee81bd3ac00,288,MapPrototypeValues
code-creation,Builtin,2,2677,0x7ee81bd3ad40,916,MapIteratorPrototypeNext
code-creation,Builtin,2,2679,0x7ee81bd3b100,1180,MapIteratorToList
code-creation,Builtin,2,2682,0x7ee81bd3b5c0,12,NumberPrototypeToExponential
code-creation,Builtin,2,2684,0x7ee81bd3b600,12,NumberPrototypeToFixed
code-creation,Builtin,2,2688,0x7ee81bd3b640,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,2689,0x7ee81bd3b680,12,NumberPrototypeToPrecision
code-creation,Builtin,2,2691,0x7ee81bd3b6c0,356,SameValue
code-creation,Builtin,2,2693,0x7ee81bd3b840,200,SameValueNumbersOnly
code-creation,Builtin,2,2696,0x7ee81bd3b940,1368,Add_Baseline
code-creation,Builtin,2,2698,0x7ee81bd3bec0,1072,AddSmi_Baseline
code-creation,Builtin,2,2700,0x7ee81bd3c300,1340,Subtract_Baseline
code-creation,Builtin,2,2702,0x7ee81bd3c840,1076,SubtractSmi_Baseline
code-creation,Builtin,2,2704,0x7ee81bd3cc80,1436,Multiply_Baseline
code-creation,Builtin,2,2707,0x7ee81bd3d240,1164,MultiplySmi_Baseline
code-creation,Builtin,2,2709,0x7ee81bd3d700,1532,Divide_Baseline
code-creation,Builtin,2,2711,0x7ee81bd3dd00,1304,DivideSmi_Baseline
code-creation,Builtin,2,2712,0x7ee81bd3e240,1472,Modulus_Baseline
tick,0x7ee819b1d9bd,2717,0,0x0,6
code-creation,Builtin,2,2732,0x7ee81bd3e840,1188,ModulusSmi_Baseline
code-creation,Builtin,2,2734,0x7ee81bd3ed00,808,Exponentiate_Baseline
code-creation,Builtin,2,2736,0x7ee81bd3f040,704,ExponentiateSmi_Baseline
code-creation,Builtin,2,2738,0x7ee81bd3f340,1520,BitwiseAnd_Baseline
code-creation,Builtin,2,2739,0x7ee81bd3f940,368,BitwiseAndSmi_Baseline
code-creation,Builtin,2,2741,0x7ee81bd3fac0,1520,BitwiseOr_Baseline
code-creation,Builtin,2,2742,0x7ee81bd400c0,368,BitwiseOrSmi_Baseline
code-creation,Builtin,2,2744,0x7ee81bd40240,1524,BitwiseXor_Baseline
code-creation,Builtin,2,2746,0x7ee81bd40840,368,BitwiseXorSmi_Baseline
code-creation,Builtin,2,2747,0x7ee81bd409c0,976,ShiftLeft_Baseline
code-creation,Builtin,2,2749,0x7ee81bd40dc0,392,ShiftLeftSmi_Baseline
code-creation,Builtin,2,2750,0x7ee81bd40f80,976,ShiftRight_Baseline
code-creation,Builtin,2,2752,0x7ee81bd41380,376,ShiftRightSmi_Baseline
code-creation,Builtin,2,2762,0x7ee81bd41500,1096,ShiftRightLogical_Baseline
code-creation,Builtin,2,2764,0x7ee81bd41980,632,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,2766,0x7ee81bd41c00,1304,Add_WithFeedback
code-creation,Builtin,2,2767,0x7ee81bd42140,1288,Subtract_WithFeedback
code-creation,Builtin,2,2769,0x7ee81bd42680,1380,Multiply_WithFeedback
code-creation,Builtin,2,2770,0x7ee81bd42c00,1488,Divide_WithFeedback
code-creation,Builtin,2,2772,0x7ee81bd43200,1408,Modulus_WithFeedback
code-creation,Builtin,2,2774,0x7ee81bd437c0,768,Exponentiate_WithFeedback
code-creation,Builtin,2,2775,0x7ee81bd43b00,1464,BitwiseAnd_WithFeedback
code-creation,Builtin,2,2777,0x7ee81bd440c0,1464,BitwiseOr_WithFeedback
code-creation,Builtin,2,2779,0x7ee81bd44680,1464,BitwiseXor_WithFeedback
code-creation,Builtin,2,2780,0x7ee81bd44c40,928,ShiftLeft_WithFeedback
code-creation,Builtin,2,2782,0x7ee81bd45000,928,ShiftRight_WithFeedback
code-creation,Builtin,2,2783,0x7ee81bd453c0,1040,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,2785,0x7ee81bd45800,1968,Equal_Baseline
code-creation,Builtin,2,2796,0x7ee81bd45fc0,1188,StrictEqual_Baseline
code-creation,Builtin,2,2798,0x7ee81bd46480,1440,LessThan_Baseline
code-creation,Builtin,2,2799,0x7ee81bd46a40,1440,GreaterThan_Baseline
code-creation,Builtin,2,2801,0x7ee81bd47000,1440,LessThanOrEqual_Baseline
code-creation,Builtin,2,2803,0x7ee81bd475c0,1440,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,2804,0x7ee81bd47b80,1868,Equal_WithFeedback
code-creation,Builtin,2,2806,0x7ee81bd48300,1188,StrictEqual_WithFeedback
code-creation,Builtin,2,2808,0x7ee81bd487c0,1428,LessThan_WithFeedback
code-creation,Builtin,2,2809,0x7ee81bd48d80,1428,GreaterThan_WithFeedback
code-creation,Builtin,2,2811,0x7ee81bd49340,1428,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,2813,0x7ee81bd49900,1428,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,2814,0x7ee81bd49ec0,360,BitwiseNot_Baseline
code-creation,Builtin,2,2816,0x7ee81bd4a040,456,Decrement_Baseline
code-creation,Builtin,2,2818,0x7ee81bd4a240,460,Increment_Baseline
code-creation,Builtin,2,2819,0x7ee81bd4a440,488,Negate_Baseline
code-creation,Builtin,2,2821,0x7ee81bd4a640,348,BitwiseNot_WithFeedback
code-creation,Builtin,2,2822,0x7ee81bd4a7c0,440,Decrement_WithFeedback
code-creation,Builtin,2,2824,0x7ee81bd4a980,444,Increment_WithFeedback
code-creation,Builtin,2,2826,0x7ee81bd4ab40,468,Negate_WithFeedback
code-creation,Builtin,2,2827,0x7ee81bd4ad40,256,ObjectAssign
code-creation,Builtin,2,2829,0x7ee81bd4ae80,932,ObjectCreate
code-creation,Builtin,2,2830,0x7ee81bd4b240,12,ObjectDefineGetter
code-creation,Builtin,2,2832,0x7ee81bd4b280,12,ObjectDefineProperties
code-creation,Builtin,2,2833,0x7ee81bd4b2c0,12,ObjectDefineProperty
code-creation,Builtin,2,2835,0x7ee81bd4b300,12,ObjectDefineSetter
code-creation,Builtin,2,2836,0x7ee81bd4b340,1484,ObjectEntries
code-creation,Builtin,2,2838,0x7ee81bd4b940,12,ObjectFreeze
code-creation,Builtin,2,2839,0x7ee81bd4b980,4724,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,2841,0x7ee81bd4cc00,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,2843,0x7ee81bd4cc40,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,2845,0x7ee81bd4cec0,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,2846,0x7ee81bd4cf00,168,ObjectHasOwn
code-creation,Builtin,2,2848,0x7ee81bd4cfc0,416,ObjectIs
code-creation,Builtin,2,2849,0x7ee81bd4d180,12,ObjectIsFrozen
code-creation,Builtin,2,2851,0x7ee81bd4d1c0,12,ObjectIsSealed
code-creation,Builtin,2,2863,0x7ee81bd4d200,532,ObjectKeys
code-creation,Builtin,2,2865,0x7ee81bd4d440,12,ObjectLookupGetter
code-creation,Builtin,2,2866,0x7ee81bd4d480,12,ObjectLookupSetter
code-creation,Builtin,2,2868,0x7ee81bd4d4c0,3048,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,2870,0x7ee81bd4e0c0,240,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,2871,0x7ee81bd4e1c0,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,2873,0x7ee81bd4e200,12,ObjectPrototypeGetProto
code-creation,Builtin,2,2875,0x7ee81bd4e240,12,ObjectPrototypeSetProto
code-creation,Builtin,2,2877,0x7ee81bd4e280,12,ObjectSeal
code-creation,Builtin,2,2878,0x7ee81bd4e2c0,1356,ObjectToString
code-creation,Builtin,2,2880,0x7ee81bd4e840,1260,ObjectValues
code-creation,Builtin,2,2881,0x7ee81bd4ed40,304,OrdinaryHasInstance
code-creation,Builtin,2,2883,0x7ee81bd4ee80,372,InstanceOf
code-creation,Builtin,2,2884,0x7ee81bd4f000,644,InstanceOf_WithFeedback
code-creation,Builtin,2,2886,0x7ee81bd4f2c0,664,InstanceOf_Baseline
code-creation,Builtin,2,2887,0x7ee81bd4f580,276,ForInEnumerate
code-creation,Builtin,2,2889,0x7ee81bd4f6c0,148,ForInPrepare
code-creation,Builtin,2,2890,0x7ee81bd4f780,3396,ForInFilter
code-creation,Builtin,2,2892,0x7ee81bd50500,56,ReflectApply
code-creation,Builtin,2,2893,0x7ee81bd50540,64,ReflectConstruct
code-creation,Builtin,2,2895,0x7ee81bd505c0,12,ReflectDefineProperty
code-creation,Builtin,2,2896,0x7ee81bd50600,12,ReflectOwnKeys
code-creation,Builtin,2,2898,0x7ee81bd50640,12,ReflectSet
code-creation,Builtin,2,2899,0x7ee81bd50680,12,RegExpCapture1Getter
code-creation,Builtin,2,2901,0x7ee81bd506c0,12,RegExpCapture2Getter
code-creation,Builtin,2,2905,0x7ee81bd50700,12,RegExpCapture3Getter
code-creation,Builtin,2,2907,0x7ee81bd50740,12,RegExpCapture4Getter
code-creation,Builtin,2,2908,0x7ee81bd50780,12,RegExpCapture5Getter
code-creation,Builtin,2,2910,0x7ee81bd507c0,12,RegExpCapture6Getter
code-creation,Builtin,2,2912,0x7ee81bd50800,12,RegExpCapture7Getter
code-creation,Builtin,2,2913,0x7ee81bd50840,12,RegExpCapture8Getter
code-creation,Builtin,2,2915,0x7ee81bd50880,12,RegExpCapture9Getter
code-creation,Builtin,2,2916,0x7ee81bd508c0,2360,RegExpConstructor
code-creation,Builtin,2,2918,0x7ee81bd51200,12,RegExpInputGetter
code-creation,Builtin,2,2920,0x7ee81bd51240,12,RegExpInputSetter
code-creation,Builtin,2,2921,0x7ee81bd51280,12,RegExpLastMatchGetter
code-creation,Builtin,2,2923,0x7ee81bd512c0,12,RegExpLastParenGetter
code-creation,Builtin,2,2924,0x7ee81bd51300,12,RegExpLeftContextGetter
code-creation,Builtin,2,2926,0x7ee81bd51340,952,RegExpPrototypeCompile
code-creation,Builtin,2,2928,0x7ee81bd51700,12,RegExpPrototypeToString
code-creation,Builtin,2,2929,0x7ee81bd51740,12,RegExpRightContextGetter
code-creation,Builtin,2,2931,0x7ee81bd51780,240,RegExpExecAtom
code-creation,Builtin,2,2932,0x7ee81bd51880,996,RegExpExecInternal
code-creation,Builtin,2,2934,0x7ee81bd51c80,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,2936,0x7ee81bd51cc0,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,2938,0x7ee81bd51d00,1116,FindOrderedHashSetEntry
code-creation,Builtin,2,2939,0x7ee81bd52180,2972,SetConstructor
code-creation,Builtin,2,2941,0x7ee81bd52d40,172,SetPrototypeHas
code-creation,Builtin,2,2942,0x7ee81bd52e00,1632,SetPrototypeAdd
code-creation,Builtin,2,2944,0x7ee81bd53480,1432,SetPrototypeDelete
code-creation,Builtin,2,2945,0x7ee81bd53a40,12,SetPrototypeClear
code-creation,Builtin,2,2947,0x7ee81bd53a80,288,SetPrototypeEntries
code-creation,Builtin,2,2948,0x7ee81bd53bc0,148,SetPrototypeGetSize
code-creation,Builtin,2,2950,0x7ee81bd53c80,456,SetPrototypeForEach
code-creation,Builtin,2,2952,0x7ee81bd53e80,288,SetPrototypeValues
code-creation,Builtin,2,2953,0x7ee81bd53fc0,840,SetIteratorPrototypeNext
code-creation,Builtin,2,2955,0x7ee81bd54340,1104,SetOrSetIteratorToList
code-creation,Builtin,2,2956,0x7ee81bd547c0,12,ShadowRealmConstructor
code-creation,Builtin,2,2958,0x7ee81bd54800,576,ShadowRealmGetWrappedValue
code-creation,Builtin,2,2960,0x7ee81bd54a80,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,2961,0x7ee81bd54ac0,1404,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,2963,0x7ee81bd55040,236,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,2965,0x7ee81bd55140,76,ShadowRealmImportValueRejected
code-creation,Builtin,2,2967,0x7ee81bd551c0,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,2969,0x7ee81bd55200,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,2971,0x7ee81bd55240,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,2972,0x7ee81bd55280,2104,AtomicsLoad
code-creation,Builtin,2,2974,0x7ee81bd55ac0,2188,AtomicsStore
code-creation,Builtin,2,2975,0x7ee81bd56380,2836,AtomicsExchange
code-creation,Builtin,2,2977,0x7ee81bd56ec0,3120,AtomicsCompareExchange
code-creation,Builtin,2,2978,0x7ee81bd57b00,2864,AtomicsAdd
code-creation,Builtin,2,2980,0x7ee81bd58640,2864,AtomicsSub
code-creation,Builtin,2,2981,0x7ee81bd59180,2864,AtomicsAnd
code-creation,Builtin,2,2983,0x7ee81bd59cc0,2864,AtomicsOr
code-creation,Builtin,2,2984,0x7ee81bd5a800,2864,AtomicsXor
code-creation,Builtin,2,2986,0x7ee81bd5b340,12,AtomicsNotify
code-creation,Builtin,2,2987,0x7ee81bd5b380,12,AtomicsIsLockFree
code-creation,Builtin,2,2989,0x7ee81bd5b3c0,12,AtomicsWait
code-creation,Builtin,2,2990,0x7ee81bd5b400,12,AtomicsWaitAsync
code-creation,Builtin,2,2992,0x7ee81bd5b440,12,StringFromCodePoint
code-creation,Builtin,2,2993,0x7ee81bd5b480,1308,StringFromCharCode
code-creation,Builtin,2,2995,0x7ee81bd5b9c0,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,2996,0x7ee81bd5ba00,4612,StringPrototypeMatchAll
code-creation,Builtin,2,2998,0x7ee81bd5cc40,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,2999,0x7ee81bd5cc80,1292,StringPrototypeReplace
code-creation,Builtin,2,3003,0x7ee81bd5d1c0,2864,StringPrototypeSplit
code-creation,Builtin,2,3005,0x7ee81bd5dd00,12,StringRaw
code-creation,Builtin,2,3006,0x7ee81bd5dd40,12,SymbolConstructor
code-creation,Builtin,2,3008,0x7ee81bd5dd80,12,SymbolFor
code-creation,Builtin,2,3009,0x7ee81bd5ddc0,12,SymbolKeyFor
code-creation,Builtin,2,3010,0x7ee81bd5de00,88,TypedArrayBaseConstructor
code-creation,Builtin,2,3012,0x7ee81bd5de80,252,TypedArrayConstructor
code-creation,Builtin,2,3013,0x7ee81bd5df80,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,3015,0x7ee81bd5dfc0,880,TypedArrayPrototypeByteLength
code-creation,Builtin,2,3016,0x7ee81bd5e340,364,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,3018,0x7ee81bd5e4c0,592,TypedArrayPrototypeLength
code-creation,Builtin,2,3020,0x7ee81bd5e740,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,3021,0x7ee81bd5e780,12,TypedArrayPrototypeFill
code-creation,Builtin,2,3023,0x7ee81bd5e7c0,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,3024,0x7ee81bd5e800,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,3026,0x7ee81bd5e840,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,3027,0x7ee81bd5e880,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,3029,0x7ee81bd5e8c0,432,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,3031,0x7ee81bd5ea80,24508,TypedArrayPrototypeMap
code-creation,Builtin,2,3032,0x7ee81bd64a40,992,GenericJSToWasmWrapper
code-creation,Builtin,2,3034,0x7ee81bd64e40,1268,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,3035,0x7ee81bd65340,160,WasmSuspend
code-creation,Builtin,2,3036,0x7ee81bd65400,324,WasmResume
code-creation,Builtin,2,3038,0x7ee81bd65580,340,WasmReject
code-creation,Builtin,2,3039,0x7ee81bd65700,156,WasmCompileLazy
code-creation,Builtin,2,3041,0x7ee81bd657c0,192,WasmLiftoffFrameSetup
code-creation,Builtin,2,3042,0x7ee81bd658c0,180,WasmDebugBreak
code-creation,Builtin,2,3044,0x7ee81bd65980,16,WasmOnStackReplace
code-creation,Builtin,2,3045,0x7ee81bd659c0,132,WasmFloat32ToNumber
code-creation,Builtin,2,3047,0x7ee81bd65a80,144,WasmFloat64ToNumber
code-creation,Builtin,2,3048,0x7ee81bd65b40,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,3050,0x7ee81bd65b80,4532,WeakMapConstructor
code-creation,Builtin,2,3051,0x7ee81bd66d40,264,WeakMapLookupHashIndex
code-creation,Builtin,2,3053,0x7ee81bd66e80,224,WeakMapGet
code-creation,Builtin,2,3054,0x7ee81bd66f80,184,WeakMapPrototypeHas
code-creation,Builtin,2,3055,0x7ee81bd67040,256,WeakMapPrototypeSet
code-creation,Builtin,2,3057,0x7ee81bd67180,156,WeakMapPrototypeDelete
code-creation,Builtin,2,3058,0x7ee81bd67240,3156,WeakSetConstructor
code-creation,Builtin,2,3060,0x7ee81bd67ec0,184,WeakSetPrototypeHas
code-creation,Builtin,2,3061,0x7ee81bd67f80,260,WeakSetPrototypeAdd
code-creation,Builtin,2,3063,0x7ee81bd680c0,156,WeakSetPrototypeDelete
code-creation,Builtin,2,3064,0x7ee81bd68180,448,WeakCollectionDelete
code-creation,Builtin,2,3066,0x7ee81bd68380,808,WeakCollectionSet
code-creation,Builtin,2,3067,0x7ee81bd686c0,12,SharedStructTypeConstructor
code-creation,Builtin,2,3069,0x7ee81bd68700,12,SharedStructConstructor
code-creation,Builtin,2,3070,0x7ee81bd68740,12,SharedArrayConstructor
code-creation,Builtin,2,3072,0x7ee81bd68780,12,AtomicsMutexConstructor
code-creation,Builtin,2,3073,0x7ee81bd687c0,12,AtomicsMutexLock
code-creation,Builtin,2,3075,0x7ee81bd68800,12,AtomicsMutexTryLock
code-creation,Builtin,2,3076,0x7ee81bd68840,12,AtomicsConditionConstructor
code-creation,Builtin,2,3078,0x7ee81bd68880,12,AtomicsConditionWait
code-creation,Builtin,2,3079,0x7ee81bd688c0,12,AtomicsConditionNotify
code-creation,Builtin,2,3081,0x7ee81bd68900,288,AsyncGeneratorResolve
code-creation,Builtin,2,3082,0x7ee81bd68a40,104,AsyncGeneratorReject
code-creation,Builtin,2,3084,0x7ee81bd68ac0,1624,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,3085,0x7ee81bd69140,1912,AsyncGeneratorReturn
code-creation,Builtin,2,3087,0x7ee81bd698c0,376,AsyncGeneratorResumeNext
code-creation,Builtin,2,3088,0x7ee81bd69a40,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,3090,0x7ee81bd69a80,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,3094,0x7ee81bd69e80,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,3096,0x7ee81bd6a2c0,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,3097,0x7ee81bd6a700,1600,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,3099,0x7ee81bd6ad80,1600,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,3100,0x7ee81bd6b400,176,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,3102,0x7ee81bd6b4c0,172,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,3104,0x7ee81bd6b580,124,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,3105,0x7ee81bd6b600,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,3107,0x7ee81bd6b680,116,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,3109,0x7ee81bd6b700,180,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,3110,0x7ee81bd6b7c0,1656,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,3112,0x7ee81bd6be40,1764,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,3114,0x7ee81bd6c540,1788,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,3115,0x7ee81bd6cc40,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,3117,0x7ee81bd6ccc0,192,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,3119,0x7ee81bd6cdc0,204,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,3120,0x7ee81bd6cec0,204,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,3122,0x7ee81bd6cfc0,192,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,3124,0x7ee81bd6d0c0,204,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,3126,0x7ee81bd6d1c0,204,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,3127,0x7ee81bd6d2c0,4,DirectCEntry
code-creation,Builtin,2,3129,0x7ee81bd6d300,1244,StringAdd_CheckNone
code-creation,Builtin,2,3130,0x7ee81bd6d800,2384,SubString
code-creation,Builtin,2,3132,0x7ee81bd6e180,84,DoubleToI
code-creation,Builtin,2,3133,0x7ee81bd6e200,3088,GetProperty
code-creation,Builtin,2,3135,0x7ee81bd6ee40,3248,GetPropertyWithReceiver
code-creation,Builtin,2,3136,0x7ee81bd6fb00,16876,SetProperty
code-creation,Builtin,2,3138,0x7ee81bd73d00,14060,CreateDataProperty
code-creation,Builtin,2,3139,0x7ee81bd77400,52,GetOwnPropertyDescriptor
code-creation,Builtin,2,3141,0x7ee81bd77440,8,MemCopyUint8Uint8
code-creation,Builtin,2,3142,0x7ee81bd77480,8,MemMove
code-creation,Builtin,2,3144,0x7ee81bd774c0,180,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,3145,0x7ee81bd77580,2788,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,3147,0x7ee81bd78080,12,IsTraceCategoryEnabled
code-creation,Builtin,2,3148,0x7ee81bd780c0,12,Trace
code-creation,Builtin,2,3150,0x7ee81bd78100,12,FinalizationRegistryUnregister
code-creation,Builtin,2,3151,0x7ee81bd78140,408,AsyncModuleEvaluate
code-creation,Builtin,2,3153,0x7ee81bd78300,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,3155,0x7ee81bd78340,12,CallAsyncModuleRejected
code-creation,Builtin,2,3156,0x7ee81bd78380,12,TemporalNowTimeZone
code-creation,Builtin,2,3158,0x7ee81bd783c0,12,TemporalNowInstant
code-creation,Builtin,2,3159,0x7ee81bd78400,12,TemporalNowPlainDateTime
code-creation,Builtin,2,3160,0x7ee81bd78440,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,3162,0x7ee81bd78480,12,TemporalNowZonedDateTime
code-creation,Builtin,2,3164,0x7ee81bd784c0,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,3165,0x7ee81bd78500,12,TemporalNowPlainDate
code-creation,Builtin,2,3167,0x7ee81bd78540,12,TemporalNowPlainDateISO
code-creation,Builtin,2,3168,0x7ee81bd78580,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,3170,0x7ee81bd785c0,12,TemporalPlainDateConstructor
code-creation,Builtin,2,3171,0x7ee81bd78600,12,TemporalPlainDateFrom
code-creation,Builtin,2,3173,0x7ee81bd78640,12,TemporalPlainDateCompare
code-creation,Builtin,2,3174,0x7ee81bd78680,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,3176,0x7ee81bd786c0,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,3178,0x7ee81bd78700,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,3216,0x7ee81bd78740,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,3218,0x7ee81bd78780,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,3220,0x7ee81bd787c0,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,3221,0x7ee81bd78800,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,3223,0x7ee81bd78840,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,3224,0x7ee81bd78880,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,3226,0x7ee81bd788c0,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,3228,0x7ee81bd78900,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,3230,0x7ee81bd78940,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,3231,0x7ee81bd78980,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,3233,0x7ee81bd789c0,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,3235,0x7ee81bd78a00,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,3236,0x7ee81bd78a40,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,3238,0x7ee81bd78a80,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,3240,0x7ee81bd78ac0,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,3241,0x7ee81bd78b00,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,3243,0x7ee81bd78b40,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,3245,0x7ee81bd78b80,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,3246,0x7ee81bd78bc0,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,3248,0x7ee81bd78c00,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,3249,0x7ee81bd78c40,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,3251,0x7ee81bd78c80,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,3253,0x7ee81bd78cc0,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,3254,0x7ee81bd78d00,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,3256,0x7ee81bd78d40,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,3258,0x7ee81bd78d80,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,3259,0x7ee81bd78dc0,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,3261,0x7ee81bd78e00,12,TemporalPlainTimeFrom
code-creation,Builtin,2,3262,0x7ee81bd78e40,12,TemporalPlainTimeCompare
code-creation,Builtin,2,3264,0x7ee81bd78e80,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,3266,0x7ee81bd78ec0,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,3267,0x7ee81bd78f00,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,3269,0x7ee81bd78f40,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,3270,0x7ee81bd78f80,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,3272,0x7ee81bd78fc0,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,3274,0x7ee81bd79000,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,3275,0x7ee81bd79040,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,3277,0x7ee81bd79080,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,3278,0x7ee81bd790c0,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,3280,0x7ee81bd79100,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,3282,0x7ee81bd79140,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,3283,0x7ee81bd79180,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,3285,0x7ee81bd791c0,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,3286,0x7ee81bd79200,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,3288,0x7ee81bd79240,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,3290,0x7ee81bd79280,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,3292,0x7ee81bd792c0,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,3293,0x7ee81bd79300,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,3295,0x7ee81bd79340,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,3296,0x7ee81bd79380,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,3301,0x7ee81bd793c0,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,3302,0x7ee81bd79400,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,3304,0x7ee81bd79440,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,3305,0x7ee81bd79480,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,3307,0x7ee81bd794c0,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,3309,0x7ee81bd79500,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,3310,0x7ee81bd79540,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,3312,0x7ee81bd79580,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,3314,0x7ee81bd795c0,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,3315,0x7ee81bd79600,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,3317,0x7ee81bd79640,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,3319,0x7ee81bd79680,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,3320,0x7ee81bd796c0,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,3322,0x7ee81bd79700,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,3324,0x7ee81bd79740,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,3325,0x7ee81bd79780,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,3327,0x7ee81bd797c0,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,3329,0x7ee81bd79800,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,3331,0x7ee81bd79840,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,3332,0x7ee81bd79880,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,3334,0x7ee81bd798c0,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,3336,0x7ee81bd79900,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,3338,0x7ee81bd79940,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,3340,0x7ee81bd79980,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,3342,0x7ee81bd799c0,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,3343,0x7ee81bd79a00,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,3345,0x7ee81bd79a40,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,3347,0x7ee81bd79a80,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,3348,0x7ee81bd79ac0,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,3350,0x7ee81bd79b00,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,3351,0x7ee81bd79b40,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,3353,0x7ee81bd79b80,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,3355,0x7ee81bd79bc0,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,3356,0x7ee81bd79c00,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,3358,0x7ee81bd79c40,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,3360,0x7ee81bd79c80,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,3362,0x7ee81bd79cc0,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,3363,0x7ee81bd79d00,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,3365,0x7ee81bd79d40,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,3367,0x7ee81bd79d80,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,3369,0x7ee81bd79dc0,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,3370,0x7ee81bd79e00,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,3372,0x7ee81bd79e40,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,3374,0x7ee81bd79e80,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,3375,0x7ee81bd79ec0,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,3377,0x7ee81bd79f00,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,3378,0x7ee81bd79f40,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,3380,0x7ee81bd79f80,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,3384,0x7ee81bd79fc0,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,3386,0x7ee81bd7a000,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,3387,0x7ee81bd7a040,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,3389,0x7ee81bd7a080,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,3391,0x7ee81bd7a0c0,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,3392,0x7ee81bd7a100,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,3394,0x7ee81bd7a140,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,3396,0x7ee81bd7a180,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,3397,0x7ee81bd7a1c0,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,3399,0x7ee81bd7a200,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,3401,0x7ee81bd7a240,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,3402,0x7ee81bd7a280,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,3404,0x7ee81bd7a2c0,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,3406,0x7ee81bd7a300,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,3408,0x7ee81bd7a340,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,3409,0x7ee81bd7a380,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,3411,0x7ee81bd7a3c0,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,3413,0x7ee81bd7a400,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,3414,0x7ee81bd7a440,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,3416,0x7ee81bd7a480,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,3418,0x7ee81bd7a4c0,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,3420,0x7ee81bd7a500,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,3421,0x7ee81bd7a540,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,3423,0x7ee81bd7a580,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,3425,0x7ee81bd7a5c0,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,3426,0x7ee81bd7a600,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,3428,0x7ee81bd7a640,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,3430,0x7ee81bd7a680,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,3431,0x7ee81bd7a6c0,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,3433,0x7ee81bd7a700,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,3435,0x7ee81bd7a740,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,3436,0x7ee81bd7a780,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,3438,0x7ee81bd7a7c0,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,3440,0x7ee81bd7a800,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,3441,0x7ee81bd7a840,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,3443,0x7ee81bd7a880,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,3445,0x7ee81bd7a8c0,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,3446,0x7ee81bd7a900,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,3448,0x7ee81bd7a940,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,3450,0x7ee81bd7a980,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,3451,0x7ee81bd7a9c0,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,3453,0x7ee81bd7aa00,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,3455,0x7ee81bd7aa40,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,3456,0x7ee81bd7aa80,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,3458,0x7ee81bd7aac0,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,3460,0x7ee81bd7ab00,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,3462,0x7ee81bd7ab40,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,3466,0x7ee81bd7ab80,12,TemporalDurationConstructor
code-creation,Builtin,2,3468,0x7ee81bd7abc0,12,TemporalDurationFrom
code-creation,Builtin,2,3469,0x7ee81bd7ac00,12,TemporalDurationCompare
code-creation,Builtin,2,3471,0x7ee81bd7ac40,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,3472,0x7ee81bd7ac80,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,3474,0x7ee81bd7acc0,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,3475,0x7ee81bd7ad00,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,3477,0x7ee81bd7ad40,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,3479,0x7ee81bd7ad80,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,3480,0x7ee81bd7adc0,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,3482,0x7ee81bd7ae00,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,3484,0x7ee81bd7ae40,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,3485,0x7ee81bd7ae80,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,3487,0x7ee81bd7aec0,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,3488,0x7ee81bd7af00,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,3490,0x7ee81bd7af40,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,3492,0x7ee81bd7af80,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,3493,0x7ee81bd7afc0,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,3495,0x7ee81bd7b000,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,3496,0x7ee81bd7b040,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,3498,0x7ee81bd7b080,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,3500,0x7ee81bd7b0c0,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,3501,0x7ee81bd7b100,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,3503,0x7ee81bd7b140,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,3505,0x7ee81bd7b180,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,3506,0x7ee81bd7b1c0,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,3508,0x7ee81bd7b200,12,TemporalInstantConstructor
code-creation,Builtin,2,3510,0x7ee81bd7b240,12,TemporalInstantFrom
code-creation,Builtin,2,3511,0x7ee81bd7b280,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,3513,0x7ee81bd7b2c0,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,3514,0x7ee81bd7b300,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,3516,0x7ee81bd7b340,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,3518,0x7ee81bd7b380,12,TemporalInstantCompare
code-creation,Builtin,2,3519,0x7ee81bd7b3c0,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,3521,0x7ee81bd7b400,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,3523,0x7ee81bd7b440,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,3524,0x7ee81bd7b480,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,3526,0x7ee81bd7b4c0,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,3528,0x7ee81bd7b500,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,3539,0x7ee81bd7b540,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,3543,0x7ee81bd7b580,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,3544,0x7ee81bd7b5c0,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,3546,0x7ee81bd7b600,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,3548,0x7ee81bd7b640,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,3549,0x7ee81bd7b680,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,3551,0x7ee81bd7b6c0,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,3552,0x7ee81bd7b700,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,3554,0x7ee81bd7b740,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,3556,0x7ee81bd7b780,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,3557,0x7ee81bd7b7c0,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,3559,0x7ee81bd7b800,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,3564,0x7ee81bd7b840,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,3565,0x7ee81bd7b880,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,3567,0x7ee81bd7b8c0,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,3569,0x7ee81bd7b900,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,3570,0x7ee81bd7b940,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,3572,0x7ee81bd7b980,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,3574,0x7ee81bd7b9c0,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,3575,0x7ee81bd7ba00,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,3577,0x7ee81bd7ba40,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,3579,0x7ee81bd7ba80,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,3580,0x7ee81bd7bac0,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,3582,0x7ee81bd7bb00,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,3584,0x7ee81bd7bb40,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,3585,0x7ee81bd7bb80,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,3587,0x7ee81bd7bbc0,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,3589,0x7ee81bd7bc00,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,3590,0x7ee81bd7bc40,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,3592,0x7ee81bd7bc80,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,3594,0x7ee81bd7bcc0,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,3595,0x7ee81bd7bd00,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,3597,0x7ee81bd7bd40,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,3599,0x7ee81bd7bd80,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,3600,0x7ee81bd7bdc0,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,3602,0x7ee81bd7be00,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,3604,0x7ee81bd7be40,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,3605,0x7ee81bd7be80,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,3607,0x7ee81bd7bec0,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,3609,0x7ee81bd7bf00,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,3610,0x7ee81bd7bf40,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,3612,0x7ee81bd7bf80,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,3614,0x7ee81bd7bfc0,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,3615,0x7ee81bd7c000,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,3617,0x7ee81bd7c040,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,3619,0x7ee81bd7c080,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,3620,0x7ee81bd7c0c0,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,3622,0x7ee81bd7c100,12,TemporalTimeZoneFrom
code-creation,Builtin,2,3624,0x7ee81bd7c140,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,3625,0x7ee81bd7c180,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,3627,0x7ee81bd7c1c0,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,3629,0x7ee81bd7c200,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,3630,0x7ee81bd7c240,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,3632,0x7ee81bd7c280,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,3634,0x7ee81bd7c2c0,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,3636,0x7ee81bd7c300,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,3637,0x7ee81bd7c340,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,3639,0x7ee81bd7c380,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,3641,0x7ee81bd7c3c0,12,TemporalCalendarConstructor
code-creation,Builtin,2,3642,0x7ee81bd7c400,12,TemporalCalendarFrom
code-creation,Builtin,2,3646,0x7ee81bd7c440,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,3648,0x7ee81bd7c480,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,3650,0x7ee81bd7c4c0,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,3651,0x7ee81bd7c500,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,3653,0x7ee81bd7c540,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,3655,0x7ee81bd7c580,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,3656,0x7ee81bd7c5c0,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,3658,0x7ee81bd7c600,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,3659,0x7ee81bd7c640,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,3661,0x7ee81bd7c680,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,3672,0x7ee81bd7c6c0,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,3674,0x7ee81bd7c700,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,3675,0x7ee81bd7c740,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,3677,0x7ee81bd7c780,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,3679,0x7ee81bd7c7c0,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,3680,0x7ee81bd7c800,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,3682,0x7ee81bd7c840,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,3686,0x7ee81bd7c880,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,3688,0x7ee81bd7c8c0,3456,TemporalCalendarPrototypeFields
code-creation,Builtin,2,3692,0x7ee81bd7d680,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,3694,0x7ee81bd7d6c0,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,3695,0x7ee81bd7d700,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,3699,0x7ee81bd7d740,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,3701,0x7ee81bd7d780,1716,StringFixedArrayFromIterable
code-creation,Builtin,2,3703,0x7ee81bd7de40,1716,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,3705,0x7ee81bd7e500,260,AggregateErrorConstructor
code-creation,Builtin,2,3707,0x7ee81bd7e640,808,ArrayPrototypeAt
code-creation,Builtin,2,3709,0x7ee81bd7e980,552,ArrayPrototypeConcat
code-creation,Builtin,2,3711,0x7ee81bd7ebc0,4980,ArrayPrototypeCopyWithin
code-creation,Builtin,2,3714,0x7ee81bd7ff40,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,3716,0x7ee81bd80040,568,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,3718,0x7ee81bd80280,4024,ArrayEveryLoopContinuation
code-creation,Builtin,2,3720,0x7ee81bd81240,1452,ArrayEvery
code-creation,Builtin,2,3721,0x7ee81bd81800,276,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,3723,0x7ee81bd81940,860,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,3725,0x7ee81bd81cc0,4280,ArrayFilterLoopContinuation
code-creation,Builtin,2,3729,0x7ee81bd82d80,4264,ArrayFilter
code-creation,Builtin,2,3730,0x7ee81bd83e40,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,3732,0x7ee81bd83f40,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,3734,0x7ee81bd83f80,308,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,3737,0x7ee81bd840c0,496,ArrayFindLoopContinuation
code-creation,Builtin,2,3739,0x7ee81bd842c0,1428,ArrayPrototypeFind
code-creation,Builtin,2,3743,0x7ee81bd84880,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,3745,0x7ee81bd84980,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,3746,0x7ee81bd849c0,308,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,3748,0x7ee81bd84b00,492,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,3751,0x7ee81bd84d00,1432,ArrayPrototypeFindIndex
code-creation,Builtin,2,3753,0x7ee81bd852c0,428,ArrayFindLastLoopContinuation
code-creation,Builtin,2,3755,0x7ee81bd85480,1624,ArrayPrototypeFindLast
code-creation,Builtin,2,3757,0x7ee81bd85b00,424,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,3761,0x7ee81bd85cc0,1620,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,3766,0x7ee81bd86340,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,3770,0x7ee81bd86440,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,3772,0x7ee81bd86540,3904,ArrayForEachLoopContinuation
code-creation,Builtin,2,3774,0x7ee81bd874c0,1292,ArrayForEach
code-creation,Builtin,2,3775,0x7ee81bd87a00,4288,ArrayFrom
code-creation,Builtin,2,3777,0x7ee81bd88b00,168,ArrayIsArray
code-creation,Builtin,2,3779,0x7ee81bd88bc0,392,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,3780,0x7ee81bd88d80,40,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,3784,0x7ee81bd88dc0,132,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,3786,0x7ee81bd88e80,208,ConvertToLocaleString
code-creation,Builtin,2,3788,0x7ee81bd88f80,728,JoinStackPush
code-creation,Builtin,2,3789,0x7ee81bd89280,272,JoinStackPop
tick,0x7ee819b1d9bd,3794,0,0x0,6
code-creation,Builtin,2,3809,0x7ee81bd893c0,9092,ArrayPrototypeJoin
code-creation,Builtin,2,3812,0x7ee81bd8b780,5868,ArrayPrototypeToLocaleString
code-creation,Builtin,2,3814,0x7ee81bd8ce80,236,ArrayPrototypeToString
code-creation,Builtin,2,3815,0x7ee81bd8cf80,8928,TypedArrayPrototypeJoin
code-creation,Builtin,2,3817,0x7ee81bd8f280,5664,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,3818,0x7ee81bd908c0,4256,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,3820,0x7ee81bd91980,256,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,3822,0x7ee81bd91ac0,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,3823,0x7ee81bd91bc0,468,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,3825,0x7ee81bd91dc0,3932,ArrayMapLoopContinuation
code-creation,Builtin,2,3826,0x7ee81bd92d40,3696,ArrayMap
code-creation,Builtin,2,3828,0x7ee81bd93bc0,1396,ArrayOf
code-creation,Builtin,2,3829,0x7ee81bd94140,412,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,3831,0x7ee81bd94300,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,3833,0x7ee81bd94400,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,3834,0x7ee81bd94500,3920,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,3836,0x7ee81bd95480,1880,ArrayReduceRight
code-creation,Builtin,2,3837,0x7ee81bd95c00,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,3839,0x7ee81bd95cc0,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,3841,0x7ee81bd95dc0,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,3842,0x7ee81bd95ec0,3980,ArrayReduceLoopContinuation
code-creation,Builtin,2,3844,0x7ee81bd96e80,1516,ArrayReduce
code-creation,Builtin,2,3845,0x7ee81bd97480,3464,ArrayPrototypeReverse
code-creation,Builtin,2,3847,0x7ee81bd98240,3724,ArrayPrototypeShift
code-creation,Builtin,2,3848,0x7ee81bd99100,5380,ArrayPrototypeSlice
code-creation,Builtin,2,3850,0x7ee81bd9a640,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,3852,0x7ee81bd9a740,532,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,3853,0x7ee81bd9a980,4012,ArraySomeLoopContinuation
code-creation,Builtin,2,3855,0x7ee81bd9b940,1436,ArraySome
code-creation,Builtin,2,3856,0x7ee81bd9bf00,14228,ArrayPrototypeSplice
code-creation,Builtin,2,3858,0x7ee81bd9f6c0,1624,GenericArrayToReversed
code-creation,Builtin,2,3859,0x7ee81bd9fd40,2748,ArrayPrototypeToReversed
code-creation,Builtin,2,3861,0x7ee81bda0800,5076,ArrayTimSortIntoCopy
code-creation,Builtin,2,3862,0x7ee81bda1c00,2148,ArrayPrototypeToSorted
code-creation,Builtin,2,3864,0x7ee81bda2480,8488,ArrayPrototypeToSpliced
code-creation,Builtin,2,3865,0x7ee81bda45c0,2980,ArrayPrototypeUnshift
code-creation,Builtin,2,3867,0x7ee81bda5180,1004,GenericArrayWith
code-creation,Builtin,2,3868,0x7ee81bda5580,1104,ArrayPrototypeWith
code-creation,Builtin,2,3870,0x7ee81bda5a00,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,3871,0x7ee81bda5b80,484,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,3873,0x7ee81bda5d80,216,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,3874,0x7ee81bda5e80,216,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,3879,0x7ee81bda5f80,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,3881,0x7ee81bda6100,216,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,3882,0x7ee81bda6200,100,ArrayBufferIsView
code-creation,Builtin,2,3884,0x7ee81bda6280,388,ToInteger
code-creation,Builtin,2,3885,0x7ee81bda6440,3080,FastCreateDataProperty
code-creation,Builtin,2,3887,0x7ee81bda7080,640,CheckSameObject
code-creation,Builtin,2,3888,0x7ee81bda7340,1048,BooleanConstructor
code-creation,Builtin,2,3890,0x7ee81bda7780,164,BooleanPrototypeToString
code-creation,Builtin,2,3891,0x7ee81bda7840,160,BooleanPrototypeValueOf
code-creation,Builtin,2,3893,0x7ee81bda7900,1068,BigIntAddNoThrow
code-creation,Builtin,2,3894,0x7ee81bda7d40,1144,BigIntAdd
code-creation,Builtin,2,3895,0x7ee81bda81c0,1068,BigIntSubtractNoThrow
code-creation,Builtin,2,3897,0x7ee81bda8600,1144,BigIntSubtract
code-creation,Builtin,2,3898,0x7ee81bda8a80,328,BigIntMultiplyNoThrow
code-creation,Builtin,2,3900,0x7ee81bda8c00,444,BigIntMultiply
code-creation,Builtin,2,3901,0x7ee81bda8dc0,544,BigIntDivideNoThrow
code-creation,Builtin,2,3903,0x7ee81bda9000,652,BigIntDivide
code-creation,Builtin,2,3904,0x7ee81bda92c0,464,BigIntModulusNoThrow
code-creation,Builtin,2,3906,0x7ee81bda94c0,568,BigIntModulus
code-creation,Builtin,2,3907,0x7ee81bda9700,964,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,3909,0x7ee81bda9b00,1108,BigIntBitwiseAnd
code-creation,Builtin,2,3910,0x7ee81bda9f80,936,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,3912,0x7ee81bdaa340,1052,BigIntBitwiseOr
code-creation,Builtin,2,3913,0x7ee81bdaa780,976,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,3915,0x7ee81bdaab80,1124,BigIntBitwiseXor
code-creation,Builtin,2,3916,0x7ee81bdab000,1296,BigIntShiftLeftNoThrow
code-creation,Builtin,2,3917,0x7ee81bdab540,1420,BigIntShiftLeft
code-creation,Builtin,2,3919,0x7ee81bdabb00,1296,BigIntShiftRightNoThrow
code-creation,Builtin,2,3920,0x7ee81bdac040,1420,BigIntShiftRight
code-creation,Builtin,2,3922,0x7ee81bdac600,108,BigIntEqual
code-creation,Builtin,2,3923,0x7ee81bdac680,168,BigIntLessThan
code-creation,Builtin,2,3925,0x7ee81bdac740,168,BigIntGreaterThan
code-creation,Builtin,2,3926,0x7ee81bdac800,168,BigIntLessThanOrEqual
code-creation,Builtin,2,3927,0x7ee81bdac8c0,168,BigIntGreaterThanOrEqual
code-creation,Builtin,2,3929,0x7ee81bdac980,264,BigIntUnaryMinus
code-creation,Builtin,2,3931,0x7ee81bdacac0,1988,ToString
code-creation,Builtin,2,3932,0x7ee81bdad2c0,160,StringPrototypeToString
code-creation,Builtin,2,3934,0x7ee81bdad380,160,StringPrototypeValueOf
code-creation,Builtin,2,3935,0x7ee81bdad440,2228,StringToList
code-creation,Builtin,2,3936,0x7ee81bdadd00,788,StringPrototypeCharAt
code-creation,Builtin,2,3938,0x7ee81bdae040,680,StringPrototypeCharCodeAt
code-creation,Builtin,2,3939,0x7ee81bdae300,1188,StringPrototypeCodePointAt
code-creation,Builtin,2,3941,0x7ee81bdae7c0,416,StringPrototypeConcat
code-creation,Builtin,2,3942,0x7ee81bdae980,1048,StringConstructor
code-creation,Builtin,2,3944,0x7ee81bdaedc0,2060,StringAddConvertLeft
code-creation,Builtin,2,3945,0x7ee81bdaf600,2084,StringAddConvertRight
code-creation,Builtin,2,3947,0x7ee81bdafe40,572,StringCharAt
code-creation,Builtin,2,3948,0x7ee81bdb0080,16,FastNewClosureBaseline
code-creation,Builtin,2,3950,0x7ee81bdb00c0,228,FastNewFunctionContextEval
code-creation,Builtin,2,3951,0x7ee81bdb01c0,228,FastNewFunctionContextFunction
code-creation,Builtin,2,3953,0x7ee81bdb02c0,240,CreateRegExpLiteral
code-creation,Builtin,2,3954,0x7ee81bdb03c0,1208,CreateShallowArrayLiteral
code-creation,Builtin,2,3956,0x7ee81bdb0880,484,CreateEmptyArrayLiteral
code-creation,Builtin,2,3957,0x7ee81bdb0a80,2004,CreateShallowObjectLiteral
code-creation,Builtin,2,3959,0x7ee81bdb1280,392,ObjectConstructor
code-creation,Builtin,2,3960,0x7ee81bdb1440,188,CreateEmptyLiteralObject
code-creation,Builtin,2,3962,0x7ee81bdb1500,540,NumberConstructor
code-creation,Builtin,2,3963,0x7ee81bdb1740,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,3965,0x7ee81bdb1780,60,StringToNumber
code-creation,Builtin,2,3966,0x7ee81bdb17c0,188,NonNumberToNumber
code-creation,Builtin,2,3971,0x7ee81bdb1880,244,NonNumberToNumeric
code-creation,Builtin,2,3972,0x7ee81bdb1980,36,ToNumeric
code-creation,Builtin,2,3974,0x7ee81bdb19c0,1268,NumberToString
code-creation,Builtin,2,3975,0x7ee81bdb1ec0,108,ToBoolean
code-creation,Builtin,2,3977,0x7ee81bdb1f40,104,ToBooleanForBaselineJump
code-creation,Builtin,2,3978,0x7ee81bdb1fc0,600,ToLength
code-creation,Builtin,2,3980,0x7ee81bdb2240,1312,ToName
code-creation,Builtin,2,3981,0x7ee81bdb2780,864,ToObject
code-creation,Builtin,2,3982,0x7ee81bdb2b00,236,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,3984,0x7ee81bdb2c00,236,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,3986,0x7ee81bdb2d00,584,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,3987,0x7ee81bdb2f80,20,OrdinaryToPrimitive_Number
code-creation,Builtin,2,3989,0x7ee81bdb2fc0,380,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,3990,0x7ee81bdb3140,380,OrdinaryToPrimitive_String
code-creation,Builtin,2,3992,0x7ee81bdb32c0,224,FastConsoleAssert
code-creation,Builtin,2,3993,0x7ee81bdb33c0,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,3995,0x7ee81bdb3480,764,DataViewPrototypeGetByteLength
code-creation,Builtin,2,3996,0x7ee81bdb3780,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,3998,0x7ee81bdb3940,848,DataViewPrototypeGetUint8
code-creation,Builtin,2,4000,0x7ee81bdb3cc0,848,DataViewPrototypeGetInt8
code-creation,Builtin,2,4001,0x7ee81bdb4040,924,DataViewPrototypeGetUint16
code-creation,Builtin,2,4003,0x7ee81bdb4400,920,DataViewPrototypeGetInt16
code-creation,Builtin,2,4004,0x7ee81bdb47c0,1076,DataViewPrototypeGetUint32
code-creation,Builtin,2,4006,0x7ee81bdb4c00,956,DataViewPrototypeGetInt32
code-creation,Builtin,2,4007,0x7ee81bdb4fc0,1112,DataViewPrototypeGetFloat32
code-creation,Builtin,2,4009,0x7ee81bdb5440,1176,DataViewPrototypeGetFloat64
code-creation,Builtin,2,4010,0x7ee81bdb5900,1232,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,4012,0x7ee81bdb5e00,1256,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,4013,0x7ee81bdb6300,1264,DataViewPrototypeSetUint8
code-creation,Builtin,2,4015,0x7ee81bdb6800,1264,DataViewPrototypeSetInt8
code-creation,Builtin,2,4016,0x7ee81bdb6d00,1348,DataViewPrototypeSetUint16
code-creation,Builtin,2,4018,0x7ee81bdb7280,1348,DataViewPrototypeSetInt16
code-creation,Builtin,2,4019,0x7ee81bdb7800,1388,DataViewPrototypeSetUint32
code-creation,Builtin,2,4021,0x7ee81bdb7d80,1388,DataViewPrototypeSetInt32
code-creation,Builtin,2,4022,0x7ee81bdb8300,1356,DataViewPrototypeSetFloat32
code-creation,Builtin,2,4024,0x7ee81bdb8880,1412,DataViewPrototypeSetFloat64
code-creation,Builtin,2,4026,0x7ee81bdb8e40,1264,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,4027,0x7ee81bdb9340,1264,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,4029,0x7ee81bdb9840,928,FinalizationRegistryConstructor
code-creation,Builtin,2,4030,0x7ee81bdb9c00,1220,FinalizationRegistryRegister
code-creation,Builtin,2,4032,0x7ee81bdba100,664,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,4033,0x7ee81bdba3c0,340,FunctionPrototypeHasInstance
code-creation,Builtin,2,4035,0x7ee81bdba540,940,FastFunctionPrototypeBind
code-creation,Builtin,2,4037,0x7ee81bdba900,92,IncBlockCounter
code-creation,Builtin,2,4038,0x7ee81bdba980,240,GetTemplateObject
code-creation,Builtin,2,4040,0x7ee81bdbaa80,92,ForInNext
code-creation,Builtin,2,4041,0x7ee81bdbab00,136,GetImportMetaObjectBaseline
code-creation,Builtin,2,4043,0x7ee81bdbabc0,112,GetIteratorWithFeedback
code-creation,Builtin,2,4044,0x7ee81bdbac40,100,GetIteratorBaseline
code-creation,Builtin,2,4046,0x7ee81bdbacc0,296,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,4047,0x7ee81bdbae00,1068,CallIteratorWithFeedback
code-creation,Builtin,2,4049,0x7ee81bdbb240,916,IteratorConstructor
code-creation,Builtin,2,4050,0x7ee81bdbb600,1012,IteratorFrom
code-creation,Builtin,2,4052,0x7ee81bdbba00,160,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,4053,0x7ee81bdbbac0,408,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,4055,0x7ee81bdbbc80,256,IteratorHelperPrototypeNext
code-creation,Builtin,2,4059,0x7ee81bdbbdc0,400,IteratorHelperPrototypeReturn
code-creation,Builtin,2,4061,0x7ee81bdbbf80,440,IteratorPrototypeMap
code-creation,Builtin,2,4063,0x7ee81bdbc140,1200,IteratorMapHelperNext
code-creation,Builtin,2,4064,0x7ee81bdbc600,440,IteratorPrototypeFilter
code-creation,Builtin,2,4065,0x7ee81bdbc7c0,1352,IteratorFilterHelperNext
code-creation,Builtin,2,4067,0x7ee81bdbcd40,568,IteratorPrototypeTake
code-creation,Builtin,2,4068,0x7ee81bdbcf80,1356,IteratorTakeHelperNext
code-creation,Builtin,2,4070,0x7ee81bdbd500,568,IteratorPrototypeDrop
code-creation,Builtin,2,4071,0x7ee81bdbd740,1540,IteratorDropHelperNext
code-creation,Builtin,2,4073,0x7ee81bdbdd80,272,MathAbs
code-creation,Builtin,2,4074,0x7ee81bdbdec0,420,MathCeil
code-creation,Builtin,2,4076,0x7ee81bdbe080,424,MathFloor
code-creation,Builtin,2,4077,0x7ee81bdbe240,472,MathRound
code-creation,Builtin,2,4078,0x7ee81bdbe440,420,MathTrunc
code-creation,Builtin,2,4080,0x7ee81bdbe600,360,MathPow
code-creation,Builtin,2,4081,0x7ee81bdbe780,408,MathMax
code-creation,Builtin,2,4082,0x7ee81bdbe940,412,MathMin
code-creation,Builtin,2,4084,0x7ee81bdbeb00,312,MathAcos
code-creation,Builtin,2,4085,0x7ee81bdbec40,312,MathAcosh
code-creation,Builtin,2,4086,0x7ee81bdbed80,312,MathAsin
code-creation,Builtin,2,4088,0x7ee81bdbeec0,312,MathAsinh
code-creation,Builtin,2,4089,0x7ee81bdbf000,312,MathAtan
code-creation,Builtin,2,4090,0x7ee81bdbf140,404,MathAtan2
code-creation,Builtin,2,4092,0x7ee81bdbf300,312,MathAtanh
code-creation,Builtin,2,4093,0x7ee81bdbf440,312,MathCbrt
code-creation,Builtin,2,4094,0x7ee81bdbf580,168,MathClz32
code-creation,Builtin,2,4096,0x7ee81bdbf640,312,MathCos
code-creation,Builtin,2,4097,0x7ee81bdbf780,312,MathCosh
code-creation,Builtin,2,4098,0x7ee81bdbf8c0,312,MathExp
code-creation,Builtin,2,4100,0x7ee81bdbfa00,312,MathExpm1
code-creation,Builtin,2,4101,0x7ee81bdbfb40,264,MathFround
code-creation,Builtin,2,4102,0x7ee81bdbfc80,304,MathImul
code-creation,Builtin,2,4104,0x7ee81bdbfdc0,312,MathLog
code-creation,Builtin,2,4105,0x7ee81bdbff00,312,MathLog1p
code-creation,Builtin,2,4106,0x7ee81bdc0040,312,MathLog10
code-creation,Builtin,2,4108,0x7ee81bdc0180,312,MathLog2
code-creation,Builtin,2,4109,0x7ee81bdc02c0,312,MathSin
code-creation,Builtin,2,4110,0x7ee81bdc0400,176,MathSign
code-creation,Builtin,2,4112,0x7ee81bdc04c0,312,MathSinh
code-creation,Builtin,2,4113,0x7ee81bdc0600,260,MathSqrt
code-creation,Builtin,2,4114,0x7ee81bdc0740,312,MathTan
code-creation,Builtin,2,4116,0x7ee81bdc0880,312,MathTanh
code-creation,Builtin,2,4117,0x7ee81bdc09c0,1016,MathHypot
code-creation,Builtin,2,4118,0x7ee81bdc0dc0,320,MathRandom
code-creation,Builtin,2,4120,0x7ee81bdc0f40,2532,NumberPrototypeToString
code-creation,Builtin,2,4121,0x7ee81bdc1940,132,NumberIsFinite
code-creation,Builtin,2,4122,0x7ee81bdc1a00,332,NumberIsInteger
code-creation,Builtin,2,4124,0x7ee81bdc1b80,128,NumberIsNaN
code-creation,Builtin,2,4125,0x7ee81bdc1c40,364,NumberIsSafeInteger
code-creation,Builtin,2,4127,0x7ee81bdc1dc0,160,NumberPrototypeValueOf
code-creation,Builtin,2,4128,0x7ee81bdc1e80,200,NumberParseFloat
code-creation,Builtin,2,4130,0x7ee81bdc1f80,248,ParseInt
code-creation,Builtin,2,4131,0x7ee81bdc2080,84,NumberParseInt
code-creation,Builtin,2,4132,0x7ee81bdc2100,816,Add
code-creation,Builtin,2,4134,0x7ee81bdc2440,428,Subtract
code-creation,Builtin,2,4136,0x7ee81bdc2600,556,Multiply
code-creation,Builtin,2,4137,0x7ee81bdc2840,500,Divide
code-creation,Builtin,2,4138,0x7ee81bdc2a40,548,Modulus
code-creation,Builtin,2,4140,0x7ee81bdc2c80,516,Exponentiate
code-creation,Builtin,2,4141,0x7ee81bdc2ec0,336,Negate
code-creation,Builtin,2,4142,0x7ee81bdc3040,160,BitwiseNot
code-creation,Builtin,2,4144,0x7ee81bdc3100,112,Decrement
code-creation,Builtin,2,4145,0x7ee81bdc3180,112,Increment
code-creation,Builtin,2,4147,0x7ee81bdc3200,516,ShiftLeft
code-creation,Builtin,2,4148,0x7ee81bdc3440,516,ShiftRight
code-creation,Builtin,2,4149,0x7ee81bdc3680,588,ShiftRightLogical
code-creation,Builtin,2,4151,0x7ee81bdc3900,304,BitwiseAnd
code-creation,Builtin,2,4155,0x7ee81bdc3a40,304,BitwiseOr
code-creation,Builtin,2,4156,0x7ee81bdc3b80,304,BitwiseXor
code-creation,Builtin,2,4157,0x7ee81bdc3cc0,948,LessThan
code-creation,Builtin,2,4159,0x7ee81bdc4080,948,LessThanOrEqual
code-creation,Builtin,2,4160,0x7ee81bdc4440,948,GreaterThan
code-creation,Builtin,2,4162,0x7ee81bdc4800,948,GreaterThanOrEqual
code-creation,Builtin,2,4163,0x7ee81bdc4bc0,1060,Equal
code-creation,Builtin,2,4165,0x7ee81bdc5000,512,StrictEqual
code-creation,Builtin,2,4166,0x7ee81bdc5240,3236,ObjectFromEntries
code-creation,Builtin,2,4167,0x7ee81bdc5f00,820,CreateObjectWithoutProperties
code-creation,Builtin,2,4169,0x7ee81bdc6240,144,ObjectIsExtensible
code-creation,Builtin,2,4170,0x7ee81bdc6300,152,ObjectPreventExtensions
code-creation,Builtin,2,4172,0x7ee81bdc63c0,148,ObjectGetPrototypeOf
code-creation,Builtin,2,4173,0x7ee81bdc6480,304,ObjectSetPrototypeOf
code-creation,Builtin,2,4175,0x7ee81bdc65c0,80,ObjectPrototypeToString
code-creation,Builtin,2,4176,0x7ee81bdc6640,100,ObjectPrototypeValueOf
code-creation,Builtin,2,4178,0x7ee81bdc66c0,176,ObjectPrototypeToLocaleString
code-creation,Builtin,2,4180,0x7ee81bdc6780,876,FulfillPromise
code-creation,Builtin,2,4181,0x7ee81bdc6b00,1012,RejectPromise
code-creation,Builtin,2,4183,0x7ee81bdc6f00,2500,NewPromiseCapability
code-creation,Builtin,2,4184,0x7ee81bdc7900,192,PromiseCapabilityDefaultReject
code-creation,Builtin,2,4186,0x7ee81bdc7a00,172,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,4187,0x7ee81bdc7ac0,1332,PerformPromiseThen
code-creation,Builtin,2,4189,0x7ee81bdc8000,668,PromiseReject
code-creation,Builtin,2,4190,0x7ee81bdc82c0,304,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,4192,0x7ee81bdc8400,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,4193,0x7ee81bdc8480,4516,PromiseAll
code-creation,Builtin,2,4195,0x7ee81bdc9640,4856,PromiseAllSettled
code-creation,Builtin,2,4196,0x7ee81bdca940,1092,PromiseAllResolveElementClosure
code-creation,Builtin,2,4198,0x7ee81bdcadc0,1436,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,4199,0x7ee81bdcb380,1444,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,4201,0x7ee81bdcb940,1168,PromiseAnyRejectElementClosure
code-creation,Builtin,2,4203,0x7ee81bdcbe00,2724,PromiseAny
code-creation,Builtin,2,4204,0x7ee81bdcc8c0,3040,PromiseConstructor
code-creation,Builtin,2,4205,0x7ee81bdcd4c0,292,PromisePrototypeCatch
code-creation,Builtin,2,4207,0x7ee81bdcd600,92,PromiseValueThunkFinally
code-creation,Builtin,2,4209,0x7ee81bdcd680,84,PromiseThrowerFinally
code-creation,Builtin,2,4210,0x7ee81bdcd700,988,PromiseCatchFinally
code-creation,Builtin,2,4211,0x7ee81bdcdb00,988,PromiseThenFinally
code-creation,Builtin,2,4213,0x7ee81bdcdf00,1676,PromisePrototypeFinally
code-creation,Builtin,2,4214,0x7ee81bdce5c0,1524,PromiseRace
code-creation,Builtin,2,4216,0x7ee81bdcebc0,348,PromiseFulfillReactionJob
code-creation,Builtin,2,4217,0x7ee81bdced40,468,PromiseRejectReactionJob
code-creation,Builtin,2,4219,0x7ee81bdcef40,156,PromiseResolveTrampoline
code-creation,Builtin,2,4220,0x7ee81bdcf000,704,PromiseResolve
code-creation,Builtin,2,4222,0x7ee81bdcf300,716,ResolvePromise
code-creation,Builtin,2,4223,0x7ee81bdcf600,2288,PromisePrototypeThen
code-creation,Builtin,2,4225,0x7ee81bdcff00,1260,PromiseResolveThenableJob
code-creation,Builtin,2,4226,0x7ee81bdd0400,440,ProxyConstructor
code-creation,Builtin,2,4228,0x7ee81bdd05c0,2472,ProxyDeleteProperty
code-creation,Builtin,2,4229,0x7ee81bdd0f80,2792,ProxyGetProperty
code-creation,Builtin,2,4230,0x7ee81bdd1a80,1088,ProxyGetPrototypeOf
code-creation,Builtin,2,4232,0x7ee81bdd1f00,2396,ProxyHasProperty
code-creation,Builtin,2,4233,0x7ee81bdd2880,776,ProxyIsExtensible
code-creation,Builtin,2,4235,0x7ee81bdd2bc0,828,ProxyPreventExtensions
code-creation,Builtin,2,4236,0x7ee81bdd2f00,1136,ProxyRevocable
code-creation,Builtin,2,4238,0x7ee81bdd3380,136,ProxyRevoke
code-creation,Builtin,2,4239,0x7ee81bdd3440,2988,ProxySetProperty
code-creation,Builtin,2,4240,0x7ee81bdd4000,1344,ProxySetPrototypeOf
code-creation,Builtin,2,4242,0x7ee81bdd4580,208,ReflectIsExtensible
code-creation,Builtin,2,4246,0x7ee81bdd4680,216,ReflectPreventExtensions
code-creation,Builtin,2,4248,0x7ee81bdd4780,188,ReflectGetPrototypeOf
code-creation,Builtin,2,4249,0x7ee81bdd4840,332,ReflectSetPrototypeOf
code-creation,Builtin,2,4251,0x7ee81bdd49c0,288,ReflectGet
code-creation,Builtin,2,4252,0x7ee81bdd4b00,156,ReflectDeleteProperty
code-creation,Builtin,2,4253,0x7ee81bdd4bc0,144,ReflectHas
code-creation,Builtin,2,4255,0x7ee81bdd4c80,4644,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,4256,0x7ee81bdd5ec0,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,4258,0x7ee81bdd7300,5172,RegExpPrototypeExec
code-creation,Builtin,2,4259,0x7ee81bdd8740,2596,RegExpPrototypeMatchAll
code-creation,Builtin,2,4261,0x7ee81bdd9180,9248,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,4262,0x7ee81bddb5c0,8680,RegExpMatchFast
code-creation,Builtin,2,4264,0x7ee81bddd7c0,3668,RegExpPrototypeMatch
code-creation,Builtin,2,4265,0x7ee81bdde640,5876,RegExpReplace
code-creation,Builtin,2,4267,0x7ee81bddfd40,508,RegExpPrototypeReplace
code-creation,Builtin,2,4268,0x7ee81bddff40,1352,RegExpSearchFast
code-creation,Builtin,2,4270,0x7ee81bde04c0,1660,RegExpPrototypeSearch
code-creation,Builtin,2,4271,0x7ee81bde0b40,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,4273,0x7ee81bde0c40,5840,RegExpSplit
code-creation,Builtin,2,4274,0x7ee81bde2340,468,RegExpPrototypeSplit
code-creation,Builtin,2,4275,0x7ee81bde2540,2236,RegExpPrototypeTest
code-creation,Builtin,2,4277,0x7ee81bde2e00,1284,RegExpPrototypeTestFast
code-creation,Builtin,2,4278,0x7ee81bde3340,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,4280,0x7ee81bde3440,252,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,4281,0x7ee81bde3540,252,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,4283,0x7ee81bde3640,252,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,4285,0x7ee81bde3740,252,RegExpPrototypeLinearGetter
code-creation,Builtin,2,4286,0x7ee81bde3840,252,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,4288,0x7ee81bde3940,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,4289,0x7ee81bde3a80,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,4291,0x7ee81bde3bc0,252,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,4293,0x7ee81bde3cc0,2556,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,4294,0x7ee81bde46c0,1236,StringPrototypeAt
code-creation,Builtin,2,4296,0x7ee81bde4bc0,3016,StringPrototypeEndsWith
code-creation,Builtin,2,4297,0x7ee81bde57c0,496,CreateHTML
code-creation,Builtin,2,4299,0x7ee81bde59c0,140,StringPrototypeAnchor
code-creation,Builtin,2,4300,0x7ee81bde5a80,120,StringPrototypeBig
code-creation,Builtin,2,4302,0x7ee81bde5b00,120,StringPrototypeBlink
code-creation,Builtin,2,4303,0x7ee81bde5b80,120,StringPrototypeBold
code-creation,Builtin,2,4304,0x7ee81bde5c00,148,StringPrototypeFontcolor
code-creation,Builtin,2,4306,0x7ee81bde5cc0,148,StringPrototypeFontsize
code-creation,Builtin,2,4307,0x7ee81bde5d80,120,StringPrototypeFixed
code-creation,Builtin,2,4309,0x7ee81bde5e00,120,StringPrototypeItalics
code-creation,Builtin,2,4310,0x7ee81bde5e80,148,StringPrototypeLink
code-creation,Builtin,2,4312,0x7ee81bde5f40,120,StringPrototypeSmall
code-creation,Builtin,2,4313,0x7ee81bde5fc0,120,StringPrototypeStrike
code-creation,Builtin,2,4315,0x7ee81bde6040,120,StringPrototypeSub
code-creation,Builtin,2,4316,0x7ee81bde60c0,120,StringPrototypeSup
code-creation,Builtin,2,4318,0x7ee81bde6140,1024,StringPrototypeIncludes
code-creation,Builtin,2,4319,0x7ee81bde6580,648,StringPrototypeIndexOf
code-creation,Builtin,2,4321,0x7ee81bde6840,616,StringPrototypeIsWellFormed
code-creation,Builtin,2,4322,0x7ee81bde6ac0,348,StringPrototypeIterator
code-creation,Builtin,2,4324,0x7ee81bde6c40,1692,StringIteratorPrototypeNext
code-creation,Builtin,2,4325,0x7ee81bde7300,1372,StringPrototypeMatch
code-creation,Builtin,2,4327,0x7ee81bde7880,1372,StringPrototypeSearch
code-creation,Builtin,2,4328,0x7ee81bde7e00,768,StringPrototypePadStart
code-creation,Builtin,2,4330,0x7ee81bde8140,772,StringPrototypePadEnd
code-creation,Builtin,2,4334,0x7ee81bde8480,120,StringRepeat
code-creation,Builtin,2,4335,0x7ee81bde8500,408,StringPrototypeRepeat
code-creation,Builtin,2,4337,0x7ee81bde86c0,10504,StringPrototypeReplaceAll
code-creation,Builtin,2,4338,0x7ee81bdeb000,3212,StringPrototypeSlice
code-creation,Builtin,2,4340,0x7ee81bdebcc0,3016,StringPrototypeStartsWith
code-creation,Builtin,2,4341,0x7ee81bdec8c0,3140,StringPrototypeSubstr
code-creation,Builtin,2,4343,0x7ee81bded540,3064,StringPrototypeSubstring
code-creation,Builtin,2,4344,0x7ee81bdee140,924,StringPrototypeToWellFormed
code-creation,Builtin,2,4346,0x7ee81bdee500,6444,StringPrototypeTrim
code-creation,Builtin,2,4347,0x7ee81bdefe40,5932,StringPrototypeTrimStart
code-creation,Builtin,2,4349,0x7ee81bdf1580,5504,StringPrototypeTrimEnd
code-creation,Builtin,2,4350,0x7ee81bdf2b40,164,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,4352,0x7ee81bdf2c00,160,SymbolPrototypeToPrimitive
code-creation,Builtin,2,4353,0x7ee81bdf2cc0,180,SymbolPrototypeToString
code-creation,Builtin,2,4355,0x7ee81bdf2d80,160,SymbolPrototypeValueOf
code-creation,Builtin,2,4356,0x7ee81bdf2e40,1116,TypedArrayPrototypeAt
code-creation,Builtin,2,4358,0x7ee81bdf32c0,10528,CreateTypedArray
code-creation,Builtin,2,4359,0x7ee81bdf5c00,1720,TypedArrayPrototypeEvery
code-creation,Builtin,2,4361,0x7ee81bdf62c0,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,4362,0x7ee81bdf6480,4440,TypedArrayPrototypeFilter
code-creation,Builtin,2,4364,0x7ee81bdf7600,1720,TypedArrayPrototypeFind
code-creation,Builtin,2,4365,0x7ee81bdf7cc0,1728,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,4367,0x7ee81bdf83c0,1728,TypedArrayPrototypeFindLast
code-creation,Builtin,2,4368,0x7ee81bdf8ac0,1736,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,4370,0x7ee81bdf91c0,1588,TypedArrayPrototypeForEach
code-creation,Builtin,2,4372,0x7ee81bdf9800,3048,TypedArrayFrom
code-creation,Builtin,2,4373,0x7ee81bdfa400,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,4374,0x7ee81bdfa5c0,1388,TypedArrayOf
code-creation,Builtin,2,4376,0x7ee81bdfab40,1672,TypedArrayPrototypeReduce
code-creation,Builtin,2,4377,0x7ee81bdfb200,1672,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,4379,0x7ee81bdfb8c0,3304,TypedArrayPrototypeSet
code-creation,Builtin,2,4380,0x7ee81bdfc5c0,4096,TypedArrayPrototypeSlice
code-creation,Builtin,2,4382,0x7ee81bdfd600,1724,TypedArrayPrototypeSome
code-creation,Builtin,2,4383,0x7ee81bdfdcc0,892,TypedArrayMergeSort
code-creation,Builtin,2,4385,0x7ee81bdfe040,2252,TypedArrayPrototypeSort
code-creation,Builtin,2,4386,0x7ee81bdfe940,3088,TypedArrayPrototypeSubArray
code-creation,Builtin,2,4388,0x7ee81bdff580,1740,TypedArrayPrototypeToReversed
code-creation,Builtin,2,4390,0x7ee81bdffc80,3244,TypedArrayPrototypeToSorted
code-creation,Builtin,2,4391,0x7ee81be00940,412,TypedArrayPrototypeValues
code-creation,Builtin,2,4393,0x7ee81be00b00,3144,TypedArrayPrototypeWith
code-creation,Builtin,2,4394,0x7ee81be01780,1104,WeakRefConstructor
code-creation,Builtin,2,4396,0x7ee81be01c00,188,WeakRefDeref
code-creation,Builtin,2,4397,0x7ee81be01cc0,644,NewSloppyArgumentsElements
code-creation,Builtin,2,4398,0x7ee81be01f80,296,NewStrictArgumentsElements
code-creation,Builtin,2,4400,0x7ee81be020c0,320,NewRestArgumentsElements
code-creation,Builtin,2,4402,0x7ee81be02240,1400,FastNewSloppyArguments
code-creation,Builtin,2,4403,0x7ee81be027c0,508,FastNewStrictArguments
code-creation,Builtin,2,4405,0x7ee81be029c0,552,FastNewRestArguments
code-creation,Builtin,2,4406,0x7ee81be02c00,664,StringSlowFlatten
code-creation,Builtin,2,4408,0x7ee81be02ec0,1980,StringIndexOf
code-creation,Builtin,2,4409,0x7ee81be03680,2028,TestTurbofanType
code-creation,Builtin,2,4410,0x7ee81be03e80,192,CheckTurbofanType
code-creation,Builtin,2,4412,0x7ee81be03f80,520,CheckTurboshaftWord32Type
code-creation,Builtin,2,4413,0x7ee81be041c0,952,CheckTurboshaftWord64Type
code-creation,Builtin,2,4415,0x7ee81be04580,652,CheckTurboshaftFloat32Type
code-creation,Builtin,2,4416,0x7ee81be04840,620,CheckTurboshaftFloat64Type
code-creation,Builtin,2,4418,0x7ee81be04ac0,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,4429,0x7ee81be04b00,20,TestHelperPlus1
code-creation,Builtin,2,4431,0x7ee81be04b40,20,TestHelperPlus2
code-creation,Builtin,2,4432,0x7ee81be04b80,92,NewSmiBox
code-creation,Builtin,2,4434,0x7ee81be04c00,24,ReturnTwoValues
code-creation,Builtin,2,4435,0x7ee81be04c40,28,Load_FastSmiElements_0
code-creation,Builtin,2,4436,0x7ee81be04c80,28,Load_FastObjectElements_0
code-creation,Builtin,2,4438,0x7ee81be04cc0,140,Load_FastDoubleElements_0
code-creation,Builtin,2,4440,0x7ee81be04d80,28,Store_FastSmiElements_0
code-creation,Builtin,2,4441,0x7ee81be04dc0,92,Store_FastObjectElements_0
code-creation,Builtin,2,4443,0x7ee81be04e40,44,Store_FastDoubleElements_0
code-creation,Builtin,2,4444,0x7ee81be04e80,36,Delete_FastSmiElements_0
code-creation,Builtin,2,4446,0x7ee81be04ec0,36,Delete_FastObjectElements_0
code-creation,Builtin,2,4447,0x7ee81be04f00,40,Delete_FastDoubleElements_0
code-creation,Builtin,2,4449,0x7ee81be04f40,200,SortCompareDefault
code-creation,Builtin,2,4450,0x7ee81be05040,96,SortCompareUserFn
code-creation,Builtin,2,4452,0x7ee81be050c0,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,4453,0x7ee81be05100,296,Copy
code-creation,Builtin,2,4455,0x7ee81be05240,5676,MergeAt
code-creation,Builtin,2,4456,0x7ee81be06880,824,GallopLeft
code-creation,Builtin,2,4458,0x7ee81be06bc0,868,GallopRight
code-creation,Builtin,2,4459,0x7ee81be06f40,3712,ArrayTimSort
code-creation,Builtin,2,4460,0x7ee81be07e00,2020,ArrayPrototypeSort
code-creation,Builtin,2,4462,0x7ee81be08600,3532,StringFastLocaleCompare
code-creation,Builtin,2,4463,0x7ee81be09400,92,WasmInt32ToHeapNumber
code-creation,Builtin,2,4465,0x7ee81be09480,32,WasmFuncRefToJS
code-creation,Builtin,2,4466,0x7ee81be094c0,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,4468,0x7ee81be09540,76,WasmTaggedToFloat64
code-creation,Builtin,2,4469,0x7ee81be095c0,72,WasmMemoryGrow
code-creation,Builtin,2,4471,0x7ee81be09640,88,WasmTableInit
code-creation,Builtin,2,4472,0x7ee81be096c0,88,WasmTableCopy
code-creation,Builtin,2,4474,0x7ee81be09740,76,WasmTableFill
code-creation,Builtin,2,4475,0x7ee81be097c0,68,WasmTableGrow
code-creation,Builtin,2,4476,0x7ee81be09840,76,WasmTableGet
code-creation,Builtin,2,4478,0x7ee81be098c0,148,WasmTableSet
code-creation,Builtin,2,4479,0x7ee81be09980,144,WasmTableGetFuncRef
code-creation,Builtin,2,4481,0x7ee81be09a40,104,WasmTableSetFuncRef
code-creation,Builtin,2,4482,0x7ee81be09ac0,80,WasmRefFunc
code-creation,Builtin,2,4484,0x7ee81be09b40,136,WasmAllocateFixedArray
code-creation,Builtin,2,4485,0x7ee81be09c00,44,WasmThrow
code-creation,Builtin,2,4486,0x7ee81be09c40,56,WasmRethrow
code-creation,Builtin,2,4488,0x7ee81be09c80,44,WasmRethrowExplicitContext
code-creation,Builtin,2,4489,0x7ee81be09cc0,44,WasmTriggerTierUp
code-creation,Builtin,2,4491,0x7ee81be09d00,32,WasmStackGuard
code-creation,Builtin,2,4492,0x7ee81be09d40,32,WasmStackOverflow
code-creation,Builtin,2,4494,0x7ee81be09d80,40,WasmTraceMemory
code-creation,Builtin,2,4495,0x7ee81be09dc0,32,WasmTraceEnter
code-creation,Builtin,2,4497,0x7ee81be09e00,40,WasmTraceExit
code-creation,Builtin,2,4498,0x7ee81be09e40,340,WasmAllocateJSArray
code-creation,Builtin,2,4500,0x7ee81be09fc0,100,WasmAllocateStructWithRtt
code-creation,Builtin,2,4501,0x7ee81be0a040,128,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,4503,0x7ee81be0a100,84,WasmArrayNewSegment
code-creation,Builtin,2,4504,0x7ee81be0a180,136,WasmArrayCopyWithChecks
code-creation,Builtin,2,4506,0x7ee81be0a240,100,WasmArrayCopy
code-creation,Builtin,2,4507,0x7ee81be0a2c0,260,WasmAllocateObjectWrapper
code-creation,Builtin,2,4509,0x7ee81be0a400,48,WasmSubtypeCheck
code-creation,Builtin,2,4510,0x7ee81be0a440,8,WasmInt32ToNumber
code-creation,Builtin,2,4512,0x7ee81be0a480,108,WasmUint32ToNumber
code-creation,Builtin,2,4513,0x7ee81be0a500,140,UintPtr53ToNumber
code-creation,Builtin,2,4514,0x7ee81be0a5c0,92,WasmAtomicNotify
code-creation,Builtin,2,4516,0x7ee81be0a640,100,WasmI32AtomicWait
code-creation,Builtin,2,4518,0x7ee81be0a6c0,88,WasmI64AtomicWait
code-creation,Builtin,2,4521,0x7ee81be0a740,1216,CallRefIC
code-creation,Builtin,2,4523,0x7ee81be0ac40,1572,WasmGetOwnProperty
code-creation,Builtin,2,4524,0x7ee81be0b280,76,WasmTrap
code-creation,Builtin,2,4526,0x7ee81be0b300,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,4527,0x7ee81be0b340,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,4529,0x7ee81be0b380,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,4575,0x7ee81be0b3c0,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,4577,0x7ee81be0b400,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,4579,0x7ee81be0b440,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,4580,0x7ee81be0b480,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,4582,0x7ee81be0b4c0,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,4583,0x7ee81be0b500,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,4585,0x7ee81be0b540,16,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,4587,0x7ee81be0b580,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,4588,0x7ee81be0b5c0,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,4590,0x7ee81be0b600,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,4591,0x7ee81be0b640,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,4593,0x7ee81be0b680,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,4594,0x7ee81be0b6c0,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,4596,0x7ee81be0b700,16,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,4598,0x7ee81be0b740,1016,ExperimentalWasmConvertArrayToString
code-creation,Builtin,2,4599,0x7ee81be0bb40,832,ExperimentalWasmConvertStringToArray
code-creation,Builtin,2,4601,0x7ee81be0bec0,148,WasmStringNewWtf8
code-creation,Builtin,2,4602,0x7ee81be0bf80,104,WasmStringNewWtf8Array
code-creation,Builtin,2,4604,0x7ee81be0c000,140,WasmStringNewWtf16
code-creation,Builtin,2,4605,0x7ee81be0c0c0,868,WasmStringNewWtf16Array
code-creation,Builtin,2,4607,0x7ee81be0c440,52,WasmStringAsWtf16
code-creation,Builtin,2,4608,0x7ee81be0c480,48,WasmStringConst
code-creation,Builtin,2,4610,0x7ee81be0c4c0,108,WasmStringMeasureUtf8
code-creation,Builtin,2,4611,0x7ee81be0c540,108,WasmStringMeasureWtf8
code-creation,Builtin,2,4613,0x7ee81be0c5c0,156,WasmStringEncodeWtf8
code-creation,Builtin,2,4614,0x7ee81be0c680,148,WasmStringEncodeWtf8Array
code-creation,Builtin,2,4616,0x7ee81be0c740,104,WasmStringEncodeWtf16
code-creation,Builtin,2,4617,0x7ee81be0c7c0,724,WasmStringEncodeWtf16Array
code-creation,Builtin,2,4619,0x7ee81be0cac0,68,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,4620,0x7ee81be0cb40,20,WasmStringConcat
code-creation,Builtin,2,4622,0x7ee81be0cb80,60,WasmStringEqual
code-creation,Builtin,2,4623,0x7ee81be0cbc0,140,WasmStringIsUSVSequence
code-creation,Builtin,2,4624,0x7ee81be0cc80,40,WasmStringAsWtf8
code-creation,Builtin,2,4626,0x7ee81be0ccc0,224,WasmStringViewWtf8Advance
code-creation,Builtin,2,4627,0x7ee81be0cdc0,168,WasmStringViewWtf8Encode
code-creation,Builtin,2,4629,0x7ee81be0ce80,172,WasmStringViewWtf8Slice
code-creation,Builtin,2,4630,0x7ee81be0cf40,512,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,4632,0x7ee81be0d180,140,WasmStringViewWtf16Encode
code-creation,Builtin,2,4633,0x7ee81be0d240,2420,WasmStringViewWtf16Slice
code-creation,Builtin,2,4635,0x7ee81be0dbc0,100,WasmStringAsIter
code-creation,Builtin,2,4636,0x7ee81be0dc40,1124,WasmStringViewIterNext
code-creation,Builtin,2,4638,0x7ee81be0e0c0,1224,WasmStringViewIterAdvance
code-creation,Builtin,2,4639,0x7ee81be0e5c0,1204,WasmStringViewIterRewind
code-creation,Builtin,2,4641,0x7ee81be0ea80,3252,WasmStringViewIterSlice
code-creation,Builtin,2,4642,0x7ee81be0f740,80,WasmStringFromCodePoint
code-creation,Builtin,2,4644,0x7ee81be0f7c0,36,WasmStringHash
code-creation,Builtin,2,4645,0x7ee81be0f800,60,WasmExternInternalize
code-creation,Builtin,2,4647,0x7ee81be0f840,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,4648,0x7ee81be0f900,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,4650,0x7ee81be0f940,108,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,4652,0x7ee81be0f9c0,104,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,4656,0x7ee81be0fa40,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,4658,0x7ee81be0fa80,208,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,4660,0x7ee81be0fb80,236,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,4661,0x7ee81be0fc80,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,4663,0x7ee81be0fcc0,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,4665,0x7ee81be0fd00,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,4666,0x7ee81be0fd40,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,4668,0x7ee81be0fd80,124,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,4670,0x7ee81be0fe00,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,4671,0x7ee81be0fe40,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,4673,0x7ee81be0fe80,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,4674,0x7ee81be0fec0,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,4676,0x7ee81be0ff00,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,4678,0x7ee81be0ff40,3500,Load_GenericElementsAccessor_0
code-creation,Builtin,2,4680,0x7ee81be10d00,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,4681,0x7ee81be10d40,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,4683,0x7ee81be10d80,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,4684,0x7ee81be10dc0,176,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,4686,0x7ee81be10e80,544,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,4688,0x7ee81be110c0,108,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,4689,0x7ee81be11140,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,4691,0x7ee81be11180,508,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,4693,0x7ee81be11380,104,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,4694,0x7ee81be11400,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,4696,0x7ee81be11440,504,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,4698,0x7ee81be11640,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,4700,0x7ee81be11680,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,4701,0x7ee81be116c0,964,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,4703,0x7ee81be11ac0,208,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,4705,0x7ee81be11bc0,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,4707,0x7ee81be11c00,552,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,4708,0x7ee81be11e40,236,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,4710,0x7ee81be11f40,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,4712,0x7ee81be11f80,552,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,4714,0x7ee81be121c0,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,4715,0x7ee81be12200,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,4717,0x7ee81be12240,544,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,4719,0x7ee81be12480,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,4720,0x7ee81be124c0,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,4722,0x7ee81be12500,544,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,4724,0x7ee81be12740,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,4725,0x7ee81be12780,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,4727,0x7ee81be127c0,548,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,4729,0x7ee81be12a00,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,4730,0x7ee81be12a40,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,4732,0x7ee81be12a80,548,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,4734,0x7ee81be12cc0,124,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,4779,0x7ee81be12d40,176,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,4781,0x7ee81be12e00,544,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,4783,0x7ee81be13040,12,CollatorConstructor
code-creation,Builtin,2,4784,0x7ee81be13080,12,CollatorInternalCompare
code-creation,Builtin,2,4786,0x7ee81be130c0,12,CollatorPrototypeCompare
code-creation,Builtin,2,4787,0x7ee81be13100,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,4789,0x7ee81be13140,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,4793,0x7ee81be13180,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,4794,0x7ee81be131c0,12,DatePrototypeToLocaleString
code-creation,Builtin,2,4796,0x7ee81be13200,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,4798,0x7ee81be13240,12,DateTimeFormatConstructor
tick,0x7ee819b1d9bd,4801,0,0x0,6
code-creation,Builtin,2,4812,0x7ee81be13280,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,4814,0x7ee81be132c0,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,4816,0x7ee81be13300,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,4817,0x7ee81be13340,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,4819,0x7ee81be13380,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,4821,0x7ee81be133c0,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,4822,0x7ee81be13400,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,4824,0x7ee81be13440,12,DisplayNamesConstructor
code-creation,Builtin,2,4825,0x7ee81be13480,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,4827,0x7ee81be134c0,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,4829,0x7ee81be13500,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,4830,0x7ee81be13540,12,DurationFormatConstructor
code-creation,Builtin,2,4832,0x7ee81be13580,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,4833,0x7ee81be135c0,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,4835,0x7ee81be13600,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,4837,0x7ee81be13640,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,4838,0x7ee81be13680,12,IntlGetCanonicalLocales
code-creation,Builtin,2,4840,0x7ee81be136c0,12,IntlSupportedValuesOf
code-creation,Builtin,2,4841,0x7ee81be13700,12,ListFormatConstructor
code-creation,Builtin,2,4843,0x7ee81be13740,200,ListFormatPrototypeFormat
code-creation,Builtin,2,4844,0x7ee81be13840,200,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,4846,0x7ee81be13940,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,4847,0x7ee81be13980,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,4849,0x7ee81be139c0,12,LocaleConstructor
code-creation,Builtin,2,4851,0x7ee81be13a00,12,LocalePrototypeBaseName
code-creation,Builtin,2,4852,0x7ee81be13a40,12,LocalePrototypeCalendar
code-creation,Builtin,2,4854,0x7ee81be13a80,12,LocalePrototypeCalendars
code-creation,Builtin,2,4855,0x7ee81be13ac0,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,4857,0x7ee81be13b00,12,LocalePrototypeCollation
code-creation,Builtin,2,4858,0x7ee81be13b40,12,LocalePrototypeCollations
code-creation,Builtin,2,4860,0x7ee81be13b80,12,LocalePrototypeHourCycle
code-creation,Builtin,2,4861,0x7ee81be13bc0,12,LocalePrototypeHourCycles
code-creation,Builtin,2,4863,0x7ee81be13c00,12,LocalePrototypeLanguage
code-creation,Builtin,2,4864,0x7ee81be13c40,12,LocalePrototypeMaximize
code-creation,Builtin,2,4866,0x7ee81be13c80,12,LocalePrototypeMinimize
code-creation,Builtin,2,4867,0x7ee81be13cc0,12,LocalePrototypeNumeric
code-creation,Builtin,2,4869,0x7ee81be13d00,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,4870,0x7ee81be13d40,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,4872,0x7ee81be13d80,12,LocalePrototypeRegion
code-creation,Builtin,2,4873,0x7ee81be13dc0,12,LocalePrototypeScript
code-creation,Builtin,2,4875,0x7ee81be13e00,12,LocalePrototypeTextInfo
code-creation,Builtin,2,4876,0x7ee81be13e40,12,LocalePrototypeTimeZones
code-creation,Builtin,2,4878,0x7ee81be13e80,12,LocalePrototypeToString
code-creation,Builtin,2,4882,0x7ee81be13ec0,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,4884,0x7ee81be13f00,12,NumberFormatConstructor
code-creation,Builtin,2,4885,0x7ee81be13f40,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,4887,0x7ee81be13f80,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,4889,0x7ee81be13fc0,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,4890,0x7ee81be14000,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,4892,0x7ee81be14040,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,4894,0x7ee81be14080,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,4895,0x7ee81be140c0,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,4897,0x7ee81be14100,12,PluralRulesConstructor
code-creation,Builtin,2,4898,0x7ee81be14140,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,4913,0x7ee81be14180,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,4914,0x7ee81be141c0,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,4916,0x7ee81be14200,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,4917,0x7ee81be14240,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,4919,0x7ee81be14280,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,4921,0x7ee81be142c0,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,4922,0x7ee81be14300,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,4924,0x7ee81be14340,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,4926,0x7ee81be14380,12,SegmenterConstructor
code-creation,Builtin,2,4927,0x7ee81be143c0,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,4929,0x7ee81be14400,12,SegmenterPrototypeSegment
code-creation,Builtin,2,4930,0x7ee81be14440,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,4932,0x7ee81be14480,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,4934,0x7ee81be144c0,12,SegmentsPrototypeContaining
code-creation,Builtin,2,4935,0x7ee81be14500,12,SegmentsPrototypeIterator
code-creation,Builtin,2,4937,0x7ee81be14540,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,4938,0x7ee81be14580,1160,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,4940,0x7ee81be14a40,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,4942,0x7ee81be14a80,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,4943,0x7ee81be14b80,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,4945,0x7ee81be14bc0,648,StringToLowerCaseIntl
code-creation,Builtin,2,4946,0x7ee81be14e80,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,4948,0x7ee81be14ec0,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,4950,0x7ee81be14f00,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,4951,0x7ee81be14f40,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,4953,0x7ee81be14f80,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,4955,0x7ee81be14fc0,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,4956,0x7ee81be15000,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,4958,0x7ee81be15040,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,4960,0x7ee81be15080,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,4961,0x7ee81be150c0,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,4963,0x7ee81be15100,12,V8BreakIteratorConstructor
code-creation,Builtin,2,4965,0x7ee81be15140,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,4966,0x7ee81be15180,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,4968,0x7ee81be151c0,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,4969,0x7ee81be15200,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,4971,0x7ee81be15240,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,4972,0x7ee81be15280,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,4974,0x7ee81be152c0,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,4976,0x7ee81be15300,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,4977,0x7ee81be15340,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,4982,0x7ee81be15380,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,4984,0x7ee81be153c0,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,4985,0x7ee81be15400,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,4988,0x7ee81be15440,24,Wide
code-creation,BytecodeHandler,0,4990,0x7ee81be15480,24,ExtraWide
code-creation,BytecodeHandler,0,4991,0x7ee81be154c0,104,DebugBreakWide
code-creation,BytecodeHandler,0,4993,0x7ee81be15540,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,4995,0x7ee81be155c0,164,DebugBreak0
code-creation,BytecodeHandler,0,4996,0x7ee81be15680,104,DebugBreak1
code-creation,BytecodeHandler,0,4997,0x7ee81be15700,104,DebugBreak2
code-creation,BytecodeHandler,0,4999,0x7ee81be15780,104,DebugBreak3
code-creation,BytecodeHandler,0,5000,0x7ee81be15800,104,DebugBreak4
code-creation,BytecodeHandler,0,5002,0x7ee81be15880,104,DebugBreak5
code-creation,BytecodeHandler,0,5003,0x7ee81be15900,104,DebugBreak6
code-creation,BytecodeHandler,0,5005,0x7ee81be15980,32,Ldar
code-creation,BytecodeHandler,0,5006,0x7ee81be159c0,56,LdaZero
code-creation,BytecodeHandler,0,5007,0x7ee81be15a00,64,LdaSmi
code-creation,BytecodeHandler,0,5009,0x7ee81be15a80,64,LdaUndefined
code-creation,BytecodeHandler,0,5010,0x7ee81be15b00,64,LdaNull
code-creation,BytecodeHandler,0,5011,0x7ee81be15b80,64,LdaTheHole
code-creation,BytecodeHandler,0,5013,0x7ee81be15c00,24,LdaTrue
code-creation,BytecodeHandler,0,5014,0x7ee81be15c40,24,LdaFalse
code-creation,BytecodeHandler,0,5015,0x7ee81be15c80,64,LdaConstant
code-creation,BytecodeHandler,0,5017,0x7ee81be15d00,124,LdaContextSlot
code-creation,BytecodeHandler,0,5018,0x7ee81be15d80,124,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,5020,0x7ee81be15e00,72,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,5022,0x7ee81be15e80,72,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,5024,0x7ee81be15f00,32,Star
code-creation,BytecodeHandler,0,5025,0x7ee81be15f40,48,Mov
code-creation,BytecodeHandler,0,5026,0x7ee81be15f80,40,PushContext
code-creation,BytecodeHandler,0,5028,0x7ee81be15fc0,36,PopContext
code-creation,BytecodeHandler,0,5029,0x7ee81be16000,56,TestReferenceEqual
code-creation,BytecodeHandler,0,5030,0x7ee81be16040,60,TestUndetectable
code-creation,BytecodeHandler,0,5032,0x7ee81be16080,44,TestNull
code-creation,BytecodeHandler,0,5034,0x7ee81be160c0,44,TestUndefined
code-creation,BytecodeHandler,0,5035,0x7ee81be16100,368,TestTypeOf
code-creation,BytecodeHandler,0,5036,0x7ee81be16280,5672,LdaGlobal
code-creation,BytecodeHandler,0,5038,0x7ee81be178c0,4440,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,5039,0x7ee81be18a40,160,StaGlobal
code-creation,BytecodeHandler,0,5041,0x7ee81be18b00,156,StaContextSlot
code-creation,BytecodeHandler,0,5042,0x7ee81be18bc0,108,StaCurrentContextSlot
code-creation,BytecodeHandler,0,5044,0x7ee81be18c40,124,LdaLookupSlot
code-creation,BytecodeHandler,0,5045,0x7ee81be18cc0,256,LdaLookupContextSlot
code-creation,BytecodeHandler,0,5047,0x7ee81be18e00,4752,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,5048,0x7ee81be1a0c0,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,5050,0x7ee81be1a140,256,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,5051,0x7ee81be1a280,4660,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,5053,0x7ee81be1b4c0,220,StaLookupSlot
code-creation,BytecodeHandler,0,5055,0x7ee81be1b5c0,5348,GetNamedProperty
code-creation,BytecodeHandler,0,5056,0x7ee81be1cac0,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,5058,0x7ee81be1cb80,200,GetKeyedProperty
code-creation,BytecodeHandler,0,5059,0x7ee81be1cc80,168,LdaModuleVariable
code-creation,BytecodeHandler,0,5061,0x7ee81be1cd40,300,StaModuleVariable
code-creation,BytecodeHandler,0,5062,0x7ee81be1ce80,176,SetNamedProperty
code-creation,BytecodeHandler,0,5064,0x7ee81be1cf40,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,5065,0x7ee81be1d000,168,SetKeyedProperty
code-creation,BytecodeHandler,0,5067,0x7ee81be1d0c0,184,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,5071,0x7ee81be1d180,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,5072,0x7ee81be1d240,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,5074,0x7ee81be1d340,1504,Add
code-creation,BytecodeHandler,0,5075,0x7ee81be1d940,1472,Sub
code-creation,BytecodeHandler,0,5077,0x7ee81be1df40,1592,Mul
code-creation,BytecodeHandler,0,5078,0x7ee81be1e580,1660,Div
code-creation,BytecodeHandler,0,5080,0x7ee81be1ec00,1608,Mod
code-creation,BytecodeHandler,0,5081,0x7ee81be1f280,956,Exp
code-creation,BytecodeHandler,0,5083,0x7ee81be1f640,1796,BitwiseOr
code-creation,BytecodeHandler,0,5084,0x7ee81be1fd80,1800,BitwiseXor
code-creation,BytecodeHandler,0,5086,0x7ee81be204c0,1796,BitwiseAnd
code-creation,BytecodeHandler,0,5087,0x7ee81be20c00,1216,ShiftLeft
code-creation,BytecodeHandler,0,5088,0x7ee81be21100,1216,ShiftRight
code-creation,BytecodeHandler,0,5090,0x7ee81be21600,1288,ShiftRightLogical
code-creation,BytecodeHandler,0,5091,0x7ee81be21b40,1388,AddSmi
code-creation,BytecodeHandler,0,5093,0x7ee81be220c0,1356,SubSmi
code-creation,BytecodeHandler,0,5094,0x7ee81be22640,1432,MulSmi
code-creation,BytecodeHandler,0,5095,0x7ee81be22c00,1572,DivSmi
code-creation,BytecodeHandler,0,5097,0x7ee81be23240,1440,ModSmi
code-creation,BytecodeHandler,0,5098,0x7ee81be23800,844,ExpSmi
code-creation,BytecodeHandler,0,5099,0x7ee81be23b80,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,5101,0x7ee81be23d80,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,5102,0x7ee81be23f80,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,5104,0x7ee81be24180,508,ShiftLeftSmi
code-creation,BytecodeHandler,0,5105,0x7ee81be24380,496,ShiftRightSmi
code-creation,BytecodeHandler,0,5106,0x7ee81be24580,784,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,5108,0x7ee81be248c0,644,Inc
code-creation,BytecodeHandler,0,5110,0x7ee81be24b80,644,Dec
code-creation,BytecodeHandler,0,5111,0x7ee81be24e40,632,Negate
code-creation,BytecodeHandler,0,5112,0x7ee81be250c0,504,BitwiseNot
code-creation,BytecodeHandler,0,5114,0x7ee81be252c0,124,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,5115,0x7ee81be25340,44,LogicalNot
code-creation,BytecodeHandler,0,5117,0x7ee81be25380,204,TypeOf
code-creation,BytecodeHandler,0,5118,0x7ee81be25480,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,5120,0x7ee81be25500,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,5121,0x7ee81be25580,40,GetSuperConstructor
code-creation,BytecodeHandler,0,5123,0x7ee81be255c0,352,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,5125,0x7ee81be25740,1100,CallAnyReceiver
code-creation,BytecodeHandler,0,5126,0x7ee81be25bc0,1100,CallProperty
code-creation,BytecodeHandler,0,5128,0x7ee81be26040,1012,CallProperty0
code-creation,BytecodeHandler,0,5129,0x7ee81be26440,1024,CallProperty1
code-creation,BytecodeHandler,0,5130,0x7ee81be26880,1036,CallProperty2
code-creation,BytecodeHandler,0,5132,0x7ee81be26cc0,984,CallUndefinedReceiver
code-creation,BytecodeHandler,0,5133,0x7ee81be270c0,1036,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,5135,0x7ee81be27500,1024,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,5136,0x7ee81be27940,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,5138,0x7ee81be27d80,1100,CallWithSpread
code-creation,BytecodeHandler,0,5139,0x7ee81be28200,128,CallRuntime
code-creation,BytecodeHandler,0,5141,0x7ee81be282c0,164,CallRuntimeForPair
code-creation,BytecodeHandler,0,5142,0x7ee81be28380,80,CallJSRuntime
code-creation,BytecodeHandler,0,5144,0x7ee81be28400,1328,InvokeIntrinsic
code-creation,BytecodeHandler,0,5145,0x7ee81be28940,1008,Construct
code-creation,BytecodeHandler,0,5147,0x7ee81be28d40,512,ConstructWithSpread
code-creation,BytecodeHandler,0,5148,0x7ee81be28f80,2180,TestEqual
code-creation,BytecodeHandler,0,5150,0x7ee81be29840,1336,TestEqualStrict
code-creation,BytecodeHandler,0,5151,0x7ee81be29d80,1808,TestLessThan
code-creation,BytecodeHandler,0,5152,0x7ee81be2a4c0,1808,TestGreaterThan
code-creation,BytecodeHandler,0,5154,0x7ee81be2ac00,1808,TestLessThanOrEqual
code-creation,BytecodeHandler,0,5155,0x7ee81be2b340,1808,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,5159,0x7ee81be2ba80,884,TestInstanceOf
code-creation,BytecodeHandler,0,5161,0x7ee81be2be00,156,TestIn
code-creation,BytecodeHandler,0,5162,0x7ee81be2bec0,116,ToName
code-creation,BytecodeHandler,0,5163,0x7ee81be2bf40,220,ToNumber
code-creation,BytecodeHandler,0,5165,0x7ee81be2c040,244,ToNumeric
code-creation,BytecodeHandler,0,5166,0x7ee81be2c140,116,ToObject
code-creation,BytecodeHandler,0,5167,0x7ee81be2c1c0,124,ToString
code-creation,BytecodeHandler,0,5169,0x7ee81be2c240,396,CreateRegExpLiteral
code-creation,BytecodeHandler,0,5170,0x7ee81be2c400,1560,CreateArrayLiteral
code-creation,BytecodeHandler,0,5172,0x7ee81be2ca40,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,5173,0x7ee81be2cac0,768,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,5175,0x7ee81be2ce00,2388,CreateObjectLiteral
code-creation,BytecodeHandler,0,5176,0x7ee81be2d780,236,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,5178,0x7ee81be2d880,172,CloneObject
code-creation,BytecodeHandler,0,5180,0x7ee81be2d940,204,GetTemplateObject
code-creation,BytecodeHandler,0,5181,0x7ee81be2da40,336,CreateClosure
code-creation,BytecodeHandler,0,5183,0x7ee81be2dbc0,116,CreateBlockContext
code-creation,BytecodeHandler,0,5184,0x7ee81be2dc40,132,CreateCatchContext
code-creation,BytecodeHandler,0,5186,0x7ee81be2dd00,292,CreateFunctionContext
code-creation,BytecodeHandler,0,5187,0x7ee81be2de40,292,CreateEvalContext
code-creation,BytecodeHandler,0,5189,0x7ee81be2df80,132,CreateWithContext
code-creation,BytecodeHandler,0,5190,0x7ee81be2e040,1556,CreateMappedArguments
code-creation,BytecodeHandler,0,5191,0x7ee81be2e680,572,CreateUnmappedArguments
code-creation,BytecodeHandler,0,5193,0x7ee81be2e8c0,624,CreateRestParameter
code-creation,BytecodeHandler,0,5195,0x7ee81be2eb40,868,JumpLoop
code-creation,BytecodeHandler,0,5196,0x7ee81be2eec0,44,Jump
code-creation,BytecodeHandler,0,5197,0x7ee81be2ef00,56,JumpConstant
code-creation,BytecodeHandler,0,5199,0x7ee81be2ef40,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,5200,0x7ee81be2efc0,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,5202,0x7ee81be2f040,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,5204,0x7ee81be2f0c0,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,5205,0x7ee81be2f140,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,5207,0x7ee81be2f1c0,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,5208,0x7ee81be2f240,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,5210,0x7ee81be2f2c0,92,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,5211,0x7ee81be2f340,164,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,5213,0x7ee81be2f400,160,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,5215,0x7ee81be2f4c0,148,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,5216,0x7ee81be2f580,148,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,5218,0x7ee81be2f640,68,JumpIfTrue
code-creation,BytecodeHandler,0,5219,0x7ee81be2f6c0,68,JumpIfFalse
code-creation,BytecodeHandler,0,5220,0x7ee81be2f740,68,JumpIfNull
code-creation,BytecodeHandler,0,5222,0x7ee81be2f7c0,68,JumpIfNotNull
code-creation,BytecodeHandler,0,5223,0x7ee81be2f840,68,JumpIfUndefined
code-creation,BytecodeHandler,0,5225,0x7ee81be2f8c0,68,JumpIfNotUndefined
code-creation,BytecodeHandler,0,5226,0x7ee81be2f940,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,5228,0x7ee81be2f9c0,80,JumpIfJSReceiver
code-creation,BytecodeHandler,0,5229,0x7ee81be2fa40,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,5231,0x7ee81be2fac0,472,ForInEnumerate
code-creation,BytecodeHandler,0,5232,0x7ee81be2fcc0,260,ForInPrepare
code-creation,BytecodeHandler,0,5234,0x7ee81be2fe00,64,ForInContinue
code-creation,BytecodeHandler,0,5235,0x7ee81be2fe80,260,ForInNext
code-creation,BytecodeHandler,0,5236,0x7ee81be2ffc0,48,ForInStep
code-creation,BytecodeHandler,0,5238,0x7ee81be30000,36,SetPendingMessage
code-creation,BytecodeHandler,0,5239,0x7ee81be30040,116,Throw
code-creation,BytecodeHandler,0,5241,0x7ee81be300c0,116,ReThrow
code-creation,BytecodeHandler,0,5247,0x7ee81be30140,112,Return
code-creation,BytecodeHandler,0,5248,0x7ee81be301c0,188,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,5250,0x7ee81be30280,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,5251,0x7ee81be30340,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,5253,0x7ee81be30400,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,5255,0x7ee81be304c0,124,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,5256,0x7ee81be30540,508,SuspendGenerator
code-creation,BytecodeHandler,0,5258,0x7ee81be30740,140,ResumeGenerator
code-creation,BytecodeHandler,0,5259,0x7ee81be30800,164,GetIterator
code-creation,BytecodeHandler,0,5261,0x7ee81be308c0,116,Debugger
code-creation,BytecodeHandler,0,5262,0x7ee81be30940,124,IncBlockCounter
code-creation,BytecodeHandler,0,5263,0x7ee81be309c0,56,Abort
code-creation,BytecodeHandler,0,5265,0x7ee81be30a00,32,Star0
code-creation,BytecodeHandler,0,5266,0x7ee81be30a40,60,Illegal
code-creation,BytecodeHandler,0,5268,0x7ee81be30a80,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,5270,0x7ee81be30b00,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,5271,0x7ee81be30b80,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,5273,0x7ee81be30c00,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,5275,0x7ee81be30c80,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,5276,0x7ee81be30d00,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,5278,0x7ee81be30d80,32,Ldar.Wide
code-creation,BytecodeHandler,0,5279,0x7ee81be30dc0,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,5281,0x7ee81be30e00,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,5282,0x7ee81be30e40,96,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,5284,0x7ee81be30ec0,96,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,5286,0x7ee81be30f40,44,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,5288,0x7ee81be30f80,44,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,5289,0x7ee81be30fc0,32,Star.Wide
code-creation,BytecodeHandler,0,5291,0x7ee81be31000,48,Mov.Wide
code-creation,BytecodeHandler,0,5292,0x7ee81be31040,40,PushContext.Wide
code-creation,BytecodeHandler,0,5294,0x7ee81be31080,36,PopContext.Wide
code-creation,BytecodeHandler,0,5295,0x7ee81be310c0,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,5297,0x7ee81be31100,4576,LdaGlobal.Wide
code-creation,BytecodeHandler,0,5298,0x7ee81be32300,4496,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,5300,0x7ee81be334c0,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,5302,0x7ee81be33580,156,StaContextSlot.Wide
code-creation,BytecodeHandler,0,5303,0x7ee81be33640,108,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,5305,0x7ee81be336c0,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,5306,0x7ee81be33780,260,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,5308,0x7ee81be338c0,4756,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,5310,0x7ee81be34b80,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,5311,0x7ee81be34c40,260,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,5313,0x7ee81be34d80,4676,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,5315,0x7ee81be36000,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,5317,0x7ee81be36100,5372,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,5318,0x7ee81be37600,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,5320,0x7ee81be37700,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,5321,0x7ee81be377c0,168,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,5323,0x7ee81be37880,304,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,5325,0x7ee81be379c0,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,5326,0x7ee81be37a80,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,5328,0x7ee81be37b40,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,5329,0x7ee81be37c00,188,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,5331,0x7ee81be37cc0,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,5342,0x7ee81be37d80,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,5344,0x7ee81be37e80,1476,Add.Wide
code-creation,BytecodeHandler,0,5345,0x7ee81be38480,1440,Sub.Wide
code-creation,BytecodeHandler,0,5347,0x7ee81be38a40,1560,Mul.Wide
code-creation,BytecodeHandler,0,5348,0x7ee81be39080,1672,Div.Wide
code-creation,BytecodeHandler,0,5349,0x7ee81be39740,1624,Mod.Wide
code-creation,BytecodeHandler,0,5351,0x7ee81be39dc0,980,Exp.Wide
code-creation,BytecodeHandler,0,5352,0x7ee81be3a1c0,1848,BitwiseOr.Wide
code-creation,BytecodeHandler,0,5354,0x7ee81be3a900,1852,BitwiseXor.Wide
code-creation,BytecodeHandler,0,5355,0x7ee81be3b040,1848,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,5357,0x7ee81be3b780,1272,ShiftLeft.Wide
code-creation,BytecodeHandler,0,5358,0x7ee81be3bc80,1272,ShiftRight.Wide
code-creation,BytecodeHandler,0,5360,0x7ee81be3c180,1344,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,5361,0x7ee81be3c700,1368,AddSmi.Wide
code-creation,BytecodeHandler,0,5363,0x7ee81be3cc80,1332,SubSmi.Wide
code-creation,BytecodeHandler,0,5364,0x7ee81be3d1c0,1444,MulSmi.Wide
code-creation,BytecodeHandler,0,5366,0x7ee81be3d780,1588,DivSmi.Wide
code-creation,BytecodeHandler,0,5367,0x7ee81be3ddc0,1456,ModSmi.Wide
code-creation,BytecodeHandler,0,5368,0x7ee81be3e380,840,ExpSmi.Wide
code-creation,BytecodeHandler,0,5370,0x7ee81be3e700,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,5371,0x7ee81be3e900,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,5373,0x7ee81be3eb00,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,5375,0x7ee81be3ed00,516,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,5376,0x7ee81be3ef40,500,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,5378,0x7ee81be3f140,792,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,5379,0x7ee81be3f480,616,Inc.Wide
code-creation,BytecodeHandler,0,5381,0x7ee81be3f700,616,Dec.Wide
code-creation,BytecodeHandler,0,5382,0x7ee81be3f980,636,Negate.Wide
code-creation,BytecodeHandler,0,5383,0x7ee81be3fc00,516,BitwiseNot.Wide
code-creation,BytecodeHandler,0,5385,0x7ee81be3fe40,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,5387,0x7ee81be3ff00,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,5388,0x7ee81be3ff80,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,5390,0x7ee81be3ffc0,356,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,5392,0x7ee81be40140,1104,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,5394,0x7ee81be405c0,1104,CallProperty.Wide
code-creation,BytecodeHandler,0,5395,0x7ee81be40a40,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,5397,0x7ee81be40e40,1028,CallProperty1.Wide
code-creation,BytecodeHandler,0,5398,0x7ee81be41280,1040,CallProperty2.Wide
code-creation,BytecodeHandler,0,5400,0x7ee81be416c0,988,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,5401,0x7ee81be41ac0,1040,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,5403,0x7ee81be41f00,1028,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,5405,0x7ee81be42340,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,5406,0x7ee81be42780,1104,CallWithSpread.Wide
code-creation,BytecodeHandler,0,5408,0x7ee81be42c00,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,5410,0x7ee81be42cc0,172,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,5411,0x7ee81be42d80,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,5413,0x7ee81be42e00,1332,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,5414,0x7ee81be43340,964,Construct.Wide
code-creation,BytecodeHandler,0,5416,0x7ee81be43740,460,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,5417,0x7ee81be43940,2212,TestEqual.Wide
code-creation,BytecodeHandler,0,5419,0x7ee81be44200,1344,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,5420,0x7ee81be44780,1788,TestLessThan.Wide
code-creation,BytecodeHandler,0,5422,0x7ee81be44e80,1788,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,5424,0x7ee81be45580,1788,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,5428,0x7ee81be45c80,1788,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,5429,0x7ee81be46380,888,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,5431,0x7ee81be46700,156,TestIn.Wide
code-creation,BytecodeHandler,0,5432,0x7ee81be467c0,120,ToName.Wide
code-creation,BytecodeHandler,0,5434,0x7ee81be46840,224,ToNumber.Wide
code-creation,BytecodeHandler,0,5435,0x7ee81be46940,248,ToNumeric.Wide
code-creation,BytecodeHandler,0,5437,0x7ee81be46a40,120,ToObject.Wide
code-creation,BytecodeHandler,0,5438,0x7ee81be46ac0,400,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,5440,0x7ee81be46c80,1492,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,5442,0x7ee81be47280,768,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,5443,0x7ee81be475c0,2324,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,5445,0x7ee81be47f00,176,CloneObject.Wide
code-creation,BytecodeHandler,0,5446,0x7ee81be47fc0,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,5448,0x7ee81be48080,336,CreateClosure.Wide
code-creation,BytecodeHandler,0,5450,0x7ee81be48200,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,5451,0x7ee81be48280,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,5453,0x7ee81be48340,292,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,5454,0x7ee81be48480,292,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,5456,0x7ee81be485c0,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,5458,0x7ee81be48680,900,JumpLoop.Wide
code-creation,BytecodeHandler,0,5459,0x7ee81be48a40,44,Jump.Wide
code-creation,BytecodeHandler,0,5460,0x7ee81be48a80,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,5462,0x7ee81be48ac0,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,5464,0x7ee81be48b40,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,5465,0x7ee81be48bc0,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,5467,0x7ee81be48c40,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,5469,0x7ee81be48cc0,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,5470,0x7ee81be48d40,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,5472,0x7ee81be48dc0,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,5474,0x7ee81be48e40,92,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,5475,0x7ee81be48ec0,164,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,5477,0x7ee81be48f80,160,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,5479,0x7ee81be49040,148,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,5480,0x7ee81be49100,148,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,5482,0x7ee81be491c0,68,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,5483,0x7ee81be49240,68,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,5485,0x7ee81be492c0,68,JumpIfNull.Wide
code-creation,BytecodeHandler,0,5486,0x7ee81be49340,68,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,5488,0x7ee81be493c0,68,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,5490,0x7ee81be49440,68,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,5491,0x7ee81be494c0,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,5493,0x7ee81be49540,80,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,5495,0x7ee81be495c0,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,5496,0x7ee81be49640,476,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,5498,0x7ee81be49840,260,ForInPrepare.Wide
code-creation,BytecodeHandler,0,5499,0x7ee81be49980,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,5501,0x7ee81be49a00,264,ForInNext.Wide
code-creation,BytecodeHandler,0,5502,0x7ee81be49b40,48,ForInStep.Wide
code-creation,BytecodeHandler,0,5504,0x7ee81be49b80,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,5505,0x7ee81be49c40,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,5507,0x7ee81be49d00,124,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,5509,0x7ee81be49d80,528,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,5513,0x7ee81be49fc0,140,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,5514,0x7ee81be4a080,168,GetIterator.Wide
code-creation,BytecodeHandler,0,5516,0x7ee81be4a140,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,5518,0x7ee81be4a200,56,Abort.Wide
code-creation,BytecodeHandler,0,5519,0x7ee81be4a240,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,5521,0x7ee81be4a2c0,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,5522,0x7ee81be4a340,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,5524,0x7ee81be4a3c0,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,5525,0x7ee81be4a440,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,5527,0x7ee81be4a4c0,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,5529,0x7ee81be4a540,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,5540,0x7ee81be4a580,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,5542,0x7ee81be4a5c0,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,5544,0x7ee81be4a600,92,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,5545,0x7ee81be4a680,92,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,5547,0x7ee81be4a700,44,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,5549,0x7ee81be4a740,44,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,5551,0x7ee81be4a780,32,Star.ExtraWide
code-creation,BytecodeHandler,0,5552,0x7ee81be4a7c0,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,5554,0x7ee81be4a800,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,5555,0x7ee81be4a840,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,5557,0x7ee81be4a880,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,5558,0x7ee81be4a8c0,4564,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,5560,0x7ee81be4bac0,4484,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,5562,0x7ee81be4cc80,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,5563,0x7ee81be4cd40,152,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,5565,0x7ee81be4ce00,104,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,5567,0x7ee81be4ce80,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,5568,0x7ee81be4cf40,260,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,5570,0x7ee81be4d080,4744,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,5572,0x7ee81be4e340,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,5573,0x7ee81be4e400,260,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,5575,0x7ee81be4e540,4660,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,5577,0x7ee81be4f780,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,5579,0x7ee81be4f880,5356,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,5580,0x7ee81be50d80,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,5582,0x7ee81be50e40,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,5584,0x7ee81be50f00,164,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,5585,0x7ee81be50fc0,300,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,5587,0x7ee81be51100,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,5589,0x7ee81be511c0,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,5591,0x7ee81be51280,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,5592,0x7ee81be51340,184,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,5594,0x7ee81be51400,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,5596,0x7ee81be514c0,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,5597,0x7ee81be515c0,1472,Add.ExtraWide
code-creation,BytecodeHandler,0,5599,0x7ee81be51bc0,1436,Sub.ExtraWide
code-creation,BytecodeHandler,0,5600,0x7ee81be52180,1556,Mul.ExtraWide
code-creation,BytecodeHandler,0,5602,0x7ee81be527c0,1668,Div.ExtraWide
code-creation,BytecodeHandler,0,5603,0x7ee81be52e80,1620,Mod.ExtraWide
code-creation,BytecodeHandler,0,5605,0x7ee81be53500,976,Exp.ExtraWide
code-creation,BytecodeHandler,0,5609,0x7ee81be53900,1836,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,5610,0x7ee81be54040,1840,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,5612,0x7ee81be54780,1836,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,5614,0x7ee81be54ec0,1268,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,5615,0x7ee81be553c0,1268,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,5617,0x7ee81be558c0,1332,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,5618,0x7ee81be55e00,1360,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,5620,0x7ee81be56380,1328,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,5621,0x7ee81be568c0,1440,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,5623,0x7ee81be56e80,1584,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,5625,0x7ee81be574c0,1452,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,5626,0x7ee81be57a80,840,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,5628,0x7ee81be57e00,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,5629,0x7ee81be58000,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,5631,0x7ee81be58200,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,5632,0x7ee81be58400,516,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,5634,0x7ee81be58640,500,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,5636,0x7ee81be58840,788,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,5637,0x7ee81be58b80,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,5639,0x7ee81be58e00,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,5640,0x7ee81be59080,636,Negate.ExtraWide
code-creation,BytecodeHandler,0,5642,0x7ee81be59300,516,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,5643,0x7ee81be59540,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,5645,0x7ee81be595c0,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,5647,0x7ee81be59640,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,5648,0x7ee81be59680,352,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,5650,0x7ee81be59800,1092,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,5652,0x7ee81be59c80,1092,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,5654,0x7ee81be5a100,1008,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,5655,0x7ee81be5a500,1020,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,5657,0x7ee81be5a900,1032,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,5658,0x7ee81be5ad40,984,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,5660,0x7ee81be5b140,1036,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,5662,0x7ee81be5b580,1024,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,5664,0x7ee81be5b9c0,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,5665,0x7ee81be5be00,1092,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,5667,0x7ee81be5c280,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,5669,0x7ee81be5c340,168,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,5670,0x7ee81be5c400,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,5672,0x7ee81be5c480,1328,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,5673,0x7ee81be5c9c0,960,Construct.ExtraWide
code-creation,BytecodeHandler,0,5675,0x7ee81be5cdc0,456,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,5677,0x7ee81be5cfc0,2212,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,5678,0x7ee81be5d880,1340,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,5680,0x7ee81be5ddc0,1788,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,5682,0x7ee81be5e4c0,1788,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,5683,0x7ee81be5ebc0,1788,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,5685,0x7ee81be5f2c0,1788,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,5687,0x7ee81be5f9c0,888,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,5688,0x7ee81be5fd40,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,5690,0x7ee81be5fe00,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,5695,0x7ee81be5fe80,220,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,5696,0x7ee81be5ff80,244,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,5698,0x7ee81be60080,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,5699,0x7ee81be60100,396,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,5701,0x7ee81be602c0,1492,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,5703,0x7ee81be608c0,768,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,5704,0x7ee81be60c00,2320,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,5706,0x7ee81be61540,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,5708,0x7ee81be61600,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,5709,0x7ee81be616c0,332,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,5711,0x7ee81be61840,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,5713,0x7ee81be618c0,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,5714,0x7ee81be61980,288,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,5716,0x7ee81be61ac0,288,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,5718,0x7ee81be61c00,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,5719,0x7ee81be61cc0,896,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,5721,0x7ee81be62080,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,5722,0x7ee81be620c0,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,5724,0x7ee81be62100,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,5726,0x7ee81be62180,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,5727,0x7ee81be62200,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,5729,0x7ee81be62280,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,5731,0x7ee81be62300,88,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,5733,0x7ee81be62380,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,5734,0x7ee81be62400,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,5736,0x7ee81be62480,92,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,5738,0x7ee81be62500,164,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,5739,0x7ee81be625c0,160,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,5741,0x7ee81be62680,144,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,5743,0x7ee81be62740,144,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,5745,0x7ee81be62800,68,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,5746,0x7ee81be62880,68,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,5748,0x7ee81be62900,68,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,5749,0x7ee81be62980,68,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,5751,0x7ee81be62a00,68,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,5753,0x7ee81be62a80,68,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,5754,0x7ee81be62b00,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,5756,0x7ee81be62b80,76,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,5758,0x7ee81be62c00,104,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,5759,0x7ee81be62c80,476,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,5761,0x7ee81be62e80,256,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,5762,0x7ee81be62fc0,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,5764,0x7ee81be63040,260,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,5766,0x7ee81be63180,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,5767,0x7ee81be631c0,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,5769,0x7ee81be63280,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,5771,0x7ee81be63340,124,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,5772,0x7ee81be633c0,528,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,5774,0x7ee81be63600,136,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,5778,0x7ee81be636c0,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,5780,0x7ee81be63780,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,5781,0x7ee81be63800,56,Abort.ExtraWide
tick,0x7ee81c09d440,5834,0,0x0,5
new,MemoryChunk,0x1aee0c2c0000,262144
tick,0x7ee81bee0f2c,6930,0,0x0,2
new,MemoryChunk,0x168b8b480000,262144
code-creation,Eval,10,7637,0x1aee0c2f847e,5, node:internal/per_context/primordials:1:1,0x1aee0c2f6a10,~
script-source,3,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringFromCharCode'\x2C\n  'StringFromCodePoint'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\x2C\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\x2C\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Define Symbol.dispose and Symbol.asyncDispose\n// Until these are defined by the environment.\n// TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\nprimordials.SymbolDispose ??= primordials.SymbolFor('nodejs.dispose');\nprimordials.SymbolAsyncDispose ??= primordials.SymbolFor('nodejs.asyncDispose');\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  Array: ArrayConstructor\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectSet\x2C\n  ReflectGet\x2C\n  RegExp\x2C\n  RegExpPrototype\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetFlags\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  SymbolMatch\x2C\n  SymbolMatchAll\x2C\n  SymbolReplace\x2C\n  SymbolSearch\x2C\n  SymbolSpecies\x2C\n  SymbolSplit\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n\n/**\n * Creates a class that can be safely iterated over.\n *\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\n * `primordials` object\x2C it's important to use const references to the\n * primordials that they use.\n * @template {Iterable} T\n * @template {*} TReturn\n * @template {*} TNext\n * @param {(self: T) => IterableIterator<T>} factory\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\n */\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\x2C\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\x2C\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\x2C\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\x2C\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\x2C\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\x2C\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\n    )\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used for internal functions\x2C this would produce similar\n * results as `Promise.all` but without prototype pollution\x2C and the return\n * value is not a genuine Array but an array-like object.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<ArrayLike<Awaited<U>>>}\n */\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    const { length } = promises;\n\n    const returnVal = ArrayConstructor(length);\n    ObjectSetPrototypeOf(returnVal\x2C null);\n    if (length === 0) resolve(returnVal);\n\n    let pendingPromises = length;\n    for (let i = 0; i < length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\n        returnVal[i] = result;\n        if (--pendingPromises === 0) resolve(returnVal);\n      }\x2C reject);\n    }\n  });\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * resolve\x2C not what value they resolve to.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    let pendingPromises = promises.length;\n    if (pendingPromises === 0) resolve();\n    const onFulfilled = () => {\n      if (--pendingPromises === 0) {\n        resolve();\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\n    }\n  });\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * settle\x2C not what value they resolve or reject to.\n * @template T\x2CU\n * @param {ArrayLike<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\n  let pendingPromises = promises.length;\n  if (pendingPromises === 0) resolve();\n  const onSettle = () => {\n    if (--pendingPromises === 0) resolve();\n  };\n  for (let i = 0; i < promises.length; i++) {\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\n  }\n});\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n\nconst {\n  exec: OriginalRegExpPrototypeExec\x2C\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\n} = RegExpPrototype;\n\nclass RegExpLikeForStringSplitting {\n  #regex;\n  constructor() {\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\n  }\n\n  get lastIndex() {\n    return ReflectGet(this.#regex\x2C 'lastIndex');\n  }\n  set lastIndex(value) {\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\n  }\n\n  exec() {\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\n  }\n}\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\n\n/**\n * @param {RegExp} pattern\n * @returns {RegExp}\n */\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\n  ObjectDefineProperties(pattern\x2C {\n    [SymbolMatch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\n    }\x2C\n    [SymbolMatchAll]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\n    }\x2C\n    [SymbolReplace]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\n    }\x2C\n    [SymbolSearch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\n    }\x2C\n    [SymbolSplit]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\n    }\x2C\n    constructor: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: {\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\n      }\x2C\n    }\x2C\n    dotAll: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\n    }\x2C\n    exec: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeExec\x2C\n    }\x2C\n    global: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\n    }\x2C\n    hasIndices: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\n    }\x2C\n    ignoreCase: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\n    }\x2C\n    multiline: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\n    }\x2C\n    source: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSource(pattern)\x2C\n    }\x2C\n    sticky: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSticky(pattern)\x2C\n    }\x2C\n    unicode: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\n    }\x2C\n  });\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: RegExpPrototypeGetFlags(pattern)\x2C\n  });\n  return pattern;\n};\n\n\n/**\n * @param {string} str\n * @param {RegExp} regexp\n * @returns {number}\n */\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\n  regexp.lastIndex = 0;\n  const match = RegExpPrototypeExec(regexp\x2C str);\n  return match ? match.index : -1;\n};\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x1aee0c2f847e,3,0,22033,C0O0C4O22033,,
code-creation,JS,10,8000,0x1aee0c2fa126,1789, node:internal/per_context/primordials:1:1,0x1aee0c2f83f8,~
code-source-info,0x1aee0c2fa
code-creation,JS,10,8027,0x1aee0c2fab9e,27, node:internal/per_context/primordials:740:41,0x1aee0c2f8d40,~
code-source-info,0x1aee0c2fab9e,3,21833,21962,C0O21854C1O21871C5O21892C10O21892C16O21928C18O21949C26O21960,,
code-creation,JS,10,8032,0x1aee0c2fb18e,470,hardenRegExp node:internal/per_context/primordials:646:49,0x1aee0c2f8d08,~
code-source-info,0x1aee0c2fb18e
code-creation,JS,10,8043,0x1aee0c2fb49e,11,<instance_members_initializer> node:internal/per_context/primordials:623:1,0x1aee0c2f8cd0,~
code-source-info,0x1aee0c2fb49e,3,19080,19451,C4O19119C10O19451,,
code-creation,JS,10,8047,0x1aee0c2fb53e,31,exec node:internal/per_context/primordials:636:7,0x1aee0c2f8c98,~
code-source-info,0x1aee0c2fb53e,3,19363,19449,C0O19363C2O19372C13O19392C18O19426C25O19379C30O19445,,
code-creation,JS,10,8054,0x1aee0c2fb5f6,26,set lastIndex node:internal/per_context/primordials:632:16,0x1aee0c2f8c60,~
code-source-info,0x1aee0c2fb5f6,3,19293,19355,C0O19307C9O19323C19O19307C25O19354,,
tick,0x7ee819a99a1e,8059,0,0x0,3
code-creation,JS,10,8067,0x1aee0c2fb69e,22,get lastIndex node:internal/per_context/primordials:629:16,0x1aee0c2f8c08,~
code-source-info,0x1aee0c2fb69e,3,19220,19277,C0O19229C9O19252C16O19236C21O19273,,
code-creation,JS,10,8072,0x1aee0c2fb74e,44,RegExpLikeForStringSplitting node:internal/per_context/primordials:625:14,0x1aee0c2f8bb0,~
code-source-info,0x1aee0c2fb74e,3,19140,19203,C0O19140C16O19149C23O19163C30O19180C33O19163C38O19161C43O19202,,
code-creation,JS,10,8079,0x1aee0c2fb856,33, node:internal/per_context/primordials:606:31,0x1aee0c2f8b78,~
code-source-info,0x1aee0c2fb856,3,18503,18732,C0O18503C13O18629C27O18629C32O18732,,
code-creation,JS,10,8083,0x1aee0c2fb916,49, node:internal/per_context/primordials:609:15,0x1aee0c2fb7c0,~
code-source-info,0x1aee0c2fb916,3,18641,18727,C0O18717C7O18667C16O18672C25O18672C31O18667C37O18716C42O18717C48O18727,,
code-creation,JS,10,8088,0x1aee0c2fba1e,33, node:internal/per_context/primordials:593:30,0x1aee0c2f8b40,~
code-source-info,0x1aee0c2fba1e,3,18065,18293,C0O18065C13O18191C27O18191C32O18293,,
code-creation,JS,10,8092,0x1aee0c2fbade,49, node:internal/per_context/primordials:596:15,0x1aee0c2fb988,~
code-source-info,0x1aee0c2fbade,3,18203,18288,C0O18278C7O18229C16O18233C25O18233C31O18229C37O18277C42O18278C48O18288,,
code-creation,JS,10,8097,0x1aee0c2fbbe6,33, node:internal/per_context/primordials:575:47,0x1aee0c2f8b08,~
code-source-info,0x1aee0c2fbbe6,3,17455,17856,C0O17455C13O17476C27O17476C32O17856,,
code-creation,JS,10,8101,0x1aee0c2fbce6,141, node:internal/per_context/primordials:575:80,0x1aee0c2fbb50,~
code-source-info,0x1aee0c2fbce6,3,17488,17855,C0O17488C12O17527C17O17536C21O17527C23O17546C27O17566C32O17573C35O17573C38O17603C43O17675C45O17680C50O17691C54O17680C59O17726C78O17756C82O17742C96O17774C100O17783C111O17804C114O17804C125O17783C130O17700C135O17662C140O17854,,
code-creation,JS,10,8107,0x1aee0c2fbe36,29,onSettle node:internal/per_context/primordials:578:20,0x1aee0c2fbc40,~
code-source-info,0x1aee0c2fbe36,3,17603,17658,C0O17615C9O17621C16O17637C21O17644C24O17644C28O17657,,
code-creation,JS,10,8111,0x1aee0c2fbf26,33, node:internal/per_context/primordials:560:37,0x1aee0c2f8ad0,~
code-source-info,0x1aee0c2fbf26,3,16864,17099,C0O16864C13O16990C27O16990C32O17099,,
code-creation,JS,10,8115,0x1aee0c2fbfe6,49, node:internal/per_context/primordials:563:15,0x1aee0c2fbe90,~
code-source-info,0x1aee0c2fbfe6,3,17002,17094,C0O17084C7O17028C16O17039C25O17039C31O17028C37O17083C42O17084C48O17094,,
code-creation,JS,10,8120,0x1aee0c2fc0ee,33, node:internal/per_context/primordials:539:40,0x1aee0c2f8a98,~
code-source-info,0x1aee0c2fc0ee,3,16178,16631,C0O16178C13O16201C27O16201C32O16631,,
code-creation,JS,10,8124,0x1aee0c2fc1ee,141, node:internal/per_context/primordials:540:15,0x1aee0c2fc058,~
code-source-info,0x1aee0c2fc1ee,3,16213,16630,C0O16213C12O16262C17O16271C21O16262C23O16283C27O16303C32O16310C35O16310C38O16345C43O16441C45O16446C50O16457C54O16446C59O16494C78O16524C82O16510C96O16542C100O16553C111O16574C114O16574C125O16553C130O16466C135O16428C140O16629,,
code-creation,JS,10,8130,0x1aee0c2fc33e,29,onFulfilled node:internal/per_context/primordials:543:25,0x1aee0c2fc148,~
code-source-info,0x1aee0c2fc33e,3,16345,16422,C0O16359C9O16365C16O16381C21O16398C24O16398C28O16421,,
code-creation,JS,10,8134,0x1aee0c2fc42e,33, node:internal/per_context/primordials:513:45,0x1aee0c2f8a60,~
code-source-info,0x1aee0c2fc42e,3,15280,15836,C0O15280C13O15303C27O15303C32O15836,,
code-creation,JS,10,8138,0x1aee0c2fc546,239, node:internal/per_context/primordials:514:15,0x1aee0c2fc398,~
code-source-info,0x1aee0c2fc546,3,15315,15835,C0O15315C15O15361C20O15350C25O15394C32O15394C36O15394C38O15424C50O15424C55O15467C56O15478C61O15485C67O15485C71O15532C73O15532C75O15557C81O15830C103O15573C107O15573C112O15562C117O15562C135O15601C154O15631C161O15617C175O15649C179O15660C190O15681C193O15681C206O15660C216O15544C238O15834,,
code-creation,JS,10,8145,0x1aee0c2fc71e,63, node:internal/per_context/primordials:524:53,0x1aee0c2fc488,~
code-source-info,0x1aee0c2fc71e,3,15706,15815,C0O15728C9O15738C14O15741C18O15759C31O15765C40O15781C45O15788C54O15796C57O15788C62O15814,,
code-creation,JS,10,8149,0x1aee0c2fc836,33, node:internal/per_context/primordials:497:30,0x1aee0c2f8a28,~
code-source-info,0x1aee0c2fc836,3,14603,14831,C0O14603C13O14729C27O14729C32O14831,,
code-creation,JS,10,8154,0x1aee0c2fc8f6,49, node:internal/per_context/primordials:500:15,0x1aee0c2fc7a0,~
code-source-info,0x1aee0c2fc8f6,3,14741,14826,C0O14816C7O14767C16O14771C25O14771C31O14767C37O14815C42O14816C48O14826,,
code-creation,JS,10,8162,0x1aee0c2fca06,45,arrayToSafePromiseIterable node:internal/per_context/primordials:482:36,0x1aee0c2f89f0,~
code-source-info,0x1aee0c2fca06,3,14153,14390,C0O14153C9O14176C14O14192C23O14215C26O14240C31O14215C39O14176C44O14390,,
code-creation,JS,10,8166,0x1aee0c2fcb0e,33, node:internal/per_context/primordials:486:7,0x1aee0c2fc968,~
code-source-info,0x1aee0c2fcb0e,3,14256,14378,C0O14256C13O14280C27O14280C32O14378,,
code-creation,JS,10,8171,0x1aee0c2fcbb6,47, node:internal/per_context/primordials:487:25,0x1aee0c2fca78,~
code-source-info,0x1aee0c2fcbb6,3,14296,14377,C0O14306C29O14353C41O14306C46O14377,,
code-creation,JS,10,8175,0x1aee0c2fccce,130, node:internal/per_context/primordials:480:23,0x1aee0c2f89b8,~
code-source-info,0x1aee0c2fccce,3,14098,14103,C10O14098C23O14098C43O14098C129O14102,,
code-creation,JS,10,8179,0x1aee0c2fce06,33, node:internal/per_context/primordials:468:43,0x1aee0c2f8980,~
code-source-info,0x1aee0c2fce06,3,13686,13960,C0O13686C13O13819C27O13819C32O13960,,
code-creation,JS,10,8183,0x1aee0c2fcefe,46, node:internal/per_context/primordials:471:15,0x1aee0c2fcd70,~
code-source-info,0x1aee0c2fcefe,3,13831,13955,C0O13945C14O13845C20O13919C28O13926C34O13944C39O13945C45O13955,,
code-creation,JS,10,8187,0x1aee0c2fcfbe,22, node:internal/per_context/primordials:472:21,0x1aee0c2fce60,~
code-source-info,0x1aee0c2fcfbe,3,13861,13910,C0O13871C16O13871C21O13910,,
code-creation,JS,10,8191,0x1aee0c2fd046,43,SafePromise node:internal/per_context/primordials:455:16,0x1aee0c2f8948,~
code-source-info,0x1aee0c2fd046,3,13151,13182,C3O13164C27O13164C42O13181,,
code-creation,JS,10,8195,0x1aee0c2fd0e6,43,SafeWeakRef node:internal/per_context/primordials:447:16,0x1aee0c2f8910,~
code-source-info,0x1aee0c2fd0e6,3,12965,12992,C3O12976C27O12976C42O12991,,
code-creation,JS,10,8200,0x1aee0c2fd186,43,SafeFinalizationRegistry node:internal/per_context/primordials:440:16,0x1aee0c2f88d8,~
code-source-info,0x1aee0c2fd186,3,12756,12801,C3O12776C27O12776C42O12800,,
code-creation,JS,10,8204,0x1aee0c2fd226,43,SafeWeakSet node:internal/per_context/primordials:432:16,0x1aee0c2f88a0,~
code-source-info,0x1aee0c2fd226,3,12476,12493,C3O12482C27O12482C42O12492,,
code-creation,JS,10,8208,0x1aee0c2fd2c6,43,SafeSet node:internal/per_context/primordials:426:16,0x1aee0c2f8868,~
code-source-info,0x1aee0c2fd2c6,3,12304,12321,C3O12310C27O12310C42O12320,,
code-creation,JS,10,8212,0x1aee0c2fd366,43,SafeWeakMap node:internal/per_context/primordials:419:16,0x1aee0c2f8830,~
code-source-info,0x1aee0c2fd366,3,12147,12164,C3O12153C27O12153C42O12163,,
code-creation,JS,10,8216,0x1aee0c2fd406,43,SafeMap node:internal/per_context/primordials:413:16,0x1aee0c2f87f8,~
code-source-info,0x1aee0c2fd406,3,11975,11992,C3O11981C27O11981C42O11991,,
code-creation,JS,10,8220,0x1aee0c2fd53e,204,makeSafe node:internal/per_context/primordials:371:18,0x1aee0c2f87c0,~
code-source-info,0x1aee0c2fd53e,3,10474,11624,C0O10474C13O10496C23O10525C27O10515C42O10556C47O10556C52O10556C54O10578C55O10578C57O10629C68O10651C76O10673C81O10651C91O10629C100O11431C110O11448C118O11464C123O11431C128O11482C141O11482C146O11510C156O11536C163O11510C168O11556C178O11574C183O11556C187O11588C197O11588C201O11610C203O11622,,
code-creation,JS,10,8226,0x1aee0c2fd776,258, node:internal/per_context/primordials:376:61,0x1aee0c2fd470,~
code-source-info,0x1aee0c2fd776,3,10685,11413,C0O10702C12O10744C17O10707C24O10784C36O10823C41O10784C47O10875C55O10914C60O10920C66O10927C75O10946C82O10965C85O10992C92O10999C95O10965C105O10961C117O11058C124O11075C129O11058C134O11093C148O11102C155O11129C158O11114C163O11135C168O11102C177O11098C185O11174C196O11209C199O11174C204O11174C206O11226C210O11237C216O11326C228O11353C233O11364C244O11391C251O11326C257O11412,,
code-creation,JS,10,8234,0x1aee0c2fd966,13, node:internal/per_context/primordials:387:32,0x1aee0c2fd688,~
code-source-info,0x1aee0c2fd966,3,11247,11306,C0O11264C7O11271C12O11294,,
code-creation,JS,10,8240,0x1aee0c2fda4e,47,copyProps node:internal/per_context/primordials:357:19,0x1aee0c2f8788,~
code-source-info,0x1aee0c2fda4e,3,10134,10407,C0O10134C13O10153C24O10175C30O10175C40O10153C46O10406,,
code-creation,JS,10,8245,0x1aee0c2fdb1e,65, node:internal/per_context/primordials:358:46,0x1aee0c2fd9b0,~
code-source-info,0x1aee0c2fdb1e,3,10196,10403,C0O10211C10O10216C17O10268C27O10313C36O10348C42O10348C58O10268C64O10402,,
code-creation,JS,10,8249,0x1aee0c2fdf2e,101,createSafeIterator node:internal/per_context/primordials:330:28,0x1aee0c2f8750,~
code-source-info,0x1aee0c2fdf2e,3,9451,9827,C0O9451C28O9630C52O9681C59O9715C66O9681C71O9735C78O9761C83O9735C87O9775C94O9775C98O9805C100O9825,,
code-creation,JS,10,8254,0x1aee0c2fe01e,3, node:internal/per_context/primordials:338:21,0x1aee0c2fdc18,~
code-source-info,0x1aee0c2fe01e,3,9645,9674,C0O9656C2O9668,,
code-creation,JS,10,8258,0x1aee0c2fe08e,13,next node:internal/per_context/primordials:335:9,0x1aee0c2fdbe0,~
code-source-info,0x1aee0c2fe08e,3,9579,9624,C0O9590C3O9607C8O9597C12O9618,,
code-creation,JS,10,8262,0x1aee0c2fe126,13,SafeIterator node:internal/per_context/primordials:332:16,0x1aee0c2fdba8,~
code-source-info,0x1aee0c2fe126,3,9510,9570,C0O9529C3O9546C7O9544C12O9569,,
code-creation,JS,10,8267,0x1aee0c2fe1d6,64, node:internal/per_context/primordials:261:11,0x1aee0c2f8718,~
code-source-info,0x1aee0c2fe1d6,3,7649,7963,C0O7652C5O7658C10O7677C15O7695C19O7848C31O7848C36O7894C39O7917C49O7944C57O7894C63O7962,,
code-creation,JS,10,8272,0x1aee0c2fe2c6,64, node:internal/per_context/primordials:242:11,0x1aee0c2f86e0,~
code-source-info,0x1aee0c2fe2c6,3,6889,7147,C0O6972C6O6982C10O6992C15O7010C19O7024C31O7024C36O7078C39O7101C49O7128C57O7078C63O7146,,
code-creation,JS,10,8276,0x1aee0c2fe3b6,64, node:internal/per_context/primordials:223:11,0x1aee0c2f86a8,~
code-source-info,0x1aee0c2fe3b6,3,6093,6346,C0O6176C6O6186C10O6196C15O6214C19O6228C31O6228C36O6277C39O6300C49O6327C57O6277C63O6345,,
code-creation,JS,10,8281,0x1aee0c2fe496,26, node:internal/per_context/primordials:179:11,0x1aee0c2f8670,~
code-source-info,0x1aee0c2fe496,3,5360,5482,C0O5426C3O5443C9O5453C19O5426C25O5481,,
code-creation,JS,10,8285,0x1aee0c2fe536,16, node:internal/per_context/primordials:169:11,0x1aee0c2f8638,~
code-source-info,0x1aee0c2fe536,3,5218,5258,C0O5230C3O5245C10O5251C15O5257,,
code-creation,JS,10,8290,0x1aee0c2fe5ce,16, node:internal/per_context/primordials:160:11,0x1aee0c2f8600,~
code-source-info,0x1aee0c2fe5ce,3,5095,5135,C0O5107C3O5122C10O5128C15O5134,,
code-creation,JS,10,8294,0x1aee0c2fe666,18, node:internal/per_context/primordials:149:11,0x1aee0c2f85c8,~
code-source-info,0x1aee0c2fe666,3,4861,4966,C0O4927C3O4947C9O4957C12O4945C17O4965,,
code-creation,JS,10,8298,0x1aee0c2fe7c6,300,copyPrototype node:internal/per_context/primordials:121:23,0x1aee0c2f8590,~
code-source-info,0x1aee0c2fe7c6,3,4080,4749,C0O4122C5O4122C27O4115C55O4115C58O4164C61O4164C66O4197C71O4197C77O4244C82O4254C87O4271C102O4271C109O4340C114O4362C118O4405C120O4418C123O4418C127O4416C131O4466C137O4478C142O4494C147O4522C159O4550C169O4494C174O4565C179O4584C184O4584C191O4610C198O4641C214O4700C218O4700C229O4610C234O4104C299O4748,,
code-creation,JS,10,8305,0x1aee0c2feaae,302,copyPropsRenamedBound node:internal/per_context/primordials:97:31,0x1aee0c2f8558,~
code-source-info,0x1aee0c2feaae,3,3385,4056,C0O3427C5O3427C27O3420C55O3420C58O3469C61O3469C66O3502C71O3502C77O3549C82O3559C87O3576C102O3576C109O3645C114O3667C118O3729C123O3729C128O3721C132O3768C138O3780C143O3796C148O3824C160O3852C170O3796C175O3867C180O3886C185O3886C192O3912C199O3943C215O4002C219O4002C231O3912C236O3409C301O4055,,
code-creation,JS,10,8312,0x1aee0c2fed8e,283,copyPropsRenamed node:internal/per_context/primordials:75:26,0x1aee0c2f8520,~
code-source-info,0x1aee0c2fed8e,3,2614,3353,C0O2656C5O2656C27O2649C55O2649C58O2698C61O2698C66O2731C71O2731C77O2778C82O2788C87O2805C102O2805C109O2879C115O2891C120O2907C125O2935C136O2963C146O2907C151O2978C156O2997C161O2997C168O3023C175O3054C190O3294C194O3309C200O3294C212O3023C217O2638C282O3352,,
code-creation,JS,10,8318,0x1aee0c2ff046,138,copyAccessor node:internal/per_context/primordials:60:22,0x1aee0c2f84e8,~
code-source-info,0x1aee0c2ff046,3,2245,2587,C9O2267C14O2279C19O2284C24O2295C31O2326C41O2338C53O2379C56O2379C66O2401C73O2295C78O2421C82O2450C89O2481C99O2493C111O2538C114O2538C124O2562C131O2450C137O2586,,
code-creation,JS,10,8329,0x1aee0c2ff19e,92,getNewKey node:internal/per_context/primordials:54:19,0x1aee0c2f84b0,~
code-source-info,0x1aee0c2ff19e,3,2055,2222,C0O2065C9O2115C16O2126C20O2130C25O2130C34O2150C39O2162C47O2162C59O2185C63O2189C68O2189C74O2209C82O2209C91O2220,,
new,MemoryChunk,0x19f2a9a40000,262144
new,MemoryChunk,0x7ee79be40000,262144
code-creation,JS,11,9020,0x7ee79be43040,2472,copyPrototype node:internal/per_context/primordials:121:23,0x1aee0c2f8590,^
code-source-info,0x7ee79be43040,3,4080,4749,,,
code-creation,JS,11,9038,0x7ee79be43a00,580,getNewKey node:internal/per_context/primordials:54:19,0x1aee0c2f84b0,^
code-source-info,0x7ee79be43a00,3,2055,2222,,,
tick,0x7ee819b1d9bd,9074,0,0x0,0,0x7ee81c5711f0,0x1aee0c2fe8b0,0x1aee0c2fe3ef,0x7ee81bd87830,0x1aee0c2fa2e4
code-creation,JS,11,9091,0x7ee79be43c80,2288,copyPropsRenamed node:internal/per_context/primordials:75:26,0x1aee0c2f8520,^
code-source-info,0x7ee79be43c80,3,2614,3353,,,
tick,0x7ee81c08e2c6,10143,0,0x0,0,0x7ee81c57be80,0x1aee0c2fa323
code-creation,JS,11,10514,0x7ee79be44580,816,createSafeIterator node:internal/per_context/primordials:330:28,0x1aee0c2f8750,^
code-source-info,0x7ee79be44580,3,9451,9827,,,
code-creation,JS,11,10528,0x7ee79be448c0,344, node:internal/per_context/primordials:223:11,0x1aee0c2f86a8,^
code-source-info,0x7ee79be448c0,3,6093,6346,,,
code-creation,JS,11,10558,0x7ee79be44a40,948,copyAccessor node:internal/per_context/primordials:60:22,0x1aee0c2f84e8,^
code-source-info,0x7ee79be44a40,3,2245,2587,,,
code-creation,JS,11,10571,0x7ee79be44e40,496, node:internal/per_context/primordials:358:46,0x1aee0c2fd9b0,^
code-source-info,0x7ee79be44e40,3,10196,10403,,,
code-creation,JS,11,10594,0x7ee79be45040,2200, node:internal/per_context/primordials:376:61,0x1aee0c2fd470,^
code-source-info,0x7ee79be45040,3,10685,11413,,,
code-creation,Eval,10,10946,0x168b8b49075e,5, node:internal/per_context/domexception:1:1,0x168b8b4903a8,~
script-source,4,node:internal/per_context/domexception,'use strict';\n\nconst {\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototype\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  SafeWeakMap\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nfunction throwInvalidThisError(Base\x2C type) {\n  const err = new Base();\n  const key = 'ERR_INVALID_THIS';\n  ObjectDefineProperties(err\x2C {\n    message: {\n      __proto__: null\x2C\n      value: `Value of "this" must be of ${type}`\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    toString: {\n      __proto__: null\x2C\n      value() {\n        return `${this.name} [${key}]: ${this.message}`;\n      }\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    }\x2C\n  });\n  err.code = key;\n  throw err;\n}\n\nconst internalsMap = new SafeWeakMap();\nconst nameToCodeMap = new SafeMap();\n\n// These were removed from the error names table.\n// See https://github.com/heycam/webidl/pull/946.\nconst disusedNamesSet = new SafeSet()\n  .add('DOMStringSizeError')\n  .add('NoDataAllowedError')\n  .add('ValidationError');\n\nclass DOMException {\n  constructor(message = ''\x2C options = 'Error') {\n    ErrorCaptureStackTrace(this);\n\n    if (options && typeof options === 'object') {\n      const { name } = options;\n      internalsMap.set(this\x2C {\n        message: `${message}`\x2C\n        name: `${name}`\x2C\n      });\n\n      if ('cause' in options) {\n        ObjectDefineProperty(this\x2C 'cause'\x2C {\n          __proto__: null\x2C\n          value: options.cause\x2C\n          configurable: true\x2C\n          writable: true\x2C\n          enumerable: false\x2C\n        });\n      }\n    } else {\n      internalsMap.set(this\x2C {\n        message: `${message}`\x2C\n        name: `${options}`\x2C\n      });\n    }\n  }\n\n  get name() {\n    const internals = internalsMap.get(this);\n    if (internals === undefined) {\n      throwInvalidThisError(TypeError\x2C 'DOMException');\n    }\n    return internals.name;\n  }\n\n  get message() {\n    const internals = internalsMap.get(this);\n    if (internals === undefined) {\n      throwInvalidThisError(TypeError\x2C 'DOMException');\n    }\n    return internals.message;\n  }\n\n  get code() {\n    const internals = internalsMap.get(this);\n    if (internals === undefined) {\n      throwInvalidThisError(TypeError\x2C 'DOMException');\n    }\n\n    if (disusedNamesSet.has(internals.name)) {\n      return 0;\n    }\n\n    const code = nameToCodeMap.get(internals.name);\n    return code === undefined ? 0 : code;\n  }\n}\n\nObjectSetPrototypeOf(DOMException.prototype\x2C ErrorPrototype);\nObjectDefineProperties(DOMException.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'DOMException' }\x2C\n  name: { __proto__: null\x2C enumerable: true\x2C configurable: true }\x2C\n  message: { __proto__: null\x2C enumerable: true\x2C configurable: true }\x2C\n  code: { __proto__: null\x2C enumerable: true\x2C configurable: true }\x2C\n});\n\nfor (const { 0: name\x2C 1: codeName\x2C 2: value } of [\n  ['IndexSizeError'\x2C 'INDEX_SIZE_ERR'\x2C 1]\x2C\n  ['DOMStringSizeError'\x2C 'DOMSTRING_SIZE_ERR'\x2C 2]\x2C\n  ['HierarchyRequestError'\x2C 'HIERARCHY_REQUEST_ERR'\x2C 3]\x2C\n  ['WrongDocumentError'\x2C 'WRONG_DOCUMENT_ERR'\x2C 4]\x2C\n  ['InvalidCharacterError'\x2C 'INVALID_CHARACTER_ERR'\x2C 5]\x2C\n  ['NoDataAllowedError'\x2C 'NO_DATA_ALLOWED_ERR'\x2C 6]\x2C\n  ['NoModificationAllowedError'\x2C 'NO_MODIFICATION_ALLOWED_ERR'\x2C 7]\x2C\n  ['NotFoundError'\x2C 'NOT_FOUND_ERR'\x2C 8]\x2C\n  ['NotSupportedError'\x2C 'NOT_SUPPORTED_ERR'\x2C 9]\x2C\n  ['InUseAttributeError'\x2C 'INUSE_ATTRIBUTE_ERR'\x2C 10]\x2C\n  ['InvalidStateError'\x2C 'INVALID_STATE_ERR'\x2C 11]\x2C\n  ['SyntaxError'\x2C 'SYNTAX_ERR'\x2C 12]\x2C\n  ['InvalidModificationError'\x2C 'INVALID_MODIFICATION_ERR'\x2C 13]\x2C\n  ['NamespaceError'\x2C 'NAMESPACE_ERR'\x2C 14]\x2C\n  ['InvalidAccessError'\x2C 'INVALID_ACCESS_ERR'\x2C 15]\x2C\n  ['ValidationError'\x2C 'VALIDATION_ERR'\x2C 16]\x2C\n  ['TypeMismatchError'\x2C 'TYPE_MISMATCH_ERR'\x2C 17]\x2C\n  ['SecurityError'\x2C 'SECURITY_ERR'\x2C 18]\x2C\n  ['NetworkError'\x2C 'NETWORK_ERR'\x2C 19]\x2C\n  ['AbortError'\x2C 'ABORT_ERR'\x2C 20]\x2C\n  ['URLMismatchError'\x2C 'URL_MISMATCH_ERR'\x2C 21]\x2C\n  ['QuotaExceededError'\x2C 'QUOTA_EXCEEDED_ERR'\x2C 22]\x2C\n  ['TimeoutError'\x2C 'TIMEOUT_ERR'\x2C 23]\x2C\n  ['InvalidNodeTypeError'\x2C 'INVALID_NODE_TYPE_ERR'\x2C 24]\x2C\n  ['DataCloneError'\x2C 'DATA_CLONE_ERR'\x2C 25]\x2C\n  // There are some more error names\x2C but since they don't have codes assigned\x2C\n  // we don't need to care about them.\n]) {\n  const desc = { enumerable: true\x2C value };\n  ObjectDefineProperty(DOMException\x2C codeName\x2C desc);\n  ObjectDefineProperty(DOMException.prototype\x2C codeName\x2C desc);\n  nameToCodeMap.set(name\x2C value);\n}\n\nexports.DOMException = DOMException;\n
code-source-info,0x168b8b49075e,4,0,4483,C0O0C4O4483,,
code-creation,JS,10,11031,0x168b8b4914ae,521, node:internal/per_context/domexception:1:1,0x168b8b4906d8,~
code-source-info,0x168b8b4914ae,4,0,4483,C0O0C32O25C38O51C43O69C49O95C55O119C60O143C65O158C70O169C75O180C80O201C86O798C88O798C93O798C95O839C97O839C102O839C104O979C106O979C113O996C123O996C130O1024C140O1025C147O1053C157O1054C162O979C206O2480C212O2446C217O2508C221O2544C235O2560C237O2580C250O2652C263O2722C276O2789C285O2508C290O2902C317O2897C348O2897C351O2869C359O2878C367O2891C371O4262C379O4282C386O4293C399O4293C404O4347C408O4381C420O4347C425O4411C429O4425C435O4425C441O2853C513O4446C515O4467C520O4482,,
code-creation,JS,10,11040,0x168b8b491826,87,get code node:internal/per_context/domexception:95:11,0x168b8b4908c0,~
code-source-info,0x168b8b491826,4,2126,2442,C0O2153C5O2166C10O2166C16O2181C18O2218C23O2240C29O2218C34O2279C39O2299C44O2313C49O2299C56O2328C57O2337C58O2362C63O2376C68O2390C73O2376C79O2401C86O2438,,
code-creation,JS,10,11049,0x168b8b49194e,39,get message node:internal/per_context/domexception:87:14,0x168b8b490870,~
code-source-info,0x168b8b49194e,4,1933,2114,C0O1960C5O1973C10O1973C16O1988C18O2025C23O2047C29O2025C34O2102C38O2110,,
code-creation,JS,10,11054,0x168b8b491a26,39,get name node:internal/per_context/domexception:79:11,0x168b8b490818,~
code-source-info,0x168b8b491a26,4,1740,1918,C0O1767C5O1780C10O1780C16O1795C18O1832C23O1854C29O1832C34O1909C38O1914,,
code-creation,JS,10,11059,0x168b8b491c06,159,DOMException node:internal/per_context/domexception:52:14,0x168b8b4907c8,~
code-source-info,0x168b8b491c06,4,1113,1728,C22O1153C27O1153C31O1188C41O1248C46O1272C51O1285C63O1317C70O1345C75O1285C81O1370C86O1382C91O1404C104O1494C115O1404C122O1625C127O1638C139O1670C146O1698C151O1638C158O1727,,
code-creation,JS,10,11064,0x168b8b491ede,89,throwInvalidThisError node:internal/per_context/domexception:16:31,0x168b8b490790,~
code-source-info,0x168b8b491ede,4,260,775,C0O260C8O289C10O289C16O315C18O315C20O337C27O360C32O380C42O448C56O550C61O581C75O337C80O745C82O754C86O763C88O763,,
code-creation,JS,10,11070,0x168b8b491ffe,36,value node:internal/per_context/domexception:29:12,0x168b8b491d18,~
code-source-info,0x168b8b491ffe,4,586,655,C0O614C14O623C27O637C35O647,,
tick,0x7ee81c01d1cb,11210,0,0x0,0
code-creation,Eval,10,11281,0x168b8b493746,5, node:internal/per_context/messageport:1:1,0x168b8b493530,~
script-source,5,node:internal/per_context/messageport,'use strict';\nconst {\n  SymbolFor\x2C\n} = primordials;\n\nclass MessageEvent {\n  constructor(data\x2C target\x2C type\x2C ports) {\n    this.data = data;\n    this.target = target;\n    this.type = type;\n    this.ports = ports ?? [];\n  }\n}\n\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\nconst kCurrentlyReceivingPorts =\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\n\nexports.emitMessage = function(data\x2C ports\x2C type) {\n  if (typeof this[kHybridDispatch] === 'function') {\n    this[kCurrentlyReceivingPorts] = ports;\n    try {\n      this[kHybridDispatch](data\x2C type\x2C undefined);\n    } finally {\n      this[kCurrentlyReceivingPorts] = undefined;\n    }\n    return;\n  }\n\n  const event = new MessageEvent(data\x2C this\x2C type\x2C ports);\n  if (type === 'message') {\n    if (typeof this.onmessage === 'function')\n      this.onmessage(event);\n  } else {\n    // eslint-disable-next-line no-lonely-if\n    if (typeof this.onmessageerror === 'function')\n      this.onmessageerror(event);\n  }\n};\n
code-source-info,0x168b8b493746,5,0,995,C0O0C4O995,,
code-creation,JS,10,11307,0x168b8b4939a6,69, node:internal/per_context/messageport:1:1,0x168b8b4936c0,~
code-source-info,0x168b8b4939a6,5,0,995,C0O0C14O24C39O53C41O248C44O248C48O248C50O329C53O329C57O329C59O385C63O405C68O994,,
code-creation,JS,10,11313,0x168b8b493ace,156, node:internal/per_context/messageport:19:31,0x168b8b4937b0,~
code-source-info,0x168b8b493ace,5,415,993,C0O439C2O455C4O454C11O494C13O499C18O525C25O550C27O555C29O554C44O571C60O618C63O623C67O649C82O672C83O679C84O701C103O701C109O746C111O755C116O792C124O829C129O829C136O923C144O965C149O965C155O992,,
code-creation,JS,10,11319,0x168b8b493c4e,35,MessageEvent node:internal/per_context/messageport:7:14,0x168b8b493778,~
code-source-info,0x168b8b493c4e,5,87,220,C0O121C2O131C6O143C8O155C12O169C14O179C18O191C27O204C29O202C34O219,,
code-creation,Eval,10,12079,0x168b8b495d16,5, node:internal/per_context/primordials:1:1,0x168b8b4942a8,~
script-source,6,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringFromCharCode'\x2C\n  'StringFromCodePoint'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\x2C\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\x2C\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Define Symbol.dispose and Symbol.asyncDispose\n// Until these are defined by the environment.\n// TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\nprimordials.SymbolDispose ??= primordials.SymbolFor('nodejs.dispose');\nprimordials.SymbolAsyncDispose ??= primordials.SymbolFor('nodejs.asyncDispose');\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  Array: ArrayConstructor\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectSet\x2C\n  ReflectGet\x2C\n  RegExp\x2C\n  RegExpPrototype\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetFlags\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  SymbolMatch\x2C\n  SymbolMatchAll\x2C\n  SymbolReplace\x2C\n  SymbolSearch\x2C\n  SymbolSpecies\x2C\n  SymbolSplit\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n\n/**\n * Creates a class that can be safely iterated over.\n *\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\n * `primordials` object\x2C it's important to use const references to the\n * primordials that they use.\n * @template {Iterable} T\n * @template {*} TReturn\n * @template {*} TNext\n * @param {(self: T) => IterableIterator<T>} factory\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\n */\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\x2C\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\x2C\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\x2C\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\x2C\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\x2C\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\x2C\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\n    )\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used for internal functions\x2C this would produce similar\n * results as `Promise.all` but without prototype pollution\x2C and the return\n * value is not a genuine Array but an array-like object.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<ArrayLike<Awaited<U>>>}\n */\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    const { length } = promises;\n\n    const returnVal = ArrayConstructor(length);\n    ObjectSetPrototypeOf(returnVal\x2C null);\n    if (length === 0) resolve(returnVal);\n\n    let pendingPromises = length;\n    for (let i = 0; i < length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\n        returnVal[i] = result;\n        if (--pendingPromises === 0) resolve(returnVal);\n      }\x2C reject);\n    }\n  });\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * resolve\x2C not what value they resolve to.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    let pendingPromises = promises.length;\n    if (pendingPromises === 0) resolve();\n    const onFulfilled = () => {\n      if (--pendingPromises === 0) {\n        resolve();\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\n    }\n  });\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * settle\x2C not what value they resolve or reject to.\n * @template T\x2CU\n * @param {ArrayLike<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\n  let pendingPromises = promises.length;\n  if (pendingPromises === 0) resolve();\n  const onSettle = () => {\n    if (--pendingPromises === 0) resolve();\n  };\n  for (let i = 0; i < promises.length; i++) {\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\n  }\n});\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n\nconst {\n  exec: OriginalRegExpPrototypeExec\x2C\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\n} = RegExpPrototype;\n\nclass RegExpLikeForStringSplitting {\n  #regex;\n  constructor() {\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\n  }\n\n  get lastIndex() {\n    return ReflectGet(this.#regex\x2C 'lastIndex');\n  }\n  set lastIndex(value) {\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\n  }\n\n  exec() {\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\n  }\n}\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\n\n/**\n * @param {RegExp} pattern\n * @returns {RegExp}\n */\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\n  ObjectDefineProperties(pattern\x2C {\n    [SymbolMatch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\n    }\x2C\n    [SymbolMatchAll]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\n    }\x2C\n    [SymbolReplace]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\n    }\x2C\n    [SymbolSearch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\n    }\x2C\n    [SymbolSplit]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\n    }\x2C\n    constructor: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: {\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\n      }\x2C\n    }\x2C\n    dotAll: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\n    }\x2C\n    exec: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeExec\x2C\n    }\x2C\n    global: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\n    }\x2C\n    hasIndices: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\n    }\x2C\n    ignoreCase: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\n    }\x2C\n    multiline: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\n    }\x2C\n    source: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSource(pattern)\x2C\n    }\x2C\n    sticky: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSticky(pattern)\x2C\n    }\x2C\n    unicode: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\n    }\x2C\n  });\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: RegExpPrototypeGetFlags(pattern)\x2C\n  });\n  return pattern;\n};\n\n\n/**\n * @param {string} str\n * @param {RegExp} regexp\n * @returns {number}\n */\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\n  regexp.lastIndex = 0;\n  const match = RegExpPrototypeExec(regexp\x2C str);\n  return match ? match.index : -1;\n};\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x168b8b495d16,6,0,22033,C0O0C4O22033,,
code-creation,JS,10,12454,0x168b8b4979be,1789, node:internal/per_context/primordials:1:1,0x168b8b495c90,~
code-source-info,0x168b8b4979be
code-creation,JS,10,12483,0x168b8b498436,27, node:internal/per_context/primordials:740:41,0x168b8b4965d8,~
code-source-info,0x168b8b498436,6,21833,21962,C0O21854C1O21871C5O21892C10O21892C16O21928C18O21949C26O21960,,
code-creation,JS,10,12488,0x168b8b498a26,470,hardenRegExp node:internal/per_context/primordials:646:49,0x168b8b4965a0,~
code-source-info,0x168b8b498a
code-creation,JS,10,12499,0x168b8b498d36,11,<instance_members_initializer> node:internal/per_context/primordials:623:1,0x168b8b496568,~
code-source-info,0x168b8b498d36,6,19080,19451,C4O19119C10O19451,,
code-creation,JS,10,12504,0x168b8b498dd6,31,exec node:internal/per_context/primordials:636:7,0x168b8b496530,~
code-source-info,0x168b8b498dd6,6,19363,19449,C0O19363C2O19372C13O19392C18O19426C25O19379C30O19445,,
code-creation,JS,10,12510,0x168b8b498e8e,26,set lastIndex node:internal/per_context/primordials:632:16,0x168b8b4964f8,~
code-source-info,0x168b8b498e8e,6,19293,19355,C0O19307C9O19323C19O19307C25O19354,,
code-creation,JS,10,12515,0x168b8b498f36,22,get lastIndex node:internal/per_context/primordials:629:16,0x168b8b4964a0,~
code-source-info,0x168b8b498f36,6,19220,19277,C0O19229C9O19252C16O19236C21O19273,,
code-creation,JS,10,12521,0x168b8b498fe6,44,RegExpLikeForStringSplitting node:internal/per_context/primordials:625:14,0x168b8b496448,~
code-source-info,0x168b8b498fe6,6,19140,19203,C0O19140C16O19149C23O19163C30O19180C33O19163C38O19161C43O19202,,
code-creation,JS,10,12526,0x168b8b4990ee,33, node:internal/per_context/primordials:606:31,0x168b8b496410,~
tick,0x7ee81c21c8d2,12545,0,0x0,3
code-source-info,0x168b8b4990ee,6,18503,18732,C0O18503C13O18629C27O18629C32O18732,,
code-creation,JS,10,12569,0x168b8b4991ae,49, node:internal/per_context/primordials:609:15,0x168b8b499058,~
code-source-info,0x168b8b4991ae,6,18641,18727,C0O18717C7O18667C16O18672C25O18672C31O18667C37O18716C42O18717C48O18727,,
code-creation,JS,10,12574,0x168b8b4992b6,33, node:internal/per_context/primordials:593:30,0x168b8b4963d8,~
code-source-info,0x168b8b4992b6,6,18065,18293,C0O18065C13O18191C27O18191C32O18293,,
code-creation,JS,10,12578,0x168b8b499376,49, node:internal/per_context/primordials:596:15,0x168b8b499220,~
code-source-info,0x168b8b499376,6,18203,18288,C0O18278C7O18229C16O18233C25O18233C31O18229C37O18277C42O18278C48O18288,,
code-creation,JS,10,12586,0x168b8b49947e,33, node:internal/per_context/primordials:575:47,0x168b8b4963a0,~
code-source-info,0x168b8b49947e,6,17455,17856,C0O17455C13O17476C27O17476C32O17856,,
code-creation,JS,10,12590,0x168b8b49957e,141, node:internal/per_context/primordials:575:80,0x168b8b4993e8,~
code-source-info,0x168b8b49957e,6,17488,17855,C0O17488C12O17527C17O17536C21O17527C23O17546C27O17566C32O17573C35O17573C38O17603C43O17675C45O17680C50O17691C54O17680C59O17726C78O17756C82O17742C96O17774C100O17783C111O17804C114O17804C125O17783C130O17700C135O17662C140O17854,,
code-creation,JS,10,12596,0x168b8b4996ce,29,onSettle node:internal/per_context/primordials:578:20,0x168b8b4994d8,~
code-source-info,0x168b8b4996ce,6,17603,17658,C0O17615C9O17621C16O17637C21O17644C24O17644C28O17657,,
code-creation,JS,10,12600,0x168b8b4997be,33, node:internal/per_context/primordials:560:37,0x168b8b496368,~
code-source-info,0x168b8b4997be,6,16864,17099,C0O16864C13O16990C27O16990C32O17099,,
code-creation,JS,10,12604,0x168b8b49987e,49, node:internal/per_context/primordials:563:15,0x168b8b499728,~
code-source-info,0x168b8b49987e,6,17002,17094,C0O17084C7O17028C16O17039C25O17039C31O17028C37O17083C42O17084C48O17094,,
code-creation,JS,10,12609,0x168b8b499986,33, node:internal/per_context/primordials:539:40,0x168b8b496330,~
code-source-info,0x168b8b499986,6,16178,16631,C0O16178C13O16201C27O16201C32O16631,,
code-creation,JS,10,12613,0x168b8b499a86,141, node:internal/per_context/primordials:540:15,0x168b8b4998f0,~
code-source-info,0x168b8b499a86,6,16213,16630,C0O16213C12O16262C17O16271C21O16262C23O16283C27O16303C32O16310C35O16310C38O16345C43O16441C45O16446C50O16457C54O16446C59O16494C78O16524C82O16510C96O16542C100O16553C111O16574C114O16574C125O16553C130O16466C135O16428C140O16629,,
code-creation,JS,10,12619,0x168b8b499bd6,29,onFulfilled node:internal/per_context/primordials:543:25,0x168b8b4999e0,~
code-source-info,0x168b8b499bd6,6,16345,16422,C0O16359C9O16365C16O16381C21O16398C24O16398C28O16421,,
code-creation,JS,10,12623,0x168b8b499cc6,33, node:internal/per_context/primordials:513:45,0x168b8b4962f8,~
code-source-info,0x168b8b499cc6,6,15280,15836,C0O15280C13O15303C27O15303C32O15836,,
code-creation,JS,10,12627,0x168b8b499dde,239, node:internal/per_context/primordials:514:15,0x168b8b499c30,~
code-source-info,0x168b8b499dde,6,15315,15835,C0O15315C15O15361C20O15350C25O15394C32O15394C36O15394C38O15424C50O15424C55O15467C56O15478C61O15485C67O15485C71O15532C73O15532C75O15557C81O15830C103O15573C107O15573C112O15562C117O15562C135O15601C154O15631C161O15617C175O15649C179O15660C190O15681C193O15681C206O15660C216O15544C238O15834,,
code-creation,JS,10,12634,0x168b8b499fb6,63, node:internal/per_context/primordials:524:53,0x168b8b499d20,~
code-source-info,0x168b8b499fb6,6,15706,15815,C0O15728C9O15738C14O15741C18O15759C31O15765C40O15781C45O15788C54O15796C57O15788C62O15814,,
code-creation,JS,10,12638,0x168b8b49a0ce,33, node:internal/per_context/primordials:497:30,0x168b8b4962c0,~
code-source-info,0x168b8b49a0ce,6,14603,14831,C0O14603C13O14729C27O14729C32O14831,,
code-creation,JS,10,12642,0x168b8b49a18e,49, node:internal/per_context/primordials:500:15,0x168b8b49a038,~
code-source-info,0x168b8b49a18e,6,14741,14826,C0O14816C7O14767C16O14771C25O14771C31O14767C37O14815C42O14816C48O14826,,
code-creation,JS,10,12647,0x168b8b49a29e,45,arrayToSafePromiseIterable node:internal/per_context/primordials:482:36,0x168b8b496288,~
code-source-info,0x168b8b49a29e,6,14153,14390,C0O14153C9O14176C14O14192C23O14215C26O14240C31O14215C39O14176C44O14390,,
code-creation,JS,10,12651,0x168b8b49a3a6,33, node:internal/per_context/primordials:486:7,0x168b8b49a200,~
code-source-info,0x168b8b49a3a6,6,14256,14378,C0O14256C13O14280C27O14280C32O14378,,
code-creation,JS,10,12656,0x168b8b49a44e,47, node:internal/per_context/primordials:487:25,0x168b8b49a310,~
code-source-info,0x168b8b49a44e,6,14296,14377,C0O14306C29O14353C41O14306C46O14377,,
code-creation,JS,10,12660,0x168b8b49a566,130, node:internal/per_context/primordials:480:23,0x168b8b496250,~
code-source-info,0x168b8b49a566,6,14098,14103,C10O14098C23O14098C43O14098C129O14102,,
code-creation,JS,10,12668,0x168b8b49a69e,33, node:internal/per_context/primordials:468:43,0x168b8b496218,~
code-source-info,0x168b8b49a69e,6,13686,13960,C0O13686C13O13819C27O13819C32O13960,,
code-creation,JS,10,12672,0x168b8b49a796,46, node:internal/per_context/primordials:471:15,0x168b8b49a608,~
code-source-info,0x168b8b49a796,6,13831,13955,C0O13945C14O13845C20O13919C28O13926C34O13944C39O13945C45O13955,,
code-creation,JS,10,12677,0x168b8b49a856,22, node:internal/per_context/primordials:472:21,0x168b8b49a6f8,~
code-source-info,0x168b8b49a856,6,13861,13910,C0O13871C16O13871C21O13910,,
code-creation,JS,10,12681,0x168b8b49a8de,43,SafePromise node:internal/per_context/primordials:455:16,0x168b8b4961e0,~
code-source-info,0x168b8b49a8de,6,13151,13182,C3O13164C27O13164C42O13181,,
code-creation,JS,10,12685,0x168b8b49a97e,43,SafeWeakRef node:internal/per_context/primordials:447:16,0x168b8b4961a8,~
code-source-info,0x168b8b49a97e,6,12965,12992,C3O12976C27O12976C42O12991,,
code-creation,JS,10,12689,0x168b8b49aa1e,43,SafeFinalizationRegistry node:internal/per_context/primordials:440:16,0x168b8b496170,~
code-source-info,0x168b8b49aa1e,6,12756,12801,C3O12776C27O12776C42O12800,,
code-creation,JS,10,12693,0x168b8b49aabe,43,SafeWeakSet node:internal/per_context/primordials:432:16,0x168b8b496138,~
code-source-info,0x168b8b49aabe,6,12476,12493,C3O12482C27O12482C42O12492,,
code-creation,JS,10,12697,0x168b8b49ab5e,43,SafeSet node:internal/per_context/primordials:426:16,0x168b8b496100,~
code-source-info,0x168b8b49ab5e,6,12304,12321,C3O12310C27O12310C42O12320,,
code-creation,JS,10,12701,0x168b8b49abfe,43,SafeWeakMap node:internal/per_context/primordials:419:16,0x168b8b4960c8,~
code-source-info,0x168b8b49abfe,6,12147,12164,C3O12153C27O12153C42O12163,,
code-creation,JS,10,12705,0x168b8b49ac9e,43,SafeMap node:internal/per_context/primordials:413:16,0x168b8b496090,~
code-source-info,0x168b8b49ac9e,6,11975,11992,C3O11981C27O11981C42O11991,,
code-creation,JS,10,12709,0x168b8b49add6,204,makeSafe node:internal/per_context/primordials:371:18,0x168b8b496058,~
code-source-info,0x168b8b49add6,6,10474,11624,C0O10474C13O10496C23O10525C27O10515C42O10556C47O10556C52O10556C54O10578C55O10578C57O10629C68O10651C76O10673C81O10651C91O10629C100O11431C110O11448C118O11464C123O11431C128O11482C141O11482C146O11510C156O11536C163O11510C168O11556C178O11574C183O11556C187O11588C197O11588C201O11610C203O11622,,
code-creation,JS,10,12715,0x168b8b49b00e,258, node:internal/per_context/primordials:376:61,0x168b8b49ad08,~
code-source-info,0x168b8b49b00e,6,10685,11413,C0O10702C12O10744C17O10707C24O10784C36O10823C41O10784C47O10875C55O10914C60O10920C66O10927C75O10946C82O10965C85O10992C92O10999C95O10965C105O10961C117O11058C124O11075C129O11058C134O11093C148O11102C155O11129C158O11114C163O11135C168O11102C177O11098C185O11174C196O11209C199O11174C204O11174C206O11226C210O11237C216O11326C228O11353C233O11364C244O11391C251O11326C257O11412,,
code-creation,JS,10,12723,0x168b8b49b1fe,13, node:internal/per_context/primordials:387:32,0x168b8b49af20,~
code-source-info,0x168b8b49b1fe,6,11247,11306,C0O11264C7O11271C12O11294,,
code-creation,JS,10,12727,0x168b8b49b2e6,47,copyProps node:internal/per_context/primordials:357:19,0x168b8b496020,~
code-source-info,0x168b8b49b2e6,6,10134,10407,C0O10134C13O10153C24O10175C30O10175C40O10153C46O10406,,
code-creation,JS,10,12731,0x168b8b49b3b6,65, node:internal/per_context/primordials:358:46,0x168b8b49b248,~
code-source-info,0x168b8b49b3b6,6,10196,10403,C0O10211C10O10216C17O10268C27O10313C36O10348C42O10348C58O10268C64O10402,,
code-creation,JS,10,12735,0x168b8b49b7c6,101,createSafeIterator node:internal/per_context/primordials:330:28,0x168b8b495fe8,~
code-source-info,0x168b8b49b7c6,6,9451,9827,C0O9451C28O9630C52O9681C59O9715C66O9681C71O9735C78O9761C83O9735C87O9775C94O9775C98O9805C100O9825,,
code-creation,JS,10,12740,0x168b8b49b8b6,3, node:internal/per_context/primordials:338:21,0x168b8b49b4b0,~
code-source-info,0x168b8b49b8b6,6,9645,9674,C0O9656C2O9668,,
code-creation,JS,10,12744,0x168b8b49b926,13,next node:internal/per_context/primordials:335:9,0x168b8b49b478,~
code-source-info,0x168b8b49b926,6,9579,9624,C0O9590C3O9607C8O9597C12O9618,,
code-creation,JS,10,12751,0x168b8b49b9be,13,SafeIterator node:internal/per_context/primordials:332:16,0x168b8b49b440,~
code-source-info,0x168b8b49b9be,6,9510,9570,C0O9529C3O9546C7O9544C12O9569,,
code-creation,JS,10,12755,0x168b8b49ba6e,64, node:internal/per_context/primordials:261:11,0x168b8b495fb0,~
code-source-info,0x168b8b49ba6e,6,7649,7963,C0O7652C5O7658C10O7677C15O7695C19O7848C31O7848C36O7894C39O7917C49O7944C57O7894C63O7962,,
code-creation,JS,10,12760,0x168b8b49bb5e,64, node:internal/per_context/primordials:242:11,0x168b8b495f78,~
code-source-info,0x168b8b49bb5e,6,6889,7147,C0O6972C6O6982C10O6992C15O7010C19O7024C31O7024C36O7078C39O7101C49O7128C57O7078C63O7146,,
code-creation,JS,10,12765,0x168b8b49bc4e,64, node:internal/per_context/primordials:223:11,0x168b8b495f40,~
code-source-info,0x168b8b49bc4e,6,6093,6346,C0O6176C6O6186C10O6196C15O6214C19O6228C31O6228C36O6277C39O6300C49O6327C57O6277C63O6345,,
code-creation,JS,10,12769,0x168b8b49bd2e,26, node:internal/per_context/primordials:179:11,0x168b8b495f08,~
code-source-info,0x168b8b49bd2e,6,5360,5482,C0O5426C3O5443C9O5453C19O5426C25O5481,,
code-creation,JS,10,12774,0x168b8b49bdce,16, node:internal/per_context/primordials:169:11,0x168b8b495ed0,~
code-source-info,0x168b8b49bdce,6,5218,5258,C0O5230C3O5245C10O5251C15O5257,,
code-creation,JS,10,12778,0x168b8b49be66,16, node:internal/per_context/primordials:160:11,0x168b8b495e98,~
code-source-info,0x168b8b49be66,6,5095,5135,C0O5107C3O5122C10O5128C15O5134,,
code-creation,JS,10,12782,0x168b8b49befe,18, node:internal/per_context/primordials:149:11,0x168b8b495e60,~
code-source-info,0x168b8b49befe,6,4861,4966,C0O4927C3O4947C9O4957C12O4945C17O4965,,
code-creation,JS,10,12786,0x168b8b49c05e,300,copyPrototype node:internal/per_context/primordials:121:23,0x168b8b495e28,~
code-source-info,0x168b8b49c05e,6,4080,4749,C0O4122C5O4122C27O4115C55O4115C58O4164C61O4164C66O4197C71O4197C77O4244C82O4254C87O4271C102O4271C109O4340C114O4362C118O4405C120O4418C123O4418C127O4416C131O4466C137O4478C142O4494C147O4522C159O4550C169O4494C174O4565C179O4584C184O4584C191O4610C198O4641C214O4700C218O4700C229O4610C234O4104C299O4748,,
code-creation,JS,10,12793,0x168b8b49c346,302,copyPropsRenamedBound node:internal/per_context/primordials:97:31,0x168b8b495df0,~
code-source-info,0x168b8b49c346,6,3385,4056,C0O3427C5O3427C27O3420C55O3420C58O3469C61O3469C66O3502C71O3502C77O3549C82O3559C87O3576C102O3576C109O3645C114O3667C118O3729C123O3729C128O3721C132O3768C138O3780C143O3796C148O3824C160O3852C170O3796C175O3867C180O3886C185O3886C192O3912C199O3943C215O4002C219O4002C231O3912C236O3409C301O4055,,
code-creation,JS,10,12800,0x168b8b49c626,283,copyPropsRenamed node:internal/per_context/primordials:75:26,0x168b8b495db8,~
code-source-info,0x168b8b49c626,6,2614,3353,C0O2656C5O2656C27O2649C55O2649C58O2698C61O2698C66O2731C71O2731C77O2778C82O2788C87O2805C102O2805C109O2879C115O2891C120O2907C125O2935C136O2963C146O2907C151O2978C156O2997C161O2997C168O3023C175O3054C190O3294C194O3309C200O3294C212O3023C217O2638C282O3352,,
code-creation,JS,10,12806,0x168b8b49c8de,138,copyAccessor node:internal/per_context/primordials:60:22,0x168b8b495d80,~
code-source-info,0x168b8b49c8de,6,2245,2587,C9O2267C14O2279C19O2284C24O2295C31O2326C41O2338C53O2379C56O2379C66O2401C73O2295C78O2421C82O2450C89O2481C99O2493C111O2538C114O2538C124O2562C131O2450C137O2586,,
code-creation,JS,10,12812,0x168b8b49ca36,92,getNewKey node:internal/per_context/primordials:54:19,0x168b8b495d48,~
code-source-info,0x168b8b49ca36,6,2055,2222,C0O2065C9O2115C16O2126C20O2130C25O2130C34O2150C39O2162C47O2162C59O2185C63O2189C68O2189C74O2209C82O2209C91O2220,,
code-creation,JS,11,13137,0x7ee79be45900,2472,copyPrototype node:internal/per_context/primordials:121:23,0x168b8b495e28,^
code-source-info,0x7ee79be45900,6,4080,4749,,,
code-creation,JS,11,13153,0x7ee79be462c0,444,copyProps node:internal/per_context/primordials:357:19,0x1aee0c2f8788,^
code-source-info,0x7ee79be462c0,3,10134,10407,,,
code-creation,JS,11,13163,0x7ee79be464c0,580,getNewKey node:internal/per_context/primordials:54:19,0x168b8b495d48,^
code-source-info,0x7ee79be464c0,6,2055,2222,,,
code-creation,JS,11,13191,0x7ee79be46740,2288,copyPropsRenamed node:internal/per_context/primordials:75:26,0x168b8b495db8,^
code-source-info,0x7ee79be46740,6,2614,3353,,,
tick,0x7ee81c08e2c6,13358,0,0x0,0,0x7ee81bf3c880,0x7ee79be46b77,0x168b8b49bc6d,0x7ee81bd87830,0x168b8b497b7c
new,MemoryChunk,0x3597e5400000,262144
new,MemoryChunk,0x2d5c43200000,262144
new,MemoryChunk,0x2aa1bdf40000,262144
new,MemoryChunk,0x3d73a6540000,262144
tick,0x7ee81c08e2c6,14442,0,0x0,0,0x7ee81bf3caa0,0x7ee79be467c5,0x168b8b49bc6d,0x7ee81bd87830,0x168b8b497b7c
code-creation,JS,11,14912,0x7ee79be47040,816,createSafeIterator node:internal/per_context/primordials:330:28,0x168b8b495fe8,^
code-source-info,0x7ee79be47040,6,9451,9827,,,
code-creation,JS,11,14930,0x7ee79be47380,344, node:internal/per_context/primordials:223:11,0x168b8b495f40,^
code-source-info,0x7ee79be47380,6,6093,6346,,,
code-creation,JS,11,14942,0x7ee79be47500,948,copyAccessor node:internal/per_context/primordials:60:22,0x168b8b495d80,^
code-source-info,0x7ee79be47500,6,2245,2587,,,
code-creation,JS,11,14951,0x7ee79be47900,496, node:internal/per_context/primordials:358:46,0x168b8b49b248,^
code-source-info,0x7ee79be47900,6,10196,10403,,,
code-creation,JS,11,14973,0x7ee79be47b00,2200, node:internal/per_context/primordials:376:61,0x168b8b49ad08,^
code-source-info,0x7ee79be47b00,6,10685,11413,,,
code-creation,Eval,10,15278,0x168b8b4a330e,5, node:internal/per_context/domexception:1:1,0x168b8b4a2f58,~
script-source,7,node:internal/per_context/domexception,'use strict';\n\nconst {\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototype\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  SafeWeakMap\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nfunction throwInvalidThisError(Base\x2C type) {\n  const err = new Base();\n  const key = 'ERR_INVALID_THIS';\n  ObjectDefineProperties(err\x2C {\n    message: {\n      __proto__: null\x2C\n      value: `Value of "this" must be of ${type}`\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    toString: {\n      __proto__: null\x2C\n      value() {\n        return `${this.name} [${key}]: ${this.message}`;\n      }\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      configurable: true\x2C\n    }\x2C\n  });\n  err.code = key;\n  throw err;\n}\n\nconst internalsMap = new SafeWeakMap();\nconst nameToCodeMap = new SafeMap();\n\n// These were removed from the error names table.\n// See https://github.com/heycam/webidl/pull/946.\nconst disusedNamesSet = new SafeSet()\n  .add('DOMStringSizeError')\n  .add('NoDataAllowedError')\n  .add('ValidationError');\n\nclass DOMException {\n  constructor(message = ''\x2C options = 'Error') {\n    ErrorCaptureStackTrace(this);\n\n    if (options && typeof options === 'object') {\n      const { name } = options;\n      internalsMap.set(this\x2C {\n        message: `${message}`\x2C\n        name: `${name}`\x2C\n      });\n\n      if ('cause' in options) {\n        ObjectDefineProperty(this\x2C 'cause'\x2C {\n          __proto__: null\x2C\n          value: options.cause\x2C\n          configurable: true\x2C\n          writable: true\x2C\n          enumerable: false\x2C\n        });\n      }\n    } else {\n      internalsMap.set(this\x2C {\n        message: `${message}`\x2C\n        name: `${options}`\x2C\n      });\n    }\n  }\n\n  get name() {\n    const internals = internalsMap.get(this);\n    if (internals === undefined) {\n      throwInvalidThisError(TypeError\x2C 'DOMException');\n    }\n    return internals.name;\n  }\n\n  get message() {\n    const internals = internalsMap.get(this);\n    if (internals === undefined) {\n      throwInvalidThisError(TypeError\x2C 'DOMException');\n    }\n    return internals.message;\n  }\n\n  get code() {\n    const internals = internalsMap.get(this);\n    if (internals === undefined) {\n      throwInvalidThisError(TypeError\x2C 'DOMException');\n    }\n\n    if (disusedNamesSet.has(internals.name)) {\n      return 0;\n    }\n\n    const code = nameToCodeMap.get(internals.name);\n    return code === undefined ? 0 : code;\n  }\n}\n\nObjectSetPrototypeOf(DOMException.prototype\x2C ErrorPrototype);\nObjectDefineProperties(DOMException.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'DOMException' }\x2C\n  name: { __proto__: null\x2C enumerable: true\x2C configurable: true }\x2C\n  message: { __proto__: null\x2C enumerable: true\x2C configurable: true }\x2C\n  code: { __proto__: null\x2C enumerable: true\x2C configurable: true }\x2C\n});\n\nfor (const { 0: name\x2C 1: codeName\x2C 2: value } of [\n  ['IndexSizeError'\x2C 'INDEX_SIZE_ERR'\x2C 1]\x2C\n  ['DOMStringSizeError'\x2C 'DOMSTRING_SIZE_ERR'\x2C 2]\x2C\n  ['HierarchyRequestError'\x2C 'HIERARCHY_REQUEST_ERR'\x2C 3]\x2C\n  ['WrongDocumentError'\x2C 'WRONG_DOCUMENT_ERR'\x2C 4]\x2C\n  ['InvalidCharacterError'\x2C 'INVALID_CHARACTER_ERR'\x2C 5]\x2C\n  ['NoDataAllowedError'\x2C 'NO_DATA_ALLOWED_ERR'\x2C 6]\x2C\n  ['NoModificationAllowedError'\x2C 'NO_MODIFICATION_ALLOWED_ERR'\x2C 7]\x2C\n  ['NotFoundError'\x2C 'NOT_FOUND_ERR'\x2C 8]\x2C\n  ['NotSupportedError'\x2C 'NOT_SUPPORTED_ERR'\x2C 9]\x2C\n  ['InUseAttributeError'\x2C 'INUSE_ATTRIBUTE_ERR'\x2C 10]\x2C\n  ['InvalidStateError'\x2C 'INVALID_STATE_ERR'\x2C 11]\x2C\n  ['SyntaxError'\x2C 'SYNTAX_ERR'\x2C 12]\x2C\n  ['InvalidModificationError'\x2C 'INVALID_MODIFICATION_ERR'\x2C 13]\x2C\n  ['NamespaceError'\x2C 'NAMESPACE_ERR'\x2C 14]\x2C\n  ['InvalidAccessError'\x2C 'INVALID_ACCESS_ERR'\x2C 15]\x2C\n  ['ValidationError'\x2C 'VALIDATION_ERR'\x2C 16]\x2C\n  ['TypeMismatchError'\x2C 'TYPE_MISMATCH_ERR'\x2C 17]\x2C\n  ['SecurityError'\x2C 'SECURITY_ERR'\x2C 18]\x2C\n  ['NetworkError'\x2C 'NETWORK_ERR'\x2C 19]\x2C\n  ['AbortError'\x2C 'ABORT_ERR'\x2C 20]\x2C\n  ['URLMismatchError'\x2C 'URL_MISMATCH_ERR'\x2C 21]\x2C\n  ['QuotaExceededError'\x2C 'QUOTA_EXCEEDED_ERR'\x2C 22]\x2C\n  ['TimeoutError'\x2C 'TIMEOUT_ERR'\x2C 23]\x2C\n  ['InvalidNodeTypeError'\x2C 'INVALID_NODE_TYPE_ERR'\x2C 24]\x2C\n  ['DataCloneError'\x2C 'DATA_CLONE_ERR'\x2C 25]\x2C\n  // There are some more error names\x2C but since they don't have codes assigned\x2C\n  // we don't need to care about them.\n]) {\n  const desc = { enumerable: true\x2C value };\n  ObjectDefineProperty(DOMException\x2C codeName\x2C desc);\n  ObjectDefineProperty(DOMException.prototype\x2C codeName\x2C desc);\n  nameToCodeMap.set(name\x2C value);\n}\n\nexports.DOMException = DOMException;\n
code-source-info,0x168b8b4a330e,7,0,4483,C0O0C4O4483,,
code-creation,JS,10,15366,0x168b8b4a405e,521, node:internal/per_context/domexception:1:1,0x168b8b4a3288,~
code-source-info,0x168b8b4a405e,7,0,4483,C0O0C32O25C38O51C43O69C49O95C55O119C60O143C65O158C70O169C75O180C80O201C86O798C88O798C93O798C95O839C97O839C102O839C104O979C106O979C113O996C123O996C130O1024C140O1025C147O1053C157O1054C162O979C206O2480C212O2446C217O2508C221O2544C235O2560C237O2580C250O2652C263O2722C276O2789C285O2508C290O2902C317O2897C348O2897C351O2869C359O2878C367O2891C371O4262C379O4282C386O4293C399O4293C404O4347C408O4381C420O4347C425O4411C429O4425C435O4425C441O2853C513O4446C515O4467C520O4482,,
code-creation,JS,10,15375,0x168b8b4a43d6,87,get code node:internal/per_context/domexception:95:11,0x168b8b4a3470,~
code-source-info,0x168b8b4a43d6,7,2126,2442,C0O2153C5O2166C10O2166C16O2181C18O2218C23O2240C29O2218C34O2279C39O2299C44O2313C49O2299C56O2328C57O2337C58O2362C63O2376C68O2390C73O2376C79O2401C86O2438,,
code-creation,JS,10,15381,0x168b8b4a44fe,39,get message node:internal/per_context/domexception:87:14,0x168b8b4a3420,~
code-source-info,0x168b8b4a44fe,7,1933,2114,C0O1960C5O1973C10O1973C16O1988C18O2025C23O2047C29O2025C34O2102C38O2110,,
code-creation,JS,10,15386,0x168b8b4a45d6,39,get name node:internal/per_context/domexception:79:11,0x168b8b4a33c8,~
code-source-info,0x168b8b4a45d6,7,1740,1918,C0O1767C5O1780C10O1780C16O1795C18O1832C23O1854C29O1832C34O1909C38O1914,,
code-creation,JS,10,15390,0x168b8b4a47b6,159,DOMException node:internal/per_context/domexception:52:14,0x168b8b4a3378,~
code-source-info,0x168b8b4a47b6,7,1113,1728,C22O1153C27O1153C31O1188C41O1248C46O1272C51O1285C63O1317C70O1345C75O1285C81O1370C86O1382C91O1404C104O1494C115O1404C122O1625C127O1638C139O1670C146O1698C151O1638C158O1727,,
code-creation,JS,10,15399,0x168b8b4a4a8e,89,throwInvalidThisError node:internal/per_context/domexception:16:31,0x168b8b4a3340,~
code-source-info,0x168b8b4a4a8e,7,260,775,C0O260C8O289C10O289C16O315C18O315C20O337C27O360C32O380C42O448C56O550C61O581C75O337C80O745C82O754C86O763C88O763,,
code-creation,JS,10,15405,0x168b8b4a4bae,36,value node:internal/per_context/domexception:29:12,0x168b8b4a48c8,~
code-source-info,0x168b8b4a4bae,7,586,655,C0O614C14O623C27O637C35O647,,
tick,0x7ee81c09f13e,15521,0,0x0,0,0x7ee81bf3b480,0x168b8b4a41ed
code-creation,Eval,10,15621,0x168b8b4a5f5e,5, node:internal/per_context/messageport:1:1,0x168b8b4a5d48,~
script-source,8,node:internal/per_context/messageport,'use strict';\nconst {\n  SymbolFor\x2C\n} = primordials;\n\nclass MessageEvent {\n  constructor(data\x2C target\x2C type\x2C ports) {\n    this.data = data;\n    this.target = target;\n    this.type = type;\n    this.ports = ports ?? [];\n  }\n}\n\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\nconst kCurrentlyReceivingPorts =\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\n\nexports.emitMessage = function(data\x2C ports\x2C type) {\n  if (typeof this[kHybridDispatch] === 'function') {\n    this[kCurrentlyReceivingPorts] = ports;\n    try {\n      this[kHybridDispatch](data\x2C type\x2C undefined);\n    } finally {\n      this[kCurrentlyReceivingPorts] = undefined;\n    }\n    return;\n  }\n\n  const event = new MessageEvent(data\x2C this\x2C type\x2C ports);\n  if (type === 'message') {\n    if (typeof this.onmessage === 'function')\n      this.onmessage(event);\n  } else {\n    // eslint-disable-next-line no-lonely-if\n    if (typeof this.onmessageerror === 'function')\n      this.onmessageerror(event);\n  }\n};\n
code-source-info,0x168b8b4a5f5e,8,0,995,C0O0C4O995,,
code-creation,JS,10,15650,0x168b8b4a61be,69, node:internal/per_context/messageport:1:1,0x168b8b4a5ed8,~
code-source-info,0x168b8b4a61be,8,0,995,C0O0C14O24C39O53C41O248C44O248C48O248C50O329C53O329C57O329C59O385C63O405C68O994,,
code-creation,JS,10,15655,0x168b8b4a62e6,156, node:internal/per_context/messageport:19:31,0x168b8b4a5fc8,~
code-source-info,0x168b8b4a62e6,8,415,993,C0O439C2O455C4O454C11O494C13O499C18O525C25O550C27O555C29O554C44O571C60O618C63O623C67O649C82O672C83O679C84O701C103O701C109O746C111O755C116O792C124O829C129O829C136O923C144O965C149O965C155O992,,
code-creation,JS,10,15661,0x168b8b4a6466,35,MessageEvent node:internal/per_context/messageport:7:14,0x168b8b4a5f90,~
code-source-info,0x168b8b4a6466,8,87,220,C0O121C2O131C6O143C8O155C12O169C14O179C18O191C27O204C29O202C34O219,,
code-creation,Eval,10,16264,0x168b8b4a8e1e,5, node:internal/bootstrap/realm:1:1,0x168b8b4a8940,~
script-source,9,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\n// Only per-realm internal states and bindings should be bootstrapped in this\n// file and no globals should be exposed to the user code.\n//\n// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - BuiltinModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.cc\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/realm') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeSlice\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n});\n\n\n// processBindingAllowList contains the name of bindings that are allowed\n// for access via process.binding(). This is used to provide a transition\n// path for modules that are being moved over to internalBinding.\n// Certain bindings may not actually correspond to an internalBinding any\n// more\x2C we just implement them as legacy wrappers instead. See the\n// legacyWrapperList.\nconst processBindingAllowList = new SafeSet([\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'uv'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'natives'\x2C\n  'util'\x2C\n]);\n\n// The code bellow assumes that the two lists must not contain any modules\n// beginning with "internal/".\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'sea'\x2C\n  'test'\x2C\n  'test/reporters'\x2C\n]);\n// Modules that will only be enabled at run time.\nconst experimentalModuleList = new SafeSet();\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = { __proto__: null };\n\n  process.binding = function binding(module) {\n    module = String(module);\n    const mod = bindingObj[module];\n    if (typeof mod === 'object') {\n      return mod;\n    }\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (runtimeDeprecatedList.has(module)) {\n      process.emitWarning(\n        `Access to process.binding('${module}') is deprecated.`\x2C\n        'DeprecationWarning'\x2C\n        'DEP0111');\n      return internalBinding(module);\n    }\n    if (legacyWrapperList.has(module)) {\n      return requireBuiltin('internal/legacy/processbinding')[module]();\n    }\n    if (processBindingAllowList.has(module)) {\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n/**\n * Set up internalBinding() in the closure.\n * @type {import('typings/globals').internalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = { __proto__: null };\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst selfId = 'internal/bootstrap/realm';\nconst {\n  builtinIds\x2C\n  compileFunction\x2C\n  setInternalLoaders\x2C\n} = internalBinding('builtins');\n\nconst { ModuleWrap } = internalBinding('module_wrap');\nObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\nconst publicBuiltinIds = builtinIds\n  .filter((id) =>\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\n      !experimentalModuleList.has(id)\x2C\n  );\n// Do not expose the loaders to user land even with --expose-internals.\nconst internalBuiltinIds = builtinIds\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\n\n// When --expose-internals is on we'll add the internal builtin ids to these.\nlet canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\nlet canBeRequiredByUsersWithoutSchemeList =\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass BuiltinModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C BuiltinModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the built-in module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  static allowRequireByUsers(id) {\n    if (id === selfId) {\n      // No code because this is an assertion against bugs.\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not allow ${id}`);\n    }\n    canBeRequiredByUsersList.add(id);\n    if (!schemelessBlockList.has(id)) {\n      canBeRequiredByUsersWithoutSchemeList.add(id);\n    }\n  }\n\n  static setRealmAllowRequireByUsers(ids) {\n    canBeRequiredByUsersList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => ArrayPrototypeIncludes(publicBuiltinIds\x2C id)));\n    canBeRequiredByUsersWithoutSchemeList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => !schemelessBlockList.has(id)));\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\n    }\n  }\n\n  static exists(id) {\n    return BuiltinModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    return canBeRequiredByUsersList.has(id);\n  }\n\n  static canBeRequiredWithoutScheme(id) {\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\n  }\n\n  static normalizeRequirableId(id) {\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\n        return normalizedId;\n      }\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\n      return id;\n    }\n\n    return undefined;\n  }\n\n  static isBuiltin(id) {\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\n      typeof id === 'string' &&\n        StringPrototypeStartsWith(id\x2C 'node:') &&\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\n    );\n  }\n\n  static getCanBeRequiredByUsersWithoutSchemeList() {\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const url = `node:${this.id}`;\n    const builtin = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    if (!ArrayPrototypeIncludes(exportsKeys\x2C 'default')) {\n      ArrayPrototypePush(exportsKeys\x2C 'default');\n    }\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        builtin.syncExports();\n        this.setExport('default'\x2C builtin.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : requireBuiltin;\n\n      const fn = compileFunction(id);\n      // Arguments must match the parameters specified in\n      // BuiltinLoader::LookupAndCompile().\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\n    // here to avoid breaking users who parse process.moduleLoadList.\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  BuiltinModule\x2C\n  require: requireBuiltin\x2C\n};\n\nfunction requireBuiltin(id) {\n  if (id === selfId) {\n    return loaderExports;\n  }\n\n  const mod = BuiltinModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    request = StringPrototypeSlice(request\x2C 5);\n  } else if (!BuiltinModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return requireBuiltin(request);\n}\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\x2C\n  } = internalBinding('errors');\n  const {\n    prepareStackTraceCallback\x2C\n    ErrorPrepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\x2C\n    }\x2C\n  } = requireBuiltin('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTraceCallback);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n  // Setup the default Error.prepareStackTrace.\n  ObjectDefineProperty(Error\x2C 'prepareStackTrace'\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: ErrorPrepareStackTrace\x2C\n  });\n}\n\n// Store the internal loaders in C++.\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\n\n// Setup per-realm bindings.\nsetupPrepareStackTrace();\n
code-source-info,0x168b8b4a8e1e,9,0,15282,C0O0C4O15282,,
code-creation,JS,10,16508,0x168b8b4a9dce,747, node:internal/bootstrap/realm:1:1,0x168b8b4a8d98,~
code-source-info,0x168b8b4a9dce
code-creation,JS,10,16521,0x168b8b4aa2ce,45,<static_initializer> node:internal/bootstrap/realm:234:3,0x168b8b4a9648,~
code-source-info,0x168b8b4aa2ce,9,7636,7737,C0O7649C11O7666C18O7684C26O7666C34O7649C44O7737,,
tick,0x7ee81bf7c6d5,16571,0,0x0,6
code-creation,JS,10,16785,0x168b8b4ab826,69,internalBinding node:internal/bootstrap/realm:184:45,0x168b8b4a8fe0,~
code-source-info,0x168b8b4ab826,9,6005,6243,C0O6030C7O6040C11O6054C15O6091C25O6118C30O6116C37O6152C48O6171C56O6207C61O6152C66O6228C68O6239,,
code-creation,JS,10,16912,0x168b8b4ad996,33, node:internal/bootstrap/realm:211:11,0x168b8b4a9080,~
code-source-info,0x168b8b4ad996,9,6712,6808,C0O6768C8O6725C18O6778C21O6801C26O6801C32O6808,,
code-creation,JS,10,16966,0x168b8b4adbbe,24, node:internal/bootstrap/realm:217:11,0x168b8b4a90d0,~
code-source-info,0x168b8b4adbbe,9,6935,7002,C0O6986C8O6943C17O6996C19O6992C23O7002,,
code-creation,JS,10,17015,0x168b8b4add0e,17, node:internal/bootstrap/realm:222:39,0x168b8b4a9120,~
code-source-info,0x168b8b4add0e,9,7228,7264,C0O7236C5O7257C10O7257C16O7264,,
code-creation,JS,10,17065,0x168b8b4adfb6,35, node:internal/bootstrap/realm:235:35,0x168b8b4aa210,~
code-source-info,0x168b8b4adfb6,9,7696,7731,C0O7704C9O7705C18O7713C23O7709C34O7731,,
code-creation,JS,10,17094,0x168b8b4ae156,46,BuiltinModule node:internal/bootstrap/realm:238:14,0x168b8b4a9170,~
code-source-info,0x168b8b4ae156,9,7753,8419,C0O7764C2O7783C9O7778C13O7796C15O7804C19O7860C20O7873C24O7940C25O7952C29O7965C30O7978C34O8265C35O8277C39O8387C40O8403C45O8418,,
code-creation,JS,10,17309,0x168b8b4ae90e,99,setupPrepareStackTrace node:internal/bootstrap/realm:443:32,0x168b8b4a8ef0,~
code-source-info,0x168b8b4ae90e,9,14294,15133,C0O14387C8O14387C13O14313C18O14351C23O14577C29O14577C34O14428C39O14459C44O14517C49O14525C54O14548C59O14709C63O14835C68O14952C75O14973C88O15102C92O14952C98O15132,,
code-creation,JS,10,17396,0x168b8b4afc46,76,requireBuiltin node:internal/bootstrap/realm:420:24,0x168b8b4a8e50,~
code-source-info,0x168b8b4afc46,9,13527,13869,C0O13536C2O13547C4O13543C9O13561C13O13582C14O13602C19O13616C24O13620C29O13620C35O13761C37O13771C47O13819C60O13777C65O13771C66O13840C71O13840C75O13867,,
code-creation,JS,10,17445,0x168b8b4afe46,175,compileForInternalLoader node:internal/bootstrap/realm:383:27,0x168b8b4a95f8,~
code-source-info,0x168b8b4afe46,9,12511,13309,C0O12529C6O12544C12O12573C16O12581C17O12609C22O12617C23O12630C30O12673C37O12704C45O12673C63O12798C70O12798C75O12935C89O12970C103O12927C108O13008C109O13020C124O13050C126O13063C141O13223C152O13242C160O13274C165O13223C170O13297C174O13305,,
tick,0x7ee81c4e2e80,17695,1,0x7ee81a613550,2,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x168b8b4ae92b,0x168b8b4aa0b4
tick,0x7ee819b1ea9b,18763,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x168b8b4ae92b,0x168b8b4aa0b4
code-creation,Eval,10,18818,0x168b8b4b9a06,5, node:internal/errors:1:1,0x168b8b4b8df8,~
script-source,10,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: "error" */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectIsExtensible\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\n\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nlet internalPrepareStackTrace = defaultPrepareStackTrace;\n\n/**\n * The default implementation of `Error.prepareStackTrace` with simple\n * concatenation of stack frames.\n * Read more about `Error.prepareStackTrace` at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n */\nfunction defaultPrepareStackTrace(error\x2C trace) {\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n}\n\nfunction setInternalPrepareStackTrace(callback) {\n  internalPrepareStackTrace = callback;\n}\n\n/**\n * Every realm has its own prepareStackTraceCallback. When `error.stack` is\n * accessed\x2C if the error is created in a shadow realm\x2C the shadow realm's\n * prepareStackTraceCallback is invoked. Otherwise\x2C the principal realm's\n * prepareStackTraceCallback is invoked. Note that accessing `error.stack`\n * of error objects created in a VM Context will always invoke the\n * prepareStackTraceCallback of the principal realm.\n * @param {object} globalThis The global object of the realm that the error was\n *   created in. When the error object is created in a VM Context\x2C this is the\n *   global object of that VM Context.\n * @param {object} error The error object.\n * @param {CallSite[]} trace An array of CallSite objects\x2C read more at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n * @returns {string}\n */\nfunction prepareStackTraceCallback(globalThis\x2C error\x2C trace) {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  // If the Error.prepareStackTrace was not a function\x2C fallback to the\n  // internal implementation.\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\n/**\n * The default Error.prepareStackTrace implementation.\n */\nfunction ErrorPrepareStackTrace(error\x2C trace) {\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\n  if (innerError && outerError && innerError !== outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    let err;\n    if (isErrorStackTraceLimitWritable()) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n      Error.stackTraceLimit = limit;\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\n    } else {\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n    }\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n};\n\nclass NodeAggregateError extends AggregateError {\n  constructor(errors\x2C message) {\n    super(new SafeArrayIterator(errors)\x2C message);\n    this.code = errors[0]?.code;\n  }\n\n  get [kIsNodeError]() {\n    return true;\n  }\n\n  get ['constructor']() {\n    return AggregateError;\n  }\n}\n\nconst assert = require('internal/assert');\n\n// Lazily loaded\nlet util;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  internalUtil ??= require('internal/util');\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect;\n}\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  buffer ??= require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\n    return false;\n  }\n\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\nfunction inspectWithNoCustomRetry(obj\x2C options) {\n  const utilInspect = lazyInternalUtilInspect();\n\n  try {\n    return utilInspect.inspect(obj\x2C options);\n  } catch {\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\n  }\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    super();\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        __proto__: null\x2C\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        __proto__: null\x2C\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        __proto__: null\x2C\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        __proto__: null\x2C\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\x2C\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\n// This is a special error type that is only used for the E function.\nclass HideStackFramesError extends Error {\n}\n\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\n  class HideStackFramesError extends Base {\n    constructor(...args) {\n      if (isErrorStackTraceLimitWritable()) {\n        const limit = Error.stackTraceLimit;\n        Error.stackTraceLimit = 0;\n        super(...args);\n        Error.stackTraceLimit = limit;\n      } else {\n        super(...args);\n      }\n    }\n\n    // This is a workaround for wpt tests that expect that the error\n    // constructor has a `name` property of the base class.\n    get ['constructor']() {\n      return clazz;\n    }\n  }\n\n  return HideStackFramesError;\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  const msg = messages.get(key);\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\n\n  switch (expectedLength) {\n    case 0: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === 0\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n          super(msg);\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    case -1: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          super();\n          ObjectDefineProperty(this\x2C 'message'\x2C {\n            __proto__: null\x2C\n            value: getMessage(key\x2C args\x2C this)\x2C\n            enumerable: false\x2C\n            writable: true\x2C\n            configurable: true\x2C\n          });\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    default: {\n\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === expectedLength\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n\n          ArrayPrototypeUnshift(args\x2C msg);\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n  }\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: unknown[]) => unknown} T\n * @param {T} fn\n * @returns {T}\n */\nfunction hideStackFrames(fn) {\n  function wrappedFn(...args) {\n    try {\n      return ReflectApply(fn\x2C this\x2C args);\n    } catch (error) {\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\n      throw error;\n    }\n  }\n  wrappedFn.withoutStackTrace = fn;\n  return wrappedFn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n\n  const ErrClass = def === SystemError ?\n    makeSystemErrorWithCode(sym) :\n    makeNodeErrorWithCode(def\x2C sym);\n\n  if (otherClasses.length !== 0) {\n    if (otherClasses.includes(HideStackFramesError)) {\n      if (otherClasses.length !== 1) {\n        otherClasses.forEach((clazz) => {\n          if (clazz !== HideStackFramesError) {\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\n          }\n        });\n      }\n    } else {\n      otherClasses.forEach((clazz) => {\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n      });\n    }\n  }\n\n  if (otherClasses.includes(HideStackFramesError)) {\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\n  }\n\n  codes[sym] = ErrClass;\n}\n\nfunction getExpectedArgumentLength(msg) {\n  let expectedLength = 0;\n  const regex = /%[dfijoOs]/g;\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\n  return expectedLength;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\x2C\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const expectedLength = getExpectedArgumentLength(msg);\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\x2C\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  uvBinding.errmap ??= uvBinding.getErrorMap();\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n */\nclass UVException extends Error {\n  /**\n   * @param {object} ctx\n   */\n  constructor(ctx) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n    let path;\n    let dest;\n    if (ctx.path) {\n      path = ctx.path.toString();\n      message += ` '${path}'`;\n    }\n    if (ctx.dest) {\n      dest = ctx.dest.toString();\n      message += ` -> '${dest}'`;\n    }\n\n    super(message);\n\n    for (const prop of ObjectKeys(ctx)) {\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\n        continue;\n      }\n      this[prop] = ctx[prop];\n    }\n\n    this.code = code;\n    if (path) {\n      this.path = path;\n    }\n    if (dest) {\n      this.dest = dest;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n */\nclass UVExceptionWithHostPort extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} address\n   * @param {number} [port]\n   */\n  constructor(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    super(`${message}${details}`);\n\n    this.code = code;\n    this.errno = err;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This used to be util._errnoException().\n */\nclass ErrnoException extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} [original] err\n   */\n  constructor(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    super(message);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nclass ExceptionWithHostPort extends Error {\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    super(`${syscall} ${code}${details}`);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass DNSException extends Error {\n  /**\n   * @param {number|string} code - A libuv error number or a c-ares error code\n   * @param {string} syscall\n   * @param {string} [hostname]\n   */\n  constructor(code\x2C syscall\x2C hostname) {\n    let errno;\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n    // c-ares error code.\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n    // make them available in a property that's not error.errno (since they\n    // can be in conflict with libuv error codes). Also make sure\n    // util.getSystemErrorName() can understand them when an being informed that\n    // the number is a c-ares error code.\n    if (typeof code === 'number') {\n      errno = code;\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n      // long enough that it's not practical to remove it.\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n        code = 'ENOTFOUND'; // Fabricated error name.\n      } else {\n        code = lazyInternalUtil().getSystemErrorName(code);\n      }\n    }\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\n    this.errno = errno;\n    this.code = code;\n    this.syscall = syscall;\n    if (hostname) {\n      this.hostname = hostname;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass ConnResetException extends Error {\n  constructor(msg) {\n    super(msg);\n    this.code = 'ECONNRESET';\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (isWindows) {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\x2C\n      }\x2C\n    } = lazyInternalUtilInspect();\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\n      });\n    } catch {\n      return originalStack;\n    }\n  }\x2C\n};\n\nconst {\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n// Ensures the printed error line is from user code.\nfunction setArrowMessage(err\x2C arrowMessage) {\n  err[arrow_message_private_symbol] = arrowMessage;\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\x2C\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n    }\n    super(message\x2C options);\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\n\n/**\n * This creates a generic Node.js error.\n * @param {string} message The error message.\n * @param {object} errorProperties Object with additional properties to be added to the error.\n * @returns {Error}\n */\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  ObjectAssign(err\x2C errorProperties);\n  return err;\n});\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {*} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  }\n\n  const type = typeof value;\n\n  switch (type) {\n    case 'bigint':\n      return `type bigint (${value}n)`;\n    case 'number':\n      if (value === 0) {\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\n      } else if (value !== value) { // eslint-disable-line no-self-compare\n        return 'type number (NaN)';\n      } else if (value === Infinity) {\n        return 'type number (Infinity)';\n      } else if (value === -Infinity) {\n        return 'type number (-Infinity)';\n      }\n      return `type number (${value})`;\n    case 'boolean':\n      return value ? 'type boolean (true)' : 'type boolean (false)';\n    case 'symbol':\n      return `type symbol (${String(value)})`;\n    case 'function':\n      return `function ${value.name}`;\n    case 'object':\n      if (value.constructor && 'name' in value.constructor) {\n        return `an instance of ${value.constructor.name}`;\n      }\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\n    case 'string':\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\n        return `type string ('${value}')`;\n      }\n      return `type string (${JSONStringify(value)})`;\n    default:\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\n      if (value.length > 28) {\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\n      }\n\n      return `type ${type} (${value})`;\n  }\n}\n\n/**\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\n * We cannot use Intl.ListFormat because it's not available in\n * --without-intl builds.\n * @param {string[]} array An array of strings.\n * @param {string} [type] The list type to be inserted before the last element.\n * @returns {string}\n */\nfunction formatList(array\x2C type = 'and') {\n  switch (array.length) {\n    case 0: return '';\n    case 1: return `${array[0]}`;\n    case 2: return `${array[0]} ${type} ${array[1]}`;\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\n    default:\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\n  }\n}\n\nmodule.exports = {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  NodeAggregateError\x2C\n  codes\x2C\n  ConnResetException\x2C\n  DNSException\x2C\n  // This is exported only to facilitate testing.\n  determineSpecificType\x2C\n  E\x2C\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  fatalExceptionStackEnhancers\x2C\n  formatList\x2C\n  genericNodeError\x2C\n  getMessage\x2C\n  hideInternalStackFrames\x2C\n  hideStackFrames\x2C\n  inspectWithNoCustomRetry\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  kIsNodeError\x2C\n  defaultPrepareStackTrace\x2C\n  setInternalPrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  prepareStackTraceCallback\x2C\n  ErrorPrepareStackTrace\x2C\n  setArrowMessage\x2C\n  SystemError\x2C\n  uvErrmapGet\x2C\n  UVException\x2C\n  UVExceptionWithHostPort\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_ACCESS_DENIED'\x2C\n  function(msg\x2C permission = ''\x2C resource = '') {\n    this.permission = permission;\n    this.resource = resource;\n    return msg;\n  }\x2C\n  Error);\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\n  'Deserialize main function is already configured.'\x2C Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error\x2C HideStackFramesError);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS'\x2C\n  'Number of custom settings exceeds MAX_ADDITIONAL_SETTINGS'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\n  'ServerResponse has an already assigned socket'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\n// TODO(aduh95): change the error to mention import attributes instead of import assertions.\nE('ERR_IMPORT_ASSERTION_TYPE_FAILED'\x2C\n  'Module "%s" is not of type "%s"'\x2C TypeError);\n// TODO(aduh95): change the error to mention import attributes instead of import assertions.\nE('ERR_IMPORT_ASSERTION_TYPE_MISSING'\x2C\n  'Module "%s" needs an import attribute of type "%s"'\x2C TypeError);\n// TODO(aduh95): change the error to mention import attributes instead of import assertions.\nE('ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED'\x2C\n  'Import attribute type "%s" is unsupported'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\n  'Import attribute "%s" with value "%s" is not supported'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 1) {\n        msg += `one of ${formatList(other\x2C 'or')}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    msg += `. Received ${determineSpecificType(actual)}`;\n\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\n}\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  const type = determineSpecificType(value);\n\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\n  this.input = input;\n\n  if (base != null) {\n    this.base = base;\n  }\n\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE(\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\n  '"%s" did not call the next hook in its chain and did not' +\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\n  Error\x2C\n);\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\n  (moduleURL\x2C realIntegrities) => {\n    let msg = `The content of "${\n      moduleURL\n    }" does not match the expected integrity.`;\n    if (realIntegrities.size) {\n      const sri = ArrayPrototypeJoin(\n        ArrayFrom(realIntegrities.entries()\x2C\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\n        ' '\x2C\n      );\n      msg += ` Integrities found are: ${sri}`;\n    } else {\n      msg += ' The resource was not found in the policy.';\n    }\n    return msg;\n  }\x2C Error);\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\n  'conditions: %s'\x2C\n  Error);\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\n  SyntaxError);\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\n  'Manifest resource %s has invalid property value for %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\n  TypeError);\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\n  'Manifest specified unknown error behavior "%s".'\x2C\n  SyntaxError);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\x2C\n    );\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\n  if (exactUrl) {\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\n  }\n  return `Cannot find ${\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\n  "import '%s' received a bad response: %s"\x2C Error);\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\n  "import of '%s' by %s is not supported: %s"\x2C Error);\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\nE('ERR_NOT_IN_SINGLE_EXECUTABLE_APPLICATION'\x2C\n  'Operation cannot be invoked when not in a single-executable application'\x2C Error);\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError\x2C HideStackFramesError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\n  'command does not take positional arguments'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\n    "argument starting with a '-'\x2C place it at the end of the command after " +\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\n  return `Unknown option '${option}'${suggestDashDash}`;\n}\x2C TypeError);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_REQUIRE_CYCLE_MODULE'\x2C '%s'\x2C Error);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SINGLE_EXECUTABLE_APPLICATION_ASSET_NOT_FOUND'\x2C\n  'Cannot find asset %s for the single executable application'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\n}\x2C RangeError\x2C HideStackFramesError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\n  'Socket closed before the connection was established'\x2C\n  Error);\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\n  'Socket connection timeout'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\n  hideInternalStackFrames(this);\n  this.cause = tokenCausedError;\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\n  return errorMsg + errorDetails;\n}\x2C SyntaxError);\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\n  hideInternalStackFrames(this);\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\n         "The 'failureType' argument must be of type string or symbol.");\n\n  let msg = error?.message ?? error;\n\n  if (typeof msg !== 'string') {\n    msg = inspectWithNoCustomRetry(msg);\n  }\n\n  this.failureType = failureType;\n  this.cause = error;\n  return msg;\n}\x2C Error);\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\n  return `ALPN callback returned a value (${\n    value\n  }) that did not match any of the client's offered protocols (${\n    protocols.join('\x2C ')\n  })`;\n}\x2C TypeError);\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\n  TypeError);\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\n  SyntaxError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\n  RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\n  return `Directory import '${path}' is not supported ` +\n    `resolving ES modules imported from ${base}`;\n}\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\nE('ERR_UNSUPPORTED_RESOLVE_REQUEST'\x2C\n  'Failed to resolve module specifier "%s" from "%s": Invalid relative URL or base scheme is not hierarchical.'\x2C\n  TypeError);\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\n  TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\n  this.cause = cause;\n  return message;\n}\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\n
code-source-info,0x168b8b4b9a06,10,0,68840,C0O0C4O68840,,
code-creation,JS,10,19894,0x19f2a9a4917e,8552, node:internal/errors:1:1,0x168b8b4b9980,~
code-source-info,0x19f2a9a4917e
tick,0x7ee81914998c,19982,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x168b8b4ae92b,0x168b8b4aa0b4
code-creation,Eval,10,20342,0x19f2a9a508d6,5, node:internal/assert:1:1,0x19f2a9a50760,~
script-source,11,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x19f2a9a508d6,11,0,474,C0O0C4O474,,
code-creation,JS,10,20360,0x19f2a9a50a6e,45, node:internal/assert:1:1,0x19f2a9a50850,~
code-source-info,0x19f2a9a50a6e,11,0,474,C0O0C28O19C29O19C31O428C33O440C37O449C39O464C44O473,,
code-creation,JS,10,20593,0x19f2a9a535f6,27,hideStackFrames node:internal/errors:535:25,0x168b8b4b9f28,~
code-source-info,0x19f2a9a535f6,10,14681,14954,C0O14681C15O14899C20O14927C24O14935C26O14952,,
code-creation,JS,10,20720,0x19f2a9a57e46,232,E node:internal/errors:550:11,0x168b8b4b9fa0,~
code-source-info,0x19f2a9a57e46,10,15076,16141,C0O15076C30O15257C37O15266C47O15266C53O15301C57O15309C59O15305C74O15327C90O15362C95O15301C97O15415C103O15422C108O15452C117O15461C120O15452C127O15509C134O15516C139O15546C149O15546C156O15866C166O15866C171O15993C180O16002C183O15993C190O16031C201O16063C206O16061C210O16117C224O16128C231O16140,,
code-creation,JS,10,20806,0x19f2a9a58f1e,260,makeNodeErrorWithCode node:internal/errors:429:31,0x168b8b4b9e50,~
code-source-info,0x19f2a9a58f1e,10,11963,14495,C0O11963C19O11991C26O12000C34O12000C39O11991C41O12035C59O12066C63O12035C65O12101C86O12171C94O12624C102O12690C139O12846C141O12863C145O12915C153O13386C161O13452C198O13608C200O13625C204O13678C212O14244C220O14310C257O14466C259O14483,,
code-creation,JS,10,20816,0x19f2a9a590ee,8,<instance_members_initializer> node:internal/errors:496:7,0x19f2a9a585b8,~
code-source-info,0x19f2a9a590ee,10,13654,14459,C0O13700C7O14459,,
code-creation,JS,10,20820,0x19f2a9a5917e,8,<instance_members_initializer> node:internal/errors:464:7,0x19f2a9a58440,~
code-source-info,0x19f2a9a5917e,10,12891,13601,C0O12937C7O13601,,
code-creation,JS,10,20824,0x19f2a9a5920e,8,<instance_members_initializer> node:internal/errors:435:7,0x19f2a9a582c8,~
code-source-info,0x19f2a9a5920e,10,12147,12839,C0O12193C7O12839,,
code-creation,JS,10,20896,0x19f2a9a5974e,32,getExpectedArgumentLength node:internal/errors:583:35,0x168b8b4b9ff0,~
code-source-info,0x19f2a9a5974e,10,16177,16337,C0O16208C2O16227C8O16283C13O16251C20O16293C25O16244C29O16313C31O16335,,
tick,0x7ee81c1c1480,20916,0,0x0,3,0x7ee81c5678d0,0x19f2a9a58f59,0x19f2a9a57ea0,0x19f2a9a496f4,0x168b8b4afead,0x168b8b4afc8d,0x168b8b4ae92b,0x168b8b4aa0b4
code-creation,RegExp,3,20978,0x7ee79be483c0,824,%[dfijoOs]
code-creation,JS,11,21113,0x7ee79be48740,2048,makeNodeErrorWithCode node:internal/errors:429:31,0x168b8b4b9e50,^
code-source-info,0x7ee79be48740,10,11963,14495,,,
code-creation,JS,11,21129,0x7ee79be48f80,444,copyProps node:internal/per_context/primordials:357:19,0x168b8b496020,^
code-source-info,0x7ee79be48f80,6,10134,10407,,,
code-creation,JS,11,21138,0x7ee79be49180,356, node:internal/bootstrap/realm:211:11,0x168b8b4a9080,^
code-source-info,0x7ee79be49180,9,6712,6808,,,
code-creation,JS,11,21145,0x7ee79be49300,288, node:internal/bootstrap/realm:217:11,0x168b8b4a90d0,^
code-source-info,0x7ee79be49300,9,6935,7002,,,
code-creation,JS,11,21151,0x7ee79be49440,188, node:internal/bootstrap/realm:222:39,0x168b8b4a9120,^
code-source-info,0x7ee79be49440,9,7228,7264,,,
code-creation,JS,11,21157,0x7ee79be49540,320,BuiltinModule node:internal/bootstrap/realm:238:14,0x168b8b4a9170,^
code-source-info,0x7ee79be49540,9,7753,8419,,,
code-creation,JS,11,21164,0x7ee79be496c0,256, node:internal/bootstrap/realm:235:35,0x168b8b4aa210,^
code-source-info,0x7ee79be496c0,9,7696,7731,,,
code-creation,JS,11,21173,0x7ee79be49800,364,getExpectedArgumentLength node:internal/errors:583:35,0x168b8b4b9ff0,^
code-source-info,0x7ee79be49800,10,16177,16337,,,
code-creation,JS,11,21188,0x7ee79be49980,1640,E node:internal/errors:550:11,0x168b8b4b9fa0,^
code-source-info,0x7ee79be49980,10,15076,16141,,,
new,MemoryChunk,0x305ee1e80000,262144
new,MemoryChunk,0x307edb900000,262144
code-creation,JS,10,21750,0x19f2a9a5e5f6,42,makeNodeErrorForHideStackFrame node:internal/errors:406:40,0x168b8b4b9dd0,~
code-source-info,0x19f2a9a5e5f6,10,11381,11931,C0O11381C9O11434C17O11849C39O11901C41O11929,,
code-creation,JS,10,21806,0x19f2a9a5ebc6,35,makeSystemErrorWithCode node:internal/errors:394:33,0x168b8b4b9d58,~
code-source-info,0x19f2a9a5ebc6,10,11111,11224,C0O11111C9O11121C34O11222,,
code-creation,JS,10,21943,0x19f2a9a61426,84, node:internal/errors:562:30,0x19f2a9a57d00,~
code-source-info,0x19f2a9a61426,10,15554,15823,C0O15577C4O15591C6O15587C11O15627C16O15642C30O15679C33O15650C38O15648C42O15697C47O15712C51O15705C62O15772C65O15787C69O15780C73O15741C78O15739C83O15822,,
tick,0x7ee819a99a1e,21975,0,0x0,3,0x7ee81c5678d0,0x7ee81bd87830,0x7ee79be49e06,0x19f2a9a49d51,0x168b8b4afead,0x168b8b4afc8d,0x168b8b4ae92b,0x168b8b4aa0b4
code-creation,JS,10,22257,0x19f2a9a68c96,33, node:internal/errors:570:28,0x19f2a9a57d50,~
code-source-info,0x19f2a9a68c96,10,15874,15960,C0O15895C5O15910C19O15947C22O15918C27O15916C32O15959,,
code-creation,Eval,10,22938,0x19f2a9a74ee6,5, node:internal/bootstrap/node:1:1,0x19f2a9a74c00,~
script-source,12,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\n//\n// This file is invoked by `Realm::BootstrapRealm()` in `src/node_realm.cc`\x2C\n// and is responsible for setting up Node.js core before main scripts\n// under `lib/internal/main/` are executed.\n//\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\n// that is generated at build-time with a `node_mksnapshot` executable.\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\n// from `src/node_snapshotable.cc`.\n// This snapshot captures the V8 heap initialized by scripts under\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\n// running this script and others in `lib/internal/bootstrap/`. To disable this\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\n// Node.js actually runs this script to initialize the heap.\n//\n// This script is expected not to perform any asynchronous operations itself\n// when being executed - those should be done in either\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\n// query any run-time states (e.g. command line arguments\x2C environment\n// variables) when being executed - functions in this script that are invoked\n// at a later time can\x2C however\x2C query those states lazily.\n// The majority of the code here focuses on setting up the global object and\n// the process object in a synchronous\x2C environment-independent manner.\n//\n// Scripts run before this file:\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\n//   builtins that won't be affected by user land monkey-patching for internal\n//   modules to use.\n// - `lib/internal/per_context/domexception.js`: implementation of the\n//   `DOMException` class.\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\n//   `MessagePort` implementation.\n// - `lib/internal/bootstrap/realm.js`: this sets up internal binding and\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\n//   `internalBinding()` and `BuiltinModule`\x2C and per-realm internal states\n//   and bindings\x2C including `prepare_stack_trace_callback`.\n//\n// The initialization done in this script is included in both the main thread\n// and the worker threads. After this\x2C further initialization is done based\n// on the configuration of the Node.js instance by executing the scripts in\n// `lib/internal/bootstrap/switches/`.\n//\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\n// execution. They may run additional setups exported by\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by `BuiltinLoader::CompileAndCall()`.\n/* global process\x2C require\x2C internalBinding\x2C primordials */\n\nconst {\n  FunctionPrototypeCall\x2C\n  JSONParse\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  SymbolToStringTag\x2C\n  globalThis\x2C\n} = primordials;\nconst config = internalBinding('config');\nconst internalTimers = require('internal/timers');\nconst {\n  defineOperation\x2C\n  deprecate\x2C\n} = require('internal/util');\nconst {\n  validateInteger\x2C\n} = require('internal/validators');\nconst {\n  constants: {\n    kExitCode\x2C\n    kExiting\x2C\n    kHasExitCode\x2C\n  }\x2C\n  privateSymbols: {\n    exit_info_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\nsetupProcessObject();\n\nsetupGlobalProxy();\nsetupBuffer();\n\nprocess.domain = null;\n\n// process._exiting and process.exitCode\n{\n  const fields = process[exit_info_private_symbol];\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\n    __proto__: null\x2C\n    get() {\n      return fields[kExiting] === 1;\n    }\x2C\n    set(value) {\n      fields[kExiting] = value ? 1 : 0;\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n  });\n\n  let exitCode;\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\n    __proto__: null\x2C\n    get() {\n      return exitCode;\n    }\x2C\n    set(code) {\n      if (code !== null && code !== undefined) {\n        let value = code;\n        if (typeof code === 'string' && code !== '' &&\n          NumberIsNaN((value = Number(code)))) {\n          value = code;\n        }\n        validateInteger(value\x2C 'code');\n        fields[kExitCode] = value;\n        fields[kHasExitCode] = 1;\n      } else {\n        fields[kHasExitCode] = 0;\n      }\n      exitCode = code;\n    }\x2C\n    enumerable: true\x2C\n    configurable: false\x2C\n  });\n}\nprocess._exiting = false;\n\n// process.config is serialized config.gypi\nconst binding = internalBinding('builtins');\n\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\n  // The `reviver` argument of the JSONParse method will visit all the values of\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\n  // explicitly freeze the config outside of this method\n  return ObjectFreeze(value);\n});\n\nObjectDefineProperty(process\x2C 'config'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n  value: processConfig\x2C\n});\n\nrequire('internal/worker/js_transferable').setup();\n\n// Bootstrappers for all threads\x2C including worker threads and main thread\nconst perThreadSetup = require('internal/process/per_thread');\nconst rawMethods = internalBinding('process_methods');\n\n// Set up methods on the process object for all threads\n{\n  process.dlopen = rawMethods.dlopen;\n  process.uptime = rawMethods.uptime;\n\n  // TODO(joyeecheung): either remove them or make them public\n  process._getActiveRequests = rawMethods._getActiveRequests;\n  process._getActiveHandles = rawMethods._getActiveHandles;\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\n\n  // TODO(joyeecheung): remove these\n  process.reallyExit = rawMethods.reallyExit;\n  process._kill = rawMethods._kill;\n\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\n  process.loadEnvFile = wrapped.loadEnvFile;\n  process._rawDebug = wrapped._rawDebug;\n  process.cpuUsage = wrapped.cpuUsage;\n  process.resourceUsage = wrapped.resourceUsage;\n  process.memoryUsage = wrapped.memoryUsage;\n  process.constrainedMemory = rawMethods.constrainedMemory;\n  process.availableMemory = rawMethods.availableMemory;\n  process.kill = wrapped.kill;\n  process.exit = wrapped.exit;\n\n  process.hrtime = perThreadSetup.hrtime;\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\n\n  process.openStdin = function() {\n    process.stdin.resume();\n    return process.stdin;\n  };\n}\n\nconst credentials = internalBinding('credentials');\nif (credentials.implementsPosixCredentials) {\n  process.getuid = credentials.getuid;\n  process.geteuid = credentials.geteuid;\n  process.getgid = credentials.getgid;\n  process.getegid = credentials.getegid;\n  process.getgroups = credentials.getgroups;\n}\n\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\n// process. They use the same functions as the JS embedder API. These callbacks\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\n// and the cost of doing so is negligible.\nconst { nativeHooks } = require('internal/async_hooks');\ninternalBinding('async_wrap').setupHooks(nativeHooks);\n\nconst {\n  setupTaskQueue\x2C\n} = require('internal/process/task_queues');\nconst timers = require('timers');\n// Non-standard extensions:\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\n\n// Set the per-Environment callback that will be called\n// when the TrackingTraceStateObserver updates trace state.\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\n// attached to the per-process TracingController.\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\n\n// process.allowedNodeEnvironmentFlags\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\n  __proto__: null\x2C\n  get() {\n    const flags = perThreadSetup.buildAllowedFlags();\n    process.allowedNodeEnvironmentFlags = flags;\n    return process.allowedNodeEnvironmentFlags;\n  }\x2C\n  // If the user tries to set this to another value\x2C override\n  // this completely to that value.\n  set(value) {\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\n      __proto__: null\x2C\n      value\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n    });\n  }\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n});\n\n// process.assert\nprocess.assert = deprecate(\n  perThreadSetup.assert\x2C\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\n  'DEP0100');\n\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\n// deprecate it in favor of a better API?\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\nconst features = {\n  inspector: hasInspector\x2C\n  debug: isDebugBuild\x2C\n  uv: true\x2C\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\n  tls_alpn: hasOpenSSL\x2C\n  tls_sni: hasOpenSSL\x2C\n  tls_ocsp: hasOpenSSL\x2C\n  tls: hasOpenSSL\x2C\n  // This needs to be dynamic because --no-node-snapshot disables the\n  // code cache even if the binary is built with embedded code cache.\n  get cached_builtins() {\n    return binding.hasCachedBuiltins();\n  }\x2C\n};\n\nObjectDefineProperty(process\x2C 'features'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  configurable: false\x2C\n  value: features\x2C\n});\n\n{\n  const {\n    onGlobalUncaughtException\x2C\n    setUncaughtExceptionCaptureCallback\x2C\n    hasUncaughtExceptionCaptureCallback\x2C\n  } = require('internal/process/execution');\n\n  // For legacy reasons this is still called `_fatalException`\x2C even\n  // though it is now a global uncaught exception handler.\n  // The C++ land node::errors::TriggerUncaughtException grabs it\n  // from the process object because it has been monkey-patchable.\n  // TODO(joyeecheung): investigate whether process._fatalException\n  // can be deprecated.\n  process._fatalException = onGlobalUncaughtException;\n  process.setUncaughtExceptionCaptureCallback =\n    setUncaughtExceptionCaptureCallback;\n  process.hasUncaughtExceptionCaptureCallback =\n    hasUncaughtExceptionCaptureCallback;\n}\n\nconst { emitWarning\x2C emitWarningSync } = require('internal/process/warning');\nprocess.emitWarning = emitWarning;\ninternalBinding('process_methods').setEmitWarningSync(emitWarningSync);\n\n// We initialize the tick callbacks and the timer callbacks last during\n// bootstrap to make sure that any operation done before this are synchronous.\n// If any ticks or timers are scheduled before this they are unlikely to work.\n{\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\n  process.nextTick = nextTick;\n  // Used to emulate a tick manually in the JS land.\n  // A better name for this function would be `runNextTicks` but\n  // it has been exposed to the process object so we keep this legacy name\n  // TODO(joyeecheung): either remove it or make it public\n  process._tickCallback = runNextTicks;\n\n  const { setupTimers } = internalBinding('timers');\n  const {\n    processImmediate\x2C\n    processTimers\x2C\n  } = internalTimers.getTimerCallbacks(runNextTicks);\n  // Sets two per-Environment callbacks that will be run from libuv:\n  // - processImmediate will be run in the callback of the per-Environment\n  //   check handle.\n  // - processTimers will be run in the callback of the per-Environment timer.\n  setupTimers(processImmediate\x2C processTimers);\n  // Note: only after this point are the timers effective\n}\n\n{\n  const {\n    getSourceMapsEnabled\x2C\n    setSourceMapsEnabled\x2C\n    maybeCacheGeneratedSourceMap\x2C\n  } = require('internal/source_map/source_map_cache');\n  const {\n    setMaybeCacheGeneratedSourceMap\x2C\n  } = internalBinding('errors');\n\n  ObjectDefineProperty(process\x2C 'sourceMapsEnabled'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return getSourceMapsEnabled();\n    }\x2C\n  });\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n  // The C++ land calls back to maybeCacheGeneratedSourceMap()\n  // when code is generated by user with eval() or new Function()\n  // to cache the source maps from the evaluated code\x2C if any.\n  setMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\n}\n\n{\n  const { getBuiltinModule } = require('internal/modules/helpers');\n  process.getBuiltinModule = getBuiltinModule;\n}\n\nfunction setupProcessObject() {\n  const EventEmitter = require('events');\n  const origProcProto = ObjectGetPrototypeOf(process);\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\n  FunctionPrototypeCall(EventEmitter\x2C process);\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: false\x2C\n    value: 'process'\x2C\n  });\n\n  // Create global.process as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n\nfunction setupGlobalProxy() {\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    value: 'global'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n  globalThis.global = globalThis;\n}\n\nfunction setupBuffer() {\n  const {\n    Buffer\x2C\n  } = require('buffer');\n  const bufferBinding = internalBinding('buffer');\n\n  // Only after this point can C++ use Buffer::New()\n  bufferBinding.setBufferPrototype(Buffer.prototype);\n  delete bufferBinding.setBufferPrototype;\n\n  // Create global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n
code-source-info,0x19f2a9a74ee6,12,0,14127,C0O0C4O14127,,
code-creation,JS,10,23186,0x19f2a9a75b1e,1727, node:internal/bootstrap/node:1:1,0x19f2a9a74e60,~
code-source-info,0x19f2a9a75b1e
tick,0x7ee8191499a5,23230,0,0x0,3
code-creation,Eval,10,23722,0x19f2a9a7871e,5, node:internal/timers:1:1,0x19f2a9a782f8,~
script-source,13,node:internal/timers,'use strict';\n\n// HOW and WHY the timers implementation works the way it does.\n//\n// Timers are crucial to Node.js. Internally\x2C any TCP I/O connection creates a\n// timer so that we can time out of connections. Additionally\x2C many user\n// libraries and applications also use timers. As such there may be a\n// significantly large amount of timeouts scheduled at any given time.\n// Therefore\x2C it is very important that the timers implementation is performant\n// and efficient.\n//\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\n// linked list implementation\x2C since timers depend on it extensively. It can be\n// somewhat counter-intuitive at first\x2C as it is not actually a class. Instead\x2C\n// it is a set of helpers that operate on an existing object.\n//\n// In order to be as performant as possible\x2C the architecture and data\n// structures are designed so that they are optimized to handle the following\n// use cases as efficiently as possible:\n\n// - Adding a new timer. (insert)\n// - Removing an existing timer. (remove)\n// - Handling a timer timing out. (timeout)\n//\n// Whenever possible\x2C the implementation tries to make the complexity of these\n// operations as close to constant-time as possible.\n// (So that performance is not impacted by the number of scheduled timers.)\n//\n// Object maps are kept which contain linked lists keyed by their duration in\n// milliseconds.\n//\n/* eslint-disable node-core/non-ascii-character */\n//\n// \u2554\u2550\u2550\u2550\u2550 > Object Map\n// \u2551\n// \u2560\u2550\u2550\n// \u2551 lists: { '40': { }\x2C '320': { etc } } (keys of millisecond duration)\n// \u255a\u2550\u2550          \u250c\u2500\u2500\u2500\u2500\u2518\n//              \u2502\n// \u2554\u2550\u2550          \u2502\n// \u2551 TimersList { _idleNext: { }\x2C _idlePrev: (self) }\n// \u2551         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n// \u2551    \u2554\u2550\u2550  \u2502                              ^\n// \u2551    \u2551    { _idleNext: { }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\n// \u2551    \u2551      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n// \u2551    \u2551      \u2502                                  ^\n// \u2551    \u2551      { _idleNext: { etc }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\n// \u2560\u2550\u2550  \u2560\u2550\u2550\n// \u2551    \u2551\n// \u2551    \u255a\u2550\u2550\u2550\u2550 >  Actual JavaScript timeouts\n// \u2551\n// \u255a\u2550\u2550\u2550\u2550 > Linked List\n//\n/* eslint-enable node-core/non-ascii-character */\n//\n// With this\x2C virtually constant-time insertion (append)\x2C removal\x2C and timeout\n// is possible in the JavaScript layer. Any one list of timers is able to be\n// sorted by just appending to it because all timers within share the same\n// duration. Therefore\x2C any timer added later will always have been scheduled to\n// timeout later\x2C thus only needing to be appended.\n// Removal from an object-property linked list is also virtually constant-time\n// as can be seen in the lib/internal/linkedlist.js implementation.\n// Timeouts only need to process any timers currently due to expire\x2C which will\n// always be at the beginning of the list for reasons stated above. Any timers\n// after the first one encountered that does not yet need to timeout will also\n// always be due to timeout at a later time.\n//\n// Less-than constant time operations are thus contained in two places:\n// The PriorityQueue \u2014 an efficient binary heap implementation that does all\n// operations in worst-case O(log n) time \u2014 which manages the order of expiring\n// Timeout lists and the object map lookup of a specific list by the duration of\n// timers within (or creation of a new list). However\x2C these operations combined\n// have shown to be trivial in comparison to other timers architectures.\n\nconst {\n  MathMax\x2C\n  MathTrunc\x2C\n  NumberIsFinite\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst binding = internalBinding('timers');\nconst {\n  immediateInfo\x2C\n  timeoutInfo\x2C\n} = binding;\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  // The needed emit*() functions.\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n} = require('internal/async_hooks');\n\n// Symbols for storing async id state.\nconst async_id_symbol = Symbol('asyncId');\nconst trigger_async_id_symbol = Symbol('triggerId');\n\nconst kHasPrimitive = Symbol('kHasPrimitive');\n\nconst {\n  ERR_OUT_OF_RANGE\x2C\n} = require('internal/errors').codes;\nconst {\n  validateFunction\x2C\n  validateNumber\x2C\n} = require('internal/validators');\n\nconst L = require('internal/linkedlist');\nconst PriorityQueue = require('internal/priority_queue');\n\nconst { inspect } = require('internal/util/inspect');\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\n  debug = fn;\n});\n\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\nconst kCount = 0;\nconst kRefCount = 1;\nconst kHasOutstanding = 2;\n\n// Timeout values > TIMEOUT_MAX are set to 1.\nconst TIMEOUT_MAX = 2 ** 31 - 1;\n\nlet timerListId = NumberMIN_SAFE_INTEGER;\n\nconst kRefed = Symbol('refed');\n\nlet nextExpiry = Infinity;\n// timeoutInfo is an Int32Array that contains the reference count of Timeout\n// objects at index 0. This is a TypedArray so that GetActiveResourcesInfo() in\n// `src/node_process_methods.cc` is able to access this value without crossing\n// the JS-C++ boundary\x2C which is slow at the time of writing.\ntimeoutInfo[0] = 0;\n\n// This is a priority queue with a custom sorting function that first compares\n// the expiry times of two lists and if they're the same then compares their\n// individual IDs to determine which list was created first.\nconst timerListQueue = new PriorityQueue(compareTimersLists\x2C setPosition);\n\n// Object map containing linked lists of timers\x2C keyed and sorted by their\n// duration in milliseconds.\n//\n// - key = time in milliseconds\n// - value = linked list\nconst timerListMap = { __proto__: null };\n\n// This stores all the known timer async ids to allow users to clearTimeout and\n// clearInterval using those ids\x2C to match the spec and the rest of the web\n// platform.\nconst knownTimersById = { __proto__: null };\n\nfunction initAsyncResource(resource\x2C type) {\n  const asyncId = resource[async_id_symbol] = newAsyncId();\n  const triggerAsyncId =\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\n  if (initHooksExist())\n    emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\nclass Timeout {\n  // Timer constructor function.\n  // The entire prototype is defined in lib/timers.js\n  constructor(callback\x2C after\x2C args\x2C isRepeat\x2C isRefed) {\n    after *= 1; // Coalesce to number or NaN\n    if (!(after >= 1 && after <= TIMEOUT_MAX)) {\n      if (after > TIMEOUT_MAX) {\n        process.emitWarning(`${after} does not fit into` +\n                            ' a 32-bit signed integer.' +\n                            '\\nTimeout duration was set to 1.'\x2C\n                            'TimeoutOverflowWarning');\n      }\n      after = 1; // Schedule on next tick\x2C follows browser behavior\n    }\n\n    this._idleTimeout = after;\n    this._idlePrev = this;\n    this._idleNext = this;\n    this._idleStart = null;\n    // This must be set to null first to avoid function tracking\n    // on the hidden class\x2C revisit in V8 versions after 6.2\n    this._onTimeout = null;\n    this._onTimeout = callback;\n    this._timerArgs = args;\n    this._repeat = isRepeat ? after : null;\n    this._destroyed = false;\n\n    if (isRefed)\n      incRefCount();\n    this[kRefed] = isRefed;\n    this[kHasPrimitive] = false;\n\n    initAsyncResource(this\x2C 'Timeout');\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [inspect.custom](_\x2C options) {\n    return inspect(this\x2C {\n      ...options\x2C\n      // Only inspect one level.\n      depth: 0\x2C\n      // It should not recurse.\n      customInspect: false\x2C\n    });\n  }\n\n  refresh() {\n    if (this[kRefed])\n      active(this);\n    else\n      unrefActive(this);\n\n    return this;\n  }\n\n  unref() {\n    if (this[kRefed]) {\n      this[kRefed] = false;\n      if (!this._destroyed)\n        decRefCount();\n    }\n    return this;\n  }\n\n  ref() {\n    if (!this[kRefed]) {\n      this[kRefed] = true;\n      if (!this._destroyed)\n        incRefCount();\n    }\n    return this;\n  }\n\n  hasRef() {\n    return this[kRefed];\n  }\n}\n\nclass TimersList {\n  constructor(expiry\x2C msecs) {\n    this._idleNext = this; // Create the list with the linkedlist properties to\n    this._idlePrev = this; // Prevent any unnecessary hidden class changes.\n    this.expiry = expiry;\n    this.id = timerListId++;\n    this.msecs = msecs;\n    this.priorityQueuePosition = null;\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [inspect.custom](_\x2C options) {\n    return inspect(this\x2C {\n      ...options\x2C\n      // Only inspect one level.\n      depth: 0\x2C\n      // It should not recurse.\n      customInspect: false\x2C\n    });\n  }\n}\n\n// A linked list for storing `setImmediate()` requests\nclass ImmediateList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  // Appends an item to the end of the linked list\x2C adjusting the current tail's\n  // next pointer and the item's previous pointer where applicable\n  append(item) {\n    if (this.tail !== null) {\n      this.tail._idleNext = item;\n      item._idlePrev = this.tail;\n    } else {\n      this.head = item;\n    }\n    this.tail = item;\n  }\n\n  // Removes an item from the linked list\x2C adjusting the pointers of adjacent\n  // items and the linked list's head or tail pointers as necessary\n  remove(item) {\n    if (item._idleNext) {\n      item._idleNext._idlePrev = item._idlePrev;\n    }\n\n    if (item._idlePrev) {\n      item._idlePrev._idleNext = item._idleNext;\n    }\n\n    if (item === this.head)\n      this.head = item._idleNext;\n    if (item === this.tail)\n      this.tail = item._idlePrev;\n\n    item._idleNext = null;\n    item._idlePrev = null;\n  }\n}\n\n// Create a single linked list instance only once at startup\nconst immediateQueue = new ImmediateList();\n\nfunction incRefCount() {\n  if (timeoutInfo[0]++ === 0) {\n    // We need to use the binding as the receiver for fast API calls.\n    binding.toggleTimerRef(true);\n  }\n}\n\nfunction decRefCount() {\n  if (--timeoutInfo[0] === 0) {\n    // We need to use the binding as the receiver for fast API calls.\n    binding.toggleTimerRef(false);\n  }\n}\n\n// Schedule or re-schedule a timer.\n// The item must have been enroll()'d first.\nfunction active(item) {\n  insertGuarded(item\x2C true);\n}\n\n// Internal APIs that need timeouts should use `unrefActive()` instead of\n// `active()` so that they do not unnecessarily keep the process open.\nfunction unrefActive(item) {\n  insertGuarded(item\x2C false);\n}\n\n// The underlying logic for scheduling or re-scheduling a timer.\n//\n// Appends a timer onto the end of an existing timers list\x2C or creates a new\n// list if one does not already exist for the specified timeout duration.\nfunction insertGuarded(item\x2C refed\x2C start) {\n  const msecs = item._idleTimeout;\n  if (msecs < 0 || msecs === undefined)\n    return;\n\n  insert(item\x2C msecs\x2C start);\n\n  const isDestroyed = item._destroyed;\n  if (isDestroyed || !item[async_id_symbol]) {\n    item._destroyed = false;\n    initAsyncResource(item\x2C 'Timeout');\n  }\n\n  if (isDestroyed) {\n    if (refed)\n      incRefCount();\n  } else if (refed === !item[kRefed]) {\n    if (refed)\n      incRefCount();\n    else\n      decRefCount();\n  }\n  item[kRefed] = refed;\n}\n\n// We need to use the binding as the receiver for fast API calls.\nfunction insert(item\x2C msecs\x2C start = binding.getLibuvNow()) {\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\n  msecs = MathTrunc(msecs);\n  item._idleStart = start;\n\n  // Use an existing list if there is one\x2C otherwise we need to make a new one.\n  let list = timerListMap[msecs];\n  if (list === undefined) {\n    debug('no %d list was found in insert\x2C creating a new one'\x2C msecs);\n    const expiry = start + msecs;\n    timerListMap[msecs] = list = new TimersList(expiry\x2C msecs);\n    timerListQueue.insert(list);\n\n    if (nextExpiry > expiry) {\n      // We need to use the binding as the receiver for fast API calls.\n      binding.scheduleTimer(msecs);\n      nextExpiry = expiry;\n    }\n  }\n\n  L.append(list\x2C item);\n}\n\nfunction setUnrefTimeout(callback\x2C after) {\n  // Type checking identical to setTimeout()\n  validateFunction(callback\x2C 'callback');\n\n  const timer = new Timeout(callback\x2C after\x2C undefined\x2C false\x2C false);\n  insert(timer\x2C timer._idleTimeout);\n\n  return timer;\n}\n\n// Type checking used by timers.enroll() and Socket#setTimeout()\nfunction getTimerDuration(msecs\x2C name) {\n  validateNumber(msecs\x2C name);\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'a non-negative finite number'\x2C msecs);\n  }\n\n  // Ensure that msecs fits into signed int32\n  if (msecs > TIMEOUT_MAX) {\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`\x2C\n                        'TimeoutOverflowWarning');\n    return TIMEOUT_MAX;\n  }\n\n  return msecs;\n}\n\nfunction compareTimersLists(a\x2C b) {\n  const expiryDiff = a.expiry - b.expiry;\n  if (expiryDiff === 0) {\n    if (a.id < b.id)\n      return -1;\n    if (a.id > b.id)\n      return 1;\n  }\n  return expiryDiff;\n}\n\nfunction setPosition(node\x2C pos) {\n  node.priorityQueuePosition = pos;\n}\n\nfunction getTimerCallbacks(runNextTicks) {\n  // If an uncaught exception was thrown during execution of immediateQueue\x2C\n  // this queue will store all remaining Immediates that need to run upon\n  // resolution of all error handling (if process is still alive).\n  const outstandingQueue = new ImmediateList();\n\n  function processImmediate() {\n    const queue = outstandingQueue.head !== null ?\n      outstandingQueue : immediateQueue;\n    let immediate = queue.head;\n\n    // Clear the linked list early in case new `setImmediate()`\n    // calls occur while immediate callbacks are executed\n    if (queue !== outstandingQueue) {\n      queue.head = queue.tail = null;\n      immediateInfo[kHasOutstanding] = 1;\n    }\n\n    let prevImmediate;\n    let ranAtLeastOneImmediate = false;\n    while (immediate !== null) {\n      if (ranAtLeastOneImmediate)\n        runNextTicks();\n      else\n        ranAtLeastOneImmediate = true;\n\n      // It's possible for this current Immediate to be cleared while executing\n      // the next tick queue above\x2C which means we need to use the previous\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\n      if (immediate._destroyed) {\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\n        continue;\n      }\n\n      // TODO(RaisinTen): Destroy and unref the Immediate after _onImmediate()\n      // gets executed\x2C just like how Timeouts work.\n      immediate._destroyed = true;\n\n      immediateInfo[kCount]--;\n      if (immediate[kRefed])\n        immediateInfo[kRefCount]--;\n      immediate[kRefed] = null;\n\n      prevImmediate = immediate;\n\n      const asyncId = immediate[async_id_symbol];\n      emitBefore(asyncId\x2C immediate[trigger_async_id_symbol]\x2C immediate);\n\n      try {\n        const argv = immediate._argv;\n        if (!argv)\n          immediate._onImmediate();\n        else\n          immediate._onImmediate(...argv);\n      } finally {\n        immediate._onImmediate = null;\n\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n\n        outstandingQueue.head = immediate = immediate._idleNext;\n      }\n\n      emitAfter(asyncId);\n    }\n\n    if (queue === outstandingQueue)\n      outstandingQueue.head = null;\n    immediateInfo[kHasOutstanding] = 0;\n  }\n\n\n  function processTimers(now) {\n    debug('process timer lists %d'\x2C now);\n    nextExpiry = Infinity;\n\n    let list;\n    let ranAtLeastOneList = false;\n    while ((list = timerListQueue.peek()) != null) {\n      if (list.expiry > now) {\n        nextExpiry = list.expiry;\n        return timeoutInfo[0] > 0 ? nextExpiry : -nextExpiry;\n      }\n      if (ranAtLeastOneList)\n        runNextTicks();\n      else\n        ranAtLeastOneList = true;\n      listOnTimeout(list\x2C now);\n    }\n    return 0;\n  }\n\n  function listOnTimeout(list\x2C now) {\n    const msecs = list.msecs;\n\n    debug('timeout callback %d'\x2C msecs);\n\n    let ranAtLeastOneTimer = false;\n    let timer;\n    while ((timer = L.peek(list)) != null) {\n      const diff = now - timer._idleStart;\n\n      // Check if this loop iteration is too early for the next timer.\n      // This happens if there are more timers scheduled for later in the list.\n      if (diff < msecs) {\n        list.expiry = MathMax(timer._idleStart + msecs\x2C now + 1);\n        list.id = timerListId++;\n        timerListQueue.percolateDown(1);\n        debug('%d list wait because diff is %d'\x2C msecs\x2C diff);\n        return;\n      }\n\n      if (ranAtLeastOneTimer)\n        runNextTicks();\n      else\n        ranAtLeastOneTimer = true;\n\n      // The actual logic for when a timeout happens.\n      L.remove(timer);\n\n      const asyncId = timer[async_id_symbol];\n\n      if (!timer._onTimeout) {\n        if (!timer._destroyed) {\n          timer._destroyed = true;\n\n          if (timer[kHasPrimitive])\n            delete knownTimersById[asyncId];\n\n          if (timer[kRefed])\n            timeoutInfo[0]--;\n\n          if (destroyHooksExist())\n            emitDestroy(asyncId);\n        }\n        continue;\n      }\n\n      emitBefore(asyncId\x2C timer[trigger_async_id_symbol]\x2C timer);\n\n      let start;\n      if (timer._repeat) {\n        // We need to use the binding as the receiver for fast API calls.\n        start = binding.getLibuvNow();\n      }\n\n      try {\n        const args = timer._timerArgs;\n        if (args === undefined)\n          timer._onTimeout();\n        else\n          ReflectApply(timer._onTimeout\x2C timer\x2C args);\n      } finally {\n        if (timer._repeat && timer._idleTimeout !== -1) {\n          timer._idleTimeout = timer._repeat;\n          insert(timer\x2C timer._idleTimeout\x2C start);\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\n          timer._destroyed = true;\n\n          if (timer[kHasPrimitive])\n            delete knownTimersById[asyncId];\n\n          if (timer[kRefed])\n            timeoutInfo[0]--;\n\n          if (destroyHooksExist())\n            emitDestroy(asyncId);\n        }\n      }\n\n      emitAfter(asyncId);\n    }\n\n    // If `L.peek(list)` returned nothing\x2C the list was either empty or we have\n    // called all of the timer timeouts.\n    // As such\x2C we can remove the list from the object map and\n    // the PriorityQueue.\n    debug('%d list empty'\x2C msecs);\n\n    // The current list may have been removed and recreated since the reference\n    // to `list` was created. Make sure they're the same instance of the list\n    // before destroying.\n    if (list === timerListMap[msecs]) {\n      delete timerListMap[msecs];\n      timerListQueue.shift();\n    }\n  }\n\n  return {\n    processImmediate\x2C\n    processTimers\x2C\n  };\n}\n\nclass Immediate {\n  constructor(callback\x2C args) {\n    this._idleNext = null;\n    this._idlePrev = null;\n    this._onImmediate = callback;\n    this._argv = args;\n    this._destroyed = false;\n    this[kRefed] = false;\n\n    initAsyncResource(this\x2C 'Immediate');\n\n    this.ref();\n    immediateInfo[kCount]++;\n\n    immediateQueue.append(this);\n  }\n\n  ref() {\n    if (this[kRefed] === false) {\n      this[kRefed] = true;\n\n      if (immediateInfo[kRefCount]++ === 0) {\n        // We need to use the binding as the receiver for fast API calls.\n        binding.toggleImmediateRef(true);\n      }\n    }\n    return this;\n  }\n\n  unref() {\n    if (this[kRefed] === true) {\n      this[kRefed] = false;\n      if (--immediateInfo[kRefCount] === 0) {\n        // We need to use the binding as the receiver for fast API calls.\n        binding.toggleImmediateRef(false);\n      }\n    }\n    return this;\n  }\n\n  hasRef() {\n    return !!this[kRefed];\n  }\n}\n\nmodule.exports = {\n  TIMEOUT_MAX\x2C\n  kTimeout: Symbol('timeout')\x2C // For hiding Timeouts on other internals.\n  async_id_symbol\x2C\n  trigger_async_id_symbol\x2C\n  Timeout\x2C\n  Immediate\x2C\n  kRefed\x2C\n  kHasPrimitive\x2C\n  initAsyncResource\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\x2C\n  immediateQueue\x2C\n  getTimerCallbacks\x2C\n  immediateInfoFields: {\n    kCount\x2C\n    kRefCount\x2C\n    kHasOutstanding\x2C\n  }\x2C\n  active\x2C\n  unrefActive\x2C\n  insert\x2C\n  timerListMap\x2C\n  timerListQueue\x2C\n  decRefCount\x2C\n  incRefCount\x2C\n  knownTimersById\x2C\n};\n
code-source-info,0x19f2a9a7871e,13,0,19958,C0O0C4O19958,,
code-creation,JS,10,24179,0x19f2a9a79e0e,852, node:internal/timers:1:1,0x19f2a9a78698,~
code-source-info,0x19f2a9a79e0e
tick,0x7ee81c21cc2d,24207,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x19f2a9a75bbe
code-creation,Eval,10,24615,0x19f2a9a7d62e,5, node:internal/async_hooks:1:1,0x19f2a9a7d068,~
script-source,14,node:internal/async_hooks,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  ErrorCaptureStackTrace\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectDefineProperty\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\n\nconst async_wrap = internalBinding('async_wrap');\nconst { setCallbackTrampoline } = async_wrap;\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\n * hooks for each type.\n *\n * async_id_fields is a Float64Array wrapping the double array of\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\n * the various asynchronous states of the application. These are:\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\n *    current execution stack.\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\n *    the resource corresponding to the current execution stack.\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\n *    of retrieving the triggerAsyncId value is:\n *    1. the value passed directly to the constructor\n *    2. value set in kDefaultTriggerAsyncId\n *    3. executionAsyncId of the current resource.\n *\n * async_ids_stack is a Float64Array that contains part of the async ID\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\n * popAsyncContext() call removes two doubles from it.\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\n * side are used instead in pushAsyncContext() and popAsyncContext().\n */\nconst {\n  async_hook_fields\x2C\n  async_id_fields\x2C\n  execution_async_resources\x2C\n} = async_wrap;\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\n// responsible for the current execution stack. This is unwound as each resource\n// exits. In the case of a fatal exception this stack is emptied after calling\n// each hook's after() callback.\nconst {\n  pushAsyncContext: pushAsyncContext_\x2C\n  popAsyncContext: popAsyncContext_\x2C\n  executionAsyncResource: executionAsyncResource_\x2C\n  clearAsyncIdStack\x2C\n} = async_wrap;\n// Properties in active_hooks are used to keep track of the set of hooks being\n// executed in case another hook is enabled/disabled. The new set of hooks is\n// then restored once the active set of hooks is finished executing.\nconst active_hooks = {\n  // Array of all AsyncHooks that will be iterated whenever an async event\n  // fires. Using var instead of (preferably const) in order to assign\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\n  // execution.\n  array: []\x2C\n  // Use a counter to track nested calls of async hook callbacks and make sure\n  // the active_hooks.array isn't altered mid execution.\n  call_depth: 0\x2C\n  // Use to temporarily store and updated active_hooks.array if the user\n  // enables or disables a hook while hooks are being processed. If a hook is\n  // enabled() or disabled() during hook execution then the current set of\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\n  // subsequent changes are on the duplicated array. When all hooks have\n  // completed executing active_hooks.tmp_array is assigned to\n  // active_hooks.array.\n  tmp_array: null\x2C\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\n  // is written back to async_hook_fields when active_hooks.array is restored.\n  tmp_fields: null\x2C\n};\n\nconst { registerDestroyHook } = async_wrap;\nconst { enqueueMicrotask } = internalBinding('task_queue');\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\n\n// Each constant tracks how many callbacks there are for any given step of\n// async execution. These are tracked so if the user didn't include callbacks\n// for a given step\x2C that step can bail out early.\nconst {\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\n} = async_wrap.constants;\n\nconst { async_id_symbol\x2C\n        trigger_async_id_symbol } = internalBinding('symbols');\n\n// Lazy load of internal/util/inspect;\nlet inspect;\n\n// Used in AsyncHook and AsyncResource.\nconst init_symbol = Symbol('init');\nconst before_symbol = Symbol('before');\nconst after_symbol = Symbol('after');\nconst destroy_symbol = Symbol('destroy');\nconst promise_resolve_symbol = Symbol('promiseResolve');\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\nconst emitPromiseResolveNative =\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\n\nlet domain_cb;\nfunction useDomainTrampoline(fn) {\n  domain_cb = fn;\n}\n\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\n  const index = async_hook_fields[kStackLength] - 1;\n  execution_async_resources[index] = resource;\n\n  if (asyncId !== 0 && hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n\n  let result;\n  if (asyncId === 0 && typeof domain_cb === 'function') {\n    args.unshift(cb);\n    result = domain_cb.apply(this\x2C args);\n  } else {\n    result = cb.apply(this\x2C args);\n  }\n\n  if (asyncId !== 0 && hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  execution_async_resources.pop();\n  return result;\n}\n\nconst topLevelResource = {};\n\nfunction executionAsyncResource() {\n  // Indicate to the native layer that this function is likely to be used\x2C\n  // in which case it will inform JS about the current async resource via\n  // the trampoline above.\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\n\n  const index = async_hook_fields[kStackLength] - 1;\n  if (index === -1) return topLevelResource;\n  const resource = execution_async_resources[index] ||\n    executionAsyncResource_(index);\n  return lookupPublicResource(resource);\n}\n\nfunction inspectExceptionValue(e) {\n  inspect ??= require('internal/util/inspect').inspect;\n  return { message: inspect(e) };\n}\n\n// Used to fatally abort the process if a callback throws.\nfunction fatalError(e) {\n  if (typeof e?.stack === 'string') {\n    process._rawDebug(e.stack);\n  } else {\n    const o = inspectExceptionValue(e);\n    ErrorCaptureStackTrace(o\x2C fatalError);\n    process._rawDebug(o.stack);\n  }\n\n  const { getOptionValue } = require('internal/options');\n  if (getOptionValue('--abort-on-uncaught-exception')) {\n    process.abort();\n  }\n  process.exit(kGenericUserError);\n}\n\nfunction lookupPublicResource(resource) {\n  if (typeof resource !== 'object' || resource === null) return resource;\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\n  // AsyncWrap instances.\n  const publicResource = resource[resource_symbol];\n  if (publicResource !== undefined)\n    return publicResource;\n  return resource;\n}\n\n// Emit From Native //\n\n// Used by C++ to call all init() callbacks. Because some state can be setup\n// from C++ there's no need to perform all the same operations as in\n// emitInitScript.\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  active_hooks.call_depth += 1;\n  resource = lookupPublicResource(resource);\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\n        active_hooks.array[i][init_symbol](\n          asyncId\x2C type\x2C triggerAsyncId\x2C\n          resource\x2C\n        );\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\n  // will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\n// Called from native. The asyncId stack handling is taken care of there\n// before this is called.\nfunction emitHook(symbol\x2C asyncId) {\n  active_hooks.call_depth += 1;\n  // Use a single try/catch for all hook to avoid setting up one per\n  // iteration.\n  try {\n    // Using var here instead of let because "for (var ...)" is faster than let.\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\n    // eslint-disable-next-line no-var\n    for (var i = 0; i < active_hooks.array.length; i++) {\n      if (typeof active_hooks.array[i][symbol] === 'function') {\n        active_hooks.array[i][symbol](asyncId);\n      }\n    }\n  } catch (e) {\n    fatalError(e);\n  } finally {\n    active_hooks.call_depth -= 1;\n  }\n\n  // Hooks can only be restored if there have been no recursive hook calls.\n  // Also the active hooks do not need to be restored if enable()/disable()\n  // weren't called during hook execution\x2C in which case\n  // active_hooks.tmp_array will be null.\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\n    restoreActiveHooks();\n  }\n}\n\nfunction emitHookFactory(symbol\x2C name) {\n  const fn = emitHook.bind(undefined\x2C symbol);\n\n  // Set the name property of the function as it looks good in the stack trace.\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: name\x2C\n  });\n  return fn;\n}\n\n// Manage Active Hooks //\n\nfunction getHookArrays() {\n  if (active_hooks.call_depth === 0)\n    return [active_hooks.array\x2C async_hook_fields];\n  // If this hook is being enabled while in the middle of processing the array\n  // of currently active hooks then duplicate the current set of active hooks\n  // and store this there. This shouldn't fire until the next time hooks are\n  // processed.\n  if (active_hooks.tmp_array === null)\n    storeActiveHooks();\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\n}\n\n\nfunction storeActiveHooks() {\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\n  // 4. So do this the long way.\n  active_hooks.tmp_fields = [];\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\n}\n\nfunction copyHooks(destination\x2C source) {\n  destination[kInit] = source[kInit];\n  destination[kBefore] = source[kBefore];\n  destination[kAfter] = source[kAfter];\n  destination[kDestroy] = source[kDestroy];\n  destination[kPromiseResolve] = source[kPromiseResolve];\n}\n\n\n// Then restore the correct hooks array in case any hooks were added/removed\n// during hook callback execution.\nfunction restoreActiveHooks() {\n  active_hooks.array = active_hooks.tmp_array;\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\n\n  active_hooks.tmp_array = null;\n  active_hooks.tmp_fields = null;\n}\n\nfunction trackPromise(promise\x2C parent) {\n  if (promise[async_id_symbol]) {\n    return;\n  }\n\n  // Get trigger id from parent async id before making the async id of the\n  // child so if a new one must be made it will be lower than the child.\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\n    getDefaultTriggerAsyncId();\n\n  promise[async_id_symbol] = newAsyncId();\n  promise[trigger_async_id_symbol] = triggerAsyncId;\n}\n\nfunction promiseInitHook(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  const triggerAsyncId = promise[trigger_async_id_symbol];\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\n}\n\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\n  promiseInitHook(promise\x2C parent);\n  destroyTracking(promise\x2C parent);\n}\n\nfunction destroyTracking(promise\x2C parent) {\n  trackPromise(promise\x2C parent);\n  const asyncId = promise[async_id_symbol];\n  registerDestroyHook(promise\x2C asyncId);\n}\n\nfunction promiseBeforeHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  const triggerId = promise[trigger_async_id_symbol];\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\n}\n\nfunction promiseAfterHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  if (hasHooks(kAfter)) {\n    emitAfterNative(asyncId);\n  }\n  if (asyncId === executionAsyncId()) {\n    // This condition might not be true if async_hooks was enabled during\n    // the promise callback execution.\n    // Popping it off the stack can be skipped in that case\x2C because it is\n    // known that it would correspond to exactly one call with\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\n    popAsyncContext(asyncId);\n  }\n}\n\nfunction promiseResolveHook(promise) {\n  trackPromise(promise);\n  const asyncId = promise[async_id_symbol];\n  emitPromiseResolveNative(asyncId);\n}\n\nlet wantPromiseHook = false;\nfunction enableHooks() {\n  async_hook_fields[kCheck] += 1;\n\n  setCallbackTrampoline(callbackTrampoline);\n}\n\nlet stopPromiseHook;\nfunction updatePromiseHookMode() {\n  wantPromiseHook = true;\n  let initHook;\n  if (initHooksExist()) {\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\n      promiseInitHook;\n  } else if (destroyHooksExist()) {\n    initHook = destroyTracking;\n  }\n  if (stopPromiseHook) stopPromiseHook();\n  const promiseHooks = require('internal/promise_hooks');\n  stopPromiseHook = promiseHooks.createHook({\n    init: initHook\x2C\n    before: promiseBeforeHook\x2C\n    after: promiseAfterHook\x2C\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\n  });\n}\n\nfunction disableHooks() {\n  async_hook_fields[kCheck] -= 1;\n\n  wantPromiseHook = false;\n\n  setCallbackTrampoline();\n\n  // Delay the call to `disablePromiseHook()` because we might currently be\n  // between the `before` and `after` calls of a Promise.\n  enqueueMicrotask(disablePromiseHookIfNecessary);\n}\n\nfunction disablePromiseHookIfNecessary() {\n  if (!wantPromiseHook && stopPromiseHook) {\n    stopPromiseHook();\n  }\n}\n\n// Internal Embedder API //\n\n// Increment the internal id counter and return the value. Important that the\n// counter increment first. Since it's done the same way in\n// Environment::new_async_uid()\nfunction newAsyncId() {\n  return ++async_id_fields[kAsyncIdCounter];\n}\n\nfunction getOrSetAsyncId(object) {\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\n    return object[async_id_symbol];\n  }\n\n  return object[async_id_symbol] = newAsyncId();\n}\n\n\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\n// the user to safeguard this call and make sure it's zero'd out when the\n// constructor is complete.\nfunction getDefaultTriggerAsyncId() {\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\n  if (defaultTriggerAsyncId < 0)\n    return async_id_fields[kExecutionAsyncId];\n  return defaultTriggerAsyncId;\n}\n\n\nfunction clearDefaultTriggerAsyncId() {\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\n}\n\n/**\n * Sets a default top level trigger ID to be used\n * @template {Array<unknown>} T\n * @template {unknown} R\n * @param {number} triggerAsyncId\n * @param { (...T: args) => R } block\n * @param  {T} args\n * @returns {R}\n */\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\n  if (triggerAsyncId === undefined)\n    return block.apply(null\x2C args);\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\n  // CHECK(triggerAsyncId > 0)\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\n\n  try {\n    return block.apply(null\x2C args);\n  } finally {\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\n  }\n}\n\nfunction hasHooks(key) {\n  return async_hook_fields[key] > 0;\n}\n\nfunction enabledHooksExist() {\n  return hasHooks(kCheck);\n}\n\nfunction initHooksExist() {\n  return hasHooks(kInit);\n}\n\nfunction afterHooksExist() {\n  return hasHooks(kAfter);\n}\n\nfunction destroyHooksExist() {\n  return hasHooks(kDestroy);\n}\n\nfunction promiseResolveHooksExist() {\n  return hasHooks(kPromiseResolve);\n}\n\n\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n  // Short circuit all checks for the common case. Which is that no hooks have\n  // been set. Do this to remove performance impact for embedders (and core).\n  if (!hasHooks(kInit))\n    return;\n\n  if (triggerAsyncId === null) {\n    triggerAsyncId = getDefaultTriggerAsyncId();\n  }\n\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\n}\n\n\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\n\n  if (hasHooks(kBefore))\n    emitBeforeNative(asyncId);\n}\n\n\nfunction emitAfterScript(asyncId) {\n  if (hasHooks(kAfter))\n    emitAfterNative(asyncId);\n\n  popAsyncContext(asyncId);\n}\n\n\nfunction emitDestroyScript(asyncId) {\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\n  if (!hasHooks(kDestroy) || asyncId <= 0)\n    return;\n  async_wrap.queueDestroyAsyncId(asyncId);\n}\n\n\nfunction hasAsyncIdStack() {\n  return hasHooks(kStackLength);\n}\n\n\n// This is the equivalent of the native push_async_ids() call.\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\n  const offset = async_hook_fields[kStackLength];\n  execution_async_resources[offset] = resource;\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\n  async_hook_fields[kStackLength]++;\n  async_id_fields[kExecutionAsyncId] = asyncId;\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\n}\n\n\n// This is the equivalent of the native pop_async_ids() call.\nfunction popAsyncContext(asyncId) {\n  const stackLength = async_hook_fields[kStackLength];\n  if (stackLength === 0) return false;\n\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\n    // Do the same thing as the native code (i.e. crash hard).\n    return popAsyncContext_(asyncId);\n  }\n\n  const offset = stackLength - 1;\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\n  execution_async_resources.pop();\n  async_hook_fields[kStackLength] = offset;\n  return offset > 0;\n}\n\n\nfunction executionAsyncId() {\n  return async_id_fields[kExecutionAsyncId];\n}\n\nfunction triggerAsyncId() {\n  return async_id_fields[kTriggerAsyncId];\n}\n\n\nmodule.exports = {\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  // Private API\n  getHookArrays\x2C\n  symbols: {\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\n    promise_resolve_symbol\x2C owner_symbol\x2C\n  }\x2C\n  constants: {\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n  }\x2C\n  enableHooks\x2C\n  disableHooks\x2C\n  updatePromiseHookMode\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  executionAsyncResource\x2C\n  // Internal Embedder API\n  newAsyncId\x2C\n  getOrSetAsyncId\x2C\n  getDefaultTriggerAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  enabledHooksExist\x2C\n  initHooksExist\x2C\n  afterHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit: emitInitScript\x2C\n  emitBefore: emitBeforeScript\x2C\n  emitAfter: emitAfterScript\x2C\n  emitDestroy: emitDestroyScript\x2C\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  registerDestroyHook\x2C\n  useDomainTrampoline\x2C\n  nativeHooks: {\n    init: emitInitNative\x2C\n    before: emitBeforeNative\x2C\n    after: emitAfterNative\x2C\n    destroy: emitDestroyNative\x2C\n    promise_resolve: emitPromiseResolveNative\x2C\n  }\x2C\n  asyncWrap: {\n    Providers: async_wrap.Providers\x2C\n  }\x2C\n};\n
code-source-info,0x19f2a9a7d62e,14,0,20082,C0O0C4O20082,,
code-creation,JS,10,24995,0x19f2a9a7ec7e,1120, node:internal/async_hooks:1:1,0x19f2a9a7d5a8,~
code-source-info,0x19f2a9a7ec7e
tick,0x7ee81c3f23e5,25192,1,0x7ee81a60d350,5,0x7ee81bf0da80,0x168b8b4ab83f,0x19f2a9a7ee3b,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a79f09,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75bbe
code-creation,JS,10,25312,0x307edb92274e,47,emitHookFactory node:internal/async_hooks:253:25,0x19f2a9a7d8e0,~
code-source-info,0x307edb92274e,14,9626,9866,C0O9656C3O9665C10O9665C17O9773C25O9794C32O9840C39O9773C44O9854C46O9864,,
code-creation,Eval,10,25745,0x307edb925aa6,5, node:internal/validators:1:1,0x307edb925730,~
script-source,15,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\n  }\x2C\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateUint32(value\x2C name);\n  return value;\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\x2C\n);\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\x2C\n);\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n  }\n  const min = positive ? 1 : 0;\n  // 2 ** 32 === 4294967296\n  const max = 4_294_967_295;\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n});\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nconst validateString = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n});\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n});\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nconst validateBoolean = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n});\n\nconst kValidateObjectNone = 0;\nconst kValidateObjectAllowNullable = 1 << 0;\nconst kValidateObjectAllowArray = 1 << 1;\nconst kValidateObjectAllowFunction = 1 << 2;\nconst kValidateObjectAllowObjects = kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\nconst kValidateObjectAllowObjectsAndNull = kValidateObjectAllowNullable |\n  kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {number} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options = kValidateObjectNone) => {\n    if (options === kValidateObjectNone) {\n      if (value === null || ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      if (typeof value !== 'object') {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    } else {\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\n\n      if (throwOnNullable && value === null) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\n\n      if (throwOnArray && ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\n      const typeofValue = typeof value;\n\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    }\n  });\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of "dictionary" here\x2C which means any value\n *                                whose Type is either Undefined\x2C Null\x2C or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames(\n  (value\x2C name) => {\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\n    }\n  });\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nconst validateStringArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateString here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (typeof value[i] !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateBoolean here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (value[i] !== true && value[i] !== false) {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateAbortSignalArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is AbortSignal[]}\n */\n\n/** @type {validateAbortSignalArray} */\nfunction validateAbortSignalArray(value\x2C name) {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; i++) {\n    const signal = value[i];\n    const indexedName = `${name}[${i}]`;\n    if (signal == null) {\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\n    }\n    validateAbortSignal(signal\x2C indexedName);\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n});\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n});\n\n/**\n * Check that the port number is not NaN when coerced to a number\x2C\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n});\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\n\n/**\n * @param {any} value\n * @param {string} name\n */\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\n  if (\n    typeof value === 'undefined' ||\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\n  ) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name\x2C\n      value\x2C\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n    );\n  }\n});\n\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\n  }\n});\n\n/**\n * @param {any} hints\n * @return {string}\n */\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\n    return hints;\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length;\n    let result = '';\n\n    if (hintsLength === 0) {\n      return result;\n    }\n\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i];\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\n      result += link;\n\n      if (i !== hintsLength - 1) {\n        result += '\x2C ';\n      }\n    }\n\n    return result;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints'\x2C\n    hints\x2C\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n  );\n});\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateStringArray\x2C\n  validateBooleanArray\x2C\n  validateAbortSignalArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateDictionary\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  kValidateObjectNone\x2C\n  kValidateObjectAllowNullable\x2C\n  kValidateObjectAllowArray\x2C\n  kValidateObjectAllowFunction\x2C\n  kValidateObjectAllowObjects\x2C\n  kValidateObjectAllowObjectsAndNull\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n  validateLinkHeaderValue\x2C\n  validateInternalField\x2C\n};\n
code-source-info,0x307edb925aa6,15,0,16705,C0O0C4O16705,,
code-creation,JS,10,26010,0x307edb926916,900, node:internal/validators:1:1,0x307edb925a20,~
code-source-info,0x307edb
tick,0x7ee81c4e2ef2,26262,1,0x7ee81a613550,2,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x307edb926a47,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a79f6f,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75bbe
code-creation,Eval,10,26611,0x307edb92a5b6,5, node:internal/util:1:1,0x307edb9298e8,~
script-source,16,node:internal/util,'use strict';\n\nconst {\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  RegExpPrototypeGetSource\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolReplace\x2C\n  SymbolSplit\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n  uvErrmapGet\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\n  guessHandleType: _guessHandleType\x2C\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n    decorated_private_symbol\x2C\n  }\x2C\n  sleep: _sleep\x2C\n} = internalBinding('util');\nconst { isNativeError } = internalBinding('types');\nconst { getOptionValue } = require('internal/options');\nconst { encodings } = internalBinding('string_decoder');\n\nconst noCrypto = !process.versions.openssl;\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\nfunction getDeprecationWarningEmitter(\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  shouldEmitWarning = () => true\x2C\n) {\n  let warned = false;\n  return function() {\n    if (!warned && shouldEmitWarning()) {\n      warned = true;\n      if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          const emitWarning = useEmitSync ?\n            require('internal/process/warning').emitWarningSync :\n            process.emitWarning;\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n  };\n}\n\nfunction isPendingDeprecation() {\n  return getOptionValue('--pending-deprecation') &&\n    !getOptionValue('--no-deprecation');\n}\n\n// Internal deprecator for pending --pending-deprecation. This can be invoked\n// at snapshot building time as the warning permission is only queried at\n// run time.\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\n  );\n  function deprecated(...args) {\n    emitDeprecationWarning();\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n  return deprecated;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  );\n\n  function deprecated(...args) {\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\n    if (!process.noDeprecation) {\n      emitDeprecationWarning();\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\n    return;\n\n  const arrow = err[arrow_message_private_symbol];\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    err[decorated_private_symbol] = true;\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\n// Return undefined if there is no match.\n// Move the "slow cases" to a separate function to make sure this function gets\n// inlined properly. That prioritizes the common case.\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n      StringPrototypeToLowerCase(enc) === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n      StringPrototypeToLowerCase(enc) === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\nfunction emitExperimentalWarning(feature) {\n  if (experimentalWarnings.has(feature)) return;\n  const msg = `${feature} is an experimental feature and might change at any time`;\n  experimentalWarnings.add(feature);\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = { __proto__: null };\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nlet cachedURL;\nlet cachedCWD;\n\n/**\n * Get the current working directory while accounting for the possibility that it has been deleted.\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\n */\nfunction getCWDURL() {\n  const { sep } = require('path');\n  const { pathToFileURL } = require('internal/url');\n\n  let cwd;\n\n  try {\n    // The implementation of `process.cwd()` already uses proper cache when it can.\n    // It's a relatively cheap call performance-wise for the most common use case.\n    cwd = process.cwd();\n  } catch {\n    cachedURL ??= pathToFileURL(sep);\n  }\n\n  if (cwd != null && cwd !== cachedCWD) {\n    cachedURL = pathToFileURL(cwd + sep);\n    cachedCWD = cwd;\n  }\n\n  return cachedURL;\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      ReflectApply(original\x2C this\x2C args);\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n  });\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  return ObjectDefineProperties(fn\x2C descriptors);\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(?:.*)[\\\\/]node_modules[\\\\/]/;\n\nlet getStructuredStack;\n\nfunction isInsideNodeModules() {\n  if (getStructuredStack === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\n    // the perf implications should be okay.\n    getStructuredStack = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  const stack = getStructuredStack();\n\n  // Iterate over all stack frames and look for the first one not coming\n  // from inside Node.js itself:\n  if (ArrayIsArray(stack)) {\n    for (const frame of stack) {\n      const filename = frame.getFileName();\n\n      if (\n        filename == null ||\n        StringPrototypeStartsWith(filename\x2C 'node:') === true ||\n        (\n          filename[0] !== '/' &&\n          StringPrototypeIncludes(filename\x2C '\\\\') === false\n        )\n      ) {\n        continue;\n      }\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\n    }\n  }\n  return false;\n}\n\nfunction once(callback\x2C { preserveReturnValue = false } = kEmptyObject) {\n  let called = false;\n  let returnValue;\n  return function(...args) {\n    if (called) return returnValue;\n    called = true;\n    const result = ReflectApply(callback\x2C this\x2C args);\n    returnValue = preserveReturnValue ? result : undefined;\n    return result;\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\nfunction createDeferredPromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res\x2C rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise\x2C resolve\x2C reject };\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-namespaces\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: namespaceObject\x2C\n  });\n}\n\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: getter\x2C\n    set: setter\x2C\n  });\n}\n\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\n  const descriptors = { __proto__: null };\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let lazyLoadedValue;\n    function set(value) {\n      ObjectDefineProperty(target\x2C key\x2C {\n        __proto__: null\x2C\n        writable: true\x2C\n        value\x2C\n      });\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n    function get() {\n      mod ??= require(id);\n      if (lazyLoadedValue === undefined) {\n        lazyLoadedValue = mod[key];\n        set(lazyLoadedValue);\n      }\n      return lazyLoadedValue;\n    }\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n    descriptors[key] = {\n      __proto__: null\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      get\x2C\n      set\x2C\n    };\n  }\n  ObjectDefineProperties(target\x2C descriptors);\n}\n\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let value;\n    let setterCalled = false;\n\n    function get() {\n      if (check !== undefined) {\n        FunctionPrototypeCall(check\x2C this);\n      }\n      if (setterCalled) {\n        return value;\n      }\n      mod ??= require(id);\n      value ??= mod[key];\n      return value;\n    }\n\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n\n    function set(val) {\n      setterCalled = true;\n      value = val;\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n\n    ObjectDefineProperty(target\x2C key\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      get\x2C\n      set: writable ? set : undefined\x2C\n    });\n  }\n}\n\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\n}\n\nlet _DOMException;\nconst lazyDOMExceptionClass = () => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return _DOMException;\n};\n\nconst lazyDOMException = (message\x2C name) => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  if (isErrorStackTraceLimitWritable()) {\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const ex = new _DOMException(message\x2C name);\n    Error.stackTraceLimit = limit;\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\n    return ex;\n  }\n  return new _DOMException(message\x2C name);\n\n};\n\nconst kEnumerableProperty = { __proto__: null };\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\n\nfunction filterOwnProperties(source\x2C keys) {\n  const filtered = { __proto__: null };\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\n      filtered[key] = source[key];\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\n * @param {any} obj\n * @param {string} key\n * @param {any} value\n * @returns {any}\n */\nfunction setOwnProperty(obj\x2C key\x2C value) {\n  return ObjectDefineProperty(obj\x2C key\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value\x2C\n    writable: true\x2C\n  });\n}\n\nlet internalGlobal;\nfunction getInternalGlobal() {\n  if (internalGlobal == null) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\n  }\n  return internalGlobal;\n}\n\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\n}\n\nconst crossRelmRegexes = new SafeWeakMap();\nfunction getCrossRelmRegex(regex) {\n  const cached = crossRelmRegexes.get(regex);\n  if (cached) return cached;\n\n  let flagString = '';\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\n\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\n  return crossRelmRegex;\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\n}\n\n\nfunction isArrayBufferDetached(value) {\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\n    return _isArrayBufferDetached(value);\n  }\n\n  return false;\n}\n\n/**\n * Helper function to lazy-load an initialize-once value.\n * @template T Return value of initializer\n * @param {()=>T} initializer Initializer of the lazily loaded value.\n * @returns {()=>T}\n */\nfunction getLazy(initializer) {\n  let value;\n  let initialized = false;\n  return function() {\n    if (initialized === false) {\n      value = initializer();\n      initialized = true;\n    }\n    return value;\n  };\n}\n\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage objects to a specified directory.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\n\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\nfunction guessHandleType(fd) {\n  const type = _guessHandleType(fd);\n  return handleTypes[type];\n}\n\nclass WeakReference {\n  #weak = null;\n  #strong = null;\n  #refCount = 0;\n  constructor(object) {\n    this.#weak = new SafeWeakRef(object);\n  }\n\n  incRef() {\n    this.#refCount++;\n    if (this.#refCount === 1) {\n      const derefed = this.#weak.deref();\n      if (derefed !== undefined) {\n        this.#strong = derefed;\n      }\n    }\n    return this.#refCount;\n  }\n\n  decRef() {\n    this.#refCount--;\n    if (this.#refCount === 0) {\n      this.#strong = null;\n    }\n    return this.#refCount;\n  }\n\n  get() {\n    return this.#weak.deref();\n  }\n}\n\nconst encodingsMap = { __proto__: null };\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nmodule.exports = {\n  getLazy\x2C\n  assertCrypto\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  createDeferredPromise\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  defineLazyProperties\x2C\n  defineReplaceableLazyAttribute\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  encodingsMap\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  exposeNamespace\x2C\n  exposeGetterAndSetter\x2C\n  filterDuplicateStrings\x2C\n  filterOwnProperties\x2C\n  getConstructorOf\x2C\n  getCWDURL\x2C\n  getInternalGlobal\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  guessHandleType\x2C\n  isArrayBufferDetached\x2C\n  isError\x2C\n  isInsideNodeModules\x2C\n  join\x2C\n  lazyDOMException\x2C\n  lazyDOMExceptionClass\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\n  sleep\x2C\n  spliceOne\x2C\n  setupCoverageHooks\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n  pendingDeprecate\x2C\n  WeakReference\x2C\n};\n
code-source-info,0x307edb92a5b6,16,0,25383,C0O0C4O25383,,
code-creation,JS,10,27003,0x307edb92c30e,1618, node:internal/util:1:1,0x307edb92a530,~
code-source-info,0x307edb92c30e
code-creation,JS,10,27024,0x307edb92cc36,29,<instance_members_initializer> node:internal/util:840:1,0x307edb92b7b0,~
code-source-info,0x307edb92cc36,16,23200,23744,C3O23232C12O23250C21O23270C28O23744,,
tick,0x7ee81c3e88d1,27332,1,0x7ee81a60d350,5,0x7ee81bf0da80,0x168b8b4ab83f,0x307edb92c638,0x168b8b4afead,0x168b8b4afc8d,0x307edb926a47,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a79f6f,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75bbe
code-creation,Eval,10,27611,0x307edb93b92e,5, node:internal/options:1:1,0x307edb93b758,~
script-source,17,node:internal/options,'use strict';\n\nconst {\n  getCLIOptionsValues\x2C\n  getCLIOptionsInfo\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsDict;\nlet cliInfo;\nlet embedderOptions;\n\n// getCLIOptionsValues() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  if (!optionsDict) {\n    optionsDict = getCLIOptionsValues();\n  }\n  return optionsDict;\n}\n\nfunction getCLIOptionsInfoFromBinding() {\n  if (!cliInfo) {\n    cliInfo = getCLIOptionsInfo();\n  }\n  return cliInfo;\n}\n\nfunction getEmbedderOptions() {\n  if (!embedderOptions) {\n    embedderOptions = getEmbedderOptionsFromBinding();\n  }\n  return embedderOptions;\n}\n\nfunction refreshOptions() {\n  optionsDict = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  const optionsDict = getCLIOptionsFromBinding();\n  return optionsDict[optionName];\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  getCLIOptionsInfo: getCLIOptionsInfoFromBinding\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\x2C\n};\n
code-source-info,0x307edb93b92e,17,0,1696,C0O0C4O1696,,
code-creation,JS,10,27654,0x307edb93bc6e,142, node:internal/options:1:1,0x307edb93b8a8,~
code-source-info,0x307edb93bc6e,17,0,1696,C0O0C61O124C64O124C69O25C75O48C81O89C87O183C88O183C90O194C91O194C93O211C94O211C96O224C97O224C99O1541C106O1581C112O1613C118O1631C124O1655C130O1677C136O1556C141O1695,,
code-creation,Eval,10,27937,0x307edb93e92e,5, node:internal/util/types:1:1,0x307edb93e798,~
script-source,18,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\x2C\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\x2C\n  }\x2C\n  isCryptoKey: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x307edb93e92e,18,0,2469,C0O0C4O2469,,
code-creation,JS,10,27989,0x307edb93f006,263, node:internal/util/types:1:1,0x307edb93e8a8,~
code-source-info,0x307edb93f006,18,0,2469,C0O0C82O25C87O46C92O72C98O1462C102O1486C116O1533C122O1554C128O1570C134O1586C140O1609C146O1626C152O1643C158O1658C164O1674C170O1690C176O1708C182O1726C188O1745C194O1477C198O1771C199O1771C201O1788C202O1788C204O1832C216O1858C222O1932C236O2169C242O2243C256O1802C262O2468,,
code-creation,Eval,10,28195,0x305ee1e88886,5, node:internal/linkedlist:1:1,0x305ee1e88730,~
script-source,19,node:internal/linkedlist,'use strict';\n\nfunction init(list) {\n  list._idleNext = list;\n  list._idlePrev = list;\n  return list;\n}\n\n// Show the most idle item.\nfunction peek(list) {\n  if (list._idlePrev === list) return null;\n  return list._idlePrev;\n}\n\n// Remove an item from its list.\nfunction remove(item) {\n  if (item._idleNext) {\n    item._idleNext._idlePrev = item._idlePrev;\n  }\n\n  if (item._idlePrev) {\n    item._idlePrev._idleNext = item._idleNext;\n  }\n\n  item._idleNext = null;\n  item._idlePrev = null;\n}\n\n// Remove an item from its list and place at the end.\nfunction append(list\x2C item) {\n  if (item._idleNext || item._idlePrev) {\n    remove(item);\n  }\n\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\n  item._idleNext = list._idleNext;\n  item._idlePrev = list;\n\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\n  list._idleNext._idlePrev = item;\n  list._idleNext = item;\n}\n\nfunction isEmpty(list) {\n  return list._idleNext === list;\n}\n\nmodule.exports = {\n  init\x2C\n  peek\x2C\n  remove\x2C\n  append\x2C\n  isEmpty\x2C\n};\n
code-source-info,0x305ee1e88886,19,0,1128,C0O0C4O1128,,
code-creation,JS,10,28222,0x305ee1e88b5e,74, node:internal/linkedlist:1:1,0x305ee1e88800,~
code-source-info,0x305ee1e88b5e,19,0,1128,C0O0C31O1059C38O1080C44O1088C50O1096C56O1106C62O1116C68O1074C73O1127,,
code-creation,Eval,10,28368,0x305ee1e89476,5, node:internal/priority_queue:1:1,0x305ee1e89258,~
script-source,20,node:internal/priority_queue,'use strict';\n\nconst {\n  Array\x2C\n} = primordials;\n\n// The PriorityQueue is a basic implementation of a binary heap that accepts\n// a custom sorting function via its constructor. This function is passed\n// the two nodes to compare\x2C similar to the native Array#sort. Crucially\n// this enables priority queues that are based on a comparison of more than\n// just a single criteria.\n\nmodule.exports = class PriorityQueue {\n  #compare = (a\x2C b) => a - b;\n  #heap = new Array(64);\n  #setPosition;\n  #size = 0;\n\n  constructor(comparator\x2C setPosition) {\n    if (comparator !== undefined)\n      this.#compare = comparator;\n    if (setPosition !== undefined)\n      this.#setPosition = setPosition;\n  }\n\n  insert(value) {\n    const heap = this.#heap;\n    const pos = ++this.#size;\n    heap[pos] = value;\n\n    if (heap.length === pos)\n      heap.length *= 2;\n\n    this.percolateUp(pos);\n  }\n\n  peek() {\n    return this.#heap[1];\n  }\n\n  peekBottom() {\n    return this.#heap[this.#size];\n  }\n\n  percolateDown(pos) {\n    const compare = this.#compare;\n    const setPosition = this.#setPosition;\n    const heap = this.#heap;\n    const size = this.#size;\n    const item = heap[pos];\n\n    while (pos * 2 <= size) {\n      let childIndex = pos * 2 + 1;\n      if (childIndex > size || compare(heap[pos * 2]\x2C heap[childIndex]) < 0)\n        childIndex = pos * 2;\n      const child = heap[childIndex];\n      if (compare(item\x2C child) <= 0)\n        break;\n      if (setPosition !== undefined)\n        setPosition(child\x2C pos);\n      heap[pos] = child;\n      pos = childIndex;\n    }\n    heap[pos] = item;\n    if (setPosition !== undefined)\n      setPosition(item\x2C pos);\n  }\n\n  percolateUp(pos) {\n    const heap = this.#heap;\n    const compare = this.#compare;\n    const setPosition = this.#setPosition;\n    const item = heap[pos];\n\n    while (pos > 1) {\n      const parent = heap[pos / 2 | 0];\n      if (compare(parent\x2C item) <= 0)\n        break;\n      heap[pos] = parent;\n      if (setPosition !== undefined)\n        setPosition(parent\x2C pos);\n      pos = pos / 2 | 0;\n    }\n    heap[pos] = item;\n    if (setPosition !== undefined)\n      setPosition(item\x2C pos);\n  }\n\n  removeAt(pos) {\n    const heap = this.#heap;\n    const size = --this.#size;\n    heap[pos] = heap[size + 1];\n    heap[size + 1] = undefined;\n\n    if (size > 0 && pos <= size) {\n      if (pos > 1 && this.#compare(heap[pos / 2 | 0]\x2C heap[pos]) > 0)\n        this.percolateUp(pos);\n      else\n        this.percolateDown(pos);\n    }\n  }\n\n  shift() {\n    const heap = this.#heap;\n    const value = heap[1];\n    if (value === undefined)\n      return;\n\n    this.removeAt(1);\n\n    return value;\n  }\n};\n
code-source-info,0x305ee1e89476,20,0,2630,C0O0C4O2630,,
code-creation,JS,10,28440,0x305ee1e89a56,141, node:internal/priority_queue:1:1,0x305ee1e893f0,~
code-source-info,0x305ee1e89a56,20,0,2630,C0O0C8O25C14O378C135O393C140O2629,,
code-creation,JS,10,28445,0x305ee1e89c46,57,<instance_members_initializer> node:internal/priority_queue:13:18,0x305ee1e89760,~
code-source-info,0x305ee1e89c46,20,395,2628,C3O430C15O457C27O457C41O474C49O498C56O2628,,
tick,0x7ee819b1d9bd,28453,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x19f2a9a79f8c,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75bbe
tick,0x7ee81c4d15c0,29470,1,0x7ee81a613550,2,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x19f2a9a79f94,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75bbe
code-creation,Eval,10,29736,0x305ee1e8fa96,5, node:internal/util/inspect:1:1,0x305ee1e8d190,~
script-source,21,node:internal/util/inspect,'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeUnshift\x2C\n  BigIntPrototypeValueOf\x2C\n  BooleanPrototypeValueOf\x2C\n  DatePrototypeGetTime\x2C\n  DatePrototypeToISOString\x2C\n  DatePrototypeToString\x2C\n  ErrorPrototypeToString\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  FunctionPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGetSize\x2C\n  MapPrototypeEntries\x2C\n  MathFloor\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathRound\x2C\n  MathSqrt\x2C\n  MathTrunc\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsNaN\x2C\n  NumberParseFloat\x2C\n  NumberParseInt\x2C\n  NumberPrototypeToString\x2C\n  NumberPrototypeValueOf\x2C\n  Object\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectIs\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectPrototypePropertyIsEnumerable\x2C\n  ObjectSeal\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  RegExpPrototypeSymbolSplit\x2C\n  RegExpPrototypeToString\x2C\n  SafeStringIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SetPrototypeGetSize\x2C\n  SetPrototypeValues\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeNormalize\x2C\n  StringPrototypePadEnd\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeReplaceAll\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  StringPrototypeValueOf\x2C\n  SymbolPrototypeToString\x2C\n  SymbolPrototypeValueOf\x2C\n  SymbolIterator\x2C\n  SymbolToPrimitive\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetLength\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n  Uint8Array\x2C\n  globalThis\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst {\n  constants: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\x2C\n    kPending\x2C\n    kRejected\x2C\n  }\x2C\n  getOwnNonIndexProperties\x2C\n  getPromiseDetails\x2C\n  getProxyDetails\x2C\n  previewEntries\x2C\n  getConstructorName: internalGetConstructorName\x2C\n  getExternalValue\x2C\n} = internalBinding('util');\n\nconst {\n  customInspectSymbol\x2C\n  isError\x2C\n  join\x2C\n  removeColors\x2C\n} = require('internal/util');\n\nconst {\n  isStackOverflowError\x2C\n} = require('internal/errors');\n\nconst {\n  isAsyncFunction\x2C\n  isGeneratorFunction\x2C\n  isAnyArrayBuffer\x2C\n  isArrayBuffer\x2C\n  isArgumentsObject\x2C\n  isBoxedPrimitive\x2C\n  isDataView\x2C\n  isExternal\x2C\n  isMap\x2C\n  isMapIterator\x2C\n  isModuleNamespaceObject\x2C\n  isNativeError\x2C\n  isPromise\x2C\n  isSet\x2C\n  isSetIterator\x2C\n  isWeakMap\x2C\n  isWeakSet\x2C\n  isRegExp\x2C\n  isDate\x2C\n  isTypedArray\x2C\n  isStringObject\x2C\n  isNumberObject\x2C\n  isBooleanObject\x2C\n  isBigIntObject\x2C\n} = require('internal/util/types');\n\nconst assert = require('internal/assert');\n\nconst { BuiltinModule } = require('internal/bootstrap/realm');\nconst {\n  validateObject\x2C\n  validateString\x2C\n  kValidateObjectAllowArray\x2C\n} = require('internal/validators');\n\nlet hexSlice;\nlet internalUrl;\n\nfunction pathToFileUrlHref(filepath) {\n  internalUrl ??= require('internal/url');\n  return internalUrl.pathToFileURL(filepath).href;\n}\n\nconst builtInObjects = new SafeSet(\n  ArrayPrototypeFilter(\n    ObjectGetOwnPropertyNames(globalThis)\x2C\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/\x2C e) !== null\x2C\n  )\x2C\n);\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\n\n// These options must stay in sync with `getUserOptions`. So if any option will\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\nconst inspectDefaultOptions = ObjectSeal({\n  showHidden: false\x2C\n  depth: 2\x2C\n  colors: false\x2C\n  customInspect: true\x2C\n  showProxy: false\x2C\n  maxArrayLength: 100\x2C\n  maxStringLength: 10000\x2C\n  breakLength: 80\x2C\n  compact: 3\x2C\n  sorted: false\x2C\n  getters: false\x2C\n  numericSeparator: false\x2C\n});\n\nconst kObjectType = 0;\nconst kArrayType = 1;\nconst kArrayExtrasType = 2;\n\n/* eslint-disable no-control-regex */\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\n/* eslint-enable no-control-regex */\n\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\n\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\n\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\n\nconst kMinLineLength = 16;\n\n// Constants to map the iterator state.\nconst kWeak = 0;\nconst kIterator = 1;\nconst kMapEntries = 2;\n\n// Escaped control characters (plus the single quote and the backslash). Use\n// empty strings to fill up unused entries.\nconst meta = [\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\n];\n\n// Regex used for ansi escape code splitting\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\n// Matches all ansi escape code sequences in a string\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\nconst ansi = new RegExp(ansiPattern\x2C 'g');\n\nlet getStringWidth;\n\nfunction getUserOptions(ctx\x2C isCrossContext) {\n  const ret = {\n    stylize: ctx.stylize\x2C\n    showHidden: ctx.showHidden\x2C\n    depth: ctx.depth\x2C\n    colors: ctx.colors\x2C\n    customInspect: ctx.customInspect\x2C\n    showProxy: ctx.showProxy\x2C\n    maxArrayLength: ctx.maxArrayLength\x2C\n    maxStringLength: ctx.maxStringLength\x2C\n    breakLength: ctx.breakLength\x2C\n    compact: ctx.compact\x2C\n    sorted: ctx.sorted\x2C\n    getters: ctx.getters\x2C\n    numericSeparator: ctx.numericSeparator\x2C\n    ...ctx.userOptions\x2C\n  };\n\n  // Typically\x2C the target value will be an instance of `Object`. If that is\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\n  // to avoid passing it objects from this Context in that case\x2C so we remove\n  // the prototype from the returned object itself + the `stylize()` function\x2C\n  // and remove all other non-primitives\x2C including non-primitive user options.\n  if (isCrossContext) {\n    ObjectSetPrototypeOf(ret\x2C null);\n    for (const key of ObjectKeys(ret)) {\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\n          ret[key] !== null) {\n        delete ret[key];\n      }\n    }\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\n      let stylized;\n      try {\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\n      } catch {\n        // Continue regardless of error.\n      }\n\n      if (typeof stylized !== 'string') return value;\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\n      return stylized;\n    }\x2C null);\n  }\n\n  return ret;\n}\n\n/**\n * Echos the value of any input. Tries to print the value out\n * in the best way possible given the different types.\n * @param {any} value The value to print out.\n * @param {object} opts Optional options object that alters the output.\n */\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\nfunction inspect(value\x2C opts) {\n  // Default options\n  const ctx = {\n    budget: {}\x2C\n    indentationLvl: 0\x2C\n    seen: []\x2C\n    currentDepth: 0\x2C\n    stylize: stylizeNoColor\x2C\n    showHidden: inspectDefaultOptions.showHidden\x2C\n    depth: inspectDefaultOptions.depth\x2C\n    colors: inspectDefaultOptions.colors\x2C\n    customInspect: inspectDefaultOptions.customInspect\x2C\n    showProxy: inspectDefaultOptions.showProxy\x2C\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\n    breakLength: inspectDefaultOptions.breakLength\x2C\n    compact: inspectDefaultOptions.compact\x2C\n    sorted: inspectDefaultOptions.sorted\x2C\n    getters: inspectDefaultOptions.getters\x2C\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\n  };\n  if (arguments.length > 1) {\n    // Legacy...\n    if (arguments.length > 2) {\n      if (arguments[2] !== undefined) {\n        ctx.depth = arguments[2];\n      }\n      if (arguments.length > 3 && arguments[3] !== undefined) {\n        ctx.colors = arguments[3];\n      }\n    }\n    // Set user-specified options\n    if (typeof opts === 'boolean') {\n      ctx.showHidden = opts;\n    } else if (opts) {\n      const optKeys = ObjectKeys(opts);\n      for (let i = 0; i < optKeys.length; ++i) {\n        const key = optKeys[i];\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\n        // this function public or add a new API with a similar or better\n        // functionality.\n        if (\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\n          key === 'stylize') {\n          ctx[key] = opts[key];\n        } else if (ctx.userOptions === undefined) {\n          // This is required to pass through the actual user input.\n          ctx.userOptions = opts;\n        }\n      }\n    }\n  }\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\n  return formatValue(ctx\x2C value\x2C 0);\n}\ninspect.custom = customInspectSymbol;\n\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\n  __proto__: null\x2C\n  get() {\n    return inspectDefaultOptions;\n  }\x2C\n  set(options) {\n    validateObject(options\x2C 'options');\n    return ObjectAssign(inspectDefaultOptions\x2C options);\n  }\x2C\n});\n\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n// Each color consists of an array with the color code as first entry and the\n// reset code as second entry.\nconst defaultFG = 39;\nconst defaultBG = 49;\ninspect.colors = {\n  __proto__: null\x2C\n  reset: [0\x2C 0]\x2C\n  bold: [1\x2C 22]\x2C\n  dim: [2\x2C 22]\x2C // Alias: faint\n  italic: [3\x2C 23]\x2C\n  underline: [4\x2C 24]\x2C\n  blink: [5\x2C 25]\x2C\n  // Swap foreground and background colors\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\n  hidden: [8\x2C 28]\x2C // Alias: conceal\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\n  black: [30\x2C defaultFG]\x2C\n  red: [31\x2C defaultFG]\x2C\n  green: [32\x2C defaultFG]\x2C\n  yellow: [33\x2C defaultFG]\x2C\n  blue: [34\x2C defaultFG]\x2C\n  magenta: [35\x2C defaultFG]\x2C\n  cyan: [36\x2C defaultFG]\x2C\n  white: [37\x2C defaultFG]\x2C\n  bgBlack: [40\x2C defaultBG]\x2C\n  bgRed: [41\x2C defaultBG]\x2C\n  bgGreen: [42\x2C defaultBG]\x2C\n  bgYellow: [43\x2C defaultBG]\x2C\n  bgBlue: [44\x2C defaultBG]\x2C\n  bgMagenta: [45\x2C defaultBG]\x2C\n  bgCyan: [46\x2C defaultBG]\x2C\n  bgWhite: [47\x2C defaultBG]\x2C\n  framed: [51\x2C 54]\x2C\n  overlined: [53\x2C 55]\x2C\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\n  redBright: [91\x2C defaultFG]\x2C\n  greenBright: [92\x2C defaultFG]\x2C\n  yellowBright: [93\x2C defaultFG]\x2C\n  blueBright: [94\x2C defaultFG]\x2C\n  magentaBright: [95\x2C defaultFG]\x2C\n  cyanBright: [96\x2C defaultFG]\x2C\n  whiteBright: [97\x2C defaultFG]\x2C\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\n  bgRedBright: [101\x2C defaultBG]\x2C\n  bgGreenBright: [102\x2C defaultBG]\x2C\n  bgYellowBright: [103\x2C defaultBG]\x2C\n  bgBlueBright: [104\x2C defaultBG]\x2C\n  bgMagentaBright: [105\x2C defaultBG]\x2C\n  bgCyanBright: [106\x2C defaultBG]\x2C\n  bgWhiteBright: [107\x2C defaultBG]\x2C\n};\n\nfunction defineColorAlias(target\x2C alias) {\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\n    __proto__: null\x2C\n    get() {\n      return this[target];\n    }\x2C\n    set(value) {\n      this[target] = value;\n    }\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n  });\n}\n\ndefineColorAlias('gray'\x2C 'grey');\ndefineColorAlias('gray'\x2C 'blackBright');\ndefineColorAlias('bgGray'\x2C 'bgGrey');\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\ndefineColorAlias('dim'\x2C 'faint');\ndefineColorAlias('strikethrough'\x2C 'crossedout');\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\ndefineColorAlias('hidden'\x2C 'conceal');\ndefineColorAlias('inverse'\x2C 'swapColors');\ndefineColorAlias('inverse'\x2C 'swapcolors');\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\n\n// TODO(BridgeAR): Add function style support for more complex styles.\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = ObjectAssign({ __proto__: null }\x2C {\n  special: 'cyan'\x2C\n  number: 'yellow'\x2C\n  bigint: 'yellow'\x2C\n  boolean: 'yellow'\x2C\n  undefined: 'grey'\x2C\n  null: 'bold'\x2C\n  string: 'green'\x2C\n  symbol: 'green'\x2C\n  date: 'magenta'\x2C\n  // "name": intentionally not styling\n  // TODO(BridgeAR): Highlight regular expressions properly.\n  regexp: 'red'\x2C\n  module: 'underline'\x2C\n});\n\nfunction addQuotes(str\x2C quotes) {\n  if (quotes === -1) {\n    return `"${str}"`;\n  }\n  if (quotes === -2) {\n    return `\\`${str}\\``;\n  }\n  return `'${str}'`;\n}\n\nfunction escapeFn(str) {\n  const charCode = StringPrototypeCharCodeAt(str);\n  return meta.length > charCode ? meta[charCode] : `\\\\u${NumberPrototypeToString(charCode\x2C 16)}`;\n}\n\n// Escape control characters\x2C single quotes and the backslash.\n// This is similar to JSON stringify escaping.\nfunction strEscape(str) {\n  let escapeTest = strEscapeSequencesRegExp;\n  let escapeReplace = strEscapeSequencesReplacer;\n  let singleQuote = 39;\n\n  // Check for double quotes. If not present\x2C do not escape single quotes and\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\n  // backticks. If they do not exist\x2C use those as fallback instead of the\n  // double quotes.\n  if (StringPrototypeIncludes(str\x2C "'")) {\n    // This invalidates the charCode and therefore can not be matched for\n    // anymore.\n    if (!StringPrototypeIncludes(str\x2C '"')) {\n      singleQuote = -1;\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\n               !StringPrototypeIncludes(str\x2C '${')) {\n      singleQuote = -2;\n    }\n    if (singleQuote !== 39) {\n      escapeTest = strEscapeSequencesRegExpSingle;\n      escapeReplace = strEscapeSequencesReplacerSingle;\n    }\n  }\n\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest\x2C str) === null)\n    return addQuotes(str\x2C singleQuote);\n  if (str.length > 100) {\n    str = RegExpPrototypeSymbolReplace(escapeReplace\x2C str\x2C escapeFn);\n    return addQuotes(str\x2C singleQuote);\n  }\n\n  let result = '';\n  let last = 0;\n  for (let i = 0; i < str.length; i++) {\n    const point = StringPrototypeCharCodeAt(str\x2C i);\n    if (point === singleQuote ||\n        point === 92 ||\n        point < 32 ||\n        (point > 126 && point < 160)) {\n      if (last === i) {\n        result += meta[point];\n      } else {\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\n      }\n      last = i + 1;\n    } else if (point >= 0xd800 && point <= 0xdfff) {\n      if (point <= 0xdbff && i + 1 < str.length) {\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\n        if (point >= 0xdc00 && point <= 0xdfff) {\n          i++;\n          continue;\n        }\n      }\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}\\\\u${NumberPrototypeToString(point\x2C 16)}`;\n      last = i + 1;\n    }\n  }\n\n  if (last !== str.length) {\n    result += StringPrototypeSlice(str\x2C last);\n  }\n  return addQuotes(result\x2C singleQuote);\n}\n\nfunction stylizeWithColor(str\x2C styleType) {\n  const style = inspect.styles[styleType];\n  if (style !== undefined) {\n    const color = inspect.colors[style];\n    if (color !== undefined)\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\n  }\n  return str;\n}\n\nfunction stylizeNoColor(str) {\n  return str;\n}\n\n// Return a new empty array to push in the results of the default formatter.\nfunction getEmptyFormatArray() {\n  return [];\n}\n\nfunction isInstanceof(object\x2C proto) {\n  try {\n    return object instanceof proto;\n  } catch {\n    return false;\n  }\n}\n\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\n  let firstProto;\n  const tmp = obj;\n  while (obj || isUndetectableObject(obj)) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '' &&\n        isInstanceof(tmp\x2C descriptor.value)) {\n      if (protoProps !== undefined &&\n         (firstProto !== obj ||\n         !builtInObjects.has(descriptor.value.name))) {\n        addPrototypeProperties(\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\n      }\n      return String(descriptor.value.name);\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n    if (firstProto === undefined) {\n      firstProto = obj;\n    }\n  }\n\n  if (firstProto === null) {\n    return null;\n  }\n\n  const res = internalGetConstructorName(tmp);\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return `${res} <Complex prototype>`;\n  }\n\n  const protoConstr = getConstructorName(\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\n\n  if (protoConstr === null) {\n    return `${res} <${inspect(firstProto\x2C {\n      ...ctx\x2C\n      customInspect: false\x2C\n      depth: -1\x2C\n    })}>`;\n  }\n\n  return `${res} <${protoConstr}>`;\n}\n\n// This function has the side effect of adding prototype properties to the\n// `output` argument (which is an array). This is intended to highlight user\n// defined prototype properties.\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\n  let depth = 0;\n  let keys;\n  let keySet;\n  do {\n    if (depth !== 0 || main === obj) {\n      obj = ObjectGetPrototypeOf(obj);\n      // Stop as soon as a null prototype is encountered.\n      if (obj === null) {\n        return;\n      }\n      // Stop as soon as a built-in object type is detected.\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n      if (descriptor !== undefined &&\n          typeof descriptor.value === 'function' &&\n          builtInObjects.has(descriptor.value.name)) {\n        return;\n      }\n    }\n\n    if (depth === 0) {\n      keySet = new SafeSet();\n    } else {\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\n    }\n    // Get all own property names and symbols.\n    keys = ReflectOwnKeys(obj);\n    ArrayPrototypePush(ctx.seen\x2C main);\n    for (const key of keys) {\n      // Ignore the `constructor` property and keys that exist on layers above.\n      if (key === 'constructor' ||\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\n          (depth !== 0 && keySet.has(key))) {\n        continue;\n      }\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n      if (typeof desc.value === 'function') {\n        continue;\n      }\n      const value = formatProperty(\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\n      if (ctx.colors) {\n        // Faint!\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\n      } else {\n        ArrayPrototypePush(output\x2C value);\n      }\n    }\n    ArrayPrototypePop(ctx.seen);\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\n  // is not a good choice here\x2C because it's as if the properties are declared\n  // on the current object from the users perspective.\n  } while (++depth !== 3);\n}\n\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\n  if (constructor === null) {\n    if (tag !== '' && fallback !== tag) {\n      return `[${fallback}${size}: null prototype] [${tag}] `;\n    }\n    return `[${fallback}${size}: null prototype] `;\n  }\n\n  if (tag !== '' && constructor !== tag) {\n    return `${constructor}${size} [${tag}] `;\n  }\n  return `${constructor}${size} `;\n}\n\n// Look up the keys of the object.\nfunction getKeys(value\x2C showHidden) {\n  let keys;\n  const symbols = ObjectGetOwnPropertySymbols(value);\n  if (showHidden) {\n    keys = ObjectGetOwnPropertyNames(value);\n    if (symbols.length !== 0)\n      ArrayPrototypePushApply(keys\x2C symbols);\n  } else {\n    // This might throw if `value` is a Module Namespace Object from an\n    // unevaluated module\x2C but we don't want to perform the actual type\n    // check because it's expensive.\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\n    // and modify this logic as needed.\n    try {\n      keys = ObjectKeys(value);\n    } catch (err) {\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\n             isModuleNamespaceObject(value));\n      keys = ObjectGetOwnPropertyNames(value);\n    }\n    if (symbols.length !== 0) {\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\n    }\n  }\n  return keys;\n}\n\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\n  let fallback = '';\n  if (constructor === null) {\n    fallback = internalGetConstructorName(value);\n    if (fallback === tag) {\n      fallback = 'Object';\n    }\n  }\n  return getPrefix(constructor\x2C tag\x2C fallback);\n}\n\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\n  }\n  recurseTimes += 1;\n  ctx.indentationLvl += 2;\n  const res = [\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\n  ];\n  ctx.indentationLvl -= 2;\n  return reduceToSingleString(\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\n}\n\n// Note: using `formatValue` directly requires the indentation level to be\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\n// value afterwards again.\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\n  // Primitive types cannot have properties.\n  if (typeof value !== 'object' &&\n      typeof value !== 'function' &&\n      !isUndetectableObject(value)) {\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\n  }\n  if (value === null) {\n    return ctx.stylize('null'\x2C 'null');\n  }\n\n  // Memorize the context for custom inspection on proxies.\n  const context = value;\n  // Always check for proxies to prevent side effects and to prevent triggering\n  // any proxy handlers.\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\n  if (proxy !== undefined) {\n    if (proxy === null || proxy[0] === null) {\n      return ctx.stylize('<Revoked Proxy>'\x2C 'special');\n    }\n    if (ctx.showProxy) {\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\n    }\n    value = proxy;\n  }\n\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it.\n  if (ctx.customInspect) {\n    const maybeCustom = value[customInspectSymbol];\n    if (typeof maybeCustom === 'function' &&\n        // Filter out the util module\x2C its inspect function is special.\n        maybeCustom !== inspect &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)) {\n      // This makes sure the recurseTimes are reported as before while using\n      // a counter internally.\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\n      const isCrossContext =\n        proxy !== undefined || !(context instanceof Object);\n      const ret = FunctionPrototypeCall(\n        maybeCustom\x2C\n        context\x2C\n        depth\x2C\n        getUserOptions(ctx\x2C isCrossContext)\x2C\n        inspect\x2C\n      );\n      // If the custom inspection method returned `this`\x2C don't go into\n      // infinite recursion.\n      if (ret !== context) {\n        if (typeof ret !== 'string') {\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\n        }\n        return StringPrototypeReplaceAll(ret\x2C '\\n'\x2C `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`);\n      }\n    }\n  }\n\n  // Using an array here is actually better for the average case than using\n  // a Set. `seen` will only check for the depth and will never grow too large.\n  if (ctx.seen.includes(value)) {\n    let index = 1;\n    if (ctx.circular === undefined) {\n      ctx.circular = new SafeMap();\n      ctx.circular.set(value\x2C index);\n    } else {\n      index = ctx.circular.get(value);\n      if (index === undefined) {\n        index = ctx.circular.size + 1;\n        ctx.circular.set(value\x2C index);\n      }\n    }\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\n  }\n\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\n}\n\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\n  let keys;\n  let protoProps;\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\n    protoProps = [];\n  }\n\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\n  // Reset the variable to check for this later on.\n  if (protoProps !== undefined && protoProps.length === 0) {\n    protoProps = undefined;\n  }\n\n  let tag = value[SymbolToStringTag];\n  // Only list the tag in case it's non-enumerable / not an own property.\n  // Otherwise we'd print this twice.\n  if (typeof tag !== 'string' ||\n      (tag !== '' &&\n      (ctx.showHidden ?\n        ObjectPrototypeHasOwnProperty :\n        ObjectPrototypePropertyIsEnumerable)(\n        value\x2C SymbolToStringTag\x2C\n      ))) {\n    tag = '';\n  }\n  let base = '';\n  let formatter = getEmptyFormatArray;\n  let braces;\n  let noIterator = true;\n  let i = 0;\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n\n  let extrasType = kObjectType;\n\n  // Iterators and the rest are split to reduce checks.\n  // We have to check all values in case the constructor is set to null.\n  // Otherwise it would not possible to identify all types properly.\n  if (SymbolIterator in value || constructor === null) {\n    noIterator = false;\n    if (ArrayIsArray(value)) {\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\n      const prefix = (constructor !== 'Array' || tag !== '') ?\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\n        '';\n      keys = getOwnNonIndexProperties(value\x2C filter);\n      braces = [`${prefix}[`\x2C ']'];\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\n        return `${braces[0]}]`;\n      extrasType = kArrayExtrasType;\n      formatter = formatArray;\n    } else if (isSet(value)) {\n      const size = SetPrototypeGetSize(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\n      keys = getKeys(value\x2C ctx.showHidden);\n      formatter = constructor !== null ?\n        FunctionPrototypeBind(formatSet\x2C null\x2C value) :\n        FunctionPrototypeBind(formatSet\x2C null\x2C SetPrototypeValues(value));\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\n        return `${prefix}{}`;\n      braces = [`${prefix}{`\x2C '}'];\n    } else if (isMap(value)) {\n      const size = MapPrototypeGetSize(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\n      keys = getKeys(value\x2C ctx.showHidden);\n      formatter = constructor !== null ?\n        FunctionPrototypeBind(formatMap\x2C null\x2C value) :\n        FunctionPrototypeBind(formatMap\x2C null\x2C MapPrototypeEntries(value));\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\n        return `${prefix}{}`;\n      braces = [`${prefix}{`\x2C '}'];\n    } else if (isTypedArray(value)) {\n      keys = getOwnNonIndexProperties(value\x2C filter);\n      let bound = value;\n      let fallback = '';\n      if (constructor === null) {\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\n        // Reconstruct the array information.\n        bound = new primordials[fallback](value);\n      }\n      const size = TypedArrayPrototypeGetLength(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\n      braces = [`${prefix}[`\x2C ']'];\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\n        return `${braces[0]}]`;\n      // Special handle the value. The original value is required below. The\n      // bound function is required to reconstruct missing information.\n      formatter = FunctionPrototypeBind(formatTypedArray\x2C null\x2C bound\x2C size);\n      extrasType = kArrayExtrasType;\n    } else if (isMapIterator(value)) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = getIteratorBraces('Map'\x2C tag);\n      // Add braces to the formatter parameters.\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\n    } else if (isSetIterator(value)) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = getIteratorBraces('Set'\x2C tag);\n      // Add braces to the formatter parameters.\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\n    } else {\n      noIterator = true;\n    }\n  }\n  if (noIterator) {\n    keys = getKeys(value\x2C ctx.showHidden);\n    braces = ['{'\x2C '}'];\n    if (constructor === 'Object') {\n      if (isArgumentsObject(value)) {\n        braces[0] = '[Arguments] {';\n      } else if (tag !== '') {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\n      }\n      if (keys.length === 0 && protoProps === undefined) {\n        return `${braces[0]}}`;\n      }\n    } else if (typeof value === 'function') {\n      base = getFunctionBase(value\x2C constructor\x2C tag);\n      if (keys.length === 0 && protoProps === undefined)\n        return ctx.stylize(base\x2C 'special');\n    } else if (isRegExp(value)) {\n      // Make RegExps say that they are RegExps\n      base = RegExpPrototypeToString(\n        constructor !== null ? value : new RegExp(value)\x2C\n      );\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\n      if (prefix !== 'RegExp ')\n        base = `${prefix}${base}`;\n      if ((keys.length === 0 && protoProps === undefined) ||\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\n        return ctx.stylize(base\x2C 'regexp');\n      }\n    } else if (isDate(value)) {\n      // Make dates with properties first say the date\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\n        DatePrototypeToString(value) :\n        DatePrototypeToISOString(value);\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\n      if (prefix !== 'Date ')\n        base = `${prefix}${base}`;\n      if (keys.length === 0 && protoProps === undefined) {\n        return ctx.stylize(base\x2C 'date');\n      }\n    } else if (isError(value)) {\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\n      if (keys.length === 0 && protoProps === undefined)\n        return base;\n    } else if (isAnyArrayBuffer(value)) {\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\n      // Can't do the same for DataView because it has a non-primitive\n      // .buffer property that we need to recurse for.\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\n        'SharedArrayBuffer';\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\n      if (typedArray === undefined) {\n        formatter = formatArrayBuffer;\n      } else if (keys.length === 0 && protoProps === undefined) {\n        return prefix +\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\n      }\n      braces[0] = `${prefix}{`;\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\n    } else if (isDataView(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\n      // .buffer goes last\x2C it's not a primitive like the others.\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\n    } else if (isPromise(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\n      formatter = formatPromise;\n    } else if (isWeakSet(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\n    } else if (isWeakMap(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\n    } else if (isModuleNamespaceObject(value)) {\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\n      // Special handle keys for namespace objects.\n      formatter = formatNamespaceObject.bind(null\x2C keys);\n    } else if (isBoxedPrimitive(value)) {\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\n      if (keys.length === 0 && protoProps === undefined) {\n        return base;\n      }\n    } else {\n      if (keys.length === 0 && protoProps === undefined) {\n        if (isExternal(value)) {\n          const address = getExternalValue(value).toString(16);\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\n        }\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\n      }\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\n    }\n  }\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    let constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\n    if (constructor !== null)\n      constructorName = `[${constructorName}]`;\n    return ctx.stylize(constructorName\x2C 'special');\n  }\n  recurseTimes += 1;\n\n  ctx.seen.push(value);\n  ctx.currentDepth = recurseTimes;\n  let output;\n  const indentationLvl = ctx.indentationLvl;\n  try {\n    output = formatter(ctx\x2C value\x2C recurseTimes);\n    for (i = 0; i < keys.length; i++) {\n      ArrayPrototypePush(\n        output\x2C\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType)\x2C\n      );\n    }\n    if (protoProps !== undefined) {\n      ArrayPrototypePushApply(output\x2C protoProps);\n    }\n  } catch (err) {\n    const constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\n  }\n  if (ctx.circular !== undefined) {\n    const index = ctx.circular.get(value);\n    if (index !== undefined) {\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\n      // Add reference always to the very beginning of the output.\n      if (ctx.compact !== true) {\n        base = base === '' ? reference : `${reference} ${base}`;\n      } else {\n        braces[0] = `${reference} ${braces[0]}`;\n      }\n    }\n  }\n  ctx.seen.pop();\n\n  if (ctx.sorted) {\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\n    if (extrasType === kObjectType) {\n      ArrayPrototypeSort(output\x2C comparator);\n    } else if (keys.length > 1) {\n      const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(output\x2C output.length - keys.length)\x2C comparator);\n      ArrayPrototypeUnshift(sorted\x2C output\x2C output.length - keys.length\x2C keys.length);\n      ReflectApply(ArrayPrototypeSplice\x2C null\x2C sorted);\n    }\n  }\n\n  const res = reduceToSingleString(\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\n  const newLength = budget + res.length;\n  ctx.budget[ctx.indentationLvl] = newLength;\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\n  // This limit also makes sure that huge objects don't block the event loop\n  // significantly.\n  if (newLength > 2 ** 27) {\n    ctx.depth = -1;\n  }\n  return res;\n}\n\nfunction getIteratorBraces(type\x2C tag) {\n  if (tag !== `${type} Iterator`) {\n    if (tag !== '')\n      tag += '] [';\n    tag += `${type} Iterator`;\n  }\n  return [`[${tag}] {`\x2C '}'];\n}\n\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\n  let fn;\n  let type;\n  if (isNumberObject(value)) {\n    fn = NumberPrototypeValueOf;\n    type = 'Number';\n  } else if (isStringObject(value)) {\n    fn = StringPrototypeValueOf;\n    type = 'String';\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\n    // since they just noisy up the output and are redundant\n    // Make boxed primitive Strings look like such\n    keys.splice(0\x2C value.length);\n  } else if (isBooleanObject(value)) {\n    fn = BooleanPrototypeValueOf;\n    type = 'Boolean';\n  } else if (isBigIntObject(value)) {\n    fn = BigIntPrototypeValueOf;\n    type = 'BigInt';\n  } else {\n    fn = SymbolPrototypeValueOf;\n    type = 'Symbol';\n  }\n  let base = `[${type}`;\n  if (type !== constructor) {\n    if (constructor === null) {\n      base += ' (null prototype)';\n    } else {\n      base += ` (${constructor})`;\n    }\n  }\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\n  if (tag !== '' && tag !== constructor) {\n    base += ` [${tag}]`;\n  }\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\n    return base;\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\n}\n\nfunction getClassBase(value\x2C constructor\x2C tag) {\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\n  const name = (hasName && value.name) || '(anonymous)';\n  let base = `class ${name}`;\n  if (constructor !== 'Function' && constructor !== null) {\n    base += ` [${constructor}]`;\n  }\n  if (tag !== '' && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  if (constructor !== null) {\n    const superName = ObjectGetPrototypeOf(value).name;\n    if (superName) {\n      base += ` extends ${superName}`;\n    }\n  } else {\n    base += ' extends [null prototype]';\n  }\n  return `[${base}]`;\n}\n\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\n  const stringified = FunctionPrototypeToString(value);\n  if (StringPrototypeStartsWith(stringified\x2C 'class') && StringPrototypeEndsWith(stringified\x2C '}')) {\n    const slice = StringPrototypeSlice(stringified\x2C 5\x2C -1);\n    const bracketIndex = StringPrototypeIndexOf(slice\x2C '{');\n    if (bracketIndex !== -1 &&\n        (!StringPrototypeIncludes(StringPrototypeSlice(slice\x2C 0\x2C bracketIndex)\x2C '(') ||\n        // Slow path to guarantee that it's indeed a class.\n        RegExpPrototypeExec(classRegExp\x2C RegExpPrototypeSymbolReplace(stripCommentsRegExp\x2C slice)) !== null)\n    ) {\n      return getClassBase(value\x2C constructor\x2C tag);\n    }\n  }\n  let type = 'Function';\n  if (isGeneratorFunction(value)) {\n    type = `Generator${type}`;\n  }\n  if (isAsyncFunction(value)) {\n    type = `Async${type}`;\n  }\n  let base = `[${type}`;\n  if (constructor === null) {\n    base += ' (null prototype)';\n  }\n  if (value.name === '') {\n    base += ' (anonymous)';\n  } else {\n    base += `: ${value.name}`;\n  }\n  base += ']';\n  if (constructor !== type && constructor !== null) {\n    base += ` ${constructor}`;\n  }\n  if (tag !== '' && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  return base;\n}\n\nfunction identicalSequenceRange(a\x2C b) {\n  for (let i = 0; i < a.length - 3; i++) {\n    // Find the first entry of b that matches the current entry of a.\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\n    if (pos !== -1) {\n      const rest = b.length - pos;\n      if (rest > 3) {\n        let len = 1;\n        const maxLen = MathMin(a.length - i\x2C rest);\n        // Count the number of consecutive entries.\n        while (maxLen > len && a[i + len] === b[pos + len]) {\n          len++;\n        }\n        if (len > 3) {\n          return { len\x2C offset: i };\n        }\n      }\n    }\n  }\n\n  return { len: 0\x2C offset: 0 };\n}\n\nfunction getStackString(error) {\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\n}\n\nfunction getStackFrames(ctx\x2C err\x2C stack) {\n  const frames = StringPrototypeSplit(stack\x2C '\\n');\n\n  let cause;\n  try {\n    ({ cause } = err);\n  } catch {\n    // If 'cause' is a getter that throws\x2C ignore it.\n  }\n\n  // Remove stack frames identical to frames in cause.\n  if (cause != null && isError(cause)) {\n    const causeStack = getStackString(cause);\n    const causeStackStart = StringPrototypeIndexOf(causeStack\x2C '\\n    at');\n    if (causeStackStart !== -1) {\n      const causeFrames = StringPrototypeSplit(StringPrototypeSlice(causeStack\x2C causeStackStart + 1)\x2C '\\n');\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\n      if (len > 0) {\n        const skipped = len - 2;\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\n      }\n    }\n  }\n  return frames;\n}\n\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\n  // A stack trace may contain arbitrary data. Only manipulate the output\n  // for "regular errors" (errors that "look normal") for now.\n  let len = name.length;\n\n  if (constructor === null ||\n      (StringPrototypeEndsWith(name\x2C 'Error') &&\n      StringPrototypeStartsWith(stack\x2C name) &&\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\n    let fallback = 'Error';\n    if (constructor === null) {\n      const start = RegExpPrototypeExec(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/\x2C stack) ||\n      RegExpPrototypeExec(/^([a-z_A-Z0-9-]*Error)$/\x2C stack);\n      fallback = (start && start[1]) || '';\n      len = fallback.length;\n      fallback = fallback || 'Error';\n    }\n    const prefix = StringPrototypeSlice(getPrefix(constructor\x2C tag\x2C fallback)\x2C 0\x2C -1);\n    if (name !== prefix) {\n      if (StringPrototypeIncludes(prefix\x2C name)) {\n        if (len === 0) {\n          stack = `${prefix}: ${stack}`;\n        } else {\n          stack = `${prefix}${StringPrototypeSlice(stack\x2C len)}`;\n        }\n      } else {\n        stack = `${prefix} [${name}]${StringPrototypeSlice(stack\x2C len)}`;\n      }\n    }\n  }\n  return stack;\n}\n\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\n  if (!ctx.showHidden && keys.length !== 0) {\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\n      const index = ArrayPrototypeIndexOf(keys\x2C name);\n      // Only hide the property in case it's part of the original stack\n      if (index !== -1 && StringPrototypeIncludes(stack\x2C err[name])) {\n        ArrayPrototypeSplice(keys\x2C index\x2C 1);\n      }\n    }\n  }\n}\n\nfunction markNodeModules(ctx\x2C line) {\n  let tempLine = '';\n  let nodeModule;\n  let pos = 0;\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\n    // '/node_modules/'.length === 14\n    tempLine += StringPrototypeSlice(line\x2C pos\x2C nodeModule.index + 14);\n    tempLine += ctx.stylize(nodeModule[1]\x2C 'module');\n    pos = nodeModule.index + nodeModule[0].length;\n  }\n  if (pos !== 0) {\n    line = tempLine + StringPrototypeSlice(line\x2C pos);\n  }\n  return line;\n}\n\nfunction markCwd(ctx\x2C line\x2C workingDirectory) {\n  let cwdStartPos = StringPrototypeIndexOf(line\x2C workingDirectory);\n  let tempLine = '';\n  let cwdLength = workingDirectory.length;\n  if (cwdStartPos !== -1) {\n    if (StringPrototypeSlice(line\x2C cwdStartPos - 7\x2C cwdStartPos) === 'file://') {\n      cwdLength += 7;\n      cwdStartPos -= 7;\n    }\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\n    const end = start !== cwdStartPos && StringPrototypeEndsWith(line\x2C ')') ? -1 : line.length;\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\n    const cwdSlice = StringPrototypeSlice(line\x2C start\x2C workingDirectoryEndPos);\n\n    tempLine += StringPrototypeSlice(line\x2C 0\x2C start);\n    tempLine += ctx.stylize(cwdSlice\x2C 'undefined');\n    tempLine += StringPrototypeSlice(line\x2C workingDirectoryEndPos\x2C end);\n    if (end === -1) {\n      tempLine += ctx.stylize(')'\x2C 'undefined');\n    }\n  } else {\n    tempLine += line;\n  }\n  return tempLine;\n}\n\nfunction safeGetCWD() {\n  let workingDirectory;\n  try {\n    workingDirectory = process.cwd();\n  } catch {\n    return;\n  }\n  return workingDirectory;\n}\n\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\n  const name = err.name != null ? String(err.name) : 'Error';\n  let stack = getStackString(err);\n\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\n\n  if ('cause' in err &&\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'cause'))) {\n    ArrayPrototypePush(keys\x2C 'cause');\n  }\n\n  // Print errors aggregated into AggregateError\n  if (ArrayIsArray(err.errors) &&\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'errors'))) {\n    ArrayPrototypePush(keys\x2C 'errors');\n  }\n\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\n\n  // Ignore the error message if it's contained in the stack.\n  let pos = (err.message && StringPrototypeIndexOf(stack\x2C err.message)) || -1;\n  if (pos !== -1)\n    pos += err.message.length;\n  // Wrap the error in brackets in case it has no stack trace.\n  const stackStart = StringPrototypeIndexOf(stack\x2C '\\n    at'\x2C pos);\n  if (stackStart === -1) {\n    stack = `[${stack}]`;\n  } else {\n    let newStack = StringPrototypeSlice(stack\x2C 0\x2C stackStart);\n    const stackFramePart = StringPrototypeSlice(stack\x2C stackStart + 1);\n    const lines = getStackFrames(ctx\x2C err\x2C stackFramePart);\n    if (ctx.colors) {\n      // Highlight userland code and node modules.\n      const workingDirectory = safeGetCWD();\n      let esmWorkingDirectory;\n      for (let line of lines) {\n        const core = RegExpPrototypeExec(coreModuleRegExp\x2C line);\n        if (core !== null && BuiltinModule.exists(core[1])) {\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\n        } else {\n          newStack += '\\n';\n\n          line = markNodeModules(ctx\x2C line);\n          if (workingDirectory !== undefined) {\n            let newLine = markCwd(ctx\x2C line\x2C workingDirectory);\n            if (newLine === line) {\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\n              newLine = markCwd(ctx\x2C line\x2C esmWorkingDirectory);\n            }\n            line = newLine;\n          }\n\n          newStack += line;\n        }\n      }\n    } else {\n      newStack += `\\n${ArrayPrototypeJoin(lines\x2C '\\n')}`;\n    }\n    stack = newStack;\n  }\n  // The message and the stack have to be indented as well!\n  if (ctx.indentationLvl !== 0) {\n    const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\n    stack = StringPrototypeReplaceAll(stack\x2C '\\n'\x2C `\\n${indentation}`);\n  }\n  return stack;\n}\n\nfunction groupArrayElements(ctx\x2C output\x2C value) {\n  let totalLength = 0;\n  let maxLength = 0;\n  let i = 0;\n  let outputLength = output.length;\n  if (ctx.maxArrayLength < output.length) {\n    // This makes sure the "... n more items" part is not taken into account.\n    outputLength--;\n  }\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\n  const dataLen = new Array(outputLength);\n  // Calculate the total length of all output entries and the individual max\n  // entries length of all output entries. We have to remove colors first\x2C\n  // otherwise the length would not be calculated properly.\n  for (; i < outputLength; i++) {\n    const len = getStringWidth(output[i]\x2C ctx.colors);\n    dataLen[i] = len;\n    totalLength += len + separatorSpace;\n    if (maxLength < len)\n      maxLength = len;\n  }\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\n  // in-between two entries.\n  const actualMax = maxLength + separatorSpace;\n  // Check if at least three entries fit next to each other and prevent grouping\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\n  // space in-between small entries would be enormous.\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\n\n    const approxCharHeights = 2.5;\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\n    // Dynamically check how many columns seem possible.\n    const columns = MathMin(\n      // Ideally a square should be drawn. We expect a character to be about 2.5\n      // times as high as wide. This is the area formula to calculate a square\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\n      // Divide that by `actualMax` to receive the correct number of columns.\n      // The added bias increases the columns for short entries.\n      MathRound(\n        MathSqrt(\n          approxCharHeights * biasedMax * outputLength\x2C\n        ) / biasedMax\x2C\n      )\x2C\n      // Do not exceed the breakLength.\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\n      // Limit array grouping for small `compact` modes as the user requested\n      // minimal grouping.\n      ctx.compact * 4\x2C\n      // Limit the columns to a maximum of fifteen.\n      15\x2C\n    );\n    // Return with the original output if no grouping should happen.\n    if (columns <= 1) {\n      return output;\n    }\n    const tmp = [];\n    const maxLineLength = [];\n    for (let i = 0; i < columns; i++) {\n      let lineMaxLength = 0;\n      for (let j = i; j < output.length; j += columns) {\n        if (dataLen[j] > lineMaxLength)\n          lineMaxLength = dataLen[j];\n      }\n      lineMaxLength += separatorSpace;\n      maxLineLength[i] = lineMaxLength;\n    }\n    let order = StringPrototypePadStart;\n    if (value !== undefined) {\n      for (let i = 0; i < output.length; i++) {\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\n          order = StringPrototypePadEnd;\n          break;\n        }\n      }\n    }\n    // Each iteration creates a single line of grouped entries.\n    for (let i = 0; i < outputLength; i += columns) {\n      // The last lines may contain less entries than columns.\n      const max = MathMin(i + columns\x2C outputLength);\n      let str = '';\n      let j = i;\n      for (; j < max - 1; j++) {\n        // Calculate extra color padding in case it's active. This has to be\n        // done line by line as some lines might contain more colors than\n        // others.\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\n      }\n      if (order === StringPrototypePadStart) {\n        const padding = maxLineLength[j - i] +\n                        output[j].length -\n                        dataLen[j] -\n                        separatorSpace;\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\n      } else {\n        str += output[j];\n      }\n      ArrayPrototypePush(tmp\x2C str);\n    }\n    if (ctx.maxArrayLength < output.length) {\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\n    }\n    output = tmp;\n  }\n  return output;\n}\n\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\n  if (isStackOverflowError(err)) {\n    ctx.seen.pop();\n    ctx.indentationLvl = indentationLvl;\n    return ctx.stylize(\n      `[${constructorName}: Inspection interrupted ` +\n        'prematurely. Maximum call stack size exceeded.]'\x2C\n      'special'\x2C\n    );\n  }\n  /* c8 ignore next */\n  assert.fail(err.stack);\n}\n\nfunction addNumericSeparator(integerString) {\n  let result = '';\n  let i = integerString.length;\n  const start = StringPrototypeStartsWith(integerString\x2C '-') ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    result = `_${StringPrototypeSlice(integerString\x2C i - 3\x2C i)}${result}`;\n  }\n  return i === integerString.length ?\n    integerString :\n    `${StringPrototypeSlice(integerString\x2C 0\x2C i)}${result}`;\n}\n\nfunction addNumericSeparatorEnd(integerString) {\n  let result = '';\n  let i = 0;\n  for (; i < integerString.length - 3; i += 3) {\n    result += `${StringPrototypeSlice(integerString\x2C i\x2C i + 3)}_`;\n  }\n  return i === 0 ?\n    integerString :\n    `${result}${StringPrototypeSlice(integerString\x2C i)}`;\n}\n\nconst remainingText = (remaining) => `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\n\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\n  if (!numericSeparator) {\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\n    if (ObjectIs(number\x2C -0)) {\n      return fn('-0'\x2C 'number');\n    }\n    return fn(`${number}`\x2C 'number');\n  }\n  const integer = MathTrunc(number);\n  const string = String(integer);\n  if (integer === number) {\n    if (!NumberIsFinite(number) || StringPrototypeIncludes(string\x2C 'e')) {\n      return fn(string\x2C 'number');\n    }\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\n  }\n  if (NumberIsNaN(number)) {\n    return fn(string\x2C 'number');\n  }\n  return fn(`${\n    addNumericSeparator(string)\n  }.${\n    addNumericSeparatorEnd(\n      StringPrototypeSlice(String(number)\x2C string.length + 1)\x2C\n    )\n  }`\x2C 'number');\n}\n\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\n  const string = String(bigint);\n  if (!numericSeparator) {\n    return fn(`${string}n`\x2C 'bigint');\n  }\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\n}\n\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\n  if (typeof value === 'string') {\n    let trailer = '';\n    if (value.length > ctx.maxStringLength) {\n      const remaining = value.length - ctx.maxStringLength;\n      value = StringPrototypeSlice(value\x2C 0\x2C ctx.maxStringLength);\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\n    }\n    if (ctx.compact !== true &&\n        // We do not support handling unicode characters width with\n        // the readline getStringWidth function as there are\n        // performance implications.\n        value.length > kMinLineLength &&\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\n      return ArrayPrototypeJoin(\n        ArrayPrototypeMap(\n          RegExpPrototypeSymbolSplit(/(?<=\\n)/\x2C value)\x2C\n          (line) => fn(strEscape(line)\x2C 'string')\x2C\n        )\x2C\n        ` +\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl + 2)}`\x2C\n      ) + trailer;\n    }\n    return fn(strEscape(value)\x2C 'string') + trailer;\n  }\n  if (typeof value === 'number')\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\n  if (typeof value === 'bigint')\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\n  if (typeof value === 'boolean')\n    return fn(`${value}`\x2C 'boolean');\n  if (typeof value === 'undefined')\n    return fn('undefined'\x2C 'undefined');\n  // es6 symbol primitive\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\n}\n\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\n  const output = new Array(keys.length);\n  for (let i = 0; i < keys.length; i++) {\n    try {\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\n                                 kObjectType);\n    } catch (err) {\n      assert(isNativeError(err) && err.name === 'ReferenceError');\n      // Use the existing functionality. This makes sure the indentation and\n      // line breaks are always correct. Otherwise it is very difficult to keep\n      // this aligned\x2C even though this is a hacky way of dealing with this.\n      const tmp = { [keys[i]]: '' };\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\n      const pos = StringPrototypeLastIndexOf(output[i]\x2C ' ');\n      // We have to find the last whitespace and have to replace that value as\n      // it will be visualized as a regular string.\n      output[i] = StringPrototypeSlice(output[i]\x2C 0\x2C pos + 1) +\n                  ctx.stylize('<uninitialized>'\x2C 'special');\n    }\n  }\n  // Reset the keys to an empty array. This prevents duplicated inspection.\n  keys.length = 0;\n  return output;\n}\n\n// The array is sparse and/or has extra keys\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\n  const keys = ObjectKeys(value);\n  let index = i;\n  for (; i < keys.length && output.length < maxLength; i++) {\n    const key = keys[i];\n    const tmp = +key;\n    // Arrays can only have up to 2^32 - 1 entries\n    if (tmp > 2 ** 32 - 2) {\n      break;\n    }\n    if (`${index}` !== key) {\n      if (RegExpPrototypeExec(numberRegExp\x2C key) === null) {\n        break;\n      }\n      const emptyItems = tmp - index;\n      const ending = emptyItems > 1 ? 's' : '';\n      const message = `<${emptyItems} empty item${ending}>`;\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\n      index = tmp;\n      if (output.length === maxLength) {\n        break;\n      }\n    }\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\n    index++;\n  }\n  const remaining = value.length - index;\n  if (output.length !== maxLength) {\n    if (remaining > 0) {\n      const ending = remaining > 1 ? 's' : '';\n      const message = `<${remaining} empty item${ending}>`;\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\n    }\n  } else if (remaining > 0) {\n    ArrayPrototypePush(output\x2C remainingText(remaining));\n  }\n  return output;\n}\n\nfunction formatArrayBuffer(ctx\x2C value) {\n  let buffer;\n  try {\n    buffer = new Uint8Array(value);\n  } catch {\n    return [ctx.stylize('(detached)'\x2C 'special')];\n  }\n  if (hexSlice === undefined)\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\n    '$1 '\x2C\n  ));\n  const remaining = buffer.length - ctx.maxArrayLength;\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\n}\n\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\n  const valLen = value.length;\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    // Special handle sparse arrays.\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\n    }\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(output\x2C remainingText(remaining));\n  }\n  return output;\n}\n\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\n  const remaining = value.length - maxLength;\n  const output = new Array(maxLength);\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\n    formatNumber :\n    formatBigInt;\n  for (let i = 0; i < maxLength; ++i) {\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\n  }\n  if (remaining > 0) {\n    output[maxLength] = remainingText(remaining);\n  }\n  if (ctx.showHidden) {\n    // .buffer goes last\x2C it's not a primitive like the others.\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\n    ctx.indentationLvl += 2;\n    for (const key of [\n      'BYTES_PER_ELEMENT'\x2C\n      'length'\x2C\n      'byteLength'\x2C\n      'byteOffset'\x2C\n      'buffer'\x2C\n    ]) {\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\n    }\n    ctx.indentationLvl -= 2;\n  }\n  return output;\n}\n\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const length = value.size;\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\n  const remaining = length - maxLength;\n  const output = [];\n  ctx.indentationLvl += 2;\n  let i = 0;\n  for (const v of value) {\n    if (i >= maxLength) break;\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\n    i++;\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(output\x2C remainingText(remaining));\n  }\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\n  const length = value.size;\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\n  const remaining = length - maxLength;\n  const output = [];\n  ctx.indentationLvl += 2;\n  let i = 0;\n  for (const { 0: k\x2C 1: v } of value) {\n    if (i >= maxLength) break;\n    ArrayPrototypePush(\n      output\x2C\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x2C\n    );\n    i++;\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(output\x2C remainingText(remaining));\n  }\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\n  const output = new Array(maxLength);\n  ctx.indentationLvl += 2;\n  for (let i = 0; i < maxLength; i++) {\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\n  }\n  ctx.indentationLvl -= 2;\n  if (state === kWeak && !ctx.sorted) {\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    ArrayPrototypeSort(output);\n  }\n  const remaining = entries.length - maxLength;\n  if (remaining > 0) {\n    ArrayPrototypePush(output\x2C remainingText(remaining));\n  }\n  return output;\n}\n\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\n  const len = entries.length / 2;\n  const remaining = len - maxArrayLength;\n  const maxLength = MathMin(maxArrayLength\x2C len);\n  const output = new Array(maxLength);\n  let i = 0;\n  ctx.indentationLvl += 2;\n  if (state === kWeak) {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      output[i] =\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\n    }\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    if (!ctx.sorted)\n      ArrayPrototypeSort(output);\n  } else {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      const res = [\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\n      ];\n      output[i] = reduceToSingleString(\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\n    }\n  }\n  ctx.indentationLvl -= 2;\n  if (remaining > 0) {\n    ArrayPrototypePush(output\x2C remainingText(remaining));\n  }\n  return output;\n}\n\nfunction formatWeakCollection(ctx) {\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\n}\n\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\n  const entries = previewEntries(value);\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\n  const entries = previewEntries(value);\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\n  if (isKeyValue) {\n    // Mark entry iterators as such.\n    braces[0] = RegExpPrototypeSymbolReplace(/ Iterator] {$/\x2C braces[0]\x2C ' Entries] {');\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\n  }\n\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\n}\n\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\n  let output;\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\n  if (state === kPending) {\n    output = [ctx.stylize('<pending>'\x2C 'special')];\n  } else {\n    ctx.indentationLvl += 2;\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\n    ctx.indentationLvl -= 2;\n    output = [\n      state === kRejected ?\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\n        str\x2C\n    ];\n  }\n  return output;\n}\n\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\n                        original = value) {\n  let name\x2C str;\n  let extra = ' ';\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\n    { value: value[key]\x2C enumerable: true };\n  if (desc.value !== undefined) {\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\n    ctx.indentationLvl += diff;\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\n      extra = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\n    }\n    ctx.indentationLvl -= diff;\n  } else if (desc.get !== undefined) {\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\n    const s = ctx.stylize;\n    const sp = 'special';\n    if (ctx.getters && (ctx.getters === true ||\n          (ctx.getters === 'get' && desc.set === undefined) ||\n          (ctx.getters === 'set' && desc.set !== undefined))) {\n      try {\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\n        ctx.indentationLvl += 2;\n        if (tmp === null) {\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\n        } else if (typeof tmp === 'object') {\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\n        } else {\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\n        }\n        ctx.indentationLvl -= 2;\n      } catch (err) {\n        const message = `<Inspection threw (${err.message})>`;\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\n      }\n    } else {\n      str = ctx.stylize(`[${label}]`\x2C sp);\n    }\n  } else if (desc.set !== undefined) {\n    str = ctx.stylize('[Setter]'\x2C 'special');\n  } else {\n    str = ctx.stylize('undefined'\x2C 'undefined');\n  }\n  if (type === kArrayType) {\n    return str;\n  }\n  if (typeof key === 'symbol') {\n    const tmp = RegExpPrototypeSymbolReplace(\n      strEscapeSequencesReplacer\x2C\n      SymbolPrototypeToString(key)\x2C\n      escapeFn\x2C\n    );\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\n  } else if (key === '__proto__') {\n    name = "['__proto__']";\n  } else if (desc.enumerable === false) {\n    const tmp = RegExpPrototypeSymbolReplace(\n      strEscapeSequencesReplacer\x2C\n      key\x2C\n      escapeFn\x2C\n    );\n    name = `[${tmp}]`;\n  } else if (RegExpPrototypeExec(keyStrRegExp\x2C key) !== null) {\n    name = ctx.stylize(key\x2C 'name');\n  } else {\n    name = ctx.stylize(strEscape(key)\x2C 'string');\n  }\n  return `${name}:${extra}${str}`;\n}\n\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\n  // length of at least `output.length`. In addition\x2C some cases have a\n  // whitespace in-between each other that is added to the total as well.\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n  // function. Check the performance overhead and make it an opt-in in case it's\n  // significant.\n  let totalLength = output.length + start;\n  if (totalLength + output.length > ctx.breakLength)\n    return false;\n  for (let i = 0; i < output.length; i++) {\n    if (ctx.colors) {\n      totalLength += removeColors(output[i]).length;\n    } else {\n      totalLength += output[i].length;\n    }\n    if (totalLength > ctx.breakLength) {\n      return false;\n    }\n  }\n  // Do not line up properties on the same line if `base` contains line breaks.\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\n}\n\nfunction reduceToSingleString(\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\n  if (ctx.compact !== true) {\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\n      // Memorize the original output length. In case the output is grouped\x2C\n      // prevent lining up the entries on a single line.\n      const entries = output.length;\n      // Group array elements together if the array contains at least six\n      // separate entries.\n      if (extrasType === kArrayExtrasType && entries > 6) {\n        output = groupArrayElements(ctx\x2C output\x2C value);\n      }\n      // `ctx.currentDepth` is set to the most inner depth of the currently\n      // inspected object part while `recurseTimes` is the actual current depth\n      // that is inspected.\n      //\n      // Example:\n      //\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\n      //\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\n      // depth of 1.\n      //\n      // Consolidate all entries of the local most inner depth up to\n      // `ctx.compact`\x2C as long as the properties are smaller than\n      // `ctx.breakLength`.\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\n          entries === output.length) {\n        // Line up all entries on a single line in case the entries do not\n        // exceed `breakLength`. Add 10 as constant to start next to all other\n        // factors that may reduce `breakLength`.\n        const start = output.length + ctx.indentationLvl +\n                      braces[0].length + base.length + 10;\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\n          const joinedOutput = join(output\x2C '\x2C ');\n          if (!StringPrototypeIncludes(joinedOutput\x2C '\\n')) {\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\n              ` ${braces[1]}`;\n          }\n        }\n      }\n    }\n    // Line up each entry on an individual line.\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\n  }\n  // Line up all entries on a single line in case the entries do not exceed\n  // `breakLength`.\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\n      braces[1];\n  }\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\n  // we need to force the first item to be on the next line or the\n  // items will not line up correctly.\n  const ln = base === '' && braces[0].length === 1 ?\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\n  // Line up each entry on an individual line.\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\n}\n\nfunction hasBuiltInToString(value) {\n  // Prevent triggering proxy traps.\n  const getFullProxy = false;\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\n  if (proxyTarget !== undefined) {\n    if (proxyTarget === null) {\n      return true;\n    }\n    value = proxyTarget;\n  }\n\n  // Check if value has a custom Symbol.toPrimitive transformation.\n  if (typeof value[SymbolToPrimitive] === 'function') {\n    return false;\n  }\n\n  // Count objects that have no `toString` function as built-in.\n  if (typeof value.toString !== 'function') {\n    return true;\n  }\n\n  // The object has a own `toString` property. Thus it's not not a built-in one.\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\n    return false;\n  }\n\n  // Find the object that has the `toString` property as own property in the\n  // prototype chain.\n  let pointer = value;\n  do {\n    pointer = ObjectGetPrototypeOf(pointer);\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\n\n  // Check closer if the object is a built-in.\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\n  return descriptor !== undefined &&\n    typeof descriptor.value === 'function' &&\n    builtInObjects.has(descriptor.value.name);\n}\n\nconst firstErrorLine = (error) => StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\nlet CIRCULAR_ERROR_MESSAGE;\nfunction tryStringify(arg) {\n  try {\n    return JSONStringify(arg);\n  } catch (err) {\n    // Populate the circular error message lazily\n    if (!CIRCULAR_ERROR_MESSAGE) {\n      try {\n        const a = {};\n        a.a = a;\n        JSONStringify(a);\n      } catch (circularError) {\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\n      }\n    }\n    if (err.name === 'TypeError' &&\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\n      return '[Circular]';\n    }\n    throw err;\n  }\n}\n\nfunction format(...args) {\n  return formatWithOptionsInternal(undefined\x2C args);\n}\n\nfunction formatWithOptions(inspectOptions\x2C ...args) {\n  validateObject(inspectOptions\x2C 'inspectOptions'\x2C kValidateObjectAllowArray);\n  return formatWithOptionsInternal(inspectOptions\x2C args);\n}\n\nfunction formatNumberNoColor(number\x2C options) {\n  return formatNumber(\n    stylizeNoColor\x2C\n    number\x2C\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\n  );\n}\n\nfunction formatBigIntNoColor(bigint\x2C options) {\n  return formatBigInt(\n    stylizeNoColor\x2C\n    bigint\x2C\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\n  );\n}\n\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\n  const first = args[0];\n  let a = 0;\n  let str = '';\n  let join = '';\n\n  if (typeof first === 'string') {\n    if (args.length === 1) {\n      return first;\n    }\n    let tempStr;\n    let lastPos = 0;\n\n    for (let i = 0; i < first.length - 1; i++) {\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\n        if (a + 1 !== args.length) {\n          switch (nextChar) {\n            case 115: { // 's'\n              const tempArg = args[++a];\n              if (typeof tempArg === 'number') {\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\n              } else if (typeof tempArg === 'bigint') {\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\n              } else if (typeof tempArg !== 'object' ||\n                         tempArg === null ||\n                         !hasBuiltInToString(tempArg)) {\n                tempStr = String(tempArg);\n              } else {\n                tempStr = inspect(tempArg\x2C {\n                  ...inspectOptions\x2C\n                  compact: 3\x2C\n                  colors: false\x2C\n                  depth: 0\x2C\n                });\n              }\n              break;\n            }\n            case 106: // 'j'\n              tempStr = tryStringify(args[++a]);\n              break;\n            case 100: { // 'd'\n              const tempNum = args[++a];\n              if (typeof tempNum === 'bigint') {\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\n              } else if (typeof tempNum === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\n              }\n              break;\n            }\n            case 79: // 'O'\n              tempStr = inspect(args[++a]\x2C inspectOptions);\n              break;\n            case 111: // 'o'\n              tempStr = inspect(args[++a]\x2C {\n                ...inspectOptions\x2C\n                showHidden: true\x2C\n                showProxy: true\x2C\n                depth: 4\x2C\n              });\n              break;\n            case 105: { // 'i'\n              const tempInteger = args[++a];\n              if (typeof tempInteger === 'bigint') {\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\n              } else if (typeof tempInteger === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumberNoColor(\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\n              }\n              break;\n            }\n            case 102: { // 'f'\n              const tempFloat = args[++a];\n              if (typeof tempFloat === 'symbol') {\n                tempStr = 'NaN';\n              } else {\n                tempStr = formatNumberNoColor(\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\n              }\n              break;\n            }\n            case 99: // 'c'\n              a += 1;\n              tempStr = '';\n              break;\n            case 37: // '%'\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\n              lastPos = i + 1;\n              continue;\n            default: // Any other character is not a correct placeholder\n              continue;\n          }\n          if (lastPos !== i - 1) {\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\n          }\n          str += tempStr;\n          lastPos = i + 1;\n        } else if (nextChar === 37) {\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\n          lastPos = i + 1;\n        }\n      }\n    }\n    if (lastPos !== 0) {\n      a++;\n      join = ' ';\n      if (lastPos < first.length) {\n        str += StringPrototypeSlice(first\x2C lastPos);\n      }\n    }\n  }\n\n  while (a < args.length) {\n    const value = args[a];\n    str += join;\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\n    join = ' ';\n    a++;\n  }\n  return str;\n}\n\nfunction isZeroWidthCodePoint(code) {\n  return code <= 0x1F || // C0 control codes\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\n    // Combining Diacritical Marks for Symbols\n    (code >= 0x20D0 && code <= 0x20FF) ||\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\n}\n\nif (internalBinding('config').hasIntl) {\n  const icu = internalBinding('icu');\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\n  // best thing possible at the moment\x2C since it's difficult to know what\n  // the receiving end supports.\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\n    let width = 0;\n\n    if (removeControlChars) {\n      str = stripVTControlCharacters(str);\n    }\n    for (let i = 0; i < str.length; i++) {\n      // Try to avoid calling into C++ by first handling the ASCII portion of\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\n      const code = str.charCodeAt(i);\n      if (code >= 127) {\n        width += icu.getStringWidth(StringPrototypeNormalize(StringPrototypeSlice(str\x2C i)\x2C 'NFC'));\n        break;\n      }\n      width += code >= 32 ? 1 : 0;\n    }\n    return width;\n  };\n} else {\n  /**\n   * Returns the number of columns required to display the given string.\n   */\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\n    let width = 0;\n\n    if (removeControlChars)\n      str = stripVTControlCharacters(str);\n    str = StringPrototypeNormalize(str\x2C 'NFC');\n    for (const char of new SafeStringIterator(str)) {\n      const code = StringPrototypeCodePointAt(char\x2C 0);\n      if (isFullWidthCodePoint(code)) {\n        width += 2;\n      } else if (!isZeroWidthCodePoint(code)) {\n        width++;\n      }\n    }\n\n    return width;\n  };\n\n  /**\n   * Returns true if the character represented by a given\n   * Unicode code point is full-width. Otherwise returns false.\n   */\n  const isFullWidthCodePoint = (code) => {\n    // Code points are partially derived from:\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\n    return code >= 0x1100 && (\n      code <= 0x115f ||  // Hangul Jamo\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n      (code >= 0x3250 && code <= 0x4dbf) ||\n      // CJK Unified Ideographs .. Yi Radicals\n      (code >= 0x4e00 && code <= 0xa4c6) ||\n      // Hangul Jamo Extended-A\n      (code >= 0xa960 && code <= 0xa97c) ||\n      // Hangul Syllables\n      (code >= 0xac00 && code <= 0xd7a3) ||\n      // CJK Compatibility Ideographs\n      (code >= 0xf900 && code <= 0xfaff) ||\n      // Vertical Forms\n      (code >= 0xfe10 && code <= 0xfe19) ||\n      // CJK Compatibility Forms .. Small Form Variants\n      (code >= 0xfe30 && code <= 0xfe6b) ||\n      // Halfwidth and Fullwidth Forms\n      (code >= 0xff01 && code <= 0xff60) ||\n      (code >= 0xffe0 && code <= 0xffe6) ||\n      // Kana Supplement\n      (code >= 0x1b000 && code <= 0x1b001) ||\n      // Enclosed Ideographic Supplement\n      (code >= 0x1f200 && code <= 0x1f251) ||\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\n      // Emoticons 0x1f600 - 0x1f64f\n      (code >= 0x1f300 && code <= 0x1f64f) ||\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n      (code >= 0x20000 && code <= 0x3fffd)\n    );\n  };\n\n}\n\n/**\n * Remove all VT control characters. Use to estimate displayed string width.\n */\nfunction stripVTControlCharacters(str) {\n  validateString(str\x2C 'str');\n\n  return RegExpPrototypeSymbolReplace(ansi\x2C str\x2C '');\n}\n\nmodule.exports = {\n  identicalSequenceRange\x2C\n  inspect\x2C\n  inspectDefaultOptions\x2C\n  format\x2C\n  formatWithOptions\x2C\n  getStringWidth\x2C\n  stripVTControlCharacters\x2C\n  isZeroWidthCodePoint\x2C\n};\n
code-source-info,0x305ee1e8fa96,21,0,81727,C0O0C4O81727,,
code-creation,JS,10,31001,0x305ee1e9310e,3705, node:internal/util/inspect:1:1,0x305ee1e8fa10,~
code-source-info,0x305ee1e9310e
tick,0x7ee819a99a1e,31050,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x19f2a9a79f94,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75bbe
code-creation,JS,10,31378,0x305ee1e99b5e,19, node:internal/util/inspect:172:5,0x305ee1e90f48,~
code-source-info,0x305ee1e99b5e,21,3504,3565,C0O3557C11O3511C17O3557C18O3565,,
code-creation,RegExp,3,31435,0x7ee79be4a000,972,^[A-Z][a-zA-Z0-9]+$
code-creation,JS,10,31570,0x305ee1e9ef56,57,defineColorAlias node:internal/util/inspect:434:26,0x305ee1e8fbb8,~
code-source-info,0x305ee1e9ef56,21,13080,13319,C0O13080C9O13100C21O13129C26O13137C31O13171C39O13217C50O13100C56O13318,,
tick,0x7ee81c21c75a,31596,0,0x0,3,0x7ee81c5678d0,0x305ee1e93d9e,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a79f94,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75bbe
code-creation,Eval,10,31791,0x305ee1ea041e,5, node:internal/util/debuglog:1:1,0x305ee1ea01b8,~
script-source,22,node:internal/util/debuglog,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = { __proto__: null };\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    __proto__: null\x2C\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  });\n  return logger;\n}\n\nmodule.exports = {\n  debuglog\x2C\n  initializeDebugEnv\x2C\n};\n
code-source-info,0x305ee1ea041e,22,0,3395,C0O0C4O3395,,
code-creation,JS,10,31854,0x305ee1ea07ae,185, node:internal/util/debuglog:1:1,0x305ee1ea0398,~
code-source-info,0x305ee1ea07ae,22,0,3395,C0O0C80O25C86O49C92O59C98O82C104O103C110O133C116O226C122O226C127O187C133O196C139O204C145O415C146O415C148O431C149O431C151O1404C155O1404C157O1419C158O1419C160O3339C167O3360C173O3372C179O3354C184O3394,,
code-creation,JS,10,31960,0x305ee1ea1156,82,debuglog node:internal/util/debuglog:76:18,0x305ee1ea05b8,~
code-source-info,0x305ee1ea1156,22,2328,3337,C0O2328C28O2453C32O2453C34O2855C35O2855C37O2877C41O2877C43O2965C48O3164C58O3185C63O3231C74O3164C79O3321C81O3335,,
code-creation,JS,10,32012,0x305ee1ea179e,42,PriorityQueue node:internal/priority_queue:19:14,0x305ee1e894a8,~
code-source-info,0x305ee1ea179e,20,515,688,C0O515C14O547C18O583C23O597C27O615C31O652C36O670C41O687,,
code-creation,JS,10,32081,0x305ee1ea20e6,12,ImmediateList node:internal/timers:269:14,0x19f2a9a78e18,~
code-source-info,0x305ee1ea20e6,13,8612,8664,C0O8621C1O8631C5O8643C6O8653C11O8663,,
code-creation,JS,10,32184,0x305ee1ea4346,152,setupProcessObject node:internal/bootstrap/node:360:28,0x19f2a9a74f18,~
code-source-info,0x305ee1ea4346,12,12444,13222,C0O12444C8O12472C16O12472C21O12515C33O12515C38O12548C45O12597C50O12548C55O12611C67O12611C72O12659C88O12689C96O12659C101O13000C105O13000C107O13011C118O13032C129O13082C137O13124C145O13011C151O13221,,
tick,0x7ee81c1d2d40,32679,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x305ee1ea4356,0x19f2a9a75c20
code-creation,Eval,10,32748,0x305ee1ea6e76,5, node:events:1:1,0x305ee1ea62a8,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  String\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolAsyncIterator\x2C\n  SymbolDispose\x2C\n} = primordials;\nconst kRejection = SymbolFor('nodejs.rejection');\n\nconst { kEmptyObject } = require('internal/util');\n\nconst {\n  inspect\x2C\n  identicalSequenceRange\x2C\n} = require('internal/util/inspect');\n\nlet spliceOne;\nlet FixedQueue;\nlet kFirstEventParam;\nlet kResistStopPropagation;\n\nconst {\n  AbortError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_UNHANDLED_ERROR\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\n\nconst {\n  validateInteger\x2C\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateNumber\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst { addAbortListener } = require('internal/events/abort_listener');\n\nconst kCapture = Symbol('kCapture');\nconst kErrorMonitor = Symbol('events.errorMonitor');\nconst kShapeMode = Symbol('shapeMode');\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\nconst kMaxEventTargetListenersWarned =\n  Symbol('events.maxEventTargetListenersWarned');\nconst kWatermarkData = SymbolFor('nodejs.watermarkData');\n\nlet EventEmitterAsyncResource;\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\n//\n// This implementation was adapted straight from addaleax's\n// eventemitter-asyncresource MIT-licensed userland module.\n// https://github.com/addaleax/eventemitter-asyncresource\nfunction lazyEventEmitterAsyncResource() {\n  if (EventEmitterAsyncResource === undefined) {\n    const {\n      AsyncResource\x2C\n    } = require('async_hooks');\n\n    const kEventEmitter = Symbol('kEventEmitter');\n    const kAsyncResource = Symbol('kAsyncResource');\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\n      /**\n       * @param {EventEmitter} ee\n       * @param {string} [type]\n       * @param {{\n       *   triggerAsyncId?: number\x2C\n       *   requireManualDestroy?: boolean\x2C\n       * }} [options]\n       */\n      constructor(ee\x2C type\x2C options) {\n        super(type\x2C options);\n        this[kEventEmitter] = ee;\n      }\n\n      /**\n       * @type {EventEmitter}\n       */\n      get eventEmitter() {\n        if (this[kEventEmitter] === undefined)\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\n        return this[kEventEmitter];\n      }\n    }\n\n    EventEmitterAsyncResource =\n      class EventEmitterAsyncResource extends EventEmitter {\n        /**\n         * @param {{\n         *   name?: string\x2C\n         *   triggerAsyncId?: number\x2C\n         *   requireManualDestroy?: boolean\x2C\n         * }} [options]\n         */\n        constructor(options = undefined) {\n          let name;\n          if (typeof options === 'string') {\n            name = options;\n            options = undefined;\n          } else {\n            if (new.target === EventEmitterAsyncResource) {\n              validateString(options?.name\x2C 'options.name');\n            }\n            name = options?.name || new.target.name;\n          }\n          super(options);\n\n          this[kAsyncResource] =\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\n        }\n\n        /**\n         * @param {symbol\x2Cstring} event\n         * @param  {...any} args\n         * @returns {boolean}\n         */\n        emit(event\x2C ...args) {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          const { asyncResource } = this;\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\n                              args);\n        }\n\n        /**\n         * @returns {void}\n         */\n        emitDestroy() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          this.asyncResource.emitDestroy();\n        }\n\n        /**\n         * @type {number}\n         */\n        get asyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.asyncId();\n        }\n\n        /**\n         * @type {number}\n         */\n        get triggerAsyncId() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this.asyncResource.triggerAsyncId();\n        }\n\n        /**\n         * @type {EventEmitterReferencingAsyncResource}\n         */\n        get asyncResource() {\n          if (this[kAsyncResource] === undefined)\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\n          return this[kAsyncResource];\n        }\n      };\n  }\n  return EventEmitterAsyncResource;\n}\n\n/**\n * Creates a new `EventEmitter` instance.\n * @param {{ captureRejections?: boolean; }} [opts]\n * @constructs {EventEmitter}\n */\nfunction EventEmitter(opts) {\n  EventEmitter.init.call(this\x2C opts);\n}\nmodule.exports = EventEmitter;\nmodule.exports.addAbortListener = addAbortListener;\nmodule.exports.once = once;\nmodule.exports.on = on;\nmodule.exports.getEventListeners = getEventListeners;\nmodule.exports.getMaxListeners = getMaxListeners;\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.captureRejectionSymbol = kRejection;\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\n  __proto__: null\x2C\n  get() {\n    return EventEmitter.prototype[kCapture];\n  }\x2C\n  set(value) {\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\n\n    EventEmitter.prototype[kCapture] = value;\n  }\x2C\n  enumerable: true\x2C\n});\n\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: lazyEventEmitterAsyncResource\x2C\n  set: undefined\x2C\n  configurable: true\x2C\n});\n\nEventEmitter.errorMonitor = kErrorMonitor;\n\n// The default for captureRejections is false\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\n  __proto__: null\x2C\n  value: false\x2C\n  writable: true\x2C\n  enumerable: false\x2C\n});\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nlet defaultMaxListeners = 10;\nlet isEventTarget;\n\nfunction checkListener(listener) {\n  validateFunction(listener\x2C 'listener');\n}\n\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get: function() {\n    return defaultMaxListeners;\n  }\x2C\n  set: function(arg) {\n    validateNumber(arg\x2C 'defaultMaxListeners'\x2C 0);\n    defaultMaxListeners = arg;\n  }\x2C\n});\n\nObjectDefineProperties(EventEmitter\x2C {\n  kMaxEventTargetListeners: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListeners\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n  kMaxEventTargetListenersWarned: {\n    __proto__: null\x2C\n    value: kMaxEventTargetListenersWarned\x2C\n    enumerable: false\x2C\n    configurable: false\x2C\n    writable: false\x2C\n  }\x2C\n});\n\n/**\n * Sets the max listeners.\n * @param {number} n\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\n * @returns {void}\n */\nEventEmitter.setMaxListeners =\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\n    validateNumber(n\x2C 'setMaxListeners'\x2C 0);\n    if (eventTargets.length === 0) {\n      defaultMaxListeners = n;\n    } else {\n      if (isEventTarget === undefined)\n        isEventTarget = require('internal/event_target').isEventTarget;\n\n      for (let i = 0; i < eventTargets.length; i++) {\n        const target = eventTargets[i];\n        if (isEventTarget(target)) {\n          target[kMaxEventTargetListeners] = n;\n          target[kMaxEventTargetListenersWarned] = false;\n        } else if (typeof target.setMaxListeners === 'function') {\n          target.setMaxListeners(n);\n        } else {\n          throw new ERR_INVALID_ARG_TYPE(\n            'eventTargets'\x2C\n            ['EventEmitter'\x2C 'EventTarget']\x2C\n            target);\n        }\n      }\n    }\n  };\n\n// If you're updating this function definition\x2C please also update any\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\nEventEmitter.init = function(opts) {\n\n  if (this._events === undefined ||\n      this._events === ObjectGetPrototypeOf(this)._events) {\n    this._events = { __proto__: null };\n    this._eventsCount = 0;\n    this[kShapeMode] = false;\n  } else {\n    this[kShapeMode] = true;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n\n\n  if (opts?.captureRejections) {\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\n    this[kCapture] = Boolean(opts.captureRejections);\n  } else {\n    // Assigning the kCapture property directly saves an expensive\n    // prototype lookup in a very sensitive hot path.\n    this[kCapture] = EventEmitter.prototype[kCapture];\n  }\n};\n\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\n  if (!that[kCapture]) {\n    return;\n  }\n\n  // Handle Promises/A+ spec\x2C then could be a getter\n  // that throws on second use.\n  try {\n    const then = promise.then;\n\n    if (typeof then === 'function') {\n      then.call(promise\x2C undefined\x2C function(err) {\n        // The callback is called with nextTick to avoid a follow-up\n        // rejection from this promise.\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\n      });\n    }\n  } catch (err) {\n    that.emit('error'\x2C err);\n  }\n}\n\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\n  if (typeof ee[kRejection] === 'function') {\n    ee[kRejection](err\x2C type\x2C ...args);\n  } else {\n    // We have to disable the capture rejections mechanism\x2C otherwise\n    // we might end up in an infinite loop.\n    const prev = ee[kCapture];\n\n    // If the error handler throws\x2C it is not catchable and it\n    // will end up in 'uncaughtException'. We restore the previous\n    // value of kCapture in case the uncaughtException is present\n    // and the exception is handled.\n    try {\n      ee[kCapture] = false;\n      ee.emit('error'\x2C err);\n    } finally {\n      ee[kCapture] = prev;\n    }\n  }\n}\n\n/**\n * Increases the max listeners of the event emitter.\n * @param {number} n\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  validateNumber(n\x2C 'setMaxListeners'\x2C 0);\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\n/**\n * Returns the current max listener value for the event emitter.\n * @returns {number}\n */\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nfunction enhanceStackTrace(err\x2C own) {\n  let ctorInfo = '';\n  try {\n    const { name } = this.constructor;\n    if (name !== 'EventEmitter')\n      ctorInfo = ` on ${name} instance`;\n  } catch {\n    // Continue regardless of error.\n  }\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\n\n  const errStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\n  const ownStack = ArrayPrototypeSlice(\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\n\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\n  if (len > 0) {\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\n                         '    [... lines matching original stack trace ...]');\n  }\n\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\n}\n\n/**\n * Synchronously calls each of the listeners registered\n * for the event.\n * @param {string | symbol} type\n * @param {...any} [args]\n * @returns {boolean}\n */\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\n  let doError = (type === 'error');\n\n  const events = this._events;\n  if (events !== undefined) {\n    if (doError && events[kErrorMonitor] !== undefined)\n      this.emit(kErrorMonitor\x2C ...args);\n    doError = (doError && events.error === undefined);\n  } else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    let er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      try {\n        const capture = {};\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\n          __proto__: null\x2C\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\n          configurable: true\x2C\n        });\n      } catch {\n        // Continue regardless of error.\n      }\n\n      // Note: The comments on the `throw` lines are intentional\x2C they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n\n    let stringifiedEr;\n    try {\n      stringifiedEr = inspect(er);\n    } catch {\n      stringifiedEr = er;\n    }\n\n    // At least give some kind of context to the user\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  const handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    const result = handler.apply(this\x2C args);\n\n    // We check if result is undefined first because that\n    // is the most common case so we do not pay any perf\n    // penalty\n    if (result !== undefined && result !== null) {\n      addCatch(this\x2C result\x2C type\x2C args);\n    }\n  } else {\n    const len = handler.length;\n    const listeners = arrayClone(handler);\n    for (let i = 0; i < len; ++i) {\n      const result = listeners[i].apply(this\x2C args);\n\n      // We check if result is undefined first because that\n      // is the most common case so we do not pay any perf\n      // penalty.\n      // This code is duplicated because extracting it away\n      // would make it non-inlineable.\n      if (result !== undefined && result !== null) {\n        addCatch(this\x2C result\x2C type\x2C args);\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\n  let m;\n  let events;\n  let existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = { __proto__: null };\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === "newListener"! Before\n    // adding it to the listeners\x2C first emit "newListener".\n    if (events.newListener !== undefined) {\n      target.emit('newListener'\x2C type\x2C\n                  listener.listener ?? listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element\x2C need to change to array.\n      existing = events[type] =\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\n      // If we've already got an array\x2C just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      const w = genericNodeError(\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\n        `added to ${inspect(target\x2C { depth: -1 })}. MaxListeners is ${m}. Use emitter.setMaxListeners() to increase limit`\x2C\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\n      process.emitWarning(w);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Adds a listener to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\n  return _addListener(this\x2C type\x2C listener\x2C false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n/**\n * Adds the `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependListener =\n    function prependListener(type\x2C listener) {\n      return _addListener(this\x2C type\x2C listener\x2C true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type\x2C this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target\x2C arguments);\n  }\n}\n\nfunction _onceWrap(target\x2C type\x2C listener) {\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\n  const wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\n/**\n * Adds a one-time `listener` function to the event emitter.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.once = function once(type\x2C listener) {\n  checkListener(listener);\n\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\n  return this;\n};\n\n/**\n * Adds a one-time `listener` function to the beginning of\n * the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type\x2C listener) {\n      checkListener(listener);\n\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\n      return this;\n    };\n\n/**\n * Removes the specified `listener` from the listeners array.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeListener =\n    function removeListener(type\x2C listener) {\n      checkListener(listener);\n\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      const list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        this._eventsCount -= 1;\n\n        if (this[kShapeMode]) {\n          events[type] = undefined;\n        } else if (this._eventsCount === 0) {\n          this._events = { __proto__: null };\n        } else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        let position = -1;\n\n        for (let i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          if (spliceOne === undefined)\n            spliceOne = require('internal/util').spliceOne;\n          spliceOne(list\x2C position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener'\x2C type\x2C listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n/**\n * Removes all listeners from the event emitter. (Only\n * removes listeners for a specific event name if specified\n * as `type`).\n * @param {string | symbol} [type]\n * @returns {EventEmitter}\n */\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      const events = this._events;\n      if (events === undefined)\n        return this;\n\n      // Not listening for removeListener\x2C no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = { __proto__: null };\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = { __proto__: null };\n          else\n            delete events[type];\n        }\n        this[kShapeMode] = false;\n        return this;\n      }\n\n      // Emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        for (const key of ReflectOwnKeys(events)) {\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = { __proto__: null };\n        this._eventsCount = 0;\n        this[kShapeMode] = false;\n        return this;\n      }\n\n      const listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type\x2C listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type\x2C listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target\x2C type\x2C unwrap) {\n  const events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  const evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener);\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this\x2C type\x2C true);\n};\n\n/**\n * Returns a copy of the array of listeners and wrappers for\n * the event name specified as `type`.\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this\x2C type\x2C false);\n};\n\n/**\n * Returns the number of listeners listening to the event name\n * specified as `type`.\n * @deprecated since v3.2.0\n * @param {EventEmitter} emitter\n * @param {string | symbol} type\n * @returns {number}\n */\nEventEmitter.listenerCount = function(emitter\x2C type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  }\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\n/**\n * Returns the number of listeners listening to event name\n * specified as `type`.\n * @param {string | symbol} type\n * @param {Function} listener\n * @returns {number}\n */\nfunction listenerCount(type\x2C listener) {\n  const events = this._events;\n\n  if (events !== undefined) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      if (listener != null) {\n        return listener === evlistener || listener === evlistener.listener ? 1 : 0;\n      }\n\n      return 1;\n    } else if (evlistener !== undefined) {\n      if (listener != null) {\n        let matching = 0;\n\n        for (let i = 0\x2C l = evlistener.length; i < l; i++) {\n          if (evlistener[i] === listener || evlistener[i].listener === listener) {\n            matching++;\n          }\n        }\n\n        return matching;\n      }\n\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Returns an array listing the events for which\n * the emitter has registered listeners.\n * @returns {any[]}\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr) {\n  // At least since V8 8.3\x2C this implementation is faster than the previous\n  // which always used a simple for-loop\n  switch (arr.length) {\n    case 2: return [arr[0]\x2C arr[1]];\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\n  }\n  return ArrayPrototypeSlice(arr);\n}\n\nfunction unwrapListeners(arr) {\n  const ret = arrayClone(arr);\n  for (let i = 0; i < ret.length; ++i) {\n    const orig = ret[i].listener;\n    if (typeof orig === 'function')\n      ret[i] = orig;\n  }\n  return ret;\n}\n\n/**\n * Returns a copy of the array of listeners for the event name\n * specified as `type`.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @param {string | symbol} type\n * @returns {Function[]}\n */\nfunction getEventListeners(emitterOrTarget\x2C type) {\n  // First check if EventEmitter\n  if (typeof emitterOrTarget.listeners === 'function') {\n    return emitterOrTarget.listeners(type);\n  }\n  // Require event target lazily to avoid always loading it\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\n  if (isEventTarget(emitterOrTarget)) {\n    const root = emitterOrTarget[kEvents].get(type);\n    const listeners = [];\n    let handler = root?.next;\n    while (handler?.listener !== undefined) {\n      const listener = handler.listener?.deref ?\n        handler.listener.deref() : handler.listener;\n      listeners.push(listener);\n      handler = handler.next;\n    }\n    return listeners;\n  }\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Returns the max listeners set.\n * @param {EventEmitter | EventTarget} emitterOrTarget\n * @returns {number}\n */\nfunction getMaxListeners(emitterOrTarget) {\n  if (typeof emitterOrTarget?.getMaxListeners === 'function') {\n    return _getMaxListeners(emitterOrTarget);\n  } else if (emitterOrTarget?.[kMaxEventTargetListeners]) {\n    return emitterOrTarget[kMaxEventTargetListeners];\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\n                                 emitterOrTarget);\n}\n\n/**\n * Creates a `Promise` that is fulfilled when the emitter\n * emits the given event.\n * @param {EventEmitter} emitter\n * @param {string | symbol} name\n * @param {{ signal: AbortSignal; }} [options]\n * @returns {Promise}\n */\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\n  const signal = options?.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n  return new Promise((resolve\x2C reject) => {\n    const errorListener = (err) => {\n      emitter.removeListener(name\x2C resolver);\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      reject(err);\n    };\n    const resolver = (...args) => {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error'\x2C errorListener);\n      }\n      if (signal != null) {\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\n      }\n      resolve(args);\n    };\n\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n    const opts = { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true };\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C opts);\n    if (name !== 'error' && typeof emitter.once === 'function') {\n      // EventTarget does not have `error` event semantics like Node\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\n      emitter.once('error'\x2C errorListener);\n    }\n    function abortListener() {\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\n    }\n    if (signal != null) {\n      eventTargetAgnosticAddListener(\n        signal\x2C 'abort'\x2C abortListener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\n    }\n  });\n}\n\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\n  ObjectGetPrototypeOf(async function* () {}).prototype);\n\nfunction createIterResult(value\x2C done) {\n  return { value\x2C done };\n}\n\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.removeListener === 'function') {\n    emitter.removeListener(name\x2C listener);\n  } else if (typeof emitter.removeEventListener === 'function') {\n    emitter.removeEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags?.once) {\n      emitter.once(name\x2C listener);\n    } else {\n      emitter.on(name\x2C listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    emitter.addEventListener(name\x2C listener\x2C flags);\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\n  }\n}\n\n/**\n * Returns an `AsyncIterator` that iterates `event` events.\n * @param {EventEmitter} emitter\n * @param {string | symbol} event\n * @param {{\n *    signal: AbortSignal;\n *    close?: string[];\n *    highWaterMark?: number\x2C\n *    lowWaterMark?: number\n *   }} [options]\n * @returns {AsyncIterator}\n */\nfunction on(emitter\x2C event\x2C options = kEmptyObject) {\n  // Parameters validation\n  const signal = options.signal;\n  validateAbortSignal(signal\x2C 'options.signal');\n  if (signal?.aborted)\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\n  // Support both highWaterMark and highWatermark for backward compatibility\n  const highWatermark = options.highWaterMark ?? options.highWatermark ?? NumberMAX_SAFE_INTEGER;\n  validateInteger(highWatermark\x2C 'options.highWaterMark'\x2C 1);\n  // Support both lowWaterMark and lowWatermark for backward compatibility\n  const lowWatermark = options.lowWaterMark ?? options.lowWatermark ?? 1;\n  validateInteger(lowWatermark\x2C 'options.lowWaterMark'\x2C 1);\n\n  // Preparing controlling queues and variables\n  FixedQueue ??= require('internal/fixed_queue');\n  const unconsumedEvents = new FixedQueue();\n  const unconsumedPromises = new FixedQueue();\n  let paused = false;\n  let error = null;\n  let finished = false;\n  let size = 0;\n\n  const iterator = ObjectSetPrototypeOf({\n    next() {\n      // First\x2C we consume all unread events\n      if (size) {\n        const value = unconsumedEvents.shift();\n        size--;\n        if (paused && size < lowWatermark) {\n          emitter.resume();\n          paused = false;\n        }\n        return PromiseResolve(createIterResult(value\x2C false));\n      }\n\n      // Then we error\x2C if an error happened\n      // This happens one time if at all\x2C because after 'error'\n      // we stop listening\n      if (error) {\n        const p = PromiseReject(error);\n        // Only the first element errors\n        error = null;\n        return p;\n      }\n\n      // If the iterator is finished\x2C resolve to done\n      if (finished) return closeHandler();\n\n      // Wait until an event happens\n      return new Promise(function(resolve\x2C reject) {\n        unconsumedPromises.push({ resolve\x2C reject });\n      });\n    }\x2C\n\n    return() {\n      return closeHandler();\n    }\x2C\n\n    throw(err) {\n      if (!err || !(err instanceof Error)) {\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\n                                       'Error'\x2C err);\n      }\n      errorHandler(err);\n    }\x2C\n    [SymbolAsyncIterator]() {\n      return this;\n    }\x2C\n    [kWatermarkData]: {\n      /**\n       * The current queue size\n       */\n      get size() {\n        return size;\n      }\x2C\n      /**\n       * The low watermark. The emitter is resumed every time size is lower than it\n       */\n      get low() {\n        return lowWatermark;\n      }\x2C\n      /**\n       * The high watermark. The emitter is paused every time size is higher than it\n       */\n      get high() {\n        return highWatermark;\n      }\x2C\n      /**\n       * It checks whether the emitter is paused by the watermark controller or not\n       */\n      get isPaused() {\n        return paused;\n      }\x2C\n    }\x2C\n  }\x2C AsyncIteratorPrototype);\n\n  // Adding event handlers\n  const { addEventListener\x2C removeAll } = listenersController();\n  kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\n  addEventListener(emitter\x2C event\x2C options[kFirstEventParam] ? eventHandler : function(...args) {\n    return eventHandler(args);\n  });\n  if (event !== 'error' && typeof emitter.on === 'function') {\n    addEventListener(emitter\x2C 'error'\x2C errorHandler);\n  }\n  const closeEvents = options?.close;\n  if (closeEvents?.length) {\n    for (let i = 0; i < closeEvents.length; i++) {\n      addEventListener(emitter\x2C closeEvents[i]\x2C closeHandler);\n    }\n  }\n\n  const abortListenerDisposable = signal ? addAbortListener(signal\x2C abortListener) : null;\n\n  return iterator;\n\n  function abortListener() {\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\n  }\n\n  function eventHandler(value) {\n    if (unconsumedPromises.isEmpty()) {\n      size++;\n      if (!paused && size > highWatermark) {\n        paused = true;\n        emitter.pause();\n      }\n      unconsumedEvents.push(value);\n    } else unconsumedPromises.shift().resolve(createIterResult(value\x2C false));\n  }\n\n  function errorHandler(err) {\n    if (unconsumedPromises.isEmpty()) error = err;\n    else unconsumedPromises.shift().reject(err);\n\n    closeHandler();\n  }\n\n  function closeHandler() {\n    abortListenerDisposable?.[SymbolDispose]();\n    removeAll();\n    finished = true;\n    const doneResult = createIterResult(undefined\x2C true);\n    while (!unconsumedPromises.isEmpty()) {\n      unconsumedPromises.shift().resolve(doneResult);\n    }\n\n    return PromiseResolve(doneResult);\n  }\n}\n\nfunction listenersController() {\n  const listeners = [];\n\n  return {\n    addEventListener(emitter\x2C event\x2C handler\x2C flags) {\n      eventTargetAgnosticAddListener(emitter\x2C event\x2C handler\x2C flags);\n      ArrayPrototypePush(listeners\x2C [emitter\x2C event\x2C handler\x2C flags]);\n    }\x2C\n    removeAll() {\n      while (listeners.length > 0) {\n        ReflectApply(eventTargetAgnosticRemoveListener\x2C undefined\x2C ArrayPrototypePop(listeners));\n      }\n    }\x2C\n  };\n}\n
code-source-info,0x305ee1ea6e76,23,0,35938,C0O0C4O35938,,
code-creation,JS,10,33323,0x305ee1ea8556,1341, node:events:1:1,0x305ee1ea6df0,~
code-source-info,0x305ee1ea
code-creation,Eval,10,33517,0x305ee1eabbfe,5, node:internal/events/abort_listener:1:1,0x305ee1eaba48,~
script-source,24,node:internal/events/abort_listener,'use strict';\n\nconst {\n  SymbolDispose\x2C\n} = primordials;\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\n\nlet queueMicrotask;\nlet kResistStopPropagation;\n\n/**\n * @param {AbortSignal} signal\n * @param {EventListener} listener\n * @returns {Disposable}\n */\nfunction addAbortListener(signal\x2C listener) {\n  if (signal === undefined) {\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  }\n  validateAbortSignal(signal\x2C 'signal');\n  validateFunction(listener\x2C 'listener');\n\n  let removeEventListener;\n  if (signal.aborted) {\n    queueMicrotask ??= require('internal/process/task_queues').queueMicrotask;\n    queueMicrotask(() => listener());\n  } else {\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n    // TODO(atlowChemi) add { subscription: true } and return directly\n    signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\n    removeEventListener = () => {\n      signal.removeEventListener('abort'\x2C listener);\n    };\n  }\n  return {\n    __proto__: null\x2C\n    [SymbolDispose]() {\n      removeEventListener?.();\n    }\x2C\n  };\n}\n\nmodule.exports = {\n  __proto__: null\x2C\n  addAbortListener\x2C\n};\n
code-source-info,0x305ee1eabbfe,24,0,1320,C0O0C4O1320,,
code-creation,JS,10,33565,0x305ee1eabd76,108, node:internal/events/abort_listener:1:1,0x305ee1eabb78,~
code-source-info,0x305ee1eabd76,24,0,1320,C0O0C32O25C38O112C44O112C49O67C55O90C61O198C67O198C72O161C77O167C83O231C84O231C86O251C87O251C89O1259C96O1299C102O1274C107O1319,,
code-creation,JS,10,33720,0x305ee1eacc56,21,EventEmitter node:events:220:22,0x305ee1ea6f58,~
code-source-info,0x305ee1eacc56,23,6598,6646,C0O6609C3O6622C8O6627C13O6627C20O6645,,
tick,0x7ee819b1d9bd,33753,0,0x0,3,0x7ee81c5678d0,0x305ee1ea4389,0x19f2a9a75c20
code-creation,JS,10,33790,0x305ee1eaf426,164,EventEmitter.init node:events:342:29,0x305ee1ea7970,~
code-source-info,0x305ee1eaf426,23,9981,10641,C0O10002C6O10038C13O10050C16O10050C21O10076C25O10046C30O10092C34O10105C38O10132C39O10150C43O10159C45O10164C49O10176C55O10200C57O10205C61O10217C65O10258C75O10251C79O10290C86O10298C95O10325C100O10346C108O10325C113O10399C115O10404C120O10416C123O10429C128O10416C132O10414C138O10585C140O10590C146O10615C153O10625C155O10624C158O10600C163O10640,,
code-creation,JS,10,33843,0x305ee1eaf876,36,setupGlobalProxy node:internal/bootstrap/node:390:26,0x19f2a9a74f98,~
code-source-info,0x305ee1eaf876,12,13249,13461,C0O13256C7O13277C12O13289C20O13256C25O13428C30O13446C35O13460,,
code-creation,JS,10,33887,0x305ee1eafb56,107,setupBuffer node:internal/bootstrap/node:401:21,0x19f2a9a74fe8,~
code-source-info,0x305ee1eafb56,12,13483,14126,C0O13483C8O13516C16O13516C21O13502C26O13559C34O13559C39O13656C44O13682C49O13656C54O13696C58O13908C60O13908C62O13918C73O13939C84O13988C92O14029C100O13918C106O14125,,
code-creation,Eval,10,34623,0x305ee1eb22de,5, node:buffer:1:1,0x305ee1eb0e18,~
script-source,25,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeGetLength\x2C\n  TypedArrayPrototypeSet\x2C\n  TypedArrayPrototypeSlice\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  createFromString\x2C\n  fill: bindingFill\x2C\n  isAscii: bindingIsAscii\x2C\n  isUtf8: bindingIsUtf8\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  atob: _atob\x2C\n  btoa: _btoa\x2C\n} = internalBinding('buffer');\nconst {\n  constants: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\x2C\n  }\x2C\n  getOwnNonIndexProperties\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  isInsideNodeModules\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\x2C\n  defineLazyProperties\x2C\n  encodingsMap\x2C\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n  isTypedArray\x2C\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\x2C\n} = require('internal/util/inspect');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateString\x2C\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\x2C\n} = require('internal/buffer');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    __proto__: null\x2C\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\x2C\n  }\x2C\n  MAX_STRING_LENGTH: {\n    __proto__: null\x2C\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocPool = createUnsafeBuffer(poolSize).buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules())) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!isUint8Array(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!isUint8Array(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0 || sourceStart > source.length)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C `>= 0 && <= ${source.length}`\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.length;\n  } else {\n    sourceEnd = toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\n    return 0;\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart)\n    sourceEnd = sourceStart + target.length - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.length - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (sourceStart !== 0 || sourceEnd < source.length)\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\n\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\x2C\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\x2C\n  );\n};\n\n/**\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\n * rather than the contents of the view.\n * @param {TypedArray} view\n * @param {number} [offset]\n * @param {number} [length]\n * @returns {Buffer}\n */\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\n  if (!isTypedArray(view)) {\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\n  }\n\n  const viewLength = TypedArrayPrototypeGetLength(view);\n  if (viewLength === 0) {\n    return Buffer.alloc(0);\n  }\n\n  if (offset !== undefined || length !== undefined) {\n    if (offset !== undefined) {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n      if (offset >= viewLength) return Buffer.alloc(0);\n    } else {\n      offset = 0;\n    }\n    let end;\n    if (length !== undefined) {\n      validateInteger(length\x2C 'length'\x2C 0);\n      end = offset + length;\n    } else {\n      end = viewLength;\n    }\n\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\n  }\n\n  return fromArrayLike(new Uint8Array(\n    TypedArrayPrototypeGetBuffer(view)\x2C\n    TypedArrayPrototypeGetByteOffset(view)\x2C\n    TypedArrayPrototypeGetByteLength(view)));\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(size) {\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\n  return createUnsafeBuffer(size);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const length = ops.byteLength(string);\n\n  if (length >= (Buffer.poolSize >>> 1))\n    return createFromString(string\x2C ops.encodingVal);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\n  if (actual !== length) {\n    // byteLength() may overestimate. That's a rare case\x2C though.\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n  }\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (typeof encoding !== 'string' || encoding.length === 0) {\n    if (string.length === 0)\n      return new FastBuffer();\n    ops = encodingOps.utf8;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (string.length === 0)\n      return new FastBuffer();\n  }\n  return fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\x2C\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\x2C\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\x2C\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\x2C\n  }\x2C\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\n    );\n  }\n\n  const len = string.length;\n  if (len === 0)\n    return 0;\n\n  if (encoding) {\n    const ops = getEncodingOps(encoding);\n    if (ops) {\n      return ops.byteLength(string);\n    }\n  }\n  return byteLengthUtf8(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\x2C\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\x2C\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start |= 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end |= 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n  const len = TypedArrayPrototypeGetByteLength(this);\n  if (len !== TypedArrayPrototypeGetByteLength(otherBuffer))\n    return false;\n\n  return len === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = { __proto__: null };\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\x2C\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding)\n    return this.utf8Write(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.subarray = function subarray(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  return this.subarray(start\x2C end);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\x2C\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    const err = genericNodeError(\n      `Unable to transcode Buffer [${code}]`\x2C\n      { code: code\x2C errno: result }\x2C\n    );\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n  const result = _btoa(`${input}`);\n  if (result === -1) {\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  return result;\n}\n\nfunction atob(input) {\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n\n  const result = _atob(`${input}`);\n\n  switch (result) {\n    case -2: // Invalid character\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n    case -1: // Single character remained\n      throw lazyDOMException(\n        'The string to be decoded is not correctly encoded.'\x2C\n        'InvalidCharacterError');\n    case -3: // Possible overflow\n      // TODO(@anonrig): Throw correct error in here.\n      throw lazyDOMException('The input causes overflow.'\x2C 'InvalidCharacterError');\n    default:\n      return result;\n  }\n}\n\nfunction isUtf8(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsUtf8(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\n}\n\nfunction isAscii(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsAscii(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\n}\n\nmodule.exports = {\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  isUtf8\x2C\n  isAscii\x2C\n\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) {\n      validateNumber(val\x2C 'INSPECT_MAX_BYTES'\x2C 0);\n      INSPECT_MAX_BYTES = val;\n    }\x2C\n  }\x2C\n});\n\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/blob'\x2C\n  ['Blob'\x2C 'resolveObjectURL']\x2C\n);\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/file'\x2C\n  ['File']\x2C\n);\n
code-source-info,0x305ee1eb22de,25,0,38785,C0O0C4O38785,,
code-creation,JS,10,35261,0x305ee1eb5d8e,2869, node:buffer:1:1,0x305ee1eb2258,~
code-source-info,0x305ee1eb5d8e,25,0,38785,C0O0C388O1159C394O1168C400O1184C406O1209C412O1222C418O1233C424O1246C430O1261C436O1287C442O1313C447O1339C452O1363C457O1387C463O1419C469O1448C475O1472C481O1502C487O1525C492O1542C498O1563C504O1595C510O1631C516O1667C522O1694C528O1726C534O1752C540O1780C546O1794C551O2166C555O2166C561O1843C567O1870C573O1882C579O1899C585O1925C591O1949C597O1975C603O1992C609O2009C615O2026C621O2051C627O2070C633O2089C639O2100C645O2114C650O2140C656O2155C662O2294C666O2294C672O2214C678O2220C684O2240C690O2264C696O2479C704O2479C710O2329C715O2352C721O2375C727O2395C733O2416C738O2437C743O2461C749O2590C757O2590C763O2515C769O2535C775O2556C781O2572C787O2658C795O2658C801O2641C807O2923C815O2923C821O2710C827O2716C833O2746C839O2772C845O2799C851O2828C857O2850C863O2872C869O2901C875O3053C883O3053C889O2961C895O2978C901O2996C907O3015C913O3033C919O3187C923O3187C925O3375C933O3375C939O3284C945O3298C951O3322C956O3351C962O3404C966O3415C974O3437C978O3447C986O3477C990O3464C994O3488C998O3521C1004O3488C1008O3552C1017O3595C1025O3629C1035O3710C1043O3744C1053O3552C1059O3815C1067O3831C1071O3847C1072O3847C1074O3857C1075O3857C1077O3869C1078O3869C1080O4041C1084O4041C1087O4214C1088O4214C1090O4251C1091O4251C1093O4276C1099O4332C1106O4398C1109O4276C1111O7960C1115O7989C1121O8070C1132O7960C1137O8342C1145O8354C1149O9552C1157O9573C1161O10827C1166O10981C1172O10991C1176O10998C1184O10998C1189O11125C1197O11138C1201O11570C1209O11589C1213O11909C1221O11932C1225O12291C1231O12259C1236O12324C1240O12324C1245O15104C1253O15120C1257O15179C1265O15194C1269O15524C1277O15542C1281O15697C1289O15732C1293O15723C1297O15745C1305O15759C1309O17201C1315O17211C1325O17265C1335O17287C1339O17314C1347O17391C1355O17452C1369O17563C1382O17617C1398O17642C1410O17684C1422O17761C1434O17822C1456O17939C1469O17996C1485O18021C1497O18063C1509O18140C1521O18201C1543O18317C1556O18373C1572O18397C1584O18435C1596O18514C1608O18577C1630O18691C1643O18746C1659O18769C1671O18807C1683O18885C1695O18947C1717O19176C1730O19232C1746O19256C1758O19320C1770O19399C1782O19462C1804O19696C1817O19755C1833O19782C1845O19846C1857O19934C1869O20000C1891O20234C1904O20287C1920O20308C1932O20352C1944O20428C1956O20488C1980O17201C1982O23040C1988O23058C1996O23105C2000O23133C2019O23197C2031O23105C2041O23297C2045O23325C2064O23389C2076O23297C2086O23494C2090O23501C2100O23516C2108O23906C2112O23913C2122O23932C2130O24516C2134O24523C2144O24540C2152O24975C2154O24975C2156O25036C2160O25043C2166O25053C2170O25074C2178O26221C2182O26228C2192O26255C2200O26264C2206O26246C2214O26288C2218O26295C2228O26313C2236O29202C2240O29209C2250O29227C2258O29349C2262O29356C2272O29378C2280O29505C2284O29512C2294O29531C2302O29792C2306O29799C2316O29814C2324O31866C2328O31873C2338O31889C2346O32909C2350O32916C2360O32933C2368O33608C2372O33615C2382O33634C2390O33942C2394O33949C2404O33965C2412O34109C2416O34116C2426O34133C2434O34542C2438O34549C2448O34566C2456O35015C2460O35022C2470O35039C2478O35552C2482O35559C2492O35593C2498O35603C2506O35584C2514O35618C2516O35629C2520O35633C2530O35658C2550O35729C2554O35729C2564O35684C2574O35711C2584O35851C2591O38077C2602O38098C2612O38108C2622O38122C2632O38135C2642O38145C2652O38169C2662O38183C2672O38203C2682O38211C2692O38092C2700O38251C2719O38275C2730O38356C2748O38393C2757O38466C2769O38507C2791O38221C2801O38648C2824O38617C2834O38742C2857O38711C2868O38784,,
tick,0x7ee819a999b3,35325,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x305ee1eafb66,0x19f2a9a75c26
new,MemoryChunk,0x1537ab980000,262144
new,MemoryChunk,0x2bf7c8000000,262144
tick,0x7ee81c0c6526,35893,0,0x0,1
code-creation,Eval,10,36621,0x305ee1ebedfe,5, node:internal/buffer:1:1,0x305ee1ebd958,~
script-source,26,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWrite\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1Write\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8Write\x2C\n  getZeroFillToggle\x2C\n} = internalBinding('buffer');\n\nconst {\n  privateSymbols: {\n    untransferable_object_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = asciiWrite;\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = latin1Write;\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = utf8Write;\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  obj[untransferable_object_private_symbol] = true;\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\x2C\n};\n
code-source-info,0x305ee1ebedfe,26,0,30926,C0O0C4O30926,,
code-creation,JS,10,37120,0x2bf7c8025b4e,912, node:internal/buffer:1:1,0x305ee1ebed78,~
code-source-info,0x2bf7c8025b4e,26,0,30926,C0O0C547O25C553O35C558O51C563O67C569O80C575O90C580O204C583O204C588O230C593O130C599O158C605O182C611O265C614O265C619O246C625O530C628O530C633O307C639O321C645O336C651O354C657O369C663O381C669O394C675O407C681O421C687O436C693O454C699O469C705O481C711O494C717O507C723O637C726O637C731O584C736O590C742O725C747O725C752O725C754O772C757O800C764O772C769O772C771O830C776O830C781O830C783O877C786O905C793O877C798O877C800O936C807O952C811O1147C816O1164C821O1168C824O1147C826O26152C847O26127C849O30270C852O30270C855O30270C857O30756C864O30777C870O30791C876O30820C882O30844C888O30866C894O30882C900O30898C906O30771C911O30925,,
tick,0x7ee8191499a5,37137,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x305ee1eb6133,0x168b8b4afead,0x168b8b4afc8d,0x305ee1eafb66,0x19f2a9a75c26
code-creation,JS,10,37389,0x2bf7c8029626,590,addBufferPrototypeMethods node:internal/buffer:965:35,0x2bf7c80253f8,~
code-source-info,0x2bf7c8029626,26,26503,29608,C0O26515C2O26537C6O26558C8O26580C12O26601C14O26623C18O26644C20O26666C24O26687C26O26708C30O26728C32O26749C36O26769C38O26792C42O26814C44O26837C48O26859C50O26882C54O26904C56O26927C60O26949C62O26971C66O26992C68O27014C72O27036C74O27053C78O27069C80O27088C84O27106C86O27125C90O27143C92O27159C96O27174C98O27191C102O27207C104O27226C108O27244C110O27263C114O27281C116O27298C120O27314C122O27333C126O27351C128O27370C132O27388C134O27404C138O27419C140O27436C144O27452C146O27471C150O27489C152O27508C156O27526C158O27542C162O27557C164O27575C168O27592C170O27610C174O27627C176O27642C180O27656C182O27672C186O27687C188O27705C192O27722C194O27740C198O27758C200O27776C204O27793C206O27813C210O27832C212O27852C216O27871C218O27888C222O27904C224O27922C228O27939C230O27959C234O27978C236O27998C240O28017C242O28035C246O28052C248O28072C252O28091C254O28111C258O28130C260O28147C264O28163C266O28181C270O28198C272O28218C276O28237C278O28257C282O28276C284O28293C288O28309C290O28328C294O28346C296O28365C300O28383C302O28399C306O28414C308O28431C312O28447C314O28466C318O28484C320O28503C324O28522C326O28542C339O28540C343O28596C345O28616C358O28614C362O28670C364O28691C377O28689C381O28747C383O28768C396O28766C400O28824C402O28845C415O28843C419O28901C421O28922C434O28920C438O28978C440O29000C453O28998C457O29058C459O29080C472O29078C476O29139C478O29158C480O29156C484O29172C486O29192C488O29190C492O29207C494O29230C496O29228C500O29248C502O29268C504O29266C508O29283C510O29300C512O29298C516O29312C518O29330C520O29328C524O29343C526O29361C528O29359C532O29374C534O29393C536O29391C540O29407C542O29427C544O29425C548O29442C550O29465C552O29463C556O29483C558O29503C560O29501C564O29518C566O29535C568O29533C572O29547C574O29565C576O29563C580O29578C582O29596C584O29594C589O29607,,
code-creation,JS,10,37519,0x2bf7c802bf26,70,createPool node:buffer:152:20,0x305ee1eb2310,~
code-source-info,0x2bf7c802bf26,25,3900,4040,C0O3907C3O3925C10O3916C16O3937C23O3968C26O3949C31O3977C38O3947C44O3988C51O4009C54O3988C58O4023C62O4034C69O4039,,
code-creation,JS,10,37575,0x2bf7c802ea8e,71,createUnsafeBuffer node:internal/buffer:1061:28,0x2bf7c8025498,~
code-source-info,0x2bf7c802ea8e,26,30318,30427,C0O30329C8O30341C15O30358C22O30365C39O30405C48O30417C70O30426,,
code-creation,JS,10,37604,0x2bf7c802eb9e,49,FastBuffer node:internal/buffer:960:14,0x2bf7c8025538,~
code-source-info,0x2bf7c802eb9e,26,26376,26465,C3O26419C33O26419C48O26464,,
code-creation,JS,10,37657,0x2bf7c802ed6e,30,markAsUntransferable node:internal/buffer:1050:30,0x2bf7c8025448,~
code-source-info,0x2bf7c802ed6e,26,29793,30013,C0O29803C16O29883C17O29890C18O29962C20O29966C24O30004C29O30012,,
code-creation,JS,10,37894,0x2bf7c8030d7e,279,defineLazyProperties node:internal/util:600:30,0x307edb92b0d8,~
code-source-info,0x2bf7c8030d7e,16,16700,17604,C0O16700C39O16762C44O16789C45O16789C47O16809C58O17554C67O16830C75O16821C79O16814C116O16852C118O16856C121O16852C123O16869C124O16869C126O17038C139O17059C150O17117C158O17038C163O17337C173O17358C184O17416C195O17337C200O17435C203O17447C210O17511C216O17529C222O17540C228O17452C241O16796C258O17558C270O17558C278O17603,,
code-creation,JS,10,37975,0x2bf7c8033026,27,set node:internal/bootstrap/node:103:8,0x19f2a9a750b8,~
code-source-info,0x2bf7c8033026,12,3889,3944,C0O3905C9O3912C14O3924C21O3922C26O3943,,
tick,0x7ee81c1f7b08,38047,0,0x0,0,0x7ee81bf39350,0x19f2a9a75ccb
code-creation,JS,10,38288,0x2bf7c8035f26,10, node:internal/bootstrap/node:140:49,0x19f2a9a751a8,~
code-source-info,0x2bf7c8035f26,12,4769,5033,C0O5004C5O5011C9O5031,,
new,MemoryChunk,0x23a8cf680000,270336
code-creation,Eval,10,38762,0x2bf7c8038886,5, node:internal/worker/js_transferable:1:1,0x2bf7c8038680,~
script-source,27,node:internal/worker/js_transferable,'use strict';\nconst {\n  Error\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  ReflectConstruct\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\nconst {\n  messaging_deserialize_symbol\x2C\n  messaging_transfer_symbol\x2C\n  messaging_clone_symbol\x2C\n  messaging_transfer_list_symbol\x2C\n} = internalBinding('symbols');\nconst {\n  JSTransferable\x2C\n  setDeserializerCreateObjectFunction\x2C\n} = internalBinding('messaging');\n\nfunction setup() {\n  // Register the handler that will be used when deserializing JS-based objects\n  // from .postMessage() calls. The format of `deserializeInfo` is generally\n  // 'module:Constructor'\x2C e.g. 'internal/fs/promises:FileHandle'.\n  setDeserializerCreateObjectFunction((deserializeInfo) => {\n    const { 0: module\x2C 1: ctor } = StringPrototypeSplit(deserializeInfo\x2C ':');\n    const Ctor = require(module)[ctor];\n    if (typeof Ctor !== 'function' ||\n        typeof Ctor.prototype[messaging_deserialize_symbol] !== 'function') {\n      // Not one of the official errors because one should not be able to get\n      // here without messing with Node.js internals.\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Unknown deserialize spec ${deserializeInfo}`);\n    }\n\n    return new Ctor();\n  });\n}\n\nfunction makeTransferable(obj) {\n  // If the object is already transferable\x2C skip all this.\n  if (obj instanceof JSTransferable) return obj;\n  const inst = ReflectConstruct(JSTransferable\x2C []\x2C obj.constructor);\n  const properties = ObjectGetOwnPropertyDescriptors(obj);\n  const propertiesValues = ObjectValues(properties);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  ObjectDefineProperties(inst\x2C properties);\n  ObjectSetPrototypeOf(inst\x2C ObjectGetPrototypeOf(obj));\n  return inst;\n}\n\nmodule.exports = {\n  makeTransferable\x2C\n  setup\x2C\n  JSTransferable\x2C\n  kClone: messaging_clone_symbol\x2C\n  kDeserialize: messaging_deserialize_symbol\x2C\n  kTransfer: messaging_transfer_symbol\x2C\n  kTransferList: messaging_transfer_list_symbol\x2C\n};\n
code-source-info,0x2bf7c8038886,27,0,2208,C0O0C4O2208,,
code-creation,JS,10,38812,0x2bf7c8038afe,204, node:internal/worker/js_transferable:1:1,0x2bf7c8038800,~
code-source-info,0x2bf7c8038afe,27,0,2208,C0O0C52O24C58O33C64O59C70O94C76O118C82O142C88O158C94O178C100O350C103O350C108O227C114O259C119O288C124O314C129O447C132O447C137O388C143O406C149O1970C156O1991C162O2011C168O2020C174O2046C180O2086C186O2129C192O2173C198O1985C203O2207,,
code-creation,JS,10,38941,0x2bf7c803a426,16,setup node:internal/worker/js_transferable:23:15,0x2bf7c80388b8,~
code-source-info,0x2bf7c803a426,27,492,1311,C0O723C10O723C15O1310,,
tick,0x7ee81c4e2f10,39107,1,0x7ee81a613550,2,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x19f2a9a75d0e
code-creation,Eval,10,39210,0x2bf7c803b236,5, node:internal/process/per_thread:1:1,0x2bf7c803ae00,~
script-source,28,node:internal/process/per_thread,'use strict';\n\n// This files contains process bootstrappers that can be\n// run when setting up each thread\x2C including the main\n// thread and the worker threads.\n\nconst {\n  ArrayPrototypeEvery\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  BigUint64Array\x2C\n  Float64Array\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  ObjectFreeze\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  Set\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeValues\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n  codes: {\n    ERR_ASSERTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\x2C\n} = require('internal/errors');\nconst format = require('internal/util/inspect').format;\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst { toNamespacedPath } = require('path');\nconst constants = internalBinding('constants').os.signals;\n\nconst kInternal = Symbol('internal properties');\n\nfunction assert(x\x2C msg) {\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\n}\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\n\nconst binding = internalBinding('process_methods');\n\n// The 3 entries filled in by the original process.hrtime contains\n// the upper/lower 32 bits of the second part of the value\x2C\n// and the remaining nanoseconds of the value.\nconst hrValues = binding.hrtimeBuffer;\n// Use a BigUint64Array because this is actually a bit\n// faster than simply returning a BigInt from C++ in V8 7.1.\nconst hrBigintValues = new BigUint64Array(binding.hrtimeBuffer.buffer\x2C 0\x2C 1);\n\nfunction hrtime(time) {\n  binding.hrtime();\n\n  if (time !== undefined) {\n    validateArray(time\x2C 'time');\n    if (time.length !== 2) {\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\n    }\n\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\n    const nsec = hrValues[2] - time[1];\n    const needsBorrow = nsec < 0;\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\n  }\n\n  return [\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\n    hrValues[2]\x2C\n  ];\n}\n\nfunction hrtimeBigInt() {\n  binding.hrtimeBigInt();\n  return hrBigintValues[0];\n}\n\nfunction nop() {}\n\n// The execution of this function itself should not cause any side effects.\nfunction wrapProcessMethods(binding) {\n  const {\n    cpuUsage: _cpuUsage\x2C\n    memoryUsage: _memoryUsage\x2C\n    rss\x2C\n    resourceUsage: _resourceUsage\x2C\n    loadEnvFile: _loadEnvFile\x2C\n  } = binding;\n\n  function _rawDebug(...args) {\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\n  }\n\n  // Create the argument array that will be passed to the native function.\n  const cpuValues = new Float64Array(2);\n\n  // Replace the native function with the JS version that calls the native\n  // function.\n  function cpuUsage(prevValue) {\n    // If a previous value was passed in\x2C ensure it has the correct shape.\n    if (prevValue) {\n      if (!previousValueIsValid(prevValue.user)) {\n        validateObject(prevValue\x2C 'prevValue');\n\n        validateNumber(prevValue.user\x2C 'prevValue.user');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\n                                                   prevValue.user);\n      }\n\n      if (!previousValueIsValid(prevValue.system)) {\n        validateNumber(prevValue.system\x2C 'prevValue.system');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\n                                                   prevValue.system);\n      }\n    }\n\n    // Call the native function to get the current values.\n    _cpuUsage(cpuValues);\n\n    // If a previous value was passed in\x2C return diff of current from previous.\n    if (prevValue) {\n      return {\n        user: cpuValues[0] - prevValue.user\x2C\n        system: cpuValues[1] - prevValue.system\x2C\n      };\n    }\n\n    // If no previous value passed in\x2C return current value.\n    return {\n      user: cpuValues[0]\x2C\n      system: cpuValues[1]\x2C\n    };\n  }\n\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\n  function previousValueIsValid(num) {\n    return typeof num === 'number' &&\n        num <= NumberMAX_SAFE_INTEGER &&\n        num >= 0;\n  }\n\n  const memValues = new Float64Array(5);\n  function memoryUsage() {\n    _memoryUsage(memValues);\n    return {\n      rss: memValues[0]\x2C\n      heapTotal: memValues[1]\x2C\n      heapUsed: memValues[2]\x2C\n      external: memValues[3]\x2C\n      arrayBuffers: memValues[4]\x2C\n    };\n  }\n\n  memoryUsage.rss = rss;\n\n  function exit(code) {\n    const { handleProcessExit } = require('internal/modules/run_main');\n    process.off('exit'\x2C handleProcessExit);\n\n    if (arguments.length !== 0) {\n      process.exitCode = code;\n    }\n\n    if (!process._exiting) {\n      process._exiting = true;\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\n    }\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\n    // in the user land. Either document it\x2C or deprecate it in favor of a\n    // better public alternative.\n    process.reallyExit(process.exitCode || kNoFailure);\n\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\n    // That function spoofs the stack pointer to cause the stack guard\n    // check to throw the termination exception. Because v8 performs\n    // stack guard check upon every function call\x2C we give it a chance.\n    //\n    // Without this\x2C user code after `process.exit()` would take effect.\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\n    nop();\n  }\n\n  function kill(pid\x2C sig) {\n    let err;\n\n    // eslint-disable-next-line eqeqeq\n    if (pid != (pid | 0)) {\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\n    }\n\n    // Preserve null signal\n    if (sig === (sig | 0)) {\n      // XXX(joyeecheung): we have to use process._kill here because\n      // it's monkey-patched by tests.\n      err = process._kill(pid\x2C sig);\n    } else {\n      sig = sig || 'SIGTERM';\n      if (constants[sig]) {\n        err = process._kill(pid\x2C constants[sig]);\n      } else {\n        throw new ERR_UNKNOWN_SIGNAL(sig);\n      }\n    }\n\n    if (err)\n      throw new ErrnoException(err\x2C 'kill');\n\n    return true;\n  }\n\n  const resourceValues = new Float64Array(16);\n  function resourceUsage() {\n    _resourceUsage(resourceValues);\n    return {\n      userCPUTime: resourceValues[0]\x2C\n      systemCPUTime: resourceValues[1]\x2C\n      maxRSS: resourceValues[2]\x2C\n      sharedMemorySize: resourceValues[3]\x2C\n      unsharedDataSize: resourceValues[4]\x2C\n      unsharedStackSize: resourceValues[5]\x2C\n      minorPageFault: resourceValues[6]\x2C\n      majorPageFault: resourceValues[7]\x2C\n      swappedOut: resourceValues[8]\x2C\n      fsRead: resourceValues[9]\x2C\n      fsWrite: resourceValues[10]\x2C\n      ipcSent: resourceValues[11]\x2C\n      ipcReceived: resourceValues[12]\x2C\n      signalsCount: resourceValues[13]\x2C\n      voluntaryContextSwitches: resourceValues[14]\x2C\n      involuntaryContextSwitches: resourceValues[15]\x2C\n    };\n  }\n\n  /**\n   * Loads the `.env` file to process.env.\n   * @param {string | URL | Buffer | undefined} path\n   */\n  function loadEnvFile(path = undefined) { // Provide optional value so that `loadEnvFile.length` returns 0\n    if (path != null) {\n      path = getValidatedPath(path);\n      _loadEnvFile(toNamespacedPath(path));\n    } else {\n      _loadEnvFile();\n    }\n  }\n\n\n  return {\n    _rawDebug\x2C\n    cpuUsage\x2C\n    resourceUsage\x2C\n    memoryUsage\x2C\n    kill\x2C\n    exit\x2C\n    loadEnvFile\x2C\n  };\n}\n\nconst replaceUnderscoresRegex = /_/g;\nconst leadingDashesRegex = /^--?/;\nconst trailingValuesRegex = /=.*$/;\n\n// This builds the initial process.allowedNodeEnvironmentFlags\n// from data in the config binding.\nfunction buildAllowedFlags() {\n  const {\n    envSettings: { kAllowedInEnvvar }\x2C\n    types: { kBoolean }\x2C\n  } = internalBinding('options');\n  const { getCLIOptionsInfo } = require('internal/options');\n  const { options\x2C aliases } = getCLIOptionsInfo();\n\n  const allowedNodeEnvironmentFlags = [];\n  for (const { 0: name\x2C 1: info } of options) {\n    if (info.envVarSettings === kAllowedInEnvvar) {\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\n      if (info.type === kBoolean) {\n        const negatedName = `--no-${name.slice(2)}`;\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\n      }\n    }\n  }\n\n  function isAccepted(to) {\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\n    const recursiveExpansion = aliases.get(to);\n    if (recursiveExpansion) {\n      if (recursiveExpansion[0] === to)\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\n    }\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\n  }\n  for (const { 0: from\x2C 1: expansion } of aliases) {\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\n      let canonical = from;\n      if (StringPrototypeEndsWith(canonical\x2C '='))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\n    }\n  }\n\n  const trimLeadingDashes =\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\n\n  // Save these for comparison against flags provided to\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\n                                      trimLeadingDashes);\n\n  class NodeEnvironmentFlagsSet extends Set {\n    constructor(array) {\n      super();\n      this[kInternal] = { array };\n    }\n\n    add() {\n      // No-op\x2C `Set` API compatible\n      return this;\n    }\n\n    delete() {\n      // No-op\x2C `Set` API compatible\n      return false;\n    }\n\n    clear() {\n      // No-op\x2C `Set` API compatible\n    }\n\n    has(key) {\n      // This will return `true` based on various possible\n      // permutations of a flag\x2C including present/missing leading\n      // dash(es) and/or underscores-for-dashes.\n      // Strips any values after `=`\x2C inclusive.\n      // TODO(addaleax): It might be more flexible to run the option parser\n      // on a dummy option set and see whether it rejects the argument or\n      // not.\n      if (typeof key === 'string') {\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\n        }\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\n      }\n      return false;\n    }\n\n    entries() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeEntries(this[kInternal].set);\n    }\n\n    forEach(callback\x2C thisArg = undefined) {\n      ArrayPrototypeForEach(\n        this[kInternal].array\x2C\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x2C\n      );\n    }\n\n    get size() {\n      return this[kInternal].array.length;\n    }\n\n    values() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeValues(this[kInternal].set);\n    }\n  }\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\n\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\n    allowedNodeEnvironmentFlags\x2C\n  ));\n}\n\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\n// trace event category is enabled.\nlet traceEventsAsyncHook;\n// Dynamically enable/disable the traceEventsAsyncHook\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\n  if (asyncHooksEnabled) {\n    if (!traceEventsAsyncHook) {\n      traceEventsAsyncHook =\n        require('internal/trace_events_async_hooks').createHook();\n    }\n    traceEventsAsyncHook.enable();\n  } else if (traceEventsAsyncHook) {\n    traceEventsAsyncHook.disable();\n  }\n}\n\nmodule.exports = {\n  toggleTraceCategoryState\x2C\n  assert\x2C\n  buildAllowedFlags\x2C\n  wrapProcessMethods\x2C\n  hrtime\x2C\n  hrtimeBigInt\x2C\n};\n
code-source-info,0x2bf7c803b236,28,0,12833,C0O0C4O12833,,
code-creation,JS,10,39413,0x2bf7c803b856,624, node:internal/process/per_thread:1:1,0x2bf7c803b1b0,~
code-source-info,0x2bf7c803b856,28,0,12833,C0O0C182O172C188O195C194O220C200O246C206O267C212O289C218O313C223O331C229O347C235O373C241O389C247O413C253O429C259O452C265O473C271O480C277O503C283O525C289O552C295O578C301O602C307O631C312O641C318O839C324O839C329O685C335O710C340O716C346O735C352O761C358O788C364O810C370O882C376O882C381O914C385O882C387O988C393O988C398O933C404O950C410O968C416O1049C422O1049C427O1028C433O1108C439O1108C444O1087C450O1143C456O1143C461O1171C466O1174C470O1143C472O1203C475O1203C479O1203C481O1362C487O1362C492O1343C497O1345C503O1406C509O1406C513O1406C515O1634C518O1642C522O1634C524O1795C527O1822C532O1835C544O1795C549O1795C551O7850C556O7850C558O7883C563O7883C565O7919C570O7919C572O12295C573O12295C575O12704C582O12725C588O12753C594O12763C600O12784C606O12806C612O12816C618O12719C623O12832,,
code-creation,Eval,10,40127,0x2bf7c803f30e,5, node:internal/fs/utils:1:1,0x2bf7c803de08,~
script-source,29,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  MathMin\x2C\n  MathRound\x2C\n  ObjectIs\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  Symbol\x2C\n  TypedArrayPrototypeAt\x2C\n  TypedArrayPrototypeIncludes\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  hideStackFrames\x2C\n  UVException\x2C\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isBigInt64Array\x2C\n  isDate\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\x2C\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\x2C\n    }\x2C\n  }\x2C\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\x2C\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GiB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nconst isWindows = process.platform === 'win32';\n\nlet fs;\nfunction lazyLoadFs() {\n  if (!fs) {\n    fs = require('fs');\n  }\n  return fs;\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type\x2C path) {\n    this.name = name;\n    this.parentPath = path;\n    this.path = path;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats\x2C path) {\n    super(name\x2C null\x2C path);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats\x2C path);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]\x2C path);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats\x2C filepath));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type\x2C path));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const filepath = join(path\x2C name);\n    const stats = lazyLoadFs().lstatSync(filepath);\n    return new DirentFromStats(name\x2C stats\x2C path);\n  } else {\n    return new Dirent(name\x2C type\x2C path);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\n  if (options == null || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = new UVException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 10n ** 6n;\nconst kNsPerSecBigInt = 10n ** 9n;\nconst kMsPerSec = 10 ** 3;\nconst kNsPerMs = 10 ** 6;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() on the absolute value\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\n// Refs: https://github.com/nodejs/node/pull/43714\nfunction dateFromMs(ms) {\n  // Coercing to number\x2C ms can be bigint\n  return new Date(MathRound(Number(ms)));\n}\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n  this.atime = dateFromMs(this.atimeMs);\n  this.mtime = dateFromMs(this.mtimeMs);\n  this.ctime = dateFromMs(this.ctimeMs);\n  this.birthtime = dateFromMs(this.birthtimeMs);\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n  this.atime = dateFromMs(atimeMs);\n  this.mtime = dateFromMs(mtimeMs);\n  this.ctime = dateFromMs(ctimeMs);\n  this.birthtime = dateFromMs(birthtimeMs);\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\n\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\nStats.prototype.isFile = StatsBase.prototype.isFile;\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigInt64Array} stats\n * @param {number} offset\n * @returns {BigIntStats | Stats}\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigInt64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\n  );\n}\n\nclass StatFs {\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\n    this.type = type;\n    this.bsize = bsize;\n    this.blocks = blocks;\n    this.bfree = bfree;\n    this.bavail = bavail;\n    this.files = files;\n    this.ffree = ffree;\n  }\n}\n\nfunction getStatFsFromBinding(stats) {\n  return new StatFs(\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  let flags = 0;\n  if (typeof type === 'string') {\n    switch (type) {\n      case 'dir':\n        flags |= UV_FS_SYMLINK_DIR;\n        break;\n      case 'junction':\n        flags |= UV_FS_SYMLINK_JUNCTION;\n        break;\n      case 'file':\n        break;\n      default:\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\n    }\n  }\n  return flags;\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C\n                                                      `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\x2C\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32.withoutStackTrace(length\x2C 'length'\x2C 0);\n  }\x2C\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE.HideStackFramesError(\n    propName\x2C\n    path\x2C\n    'must be a string\x2C Uint8Array\x2C or URL without null bytes'\x2C\n  );\n});\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return path;\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn &&\n    ((typeof template === 'string' && StringPrototypeEndsWith(template\x2C 'X')) ||\n    (typeof template !== 'string' && TypedArrayPrototypeAt(template\x2C -1) === 0x58))) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n  verbatimSymlinks: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\n  options.mode = getValidMode(options.mode\x2C 'copyFile');\n  if (options.dereference === true && options.verbatimSymlinks === true) {\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR.HideStackFramesError('dereference'\x2C 'verbatimSymlinks');\n  }\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      const err = new ERR_FS_EISDIR.HideStackFramesError({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\x2C\n      });\n\n      return cb(err);\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions.withoutStackTrace(options\x2C defaultRmOptions);\n  validateBoolean.withoutStackTrace(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR.HideStackFramesError({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\x2C\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned;\nfunction emitRecursiveRmdirWarning() {\n  if (recursiveRmdirWarned === undefined) {\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\n    recursiveRmdirWarned = process.noDeprecation;\n  }\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\x2C\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject.withoutStackTrace(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean.withoutStackTrace(options.recursive\x2C 'options.recursive');\n    validateInt32.withoutStackTrace(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32.withoutStackTrace(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  validateInteger.withoutStackTrace(mode\x2C 'mode'\x2C min\x2C max);\n  return mode;\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\n      name\x2C\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      buffer\x2C\n    );\n  }\n});\n\nconst validatePosition = hideStackFrames((position\x2C name) => {\n  if (typeof position === 'number') {\n    validateInteger.withoutStackTrace(position\x2C name\x2C -1);\n  } else if (typeof position === 'bigint') {\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C\n                                                      `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\n                                                      position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C ['integer'\x2C 'bigint']\x2C position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  handleErrorFromBinding\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n};\n
code-source-info,0x2bf7c803f30e,29,0,26445,C0O0C4O26445,,
code-creation,JS,10,40591,0x1537ab99e186,2532, node:internal/fs/utils:1:1,0x2bf7c803f288,~
code-source-info,0x1537ab99e
tick,0x7ee819a999d4,40633,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x2bf7c803b9fc,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75d0e
tick,0x7ee81c4e372c,41248,1,0x7ee81a613550,2,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x1537ab99e444,0x168b8b4afead,0x168b8b4afc8d,0x2bf7c803b9fc,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75d0e
code-creation,Eval,10,41575,0x1537ab9a4116,5, node:internal/url:1:1,0x1537ab9a28a8,~
script-source,30,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  Boolean\x2C\n  Int8Array\x2C\n  IteratorPrototype\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToWellFormed\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\x2C\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  kEnumerableProperty\x2C\n  kEmptyObject\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\x2C\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst { platform } = process;\nconst isWindows = platform === 'win32';\n\nconst bindingUrl = internalBinding('url');\n\nconst FORWARD_SLASH = /\\//g;\n\nconst contextForInspect = Symbol('context');\n\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\n// deliberately moved to `internal/url` rather than `url`.\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\n// is not initialized on bootstrap. This case breaks the\n// test-require-delete-array-iterator test.\n\n// Protocols that can allow "unsafe" and "unwise" chars.\nconst unsafeProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that never have a hostname.\nconst hostlessProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that always contain a // bit.\nconst slashedProtocol = new SafeSet([\n  'http'\x2C\n  'http:'\x2C\n  'https'\x2C\n  'https:'\x2C\n  'ftp'\x2C\n  'ftp:'\x2C\n  'gopher'\x2C\n  'gopher:'\x2C\n  'file'\x2C\n  'file:'\x2C\n  'ws'\x2C\n  'ws:'\x2C\n  'wss'\x2C\n  'wss:'\x2C\n]);\n\nconst updateActions = {\n  kProtocol: 0\x2C\n  kHost: 1\x2C\n  kHostname: 2\x2C\n  kPort: 3\x2C\n  kUsername: 4\x2C\n  kPassword: 5\x2C\n  kPathname: 6\x2C\n  kSearch: 7\x2C\n  kHash: 8\x2C\n  kHref: 9\x2C\n};\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  // This is the maximum value uint32_t can get.\n  // Ada uses uint32_t(-1) for declaring omitted values.\n  static #omitted = 4294967295;\n\n  href = '';\n  protocol_end = 0;\n  username_end = 0;\n  host_start = 0;\n  host_end = 0;\n  pathname_start = 0;\n  search_start = 0;\n  hash_start = 0;\n  port = 0;\n  /**\n   * Refers to `ada::scheme::type`\n   *\n   * enum type : uint8_t {\n   *   HTTP = 0\x2C\n   *   NOT_SPECIAL = 1\x2C\n   *   HTTPS = 2\x2C\n   *   WS = 3\x2C\n   *   FTP = 4\x2C\n   *   WSS = 5\x2C\n   *   FILE = 6\n   * };\n   * @type {number}\n   */\n  scheme_type = 1;\n\n  get hasPort() {\n    return this.port !== URLContext.#omitted;\n  }\n\n  get hasSearch() {\n    return this.search_start !== URLContext.#omitted;\n  }\n\n  get hasHash() {\n    return this.hash_start !== URLContext.#omitted;\n  }\n}\n\nlet setURLSearchParamsModified;\nlet setURLSearchParamsContext;\nlet getURLSearchParamsList;\nlet setURLSearchParams;\n\nclass URLSearchParamsIterator {\n  #target;\n  #kind;\n  #index;\n\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\n  constructor(target\x2C kind) {\n    this.#target = target;\n    this.#kind = kind;\n    this.#index = 0;\n  }\n\n  next() {\n    if (typeof this !== 'object' || this === null || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\x2C\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this.#index = index + 2;\n\n    let result;\n    if (this.#kind === 'key') {\n      result = name;\n    } else if (this.#kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\x2C\n    };\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!this || typeof this !== 'object' || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(values\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (this.#kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\x2C\n    );\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\ndelete URLSearchParamsIterator.prototype.constructor;\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\n\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\n  next: kEnumerableProperty\x2C\n});\n\n\nclass URLSearchParams {\n  #searchParams = [];\n\n  // "associated url object"\n  #context;\n\n  static {\n    setURLSearchParamsContext = (obj\x2C ctx) => {\n      obj.#context = ctx;\n    };\n    getURLSearchParamsList = (obj) => obj.#searchParams;\n    setURLSearchParams = (obj\x2C query) => {\n      if (query === undefined) {\n        obj.#searchParams = [];\n      } else {\n        obj.#searchParams = parseParams(query);\n      }\n    };\n  }\n\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    if (init == null) {\n      // Do nothing\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator] && #searchParams in init) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init.#searchParams;\n        this.#searchParams = childParams.slice();\n      } else if (method != null) {\n        // Sequence<sequence<USVString>>\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // The following implementation differs from the URL specification:\n        // Sequences must first be converted from ECMAScript objects before\n        // and operations are done on them\x2C and the operation of converting\n        // the sequences would first exhaust the iterators. If the iterator\n        // returns something invalid in the middle\x2C whether it would be called\n        // after that would be an observable change to the users.\n        // Exhausting the iterator and later converting them to USVString comes\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\n        // creation duration\x2C Node.js merges the iteration and converting\n        // iterations into a single iteration.\n        for (const pair of init) {\n          if (pair == null) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          } else if (ArrayIsArray(pair)) {\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (pair.length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n            // Append (innerSequence[0]\x2C innerSequence[1]) to query's list.\n            ArrayPrototypePush(\n              this.#searchParams\x2C\n              StringPrototypeToWellFormed(`${pair[0]}`)\x2C\n              StringPrototypeToWellFormed(`${pair[1]}`)\x2C\n            );\n          } else {\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\n                typeof pair[SymbolIterator] !== 'function')) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n\n            let length = 0;\n\n            for (const element of pair) {\n              length++;\n              ArrayPrototypePush(this.#searchParams\x2C StringPrototypeToWellFormed(`${element}`));\n            }\n\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n          }\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        const visited = new SafeMap();\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = StringPrototypeToWellFormed(key);\n            const typedValue = StringPrototypeToWellFormed(`${init[key]}`);\n\n            // Two different keys may become the same USVString after normalization.\n            // In that case\x2C we retain the later one. Refer to WPT.\n            const keyIdx = visited.get(typedKey);\n            if (keyIdx !== undefined) {\n              this.#searchParams[keyIdx] = typedValue;\n            } else {\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\n                                                       typedKey\x2C\n                                                       typedValue) - 1);\n            }\n          }\n        }\n      }\n    } else {\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\n      init = StringPrototypeToWellFormed(`${init}`);\n      this.#searchParams = init ? parseParams(init) : [];\n    }\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this.#searchParams;\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\x2C\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  get size() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n    return this.#searchParams.length / 2;\n  }\n\n  append(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  delete(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name && list[i + 1] === value) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    } else {\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  get(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    const values = [];\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n    }\n\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        if (value === undefined || list[i + 1] === value) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  sort() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    const a = this.#searchParams;\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateFunction(callback\x2C 'callback');\n\n    let list = this.#searchParams;\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this.#searchParams;\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this.#searchParams);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: kEnumerableProperty\x2C\n  delete: kEnumerableProperty\x2C\n  get: kEnumerableProperty\x2C\n  getAll: kEnumerableProperty\x2C\n  has: kEnumerableProperty\x2C\n  set: kEnumerableProperty\x2C\n  size: kEnumerableProperty\x2C\n  sort: kEnumerableProperty\x2C\n  entries: kEnumerableProperty\x2C\n  forEach: kEnumerableProperty\x2C\n  keys: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  toString: kEnumerableProperty\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\n/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n * @param {*} self\n * @returns {self is URL}\n */\nfunction isURL(self) {\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\n}\n\nclass URL {\n  #context = new URLContext();\n  #searchParams;\n  #searchParamsModified;\n\n  static {\n    setURLSearchParamsModified = (obj) => {\n      // When URLSearchParams changes\x2C we lazily update URL on the next read/write for performance.\n      obj.#searchParamsModified = true;\n\n      // If URL has an existing search\x2C remove it without cascading back to URLSearchParams.\n      // Do this to avoid any internal confusion about whether URLSearchParams or URL is up-to-date.\n      if (obj.#context.hasSearch) {\n        obj.#updateContext(bindingUrl.update(obj.#context.href\x2C updateActions.kSearch\x2C ''));\n      }\n    };\n  }\n\n  constructor(input\x2C base = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    // StringPrototypeToWellFormed is not needed.\n    input = `${input}`;\n\n    if (base !== undefined) {\n      base = `${base}`;\n    }\n\n    this.#updateContext(bindingUrl.parse(input\x2C base));\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = { __proto__: { constructor } };\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj[contextForInspect] = this.#context;\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  #getSearchFromContext() {\n    if (!this.#context.hasSearch) return '';\n    let endsAt = this.#context.href.length;\n    if (this.#context.hasHash) endsAt = this.#context.hash_start;\n    if (endsAt - this.#context.search_start <= 1) return '';\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\n  }\n\n  #getSearchFromParams() {\n    if (!this.#searchParams?.size) return '';\n    return `?${this.#searchParams}`;\n  }\n\n  #ensureSearchParamsUpdated() {\n    // URL is updated lazily to greatly improve performance when URLSearchParams is updated repeatedly.\n    // If URLSearchParams has been modified\x2C reflect that back into URL\x2C without cascading back.\n    if (this.#searchParamsModified) {\n      this.#searchParamsModified = false;\n      this.#updateContext(bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C this.#getSearchFromParams()));\n    }\n  }\n\n  /**\n   * Update the internal context state for URL.\n   * @param {string} href New href string from `bindingUrl.update`.\n   * @param {boolean} [shouldUpdateSearchParams] If the update has potential to update search params (href/search).\n   */\n  #updateContext(href\x2C shouldUpdateSearchParams = false) {\n    const previousSearch = shouldUpdateSearchParams && this.#searchParams &&\n      (this.#searchParamsModified ? this.#getSearchFromParams() : this.#getSearchFromContext());\n\n    this.#context.href = href;\n\n    const {\n      0: protocol_end\x2C\n      1: username_end\x2C\n      2: host_start\x2C\n      3: host_end\x2C\n      4: port\x2C\n      5: pathname_start\x2C\n      6: search_start\x2C\n      7: hash_start\x2C\n      8: scheme_type\x2C\n    } = bindingUrl.urlComponents;\n\n    this.#context.protocol_end = protocol_end;\n    this.#context.username_end = username_end;\n    this.#context.host_start = host_start;\n    this.#context.host_end = host_end;\n    this.#context.port = port;\n    this.#context.pathname_start = pathname_start;\n    this.#context.search_start = search_start;\n    this.#context.hash_start = hash_start;\n    this.#context.scheme_type = scheme_type;\n\n    if (this.#searchParams) {\n      // If the search string has updated\x2C URL becomes the source of truth\x2C and we update URLSearchParams.\n      // Only do this when we're expecting it to have changed\x2C otherwise a change to hash etc.\n      // would incorrectly compare the URLSearchParams state to the empty URL search state.\n      if (shouldUpdateSearchParams) {\n        const currentSearch = this.#getSearchFromContext();\n        if (previousSearch !== currentSearch) {\n          setURLSearchParams(this.#searchParams\x2C currentSearch);\n          this.#searchParamsModified = false;\n        }\n      }\n\n      // If we have a URLSearchParams\x2C ensure that URL is up-to-date with any modification to it.\n      this.#ensureSearchParamsUpdated();\n    }\n  }\n\n  toString() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  get href() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  set href(value) {\n    value = `${value}`;\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\n    if (!href) { throw new ERR_INVALID_URL(value); }\n    this.#updateContext(href\x2C true);\n  }\n\n  // readonly\n  get origin() {\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n\n    // Check if scheme_type is not `NOT_SPECIAL`\n    if (this.#context.scheme_type !== 1) {\n      // Check if scheme_type is `FILE`\n      if (this.#context.scheme_type === 6) {\n        return 'null';\n      }\n      return `${protocol}//${this.host}`;\n    }\n\n    if (protocol === 'blob:') {\n      const path = this.pathname;\n      if (path.length > 0) {\n        try {\n          const out = new URL(path);\n          // Only return origin of scheme is `http` or `https`\n          // Otherwise return a new opaque origin (null).\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\n            return `${out.protocol}//${out.host}`;\n          }\n        } catch {\n          // Do nothing.\n        }\n      }\n    }\n\n    return 'null';\n  }\n\n  get protocol() {\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n  }\n\n  set protocol(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get username() {\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\n    }\n    return '';\n  }\n\n  set username(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get password() {\n    if (this.#context.host_start - this.#context.username_end > 0) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\n    }\n    return '';\n  }\n\n  set password(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get host() {\n    let startsAt = this.#context.host_start;\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    // If we have an empty host\x2C then the space between components.host_end and\n    // components.pathname_start may be occupied by /.\n    if (startsAt === this.#context.host_end) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\n  }\n\n  set host(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get hostname() {\n    let startsAt = this.#context.host_start;\n    // host_start might be "@" if the URL has credentials\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\n  }\n\n  set hostname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get port() {\n    if (this.#context.hasPort) {\n      return `${this.#context.port}`;\n    }\n    return '';\n  }\n\n  set port(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get pathname() {\n    let endsAt;\n    if (this.#context.hasSearch) {\n      endsAt = this.#context.search_start;\n    } else if (this.#context.hasHash) {\n      endsAt = this.#context.hash_start;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\n  }\n\n  set pathname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get search() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#getSearchFromContext();\n  }\n\n  set search(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C StringPrototypeToWellFormed(`${value}`));\n    if (href) {\n      this.#updateContext(href\x2C true);\n    }\n  }\n\n  // readonly\n  get searchParams() {\n    // Create URLSearchParams on demand to greatly improve the URL performance.\n    if (this.#searchParams == null) {\n      this.#searchParams = new URLSearchParams(this.#getSearchFromContext());\n      setURLSearchParamsContext(this.#searchParams\x2C this);\n      this.#searchParamsModified = false;\n    }\n    return this.#searchParams;\n  }\n\n  get hash() {\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\n  }\n\n  set hash(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  toJSON() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  static canParse(url\x2C base = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    url = `${url}`;\n\n    if (base !== undefined) {\n      return bindingUrl.canParse(url\x2C `${base}`);\n    }\n\n    // It is important to differentiate the canParse call statements\n    // since they resolve into different v8 fast api overloads.\n    return bindingUrl.canParse(url);\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\n  toString: kEnumerableProperty\x2C\n  href: kEnumerableProperty\x2C\n  origin: kEnumerableProperty\x2C\n  protocol: kEnumerableProperty\x2C\n  username: kEnumerableProperty\x2C\n  password: kEnumerableProperty\x2C\n  host: kEnumerableProperty\x2C\n  hostname: kEnumerableProperty\x2C\n  port: kEnumerableProperty\x2C\n  pathname: kEnumerableProperty\x2C\n  search: kEnumerableProperty\x2C\n  searchParams: kEnumerableProperty\x2C\n  hash: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nObjectDefineProperties(URL\x2C {\n  canParse: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n\nfunction installObjectURLMethods() {\n  const bindingBlob = internalBinding('blob');\n\n  function createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  function revokeObjectURL(url) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    bindingBlob.revokeObjectURL(`${url}`);\n  }\n\n  ObjectDefineProperties(URL\x2C {\n    createObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: createObjectURL\x2C\n    }\x2C\n    revokeObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: revokeObjectURL\x2C\n    }\x2C\n  });\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i = qs[0] === '?' ? 1 : 0;\n  let pairStart = i;\n  let lastPos = i;\n  for (; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToUnicode(`${domain}`);\n}\n\n/**\n * Utility function that converts a URL object into an ordinary options object\n * as expected by the `http.request` and `https.request` APIs.\n * @param {URL} url\n * @returns {Record<string\x2C unknown>}\n */\nfunction urlToHttpOptions(url) {\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\n  const options = {\n    __proto__: null\x2C\n    ...url\x2C // In case the url object was extended by the user.\n    protocol: url.protocol\x2C\n    hostname: hostname && StringPrototypeStartsWith(hostname\x2C '[') ?\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\n      hostname\x2C\n    hash: url.hash\x2C\n    search: search\x2C\n    pathname: pathname\x2C\n    path: `${pathname || ''}${search || ''}`\x2C\n    href: url.href\x2C\n  };\n  if (port !== '') {\n    options.port = Number(port);\n  }\n  if (username || password) {\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\n  }\n  return options;\n}\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\x2C\n        );\n      }\n    }\n  }\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return StringPrototypeSlice(pathname\x2C 1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\x2C\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path\x2C options = kEmptyObject) {\n  const windows = options?.windows;\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURL(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return (windows ?? isWindows) ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// The following characters are percent-encoded when converting from file path\n// to URL:\n// - %: The percent character is the only character not encoded by the\n//        `pathname` setter.\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\n//      character but the `pathname` setters replaces it by a forward slash.\n// - LF: The newline character is stripped out by the `pathname` setter.\n//       (See whatwg/url#419)\n// - CR: The carriage return character is also stripped out by the `pathname`\n//       setter.\n// - TAB: The tab character is also stripped out by the `pathname` setter.\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\nconst questionRegex = /\\?/g;\nconst hashRegex = /#/g;\n\nfunction encodePathChars(filepath\x2C options = kEmptyObject) {\n  const windows = options?.windows;\n  if (StringPrototypeIndexOf(filepath\x2C '%') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\n  // In posix\x2C backslash is a valid character in paths:\n  if (!(windows ?? isWindows) && StringPrototypeIndexOf(filepath\x2C '\\\\') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\n  if (StringPrototypeIndexOf(filepath\x2C '\\n') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\n  if (StringPrototypeIndexOf(filepath\x2C '\\r') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\n  if (StringPrototypeIndexOf(filepath\x2C '\\t') !== -1)\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\n  return filepath;\n}\n\nfunction pathToFileURL(filepath\x2C options = kEmptyObject) {\n  const windows = options?.windows;\n  if ((windows ?? isWindows) && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    const outURL = new URL('file://');\n    // UNC path format: \\\\server\\share\\resource\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\n    if (hostnameEndIndex === -1) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\x2C\n      );\n    }\n    if (hostnameEndIndex === 2) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        filepath\x2C\n        'Empty UNC servername'\x2C\n      );\n    }\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\n    outURL.hostname = domainToASCII(hostname);\n    outURL.pathname = encodePathChars(\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/')\x2C\n      { windows }\x2C\n    );\n    return outURL;\n  }\n  let resolved = (windows ?? isWindows) ? path.win32.resolve(filepath) : path.posix.resolve(filepath);\n  // path.resolve strips trailing slashes so we must add them back\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                 filepath.length - 1);\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\n       ((windows ?? isWindows) && filePathLast === CHAR_BACKWARD_SLASH)) &&\n      resolved[resolved.length - 1] !== path.sep)\n    resolved += '/';\n\n  // Call encodePathChars first to avoid encoding % again for ? and #.\n  resolved = encodePathChars(resolved\x2C { windows });\n\n  // Question and hash character should be included in pathname.\n  // Therefore\x2C encoding is required to eliminate parsing them in different states.\n  // This is done as an optimization to not creating a URL instance and\n  // later triggering pathname setter\x2C which impacts performance\n  if (StringPrototypeIndexOf(resolved\x2C '?') !== -1)\n    resolved = RegExpPrototypeSymbolReplace(questionRegex\x2C resolved\x2C '%3F');\n  if (StringPrototypeIndexOf(resolved\x2C '#') !== -1)\n    resolved = RegExpPrototypeSymbolReplace(hashRegex\x2C resolved\x2C '%23');\n  return new URL(`file://${resolved}`);\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURL(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\n/**\n * This util takes a string containing a URL and return the URL origin\x2C\n * its meant to avoid calls to `new URL` constructor.\n * @param {string} url\n * @returns {URL['origin']}\n */\nfunction getURLOrigin(url) {\n  return bindingUrl.getOrigin(url);\n}\n\nmodule.exports = {\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  installObjectURLMethods\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  encodeStr\x2C\n  isURL\x2C\n\n  urlUpdateActions: updateActions\x2C\n  getURLOrigin\x2C\n  unsafeProtocol\x2C\n  hostlessProtocol\x2C\n  slashedProtocol\x2C\n};\n
code-source-info,0x1537ab9a4116,30,0,47167,C0O0C4O47167,,
code-creation,JS,10,42389,0x1537ab9a7f16,2367, node:internal/url:1:1,0x1537ab9a4090,~
code-source-info,0x1537ab9a7f16,30,0,47167,C0O0C347O25C353O34C359O50C365O72C371O93C377O115C383O139C389O162C395O173C400O186C405O207C411O217C417O243C422O267C428O302C434O320C440O352C446O363C451O374C457O399C463O428C469O458C475O485C481O511C487O535C493O564C499O595C504O605C510O623C516O644C522O702C530O702C536O690C542O787C550O787C556O746C562O759C567O771C573O954C581O954C587O831C593O851C599O867C604O890C610O906C616O1285C624O1285C630O998C636O1004C642O1030C648O1056C654O1083C660O1114C666O1145C672O1167C678O1190C684O1211C690O1239C696O1261C702O1471C710O1471C716O1323C722O1341C728O1364C734O1378C740O1400C746O1420C752O1440C758O1456C764O1515C772O1515C776O1515C778O1565C786O1565C792O1543C798O1618C806O1618C810O1618C812O1651C818O1691C824O1700C827O1691C829O1733C837O1733C841O1733C843O1780C848O1780C850O1814C854O1814C858O1814C860O2203C868O2203C874O2320C882O2320C888O2438C896O2438C902O2624C906O2624C908O2775C909O2775C911O2785C912O2785C1001O3494C1003O4289C1004O4289C1006O4321C1007O4321C1009O4352C1010O4352C1012O4380C1013O4380C1083O5359C1089O5359C1121O4401C1123O6806C1127O6837C1137O6860C1141O6905C1147O6860C1152O6937C1160O6984C1174O7000C1176O7020C1191O7104C1196O6937C1248O11929C1254O11929C1374O7131C1376O20408C1384O20447C1398O20470C1404O20501C1410O20529C1416O20560C1422O20588C1428O20616C1434O20645C1440O20674C1446O20706C1452O20738C1458O20767C1464O20798C1470O20831C1476O20855C1478O20875C1489O21004C1491O21021C1501O21115C1507O21125C1522O20408C1627O22820C1633O22820C1829O21864C1831O32498C1839O32525C1853O32541C1855O32561C1870O32628C1881O32657C1892O32688C1903O32721C1914O32754C1925O32787C1936O32816C1947O32849C1958O32878C1969O32911C1980O32942C1991O32979C2002O33008C2013O33039C2018O32498C2028O33065C2036O33088C2045O33065C2055O36821C2066O36821C2076O36821C2078O37512C2088O37512C2096O37503C2098O37521C2108O37541C2116O43267C2124O43267C2126O43296C2134O43296C2136O43324C2144O43324C2146O43359C2154O43359C2156O43383C2164O43383C2166O43412C2174O43412C2176O43437C2184O43437C2186O46852C2197O46873C2207O46890C2217O46907C2227O46926C2237O46953C2247O46960C2257O46979C2267O46996C2277O47015C2287O47035C2297O47048C2307O47076C2317O47093C2327O47109C2337O47127C2347O47147C2357O46867C2366O47166,,
code-creation,JS,10,42420,0x1537ab9a8bf6,19,<static_initializer> node:internal/url:772:3,0x1537ab9a5ba0,~
code-source-info,0x1537ab9a8bf6,30,21952,22487,C0O21965C9O21992C18O22487,,
code-creation,JS,10,42425,0x1537ab9a8c8e,40,<instance_members_initializer> node:internal/url:767:1,0x1537ab9a5b68,~
code-source-info,0x1537ab9a8c8e,30,21864,32496,C3O21889C10O21889C24O21909C33O21926C39O32496,,
code-creation,JS,10,42429,0x1537ab9a8e56,53,<static_initializer> node:internal/url:312:3,0x1537ab9a4f00,~
code-source-info,0x1537ab9a8e56,30,7222,7558,C0O7235C9O7261C17O7316C26O7339C34O7373C43O7392C52O7558,,
code-creation,JS,10,42440,0x1537ab9a8efe,21,<instance_members_initializer> node:internal/url:306:1,0x1537ab9a4ec8,~
code-source-info,0x1537ab9a8efe,30,7131,20406,C3O7173C14O7209C20O20406,,
code-creation,JS,10,42445,0x1537ab9a8f86,29,<instance_members_initializer> node:internal/url:211:1,0x1537ab9a49c8,~
code-source-info,0x1537ab9a8f86,30,4401,6738,C4O4435C13O4446C22O4455C28O6738,,
code-creation,JS,10,42450,0x1537ab9a903e,12,<static_initializer> node:internal/url:166:3,0x1537ab9a48a0,~
code-source-info,0x1537ab9a903e,30,3621,3649,C3O3639C11O3649,,
code-creation,JS,10,42462,0x1537ab9a911e,54,<instance_members_initializer> node:internal/url:163:1,0x1537ab9a4868,~
code-source-info,0x1537ab9a911e,30,3494,4283,C0O3661C6O3682C11O3702C16O3720C21O3736C26O3758C31O3778C36O3796C41O3808C46O4056C53O4283,,
tick,0x7ee819a999ce,42471,1,0x7ee81a613550,3,0x7ee81bf0da80,0x168b8b4afe8c,0x168b8b4afc8d,0x1537ab99e444,0x168b8b4afead,0x168b8b4afc8d,0x2bf7c803b9fc,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75d0e
code-creation,Eval,10,42766,0x1537ab9acfbe,5, node:internal/querystring:1:1,0x1537ab9ace48,~
script-source,31,node:internal/querystring,'use strict';\n\nconst {\n  Array\x2C\n  Int8Array\x2C\n  NumberPrototypeToString\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { ERR_INVALID_URI } = require('internal/errors').codes;\n\nconst hexTable = new Array(256);\nfor (let i = 0; i < 256; ++i)\n  hexTable[i] = '%' +\n                StringPrototypeToUpperCase((i < 16 ? '0' : '') +\n                                           NumberPrototypeToString(i\x2C 16));\n\nconst isHexTable = new Int8Array([\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0 - 15\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 16 - 31\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 32 - 47\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 48 - 63\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 64 - 79\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 80 - 95\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 96 - 111\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 112 - 127\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 128 ...\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // ... 256\n]);\n\n/**\n * @param {string} str\n * @param {Int8Array} noEscapeTable\n * @param {string[]} hexTable\n * @returns {string}\n */\nfunction encodeStr(str\x2C noEscapeTable\x2C hexTable) {\n  const len = str.length;\n  if (len === 0)\n    return '';\n\n  let out = '';\n  let lastPos = 0;\n  let i = 0;\n\n  outer:\n  for (; i < len; i++) {\n    let c = StringPrototypeCharCodeAt(str\x2C i);\n\n    // ASCII\n    while (c < 0x80) {\n      if (noEscapeTable[c] !== 1) {\n        if (lastPos < i)\n          out += StringPrototypeSlice(str\x2C lastPos\x2C i);\n        lastPos = i + 1;\n        out += hexTable[c];\n      }\n\n      if (++i === len)\n        break outer;\n\n      c = StringPrototypeCharCodeAt(str\x2C i);\n    }\n\n    if (lastPos < i)\n      out += StringPrototypeSlice(str\x2C lastPos\x2C i);\n\n    // Multi-byte characters ...\n    if (c < 0x800) {\n      lastPos = i + 1;\n      out += hexTable[0xC0 | (c >> 6)] +\n             hexTable[0x80 | (c & 0x3F)];\n      continue;\n    }\n    if (c < 0xD800 || c >= 0xE000) {\n      lastPos = i + 1;\n      out += hexTable[0xE0 | (c >> 12)] +\n             hexTable[0x80 | ((c >> 6) & 0x3F)] +\n             hexTable[0x80 | (c & 0x3F)];\n      continue;\n    }\n    // Surrogate pair\n    ++i;\n\n    // This branch should never happen because all URLSearchParams entries\n    // should already be converted to USVString. But\x2C included for\n    // completion's sake anyway.\n    if (i >= len)\n      throw new ERR_INVALID_URI();\n\n    const c2 = StringPrototypeCharCodeAt(str\x2C i) & 0x3FF;\n\n    lastPos = i + 1;\n    c = 0x10000 + (((c & 0x3FF) << 10) | c2);\n    out += hexTable[0xF0 | (c >> 18)] +\n           hexTable[0x80 | ((c >> 12) & 0x3F)] +\n           hexTable[0x80 | ((c >> 6) & 0x3F)] +\n           hexTable[0x80 | (c & 0x3F)];\n  }\n  if (lastPos === 0)\n    return str;\n  if (lastPos < len)\n    return out + StringPrototypeSlice(str\x2C lastPos);\n  return out;\n}\n\nmodule.exports = {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\x2C\n};\n
code-source-info,0x1537ab9acfbe,31,0,3316,C0O0C4O3316,,
code-creation,JS,10,42831,0x1537ab9ad996,197, node:internal/querystring:1:1,0x1537ab9acf38,~
code-source-info,0x1537ab9ad996,31,0,3316,C0O0C19O25C24O34C29O47C34O74C40O103C46O127C51O201C54O201C59O227C64O181C70O253C77O253C83O282C85O287C89O287C94O301C99O367C124O429C129O384C133O337C137O319C140O313C144O296C149O269C153O482C160O482C166O3255C173O3276C179O3289C185O3301C191O3270C196O3315,,
code-creation,JS,11,42911,0x7ee79be4a400,1572, node:internal/querystring:1:1,0x1537ab9acf38,^
code-source-info,0x7ee79be4a400,31,0,3316,,,
code-creation,JS,11,42923,0x7ee79be4aa40,308,makeSystemErrorWithCode node:internal/errors:394:33,0x168b8b4b9d58,^
code-source-info,0x7ee79be4aa40,10,11111,11224,,,
code-creation,JS,11,42931,0x7ee79be4abc0,312,makeNodeErrorForHideStackFrame node:internal/errors:406:40,0x168b8b4b9dd0,^
code-source-info,0x7ee79be4abc0,10,11381,11931,,,
code-creation,JS,11,42941,0x7ee79be4ad40,560,internalBinding node:internal/bootstrap/realm:184:45,0x168b8b4a8fe0,^
code-source-info,0x7ee79be4ad40,9,6005,6243,,,
code-creation,JS,11,42954,0x7ee79be4af80,328,SafeSet node:internal/per_context/primordials:426:16,0x168b8b496100,^
code-source-info,0x7ee79be4af80,6,12304,12321,,,
code-creation,JS,11,42961,0x7ee79be4b100,280,hideStackFrames node:internal/errors:535:25,0x168b8b4b9f28,^
code-source-info,0x7ee79be4b100,10,14681,14954,,,
code-creation,JS,11,42976,0x7ee79be4b240,1284,compileForInternalLoader node:internal/bootstrap/realm:383:27,0x168b8b4a95f8,^
code-source-info,0x7ee79be4b240,9,12511,13309,,,
code-creation,JS,11,42987,0x7ee79be4b780,664,requireBuiltin node:internal/bootstrap/realm:420:24,0x168b8b4a8e50,^
code-source-info,0x7ee79be4b780,9,13527,13869,,,
code-creation,JS,11,42994,0x7ee79be4ba40,224, node:internal/util/inspect:172:5,0x305ee1e90f48,^
code-source-info,0x7ee79be4ba40,21,3504,3565,,,
code-creation,JS,11,43002,0x7ee79be4bb40,456,defineColorAlias node:internal/util/inspect:434:26,0x305ee1e8fbb8,^
code-source-info,0x7ee79be4bb40,21,13080,13319,,,
code-creation,JS,11,43008,0x7ee79be4bd40,132, node:internal/bootstrap/node:140:49,0x19f2a9a751a8,^
code-source-info,0x7ee79be4bd40,12,4769,5033,,,
code-creation,Eval,10,43141,0x1537ab9af256,5, node:internal/constants:1:1,0x1537ab9af110,~
script-source,32,node:internal/constants,'use strict';\n\nconst isWindows = process.platform === 'win32';\n\nmodule.exports = {\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65\x2C /* A */\n  CHAR_LOWERCASE_A: 97\x2C /* a */\n  CHAR_UPPERCASE_Z: 90\x2C /* Z */\n  CHAR_LOWERCASE_Z: 122\x2C /* z */\n  CHAR_UPPERCASE_C: 67\x2C /* C */\n  CHAR_LOWERCASE_B: 98\x2C /* b */\n  CHAR_LOWERCASE_E: 101\x2C /* e */\n  CHAR_LOWERCASE_N: 110\x2C /* n */\n\n  // Non-alphabetic chars.\n  CHAR_DOT: 46\x2C /* . */\n  CHAR_FORWARD_SLASH: 47\x2C /* / */\n  CHAR_BACKWARD_SLASH: 92\x2C /* \\ */\n  CHAR_VERTICAL_LINE: 124\x2C /* | */\n  CHAR_COLON: 58\x2C /* : */\n  CHAR_QUESTION_MARK: 63\x2C /* ? */\n  CHAR_UNDERSCORE: 95\x2C /* _ */\n  CHAR_LINE_FEED: 10\x2C /* \\n */\n  CHAR_CARRIAGE_RETURN: 13\x2C /* \\r */\n  CHAR_TAB: 9\x2C /* \\t */\n  CHAR_FORM_FEED: 12\x2C /* \\f */\n  CHAR_EXCLAMATION_MARK: 33\x2C /* ! */\n  CHAR_HASH: 35\x2C /* # */\n  CHAR_SPACE: 32\x2C /*   */\n  CHAR_NO_BREAK_SPACE: 160\x2C /* \\u00A0 */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279\x2C /* \\uFEFF */\n  CHAR_LEFT_SQUARE_BRACKET: 91\x2C /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET: 93\x2C /* ] */\n  CHAR_LEFT_ANGLE_BRACKET: 60\x2C /* < */\n  CHAR_RIGHT_ANGLE_BRACKET: 62\x2C /* > */\n  CHAR_LEFT_CURLY_BRACKET: 123\x2C /* { */\n  CHAR_RIGHT_CURLY_BRACKET: 125\x2C /* } */\n  CHAR_HYPHEN_MINUS: 45\x2C /* - */\n  CHAR_PLUS: 43\x2C /* + */\n  CHAR_DOUBLE_QUOTE: 34\x2C /* " */\n  CHAR_SINGLE_QUOTE: 39\x2C /* ' */\n  CHAR_PERCENT: 37\x2C /* % */\n  CHAR_SEMICOLON: 59\x2C /* ; */\n  CHAR_CIRCUMFLEX_ACCENT: 94\x2C /* ^ */\n  CHAR_GRAVE_ACCENT: 96\x2C /* ` */\n  CHAR_AT: 64\x2C /* @ */\n  CHAR_AMPERSAND: 38\x2C /* & */\n  CHAR_EQUAL: 61\x2C /* = */\n\n  // Digits\n  CHAR_0: 48\x2C /* 0 */\n  CHAR_9: 57\x2C /* 9 */\n\n  EOL: isWindows ? '\\r\\n' : '\\n'\x2C\n};\n
code-source-info,0x1537ab9af256,32,0,1583,C0O0C4O1583,,
code-creation,JS,10,43178,0x1537ab9af5de,41, node:internal/constants:1:1,0x1537ab9af1d0,~
code-source-info,0x1537ab9af5de,32,0,1583,C0O41C7O50C11O64C21O1553C35O79C40O1582,,
tick,0x7ee81bedcd30,43394,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x1537ab9a821a,0x168b8b4afead,0x168b8b4afc8d,0x1537ab99e444,0x168b8b4afead,0x168b8b4afc8d,0x2bf7c803b9fc,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75d0e
code-creation,Eval,10,43825,0x1537ab9b110e,5, node:path:1:1,0x1537ab9b0d40,~
script-source,33,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  getLazy\x2C\n  emitExperimentalWarning\x2C\n} = require('internal/util');\n\nconst lazyMinimatch = getLazy(() => require('internal/deps/minimatch/index'));\n\nconst platformIsWin32 = (process.platform === 'win32');\nconst platformIsOSX = (process.platform === 'darwin');\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction formatExt(ext) {\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nfunction glob(path\x2C pattern\x2C windows) {\n  emitExperimentalWarning('glob');\n  validateString(path\x2C 'path');\n  validateString(pattern\x2C 'pattern');\n  return lazyMinimatch().minimatch(path\x2C pattern\x2C {\n    __proto__: null\x2C\n    nocase: platformIsOSX || platformIsWin32\x2C\n    windowsPathsNoEscape: true\x2C\n    nonegate: true\x2C\n    nocomment: true\x2C\n    optimizationLevel: 2\x2C\n    platform: windows ? 'win32' : 'posix'\x2C\n    nocaseMagicOnly: true\x2C\n  });\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C `paths[${i}]`);\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return resolvedPath;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'ext');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return glob(path\x2C pattern\x2C true);\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nconst posixCwd = (() => {\n  if (platformIsWin32) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : posixCwd();\n      validateString(path\x2C `paths[${i}]`);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'ext');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return glob(path\x2C pattern\x2C false);\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = platformIsWin32 ? win32 : posix;\n
code-source-info,0x1537ab9b110e,33,0,47664,C0O0C4O47664,,
code-creation,JS,10,44573,0x1537ab9b1fb6,632, node:path:1:1,0x1537ab9b1088,~
code-source-info,0x1537ab9b1fb
code-creation,JS,10,44590,0x1537ab9b2496,30, node:path:1102:19,0x1537ab9b1730,~
code-source-info,0x1537ab9b2496,33,34076,34519,C0O34086C13O34245C18O34245C20O34256C24O34421C25O34490C29O34517,,
tick,0x7ee8191499a1,44601,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x1537ab9a821a,0x168b8b4afead,0x168b8b4afc8d,0x1537ab99e444,0x168b8b4afead,0x168b8b4afc8d,0x2bf7c803b9fc,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75d0e
code-creation,JS,10,44678,0x1537ab9b5b8e,26,getLazy node:internal/util:800:17,0x307edb92b4b8,~
code-source-info,0x1537ab9b5b8e,16,22030,22226,C0O22030C15O22052C16O22052C18O22079C19O22079C21O22088C25O22224,,
code-creation,Eval,10,44945,0x1537ab9b6996,5, node:querystring:1:1,0x1537ab9b66b0,~
script-source,34,node:querystring,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Query String Utilities\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  Int8Array\x2C\n  MathAbs\x2C\n  NumberIsFinite\x2C\n  ObjectKeys\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\x2C\n} = require('internal/querystring');\nconst QueryString = module.exports = {\n  unescapeBuffer\x2C\n  // `unescape()` is a JS global\x2C so we need to use a different local name\n  unescape: qsUnescape\x2C\n\n  // `escape()` is a JS global\x2C so we need to use a different local name\n  escape: qsEscape\x2C\n\n  stringify\x2C\n  encode: stringify\x2C\n\n  parse\x2C\n  decode: parse\x2C\n};\n\nconst unhexTable = new Int8Array([\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 0 - 15\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 16 - 31\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 32 - 47\n  +0\x2C +1\x2C +2\x2C +3\x2C +4\x2C +5\x2C +6\x2C +7\x2C +8\x2C +9\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 48 - 63\n  -1\x2C 10\x2C 11\x2C 12\x2C 13\x2C 14\x2C 15\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 64 - 79\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 80 - 95\n  -1\x2C 10\x2C 11\x2C 12\x2C 13\x2C 14\x2C 15\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 96 - 111\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 112 - 127\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C // 128 ...\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C\n  -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C -1\x2C  // ... 255\n]);\n/**\n * A safe fast alternative to decodeURIComponent\n * @param {string} s\n * @param {boolean} decodeSpaces\n * @returns {string}\n */\nfunction unescapeBuffer(s\x2C decodeSpaces) {\n  const out = Buffer.allocUnsafe(s.length);\n  let index = 0;\n  let outIndex = 0;\n  let currentChar;\n  let nextChar;\n  let hexHigh;\n  let hexLow;\n  const maxLength = s.length - 2;\n  // Flag to know if some hex chars have been decoded\n  let hasHex = false;\n  while (index < s.length) {\n    currentChar = StringPrototypeCharCodeAt(s\x2C index);\n    if (currentChar === 43 /* '+' */ && decodeSpaces) {\n      out[outIndex++] = 32; // ' '\n      index++;\n      continue;\n    }\n    if (currentChar === 37 /* '%' */ && index < maxLength) {\n      currentChar = StringPrototypeCharCodeAt(s\x2C ++index);\n      hexHigh = unhexTable[currentChar];\n      if (!(hexHigh >= 0)) {\n        out[outIndex++] = 37; // '%'\n        continue;\n      } else {\n        nextChar = StringPrototypeCharCodeAt(s\x2C ++index);\n        hexLow = unhexTable[nextChar];\n        if (!(hexLow >= 0)) {\n          out[outIndex++] = 37; // '%'\n          index--;\n        } else {\n          hasHex = true;\n          currentChar = hexHigh * 16 + hexLow;\n        }\n      }\n    }\n    out[outIndex++] = currentChar;\n    index++;\n  }\n  return hasHex ? out.slice(0\x2C outIndex) : out;\n}\n\n/**\n * @param {string} s\n * @param {boolean} decodeSpaces\n * @returns {string}\n */\nfunction qsUnescape(s\x2C decodeSpaces) {\n  try {\n    return decodeURIComponent(s);\n  } catch {\n    return QueryString.unescapeBuffer(s\x2C decodeSpaces).toString();\n  }\n}\n\n\n// These characters do not need escaping when generating query strings:\n// ! - . _ ~\n// ' ( ) *\n// digits\n// alpha (uppercase)\n// alpha (lowercase)\nconst noEscape = new Int8Array([\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0 - 15\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 16 - 31\n  0\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 32 - 47\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 48 - 63\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 64 - 79\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 80 - 95\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 96 - 111\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C  // 112 - 127\n]);\n\n/**\n * QueryString.escape() replaces encodeURIComponent()\n * @see https://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3.4\n * @param {any} str\n * @returns {string}\n */\nfunction qsEscape(str) {\n  if (typeof str !== 'string') {\n    if (typeof str === 'object')\n      str = String(str);\n    else\n      str += '';\n  }\n\n  return encodeStr(str\x2C noEscape\x2C hexTable);\n}\n\n/**\n * @param {string | number | bigint | boolean | symbol | undefined | null} v\n * @returns {string}\n */\nfunction stringifyPrimitive(v) {\n  if (typeof v === 'string')\n    return v;\n  if (typeof v === 'number' && NumberIsFinite(v))\n    return '' + v;\n  if (typeof v === 'bigint')\n    return '' + v;\n  if (typeof v === 'boolean')\n    return v ? 'true' : 'false';\n  return '';\n}\n\n/**\n * @param {string | number | bigint | boolean} v\n * @param {(v: string) => string} encode\n * @returns {string}\n */\nfunction encodeStringified(v\x2C encode) {\n  if (typeof v === 'string')\n    return (v.length ? encode(v) : '');\n  if (typeof v === 'number' && NumberIsFinite(v)) {\n    // Values >= 1e21 automatically switch to scientific notation which requires\n    // escaping due to the inclusion of a '+' in the output\n    return (MathAbs(v) < 1e21 ? '' + v : encode('' + v));\n  }\n  if (typeof v === 'bigint')\n    return '' + v;\n  if (typeof v === 'boolean')\n    return v ? 'true' : 'false';\n  return '';\n}\n\n/**\n * @param {string | number | boolean | null} v\n * @param {(v: string) => string} encode\n * @returns {string}\n */\nfunction encodeStringifiedCustom(v\x2C encode) {\n  return encode(stringifyPrimitive(v));\n}\n\n/**\n * @param {Record<string\x2C string | number | boolean\n * | ReadonlyArray<string | number | boolean> | null>} obj\n * @param {string} [sep]\n * @param {string} [eq]\n * @param {{ encodeURIComponent?: (v: string) => string }} [options]\n * @returns {string}\n */\nfunction stringify(obj\x2C sep\x2C eq\x2C options) {\n  sep = sep || '&';\n  eq = eq || '=';\n\n  let encode = QueryString.escape;\n  if (options && typeof options.encodeURIComponent === 'function') {\n    encode = options.encodeURIComponent;\n  }\n  const convert =\n    (encode === qsEscape ? encodeStringified : encodeStringifiedCustom);\n\n  if (obj !== null && typeof obj === 'object') {\n    const keys = ObjectKeys(obj);\n    const len = keys.length;\n    let fields = '';\n    for (let i = 0; i < len; ++i) {\n      const k = keys[i];\n      const v = obj[k];\n      let ks = convert(k\x2C encode);\n      ks += eq;\n\n      if (ArrayIsArray(v)) {\n        const vlen = v.length;\n        if (vlen === 0) continue;\n        if (fields)\n          fields += sep;\n        for (let j = 0; j < vlen; ++j) {\n          if (j)\n            fields += sep;\n          fields += ks;\n          fields += convert(v[j]\x2C encode);\n        }\n      } else {\n        if (fields)\n          fields += sep;\n        fields += ks;\n        fields += convert(v\x2C encode);\n      }\n    }\n    return fields;\n  }\n  return '';\n}\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction charCodes(str) {\n  if (str.length === 0) return [];\n  if (str.length === 1) return [StringPrototypeCharCodeAt(str\x2C 0)];\n  const ret = new Array(str.length);\n  for (let i = 0; i < str.length; ++i)\n    ret[i] = StringPrototypeCharCodeAt(str\x2C i);\n  return ret;\n}\nconst defSepCodes = [38]; // &\nconst defEqCodes = [61]; // =\n\nfunction addKeyVal(obj\x2C key\x2C value\x2C keyEncoded\x2C valEncoded\x2C decode) {\n  if (key.length > 0 && keyEncoded)\n    key = decodeStr(key\x2C decode);\n  if (value.length > 0 && valEncoded)\n    value = decodeStr(value\x2C decode);\n\n  if (obj[key] === undefined) {\n    obj[key] = value;\n  } else {\n    const curValue = obj[key];\n    // A simple Array-specific property check is enough here to\n    // distinguish from a string value and is faster and still safe\n    // since we are generating all of the values being assigned.\n    if (curValue.pop)\n      curValue[curValue.length] = value;\n    else\n      obj[key] = [curValue\x2C value];\n  }\n}\n\n/**\n * Parse a key/val string.\n * @param {string} qs\n * @param {string} sep\n * @param {string} eq\n * @param {{\n *   maxKeys?: number;\n *   decodeURIComponent?(v: string): string;\n *   }} [options]\n * @returns {Record<string\x2C string | string[]>}\n */\nfunction parse(qs\x2C sep\x2C eq\x2C options) {\n  const obj = { __proto__: null };\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  const sepCodes = (!sep ? defSepCodes : charCodes(String(sep)));\n  const eqCodes = (!eq ? defEqCodes : charCodes(String(eq)));\n  const sepLen = sepCodes.length;\n  const eqLen = eqCodes.length;\n\n  let pairs = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    // -1 is used in place of a value like Infinity for meaning\n    // "unlimited pairs" because of additional checks V8 (at least as of v5.4)\n    // has to do when using variables that contain values like Infinity. Since\n    // `pairs` is always decremented and checked explicitly for 0\x2C -1 works\n    // effectively the same as Infinity\x2C while providing a significant\n    // performance boost.\n    pairs = (options.maxKeys > 0 ? options.maxKeys : -1);\n  }\n\n  let decode = QueryString.unescape;\n  if (options && typeof options.decodeURIComponent === 'function') {\n    decode = options.decodeURIComponent;\n  }\n  const customDecode = (decode !== qsUnescape);\n\n  let lastPos = 0;\n  let sepIdx = 0;\n  let eqIdx = 0;\n  let key = '';\n  let value = '';\n  let keyEncoded = customDecode;\n  let valEncoded = customDecode;\n  const plusChar = (customDecode ? '%20' : ' ');\n  let encodeCheck = 0;\n  for (let i = 0; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator (e.g. '&')\n    if (code === sepCodes[sepIdx]) {\n      if (++sepIdx === sepLen) {\n        // Key/value pair separator match!\n        const end = i - sepIdx + 1;\n        if (eqIdx < eqLen) {\n          // We didn't find the (entire) key/value separator\n          if (lastPos < end) {\n            // Treat the substring as part of the key instead of the value\n            key += StringPrototypeSlice(qs\x2C lastPos\x2C end);\n          } else if (key.length === 0) {\n            // We saw an empty substring between separators\n            if (--pairs === 0)\n              return obj;\n            lastPos = i + 1;\n            sepIdx = eqIdx = 0;\n            continue;\n          }\n        } else if (lastPos < end) {\n          value += StringPrototypeSlice(qs\x2C lastPos\x2C end);\n        }\n\n        addKeyVal(obj\x2C key\x2C value\x2C keyEncoded\x2C valEncoded\x2C decode);\n\n        if (--pairs === 0)\n          return obj;\n        keyEncoded = valEncoded = customDecode;\n        key = value = '';\n        encodeCheck = 0;\n        lastPos = i + 1;\n        sepIdx = eqIdx = 0;\n      }\n    } else {\n      sepIdx = 0;\n      // Try matching key/value separator (e.g. '=') if we haven't already\n      if (eqIdx < eqLen) {\n        if (code === eqCodes[eqIdx]) {\n          if (++eqIdx === eqLen) {\n            // Key/value separator match!\n            const end = i - eqIdx + 1;\n            if (lastPos < end)\n              key += StringPrototypeSlice(qs\x2C lastPos\x2C end);\n            encodeCheck = 0;\n            lastPos = i + 1;\n          }\n          continue;\n        } else {\n          eqIdx = 0;\n          if (!keyEncoded) {\n            // Try to match an (valid) encoded byte once to minimize unnecessary\n            // calls to string decoding functions\n            if (code === 37/* % */) {\n              encodeCheck = 1;\n              continue;\n            } else if (encodeCheck > 0) {\n              if (isHexTable[code] === 1) {\n                if (++encodeCheck === 3)\n                  keyEncoded = true;\n                continue;\n              } else {\n                encodeCheck = 0;\n              }\n            }\n          }\n        }\n        if (code === 43/* + */) {\n          if (lastPos < i)\n            key += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n          key += plusChar;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n      if (code === 43/* + */) {\n        if (lastPos < i)\n          value += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n        value += plusChar;\n        lastPos = i + 1;\n      } else if (!valEncoded) {\n        // Try to match an (valid) encoded byte (once) to minimize unnecessary\n        // calls to string decoding functions\n        if (code === 37/* % */) {\n          encodeCheck = 1;\n        } else if (encodeCheck > 0) {\n          if (isHexTable[code] === 1) {\n            if (++encodeCheck === 3)\n              valEncoded = true;\n          } else {\n            encodeCheck = 0;\n          }\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n  if (lastPos < qs.length) {\n    if (eqIdx < eqLen)\n      key += StringPrototypeSlice(qs\x2C lastPos);\n    else if (sepIdx < sepLen)\n      value += StringPrototypeSlice(qs\x2C lastPos);\n  } else if (eqIdx === 0 && key.length === 0) {\n    // We ended on an empty substring\n    return obj;\n  }\n\n  addKeyVal(obj\x2C key\x2C value\x2C keyEncoded\x2C valEncoded\x2C decode);\n\n  return obj;\n}\n\n\n/**\n * V8 does not optimize functions with try-catch blocks\x2C so we isolate them here\n * to minimize the damage (Note: no longer true as of V8 5.4 -- but still will\n * not be inlined).\n * @param {string} s\n * @param {(v: string) => string} decoder\n * @returns {string}\n */\nfunction decodeStr(s\x2C decoder) {\n  try {\n    return decoder(s);\n  } catch {\n    return QueryString.unescape(s\x2C true);\n  }\n}\n
code-source-info,0x1537ab9b6996,34,0,14583,C0O0C4O14583,,
code-creation,JS,10,45194,0x1537ab9b7bfe,320, node:querystring:1:1,0x1537ab9b6910,~
code-source-info,0x1537ab9b7bfe,34,0,14583,C0O0C122O1186C128O1195C134O1211C139O1224C145O1235C151O1253C157O1267C163O1277C169O1306C175O1330C181O1387C184O1387C189O1376C195O1457C198O1457C203O1416C209O1429C215O1441C221O1510C228O1531C234O1634C240O1730C246O1743C252O1764C258O1778C264O1795C270O1525C276O1510C278O1825C285O1825C290O1825C292O4733C299O4733C304O4733C306O8476C310O8476C312O8506C316O8506C319O14582,,
code-creation,JS,10,45511,0x1537ab9bba56,188,from node:buffer:292:28,0x305ee1eb2b80,~
code-source-info,0x1537ab9bba56,25,8369,9321,C3O8407C9O8442C12O8449C17O8485C18O8489C28O8544C33O8548C39O8579C51O8586C56O8635C57O8663C63O8680C68O8680C73O8695C78O8734C95O8825C104O8832C109O8872C110O8894C113O8894C118O8917C120O8930C122O8939C123O8945C125O8962C127O8961C134O9023C136O9029C138O9028C145O9047C151O9065C155O9110C158O9117C163O9157C164O9179C182O9185C187O9179,,
tick,0x7ee819a9e5f4,45559,0,0x0,3,0x7ee81c5678d0,0x1537ab99e75c,0x168b8b4afead,0x168b8b4afc8d,0x2bf7c803b9fc,0x168b8b4afead,0x168b8b4afc8d,0x19f2a9a75d0e
code-creation,JS,10,45596,0x1537ab9bbc6e,107,fromString node:buffer:460:20,0x305ee1eb2630,~
code-source-info,0x1537ab9bbc6e,25,13272,13680,C0O13299C2O13306C8O13351C14O13358C19O13382C25O13389C30O13402C35O13409C40O13426C41O13431C46O13449C53O13470C56O13476C61O13506C63O13535C70O13541C75O13535C76O13592C82O13599C87O13612C92O13619C97O13636C98O13643C101O13650C106O13678,,
code-creation,JS,10,45654,0x1537ab9bbe1e,177,fromStringFast node:buffer:441:24,0x305ee1eb25e0,~
code-source-info,0x1537ab9bbe1e,25,12728,13251,C0O12765C5O12765C11O12788C14O12810C18O12819C21O12799C26O12831C31O12867C36O12838C41O12880C42O12884C44O12898C49O12909C51O12907C54O12895C59O12926C62O12926C65O12950C72O12965C77O12976C85O12950C91O13018C110O13018C116O13049C118O13060C123O13144C130O13163C135O13174C143O13148C149O13201C156O13215C162O13212C168O13225C171O13225C174O13240C176O13249,,
code-creation,JS,10,45684,0x1537ab9bbffe,23,write node:buffer:620:12,0x305ee1eb2ea0,~
code-source-info,0x1537ab9bbffe,25,17314,17378,C0O17348C17O17348C22O17378,,
code-creation,JS,10,45710,0x1537ab9bc0ee,42,alignPool node:buffer:160:19,0x305ee1eb2360,~
code-source-info,0x1537ab9bc0ee,25,4074,4178,C0O4108C4O4123C9O4136C19O4147C25O4159C34O4169C41O4177,,
new,MemoryChunk,0x2563a9580000,262144
code-creation,JS,10,45958,0x1537ab9bf4ae,216,wrapProcessMethods node:internal/process/per_thread:99:28,0x2bf7c803b3a8,~
code-source-info,0x1537ab9bf4ae,28,2560,7816,C0O2560C71O2719C74O2596C80O2624C86O2642C91O2666C97O2699C103O2918C115O2918C120O2918C122O4496C134O4496C139O4496C141O4750C143O4766C147O6569C159O6569C164O6569C166O7699C173O7712C179O7727C185O7741C191O7760C197O7777C203O7787C209O7797C215O7814,,
code-creation,Eval,10,46168,0x2563a9583f5e,5, node:internal/process/task_queues:1:1,0x2563a9583c18,~
script-source,35,node:internal/process/task_queues,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n} = primordials;\n\nconst {\n  // For easy access to the nextTick state in the C++ land\x2C\n  // and to avoid unnecessary calls into JS land.\n  tickInfo\x2C\n  // Used to run V8's micro task queue.\n  runMicrotasks\x2C\n  setTickCallback\x2C\n  enqueueMicrotask\x2C\n} = internalBinding('task_queue');\n\nconst {\n  setHasRejectionToWarn\x2C\n  hasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\x2C\n} = require('internal/process/promises');\n\nconst {\n  getDefaultTriggerAsyncId\x2C\n  newAsyncId\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x2C\n} = require('internal/async_hooks');\nconst FixedQueue = require('internal/fixed_queue');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { AsyncResource } = require('async_hooks');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasTickScheduled = 0;\n\nfunction hasTickScheduled() {\n  return tickInfo[kHasTickScheduled] === 1;\n}\n\nfunction setHasTickScheduled(value) {\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\n}\n\nconst queue = new FixedQueue();\n\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\nfunction runNextTicks() {\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    runMicrotasks();\n  if (!hasTickScheduled() && !hasRejectionToWarn())\n    return;\n\n  processTicksAndRejections();\n}\n\nfunction processTicksAndRejections() {\n  let tock;\n  do {\n    while ((tock = queue.shift()) !== null) {\n      const asyncId = tock[async_id_symbol];\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch (args.length) {\n            case 1: callback(args[0]); break;\n            case 2: callback(args[0]\x2C args[1]); break;\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\n            default: callback(...args);\n          }\n        }\n      } finally {\n        if (destroyHooksExist())\n          emitDestroy(asyncId);\n      }\n\n      emitAfter(asyncId);\n    }\n    runMicrotasks();\n  } while (!queue.isEmpty() || processPromiseRejections());\n  setHasTickScheduled(false);\n  setHasRejectionToWarn(false);\n}\n\n// `nextTick()` will not enqueue any callback when the process is about to\n// exit since the callback would not have a chance to be executed.\nfunction nextTick(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  if (process._exiting)\n    return;\n\n  let args;\n  switch (arguments.length) {\n    case 1: break;\n    case 2: args = [arguments[1]]; break;\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\n    default:\n      args = new Array(arguments.length - 1);\n      for (let i = 1; i < arguments.length; i++)\n        args[i - 1] = arguments[i];\n  }\n\n  if (queue.isEmpty())\n    setHasTickScheduled(true);\n  const asyncId = newAsyncId();\n  const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    [async_id_symbol]: asyncId\x2C\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\n    callback\x2C\n    args\x2C\n  };\n  if (initHooksExist())\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n\nfunction runMicrotask() {\n  this.runInAsyncScope(() => {\n    const callback = this.callback;\n    try {\n      callback();\n    } finally {\n      this.emitDestroy();\n    }\n  });\n}\n\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\n\nfunction queueMicrotask(callback) {\n  validateFunction(callback\x2C 'callback');\n\n  const asyncResource = new AsyncResource(\n    'Microtask'\x2C\n    defaultMicrotaskResourceOpts\x2C\n  );\n  asyncResource.callback = callback;\n\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\n}\n\nmodule.exports = {\n  setupTaskQueue() {\n    // Sets the per-isolate promise rejection callback\n    listenForRejections();\n    // Sets the callback to be run in every tick.\n    setTickCallback(processTicksAndRejections);\n    return {\n      nextTick\x2C\n      runNextTicks\x2C\n    };\n  }\x2C\n  queueMicrotask\x2C\n};\n
code-source-info,0x2563a9583f5e,35,0,4285,C0O0C4O4285,,
code-creation,JS,10,46248,0x2563a958440e,355, node:internal/process/task_queues:1:1,0x2563a9583ed8,~
code-source-info,0x2563a958440e,35,0,4285,C0O0C125O25C131O34C137O305C140O305C145O195C151O247C157O264C163O283C169O447C172O447C177O347C183O372C189O394C195O417C201O690C204O690C209O496C215O524C221O538C227O556C233O577C239O589C245O603C251O616C257O640C262O642C268O659C274O742C277O742C282O808C285O808C290O786C296O867C299O867C304O849C310O978C311O978C313O1161C315O1161C320O1161C322O3659C326O3659C328O3983C333O4004C343O4266C349O3998C354O4284,,
code-creation,Eval,10,46518,0x2563a9585a46,5, node:internal/process/promises:1:1,0x2563a9585510,~
script-source,36,node:internal/process/promises,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  Error\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n} = primordials;\n\nconst {\n  tickInfo\x2C\n  promiseRejectEvents: {\n    kPromiseRejectWithNoHandler\x2C\n    kPromiseHandlerAddedAfterReject\x2C\n    kPromiseRejectAfterResolved\x2C\n    kPromiseResolveAfterResolved\x2C\n  }\x2C\n  setPromiseRejectCallback\x2C\n} = internalBinding('task_queue');\n\nconst { deprecate } = require('internal/util');\n\nconst {\n  noSideEffectsToString\x2C\n  triggerUncaughtException\x2C\n  exitCodes: { kGenericUserError }\x2C\n} = internalBinding('errors');\n\nconst {\n  pushAsyncContext\x2C\n  popAsyncContext\x2C\n  symbols: {\n    async_id_symbol: kAsyncIdSymbol\x2C\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x2C\n  }\x2C\n} = require('internal/async_hooks');\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\n\n// *Must* match Environment::TickInfo::Fields in src/env.h.\nconst kHasRejectionToWarn = 1;\n\n// By default true because in cases where process is not a global\n// it is not possible to determine if the user has added a listener\n// to the process object.\nlet hasMultipleResolvesListener = true;\n\nif (process.on) {\n  hasMultipleResolvesListener = process.listenerCount('multipleResolves') !== 0;\n\n  process.on('newListener'\x2C (eventName) => {\n    if (eventName === 'multipleResolves') {\n      hasMultipleResolvesListener = true;\n    }\n  });\n\n  process.on('removeListener'\x2C (eventName) => {\n    if (eventName === 'multipleResolves') {\n      hasMultipleResolvesListener = process.listenerCount('multipleResolves') !== 0;\n    }\n  });\n}\n\n/**\n * Errors & Warnings\n */\n\nclass UnhandledPromiseRejection extends Error {\n  code = 'ERR_UNHANDLED_REJECTION';\n  name = 'UnhandledPromiseRejection';\n  /**\n   * @param {Error} reason\n   */\n  constructor(reason) {\n    super('This error originated either by throwing inside of an ' +\n    'async function without a catch block\x2C or by rejecting a promise which ' +\n    'was not handled with .catch(). The promise rejected with the reason "' +\n    noSideEffectsToString(reason) + '".');\n  }\n}\n\nclass UnhandledPromiseRejectionWarning extends Error {\n  name = 'UnhandledPromiseRejectionWarning';\n  /**\n   * @param {number} uid\n   */\n  constructor(uid) {\n    const message = 'Unhandled promise rejection. This error originated either by ' +\n    'throwing inside of an async function without a catch block\x2C ' +\n    'or by rejecting a promise which was not handled with .catch(). ' +\n    'To terminate the node process on unhandled promise ' +\n    'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\n    'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\n    `(rejection id: ${uid})`;\n\n    // UnhandledPromiseRejectionWarning will get the stack trace from the\n    // reason\x2C so we can disable the stack trace limit temporarily for better\n    // performance.\n    if (isErrorStackTraceLimitWritable()) {\n      const stackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 0;\n      super(message);\n      Error.stackTraceLimit = stackTraceLimit;\n    } else {\n      super(message);\n    }\n  }\n}\n\nclass PromiseRejectionHandledWarning extends Error {\n  name = 'PromiseRejectionHandledWarning';\n\n  /**\n   * @param {number} uid\n   */\n  constructor(uid) {\n    super(`Promise rejection was handled asynchronously (rejection id: ${uid})`);\n    this.id = uid;\n  }\n}\n\n/**\n * @typedef PromiseInfo\n * @property {*} reason the reason for the rejection\n * @property {number} uid the unique id of the promise\n * @property {boolean} warned whether the rejection has been warned\n * @property {object} [domain] the domain the promise was created in\n */\n\n/**\n * @type {WeakMap<Promise\x2C PromiseInfo>}\n */\nconst maybeUnhandledPromises = new SafeWeakMap();\n\n/**\n * Using a Mp causes the promise to be referenced at least for one tick.\n * @type {Map<Promise\x2C PromiseInfo>}\n */\nlet pendingUnhandledRejections = new SafeMap();\n\n/**\n * @type {Array<{promise: Promise\x2C warning: Error}>}\n */\nconst asyncHandledRejections = [];\n\n/**\n * @type {number}\n */\nlet lastPromiseId = 0;\n\n/**\n * @param {boolean} value\n */\nfunction setHasRejectionToWarn(value) {\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\n}\n\n/**\n * @returns {boolean}\n */\nfunction hasRejectionToWarn() {\n  return tickInfo[kHasRejectionToWarn] === 1;\n}\n\n/**\n * @param {string|Error} obj\n * @returns {obj is Error}\n */\nfunction isErrorLike(obj) {\n  return typeof obj === 'object' &&\n         obj !== null &&\n         ObjectPrototypeHasOwnProperty(obj\x2C 'stack');\n}\n\n/**\n * @param {0|1|2|3} type\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\n  if (unhandledRejectionsMode === undefined) {\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\n  }\n  switch (type) {\n    case kPromiseRejectWithNoHandler: // 0\n      unhandledRejection(promise\x2C reason);\n      break;\n    case kPromiseHandlerAddedAfterReject: // 1\n      handledRejection(promise);\n      break;\n    case kPromiseRejectAfterResolved: // 2\n      if (hasMultipleResolvesListener) {\n        resolveErrorReject(promise\x2C reason);\n      }\n      break;\n    case kPromiseResolveAfterResolved: // 3\n      if (hasMultipleResolvesListener) {\n        resolveErrorResolve(promise\x2C reason);\n      }\n      break;\n  }\n}\n\nconst multipleResolvesDeprecate = deprecate(\n  () => {}\x2C\n  'The multipleResolves event has been deprecated.'\x2C\n  'DEP0160'\x2C\n);\n\n/**\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction resolveErrorResolve(promise\x2C reason) {\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\n  // the executed promise.\n  process.nextTick(() => {\n    // Emit the multipleResolves event.\n    // This is a deprecated event\x2C so we have to check if it's being listened to.\n    if (process.emit('multipleResolves'\x2C 'resolve'\x2C promise\x2C reason)) {\n      // If the event is being listened to\x2C emit a deprecation warning.\n      multipleResolvesDeprecate();\n    }\n  });\n}\n\n/**\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction resolveErrorReject(promise\x2C reason) {\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\n  // the executed promise.\n  process.nextTick(() => {\n    if (process.emit('multipleResolves'\x2C 'reject'\x2C promise\x2C reason)) {\n      multipleResolvesDeprecate();\n    }\n  });\n}\n\n/**\n * @param {Promise} promise\n * @param {PromiseInfo} promiseInfo\n * @returns {boolean}\n */\nconst emitUnhandledRejection = (promise\x2C promiseInfo) => {\n  return promiseInfo.domain ?\n    promiseInfo.domain.emit('error'\x2C promiseInfo.reason) :\n    process.emit('unhandledRejection'\x2C promiseInfo.reason\x2C promise);\n};\n\n/**\n * @param {Promise} promise\n * @param {Error} reason\n */\nfunction unhandledRejection(promise\x2C reason) {\n  pendingUnhandledRejections.set(promise\x2C {\n    reason\x2C\n    uid: ++lastPromiseId\x2C\n    warned: false\x2C\n    domain: process.domain\x2C\n  });\n  setHasRejectionToWarn(true);\n}\n\n/**\n * @param {Promise} promise\n */\nfunction handledRejection(promise) {\n  if (pendingUnhandledRejections.has(promise)) {\n    pendingUnhandledRejections.delete(promise);\n    return;\n  }\n  const promiseInfo = maybeUnhandledPromises.get(promise);\n  if (promiseInfo !== undefined) {\n    maybeUnhandledPromises.delete(promise);\n    if (promiseInfo.warned) {\n      // Generate the warning object early to get a good stack trace.\n      const warning = new PromiseRejectionHandledWarning(promiseInfo.uid);\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\n      setHasRejectionToWarn(true);\n    }\n  }\n}\n\nconst unhandledRejectionErrName = UnhandledPromiseRejectionWarning.name;\n\n/**\n * @param {PromiseInfo} promiseInfo\n */\nfunction emitUnhandledRejectionWarning(promiseInfo) {\n  const warning = new UnhandledPromiseRejectionWarning(promiseInfo.uid);\n  const reason = promiseInfo.reason;\n  try {\n    if (isErrorLike(reason)) {\n      warning.stack = reason.stack;\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\n    } else {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    }\n  } catch {\n    try {\n      process.emitWarning(\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\n    } catch {\n      // Ignore.\n    }\n  }\n\n  process.emitWarning(warning);\n}\n\n/**\n * @callback UnhandledRejectionsModeHandler\n * @param {Promise} promise\n * @param {PromiseInfo} promiseInfo\n * @param {number} [promiseAsyncId]\n * @returns {boolean}\n */\n\n/**\n * The mode of unhandled rejections.\n * @type {UnhandledRejectionsModeHandler}\n */\nlet unhandledRejectionsMode;\n\n/**\n * --unhandled-rejections=strict:\n * Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\n * and exit the process.\n * Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\n * handled\x2C emit 'UnhandledPromiseRejectionWarning'.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction strictUnhandledRejectionsMode(promise\x2C promiseInfo\x2C promiseAsyncId) {\n  const reason = promiseInfo.reason;\n  const err = isErrorLike(reason) ?\n    reason : new UnhandledPromiseRejection(reason);\n  // This destroys the async stack\x2C don't clear it after\n  triggerUncaughtException(err\x2C true /* fromPromise */);\n  if (promiseAsyncId === undefined) {\n    pushAsyncContext(\n      promise[kAsyncIdSymbol]\x2C\n      promise[kTriggerAsyncIdSymbol]\x2C\n      promise\x2C\n    );\n  }\n  const handled = emitUnhandledRejection(promise\x2C promiseInfo);\n  if (!handled) emitUnhandledRejectionWarning(promiseInfo);\n  return true;\n}\n\n/**\n * --unhandled-rejections=none:\n * Emit 'unhandledRejection'\x2C but do not emit any warning.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction ignoreUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  emitUnhandledRejection(promise\x2C promiseInfo);\n  return true;\n}\n\n/**\n * --unhandled-rejections=warn:\n * Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction alwaysWarnUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  emitUnhandledRejection(promise\x2C promiseInfo);\n  emitUnhandledRejectionWarning(promiseInfo);\n  return true;\n}\n\n/**\n * --unhandled-rejections=throw:\n * Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n * 'uncaughtException'. If it's not handled\x2C print the error to stderr\n * and exit the process.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction throwUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  const reason = promiseInfo.reason;\n  const handled = emitUnhandledRejection(promise\x2C promiseInfo);\n  if (!handled) {\n    const err = isErrorLike(reason) ?\n      reason :\n      new UnhandledPromiseRejection(reason);\n    // This destroys the async stack\x2C don't clear it after\n    triggerUncaughtException(err\x2C true /* fromPromise */);\n    return false;\n  }\n  return true;\n}\n\n/**\n * --unhandled-rejections=warn-with-error-code:\n * Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\n * 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\n * @type {UnhandledRejectionsModeHandler}\n */\nfunction warnWithErrorCodeUnhandledRejectionsMode(promise\x2C promiseInfo) {\n  const handled = emitUnhandledRejection(promise\x2C promiseInfo);\n  if (!handled) {\n    emitUnhandledRejectionWarning(promiseInfo);\n    process.exitCode = kGenericUserError;\n  }\n  return true;\n}\n\n/**\n * @returns {UnhandledRejectionsModeHandler}\n */\nfunction getUnhandledRejectionsMode() {\n  const { getOptionValue } = require('internal/options');\n  switch (getOptionValue('--unhandled-rejections')) {\n    case 'none':\n      return ignoreUnhandledRejectionsMode;\n    case 'warn':\n      return alwaysWarnUnhandledRejectionsMode;\n    case 'strict':\n      return strictUnhandledRejectionsMode;\n    case 'throw':\n      return throwUnhandledRejectionsMode;\n    case 'warn-with-error-code':\n      return warnWithErrorCodeUnhandledRejectionsMode;\n    default:\n      return throwUnhandledRejectionsMode;\n  }\n}\n\n// If this method returns true\x2C we've executed user code or triggered\n// a warning to be emitted which requires the microtask and next tick\n// queues to be drained again.\nfunction processPromiseRejections() {\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\n\n  while (asyncHandledRejections.length !== 0) {\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\n    if (!process.emit('rejectionHandled'\x2C promise)) {\n      process.emitWarning(warning);\n    }\n  }\n\n  let needPop = true;\n  let promiseAsyncId;\n\n  const pending = pendingUnhandledRejections;\n  pendingUnhandledRejections = new SafeMap();\n\n  for (const { 0: promise\x2C 1: promiseInfo } of pending.entries()) {\n    maybeUnhandledPromises.set(promise\x2C promiseInfo);\n\n    promiseInfo.warned = true;\n\n    // We need to check if async_hooks are enabled\n    // don't use enabledHooksExist as a Promise could\n    // come from a vm.* context and not have an async id\n    promiseAsyncId = promise[kAsyncIdSymbol];\n    if (promiseAsyncId !== undefined) {\n      pushAsyncContext(\n        promiseAsyncId\x2C\n        promise[kTriggerAsyncIdSymbol]\x2C\n        promise\x2C\n      );\n    }\n\n    try {\n      needPop = unhandledRejectionsMode(promise\x2C promiseInfo\x2C promiseAsyncId);\n    } finally {\n      needPop &&\n      promiseAsyncId !== undefined &&\n      popAsyncContext(promiseAsyncId);\n    }\n    maybeScheduledTicksOrMicrotasks = true;\n  }\n  return maybeScheduledTicksOrMicrotasks ||\n         pendingUnhandledRejections.size !== 0;\n}\n\nfunction listenForRejections() {\n  setPromiseRejectCallback(promiseRejectHandler);\n}\n\nmodule.exports = {\n  hasRejectionToWarn\x2C\n  setHasRejectionToWarn\x2C\n  listenForRejections\x2C\n  processPromiseRejections\x2C\n};\n
code-source-info,0x2563a9585a46,36,0,13594,C0O0C4O13594,,
code-creation,JS,10,46761,0x2563a958693e,672, node:internal/process/promises:1:1,0x2563a95859c0,~
code-source-info,0x2563a958693e,36,0,13594,C0O0C208O25C214O47C220O70C226O79C232O112C238O123C243O373C246O373C251O164C257O197C262O203C268O236C274O273C280O306C286O343C292O427C298O427C303O413C308O555C311O555C316O464C322O489C328O528C333O530C339O741C345O741C350O593C356O613C362O641C367O664C373O709C379O817C385O817C390O782C396O934C398O934C400O1132C401O1132C403O1139C406O1151C412O1159C415O1197C423O1197C430O1231C434O1187C436O1241C439O1249C452O1249C458O1385C461O1393C474O1393C483O1645C509O1605C514O2113C540O2066C545O3153C571O3108C573O3729C575O3729C580O3729C582O3900C585O3900C590O3900C592O4008C594O4008C596O4059C597O4059C599O5315C610O5315C615O5315C617O6457C621O6457C623O7577C626O7610C630O7577C632O8540C633O8540C635O13474C642O13495C648O13517C654O13542C660O13565C666O13489C671O13593,,
code-creation,JS,10,46779,0x2563a9586d76,8,<instance_members_initializer> node:internal/process/promises:111:1,0x2563a95861c8,~
code-source-info,0x2563a9586d76,36,3108,3369,C0O3170C7O3369,,
code-creation,JS,10,46783,0x2563a9586e0e,8,<instance_members_initializer> node:internal/process/promises:83:1,0x2563a9586140,~
code-source-info,0x2563a9586e0e,36,2066,3106,C0O2130C7O3106,,
code-creation,JS,10,46790,0x2563a9586eb6,14,<instance_members_initializer> node:internal/process/promises:69:1,0x2563a95860b8,~
code-source-info,0x2563a9586eb6,36,1605,2064,C0O1662C6O1698C13O2064,,
tick,0x7ee819a999ce,46797,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x2563a95844ba,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a75ea7
code-creation,JS,10,46910,0x2563a95882a6,127,listenerCount node:events:853:23,0x305ee1ea72a0,~
code-source-info,0x2563a95882a6,23,24495,25178,C0O24536C5O24548C7O24599C9O24605C13O24618C17O24664C22O24696C24O24712C29O24754C33O24739C43O24771C44O24787C46O24796C47O24808C51O24846C56O24893C58O24918C60O24936C65O24946C67O24946C72O24968C74O24982C80O24986C87O25012C91O25016C98O25025C103O25053C108O24952C113O24905C117O25096C119O25112C120O25146C124O25153C125O25167C126O25176,,
code-creation,JS,10,46938,0x2563a9588436,20,addListener node:events:610:58,0x305ee1ea7ae8,~
code-source-info,0x2563a9588436,23,17858,17930,C0O17879C14O17886C19O17928,,
code-creation,JS,10,47012,0x2563a958880e,384,_addListener node:events:547:22,0x305ee1ea7160,~
code-source-info,0x2563a958880e
code-creation,JS,10,47039,0x2563a9588b26,15,checkListener node:events:275:23,0x305ee1ea6fa8,~
code-source-info,0x2563a9588b26,23,8119,8175,C0O8134C8O8134C14O8174,,
code-creation,JS,10,47065,0x2563a9588c86,75,wrappedFn node:internal/errors:536:21,0x19f2a9a53548,~
code-source-info,0x2563a9588c86,10,14708,14896,C0O14708C6O14736C22O14743C27O14772C39O14801C46O14807C56O14826C67O14826C72O14874C74O14874,,
code-creation,JS,10,47109,0x2563a9588dc6,30, node:internal/validators:458:42,0x307edb9261b8,~
code-source-info,0x2563a9588dc6,15,13091,13207,C0O13112C6O13149C22O13155C27O13149C29O13206,,
code-creation,JS,10,47203,0x2563a958a29e,381,emit node:events:466:44,0x305ee1ea7a98,~
code-source-info,0x2563a958a29e
code-creation,JS,10,47250,0x2563a958a5c6,19, node:internal/process/promises:52:29,0x2563a9585fc8,~
code-source-info,0x2563a958a5c6,36,1267,1379,C0O1288C2O1302C7O1334C11O1362C18O1378,,
code-creation,JS,10,47313,0x2563a958ba26,136,deprecate node:internal/util:147:19,0x307edb92a818,~
code-source-info,0x2563a958ba26,16,3817,4853,C0O3817C17O3897C25O3935C33O3957C38O3938C55O3993C59O4021C69O4021C74O4085C91O4085C96O4085C98O4549C108O4549C113O4589C116O4596C122O4789C125O4815C129O4810C133O4833C135O4851,,
code-creation,JS,10,47348,0x2563a958bbee,30, node:internal/validators:160:40,0x307edb925d58,~
code-source-info,0x2563a958bbee,15,4363,4475,C0O4384C6O4419C22O4425C27O4419C29O4474,,
code-creation,JS,10,47376,0x2563a958be26,65,getDeprecationWarningEmitter node:internal/util:102:38,0x307edb92a6d8,~
code-source-info,0x2563a958be26,16,2438,3050,C0O2438C57O2531C58O2531C60O2540C64O3048,,
code-creation,Eval,10,47485,0x2563a958c426,5, node:internal/fixed_queue:1:1,0x2563a958c2a0,~
script-source,37,node:internal/fixed_queue,'use strict';\n\nconst {\n  Array\x2C\n} = primordials;\n\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or\x2C if there is only one circular buffer\x2C it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one\x2C removing means\n// moving `bottom` forward by one. After reaching the end\x2C the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue\x2C it forms the new tail.\n      this.tail = tail.next;\n      tail.next = null;\n    }\n    return next;\n  }\n};\n
code-source-info,0x2563a958c426,37,0,4208,C0O0C4O4208,,
code-creation,JS,10,47579,0x2563a958cb2e,119, node:internal/fixed_queue:1:1,0x2563a958c3a0,~
code-source-info,0x2563a958cb2e,37,0,4208,C0O0C17O25C23O143C27O143C29O163C31O169C34O163C76O2929C78O3514C113O3529C118O4207,,
tick,0x7ee81c4e2eec,47684,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x2563a9584539,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a75ea7
code-creation,Eval,10,47865,0x2563a958dc3e,5, node:async_hooks:1:1,0x2563a958d728,~
script-source,38,node:async_hooks,'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  FunctionPrototypeBind\x2C\n  NumberIsSafeInteger\x2C\n  ObjectDefineProperties\x2C\n  ObjectIs\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n  ObjectFreeze\x2C\n} = primordials;\n\nconst {\n  ERR_ASYNC_CALLBACK\x2C\n  ERR_ASYNC_TYPE\x2C\n  ERR_INVALID_ASYNC_ID\x2C\n} = require('internal/errors').codes;\nconst {\n  deprecate\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nconst {\n  validateFunction\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst internal_async_hooks = require('internal/async_hooks');\n\n// Get functions\n// For userland AsyncResources\x2C make sure to emit a destroy event when the\n// resource gets gced.\nconst { registerDestroyHook } = internal_async_hooks;\nconst {\n  asyncWrap\x2C\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  // Private API\n  hasAsyncIdStack\x2C\n  getHookArrays\x2C\n  enableHooks\x2C\n  disableHooks\x2C\n  updatePromiseHookMode\x2C\n  executionAsyncResource\x2C\n  // Internal Embedder API\n  newAsyncId\x2C\n  getDefaultTriggerAsyncId\x2C\n  emitInit\x2C\n  emitBefore\x2C\n  emitAfter\x2C\n  emitDestroy\x2C\n  enabledHooksExist\x2C\n  initHooksExist\x2C\n  destroyHooksExist\x2C\n} = internal_async_hooks;\n\n// Get symbols\nconst {\n  async_id_symbol\x2C trigger_async_id_symbol\x2C\n  init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\n  promise_resolve_symbol\x2C\n} = internal_async_hooks.symbols;\n\n// Get constants\nconst {\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\n} = internal_async_hooks.constants;\n\n// Listener API //\n\nclass AsyncHook {\n  constructor({ init\x2C before\x2C after\x2C destroy\x2C promiseResolve }) {\n    if (init !== undefined && typeof init !== 'function')\n      throw new ERR_ASYNC_CALLBACK('hook.init');\n    if (before !== undefined && typeof before !== 'function')\n      throw new ERR_ASYNC_CALLBACK('hook.before');\n    if (after !== undefined && typeof after !== 'function')\n      throw new ERR_ASYNC_CALLBACK('hook.after');\n    if (destroy !== undefined && typeof destroy !== 'function')\n      throw new ERR_ASYNC_CALLBACK('hook.destroy');\n    if (promiseResolve !== undefined && typeof promiseResolve !== 'function')\n      throw new ERR_ASYNC_CALLBACK('hook.promiseResolve');\n\n    this[init_symbol] = init;\n    this[before_symbol] = before;\n    this[after_symbol] = after;\n    this[destroy_symbol] = destroy;\n    this[promise_resolve_symbol] = promiseResolve;\n  }\n\n  enable() {\n    // The set of callbacks for a hook should be the same regardless of whether\n    // enable()/disable() are run during their execution. The following\n    // references are reassigned to the tmp arrays if a hook is currently being\n    // processed.\n    const { 0: hooks_array\x2C 1: hook_fields } = getHookArrays();\n\n    // Each hook is only allowed to be added once.\n    if (ArrayPrototypeIncludes(hooks_array\x2C this))\n      return this;\n\n    const prev_kTotals = hook_fields[kTotals];\n\n    // createHook() has already enforced that the callbacks are all functions\x2C\n    // so here simply increment the count of whether each callbacks exists or\n    // not.\n    hook_fields[kTotals] = hook_fields[kInit] += +!!this[init_symbol];\n    hook_fields[kTotals] += hook_fields[kBefore] += +!!this[before_symbol];\n    hook_fields[kTotals] += hook_fields[kAfter] += +!!this[after_symbol];\n    hook_fields[kTotals] += hook_fields[kDestroy] += +!!this[destroy_symbol];\n    hook_fields[kTotals] +=\n        hook_fields[kPromiseResolve] += +!!this[promise_resolve_symbol];\n    ArrayPrototypePush(hooks_array\x2C this);\n\n    if (prev_kTotals === 0 && hook_fields[kTotals] > 0) {\n      enableHooks();\n    }\n\n    updatePromiseHookMode();\n\n    return this;\n  }\n\n  disable() {\n    const { 0: hooks_array\x2C 1: hook_fields } = getHookArrays();\n\n    const index = ArrayPrototypeIndexOf(hooks_array\x2C this);\n    if (index === -1)\n      return this;\n\n    const prev_kTotals = hook_fields[kTotals];\n\n    hook_fields[kTotals] = hook_fields[kInit] -= +!!this[init_symbol];\n    hook_fields[kTotals] += hook_fields[kBefore] -= +!!this[before_symbol];\n    hook_fields[kTotals] += hook_fields[kAfter] -= +!!this[after_symbol];\n    hook_fields[kTotals] += hook_fields[kDestroy] -= +!!this[destroy_symbol];\n    hook_fields[kTotals] +=\n        hook_fields[kPromiseResolve] -= +!!this[promise_resolve_symbol];\n    ArrayPrototypeSplice(hooks_array\x2C index\x2C 1);\n\n    if (prev_kTotals > 0 && hook_fields[kTotals] === 0) {\n      disableHooks();\n    }\n\n    return this;\n  }\n}\n\n\nfunction createHook(fns) {\n  return new AsyncHook(fns);\n}\n\n\n// Embedder API //\n\nconst destroyedSymbol = Symbol('destroyed');\n\nclass AsyncResource {\n  constructor(type\x2C opts = kEmptyObject) {\n    validateString(type\x2C 'type');\n\n    let triggerAsyncId = opts;\n    let requireManualDestroy = false;\n    if (typeof opts !== 'number') {\n      triggerAsyncId = opts.triggerAsyncId === undefined ?\n        getDefaultTriggerAsyncId() : opts.triggerAsyncId;\n      requireManualDestroy = !!opts.requireManualDestroy;\n    }\n\n    // Unlike emitInitScript\x2C AsyncResource doesn't supports null as the\n    // triggerAsyncId.\n    if (!NumberIsSafeInteger(triggerAsyncId) || triggerAsyncId < -1) {\n      throw new ERR_INVALID_ASYNC_ID('triggerAsyncId'\x2C triggerAsyncId);\n    }\n\n    const asyncId = newAsyncId();\n    this[async_id_symbol] = asyncId;\n    this[trigger_async_id_symbol] = triggerAsyncId;\n\n    if (initHooksExist()) {\n      if (enabledHooksExist() && type.length === 0) {\n        throw new ERR_ASYNC_TYPE(type);\n      }\n\n      emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C this);\n    }\n\n    if (!requireManualDestroy && destroyHooksExist()) {\n      // This prop name (destroyed) has to be synchronized with C++\n      const destroyed = { destroyed: false };\n      this[destroyedSymbol] = destroyed;\n      registerDestroyHook(this\x2C asyncId\x2C destroyed);\n    }\n  }\n\n  runInAsyncScope(fn\x2C thisArg\x2C ...args) {\n    const asyncId = this[async_id_symbol];\n    emitBefore(asyncId\x2C this[trigger_async_id_symbol]\x2C this);\n\n    try {\n      const ret =\n        ReflectApply(fn\x2C thisArg\x2C args);\n\n      return ret;\n    } finally {\n      if (hasAsyncIdStack())\n        emitAfter(asyncId);\n    }\n  }\n\n  emitDestroy() {\n    if (this[destroyedSymbol] !== undefined) {\n      this[destroyedSymbol].destroyed = true;\n    }\n    emitDestroy(this[async_id_symbol]);\n    return this;\n  }\n\n  asyncId() {\n    return this[async_id_symbol];\n  }\n\n  triggerAsyncId() {\n    return this[trigger_async_id_symbol];\n  }\n\n  bind(fn\x2C thisArg) {\n    validateFunction(fn\x2C 'fn');\n    let bound;\n    if (thisArg === undefined) {\n      const resource = this;\n      bound = function(...args) {\n        ArrayPrototypeUnshift(args\x2C fn\x2C this);\n        return ReflectApply(resource.runInAsyncScope\x2C resource\x2C args);\n      };\n    } else {\n      bound = FunctionPrototypeBind(this.runInAsyncScope\x2C this\x2C fn\x2C thisArg);\n    }\n    let self = this;\n    ObjectDefineProperties(bound\x2C {\n      'length': {\n        __proto__: null\x2C\n        configurable: true\x2C\n        enumerable: false\x2C\n        value: fn.length\x2C\n        writable: false\x2C\n      }\x2C\n      'asyncResource': {\n        __proto__: null\x2C\n        configurable: true\x2C\n        enumerable: true\x2C\n        get: deprecate(function() {\n          return self;\n        }\x2C 'The asyncResource property on bound functions is deprecated'\x2C 'DEP0172')\x2C\n        set: deprecate(function(val) {\n          self = val;\n        }\x2C 'The asyncResource property on bound functions is deprecated'\x2C 'DEP0172')\x2C\n      }\x2C\n    });\n    return bound;\n  }\n\n  static bind(fn\x2C type\x2C thisArg) {\n    type = type || fn.name;\n    return (new AsyncResource(type || 'bound-anonymous-fn')).bind(fn\x2C thisArg);\n  }\n}\n\nconst storageList = [];\nconst storageHook = createHook({\n  init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n    const currentResource = executionAsyncResource();\n    // Value of currentResource is always a non null object\n    for (let i = 0; i < storageList.length; ++i) {\n      storageList[i]._propagate(resource\x2C currentResource\x2C type);\n    }\n  }\x2C\n});\n\nclass AsyncLocalStorage {\n  constructor() {\n    this.kResourceStore = Symbol('kResourceStore');\n    this.enabled = false;\n  }\n\n  static bind(fn) {\n    return AsyncResource.bind(fn);\n  }\n\n  static snapshot() {\n    return AsyncLocalStorage.bind((cb\x2C ...args) => cb(...args));\n  }\n\n  disable() {\n    if (this.enabled) {\n      this.enabled = false;\n      // If this.enabled\x2C the instance must be in storageList\n      ArrayPrototypeSplice(storageList\x2C\n                           ArrayPrototypeIndexOf(storageList\x2C this)\x2C 1);\n      if (storageList.length === 0) {\n        storageHook.disable();\n      }\n    }\n  }\n\n  _enable() {\n    if (!this.enabled) {\n      this.enabled = true;\n      ArrayPrototypePush(storageList\x2C this);\n      storageHook.enable();\n    }\n  }\n\n  // Propagate the context from a parent resource to a child one\n  _propagate(resource\x2C triggerResource\x2C type) {\n    const store = triggerResource[this.kResourceStore];\n    if (this.enabled) {\n      resource[this.kResourceStore] = store;\n    }\n  }\n\n  enterWith(store) {\n    this._enable();\n    const resource = executionAsyncResource();\n    resource[this.kResourceStore] = store;\n  }\n\n  run(store\x2C callback\x2C ...args) {\n    // Avoid creation of an AsyncResource if store is already active\n    if (ObjectIs(store\x2C this.getStore())) {\n      return ReflectApply(callback\x2C null\x2C args);\n    }\n\n    this._enable();\n\n    const resource = executionAsyncResource();\n    const oldStore = resource[this.kResourceStore];\n\n    resource[this.kResourceStore] = store;\n\n    try {\n      return ReflectApply(callback\x2C null\x2C args);\n    } finally {\n      resource[this.kResourceStore] = oldStore;\n    }\n  }\n\n  exit(callback\x2C ...args) {\n    if (!this.enabled) {\n      return ReflectApply(callback\x2C null\x2C args);\n    }\n    this.disable();\n    try {\n      return ReflectApply(callback\x2C null\x2C args);\n    } finally {\n      this._enable();\n    }\n  }\n\n  getStore() {\n    if (this.enabled) {\n      const resource = executionAsyncResource();\n      return resource[this.kResourceStore];\n    }\n  }\n}\n\n// Placing all exports down here because the exported classes won't export\n// otherwise.\nmodule.exports = {\n  // Public API\n  AsyncLocalStorage\x2C\n  createHook\x2C\n  executionAsyncId\x2C\n  triggerAsyncId\x2C\n  executionAsyncResource\x2C\n  asyncWrapProviders: ObjectFreeze({ __proto__: null\x2C ...asyncWrap.Providers })\x2C\n  // Embedder API\n  AsyncResource\x2C\n};\n
code-source-info,0x2563a958dc3e,38,0,10295,C0O0C4O10295,,
code-creation,JS,10,48042,0x2563a958ecc6,805, node:async_hooks:1:1,0x2563a958dbb8,~
code-source-info,0x2563a958ecc6,38,0,10295,C0O0C166O25C172O51C178O76C184O98C190O122C196O147C202O172C208O195C214O221C220O233C226O249C232O259C237O367C240O367C245O393C250O301C256O323C262O341C268O442C271O442C276O411C282O424C288O518C291O518C296O478C302O498C308O579C311O579C316O736C322O792C327O805C332O825C337O860C343O879C349O896C355O911C361O927C367O952C373O1005C379O1019C385O1047C391O1059C397O1073C403O1086C409O1101C415O1122C421O1140C427O1364C432O1211C438O1228C444O1255C450O1268C456O1283C462O1297C468O1315C474O1486C479O1401C485O1408C491O1417C497O1425C503O1435C509O1444C545O1518C547O4518C553O4518C557O4518C623O4540C625O7593C627O7593C629O7617C634O7632C642O7617C646O7617C731O10042C738O10079C744O10100C750O10114C756O10134C762O10152C766O10198C771O10243C783O10198C793O10277C799O10057C804O10294,,
code-creation,JS,10,48159,0x2563a95902f6,13,createHook node:async_hooks:153:20,0x2563a958dc70,~
code-source-info,0x2563a95902f6,38,4433,4471,C0O4443C7O4450C12O4469,,
code-creation,JS,10,48209,0x2563a9591116,212,AsyncHook node:async_hooks:75:14,0x2563a958dcc0,~
code-source-info,0x2563a9591116,38,1549,2372,C0O1552C5O1558C10O1566C15O1573C20O1582C25O1606C35O1666C45O1672C50O1666C51O1713C61O1777C71O1783C76O1777C77O1826C87O1888C97O1894C102O1888C103O1936C113O2002C123O2008C128O2002C129O2052C139O2132C149O2138C154O2132C155O2190C157O2195C162O2208C166O2220C168O2225C173O2240C177O2254C179O2259C184O2273C188O2286C190O2291C195O2307C199O2322C201O2327C206O2351C211O2371,,
code-creation,JS,10,48273,0x2563a959188e,23,FixedQueue node:internal/fixed_queue:91:14,0x2563a958c5e8,~
code-source-info,0x2563a959188e,37,3563,3626,C0O3572C2O3600C5O3596C11O3594C17O3582C22O3625,,
code-creation,JS,10,48295,0x2563a9591de6,38,FixedCircularBuffer node:internal/fixed_queue:60:14,0x2563a958c458,~
code-source-info,0x2563a9591de6,37,2970,3073,C0O2979C1O2991C5O3000C6O3009C10O3018C12O3034C17O3040C22O3030C27O3028C31O3052C32O3062C37O3072,,
code-creation,Eval,10,48524,0x2563a95929c6,5, node:timers:1:1,0x2563a95926d0,~
script-source,39,node:timers,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  MathTrunc\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  SymbolDispose\x2C\n  SymbolToPrimitive\x2C\n} = primordials;\n\nconst binding = internalBinding('timers');\nconst {\n  immediateInfo\x2C\n} = binding;\nconst L = require('internal/linkedlist');\nconst {\n  async_id_symbol\x2C\n  Timeout\x2C\n  Immediate\x2C\n  decRefCount\x2C\n  immediateInfoFields: {\n    kCount\x2C\n    kRefCount\x2C\n  }\x2C\n  kRefed\x2C\n  kHasPrimitive\x2C\n  getTimerDuration\x2C\n  timerListMap\x2C\n  timerListQueue\x2C\n  immediateQueue\x2C\n  active\x2C\n  unrefActive\x2C\n  insert\x2C\n  knownTimersById\x2C\n} = require('internal/timers');\nconst {\n  promisify: { custom: customPromisify }\x2C\n  deprecate\x2C\n} = require('internal/util');\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\n  debug = fn;\n});\nconst { validateFunction } = require('internal/validators');\n\nlet timersPromises;\nlet timers;\n\nconst {\n  destroyHooksExist\x2C\n  // The needed emit*() functions.\n  emitDestroy\x2C\n} = require('internal/async_hooks');\n\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\nfunction unenroll(item) {\n  if (item._destroyed)\n    return;\n\n  item._destroyed = true;\n\n  if (item[kHasPrimitive])\n    delete knownTimersById[item[async_id_symbol]];\n\n  // Fewer checks may be possible\x2C but these cover everything.\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\n    emitDestroy(item[async_id_symbol]);\n\n  L.remove(item);\n\n  // We only delete refed lists because unrefed ones are incredibly likely\n  // to come from http and be recreated shortly after.\n  // TODO: Long-term this could instead be handled by creating an internal\n  // clearTimeout that makes it clear that the list should not be deleted.\n  // That function could then be used by http and other similar modules.\n  if (item[kRefed]) {\n    // Compliment truncation during insert().\n    const msecs = MathTrunc(item._idleTimeout);\n    const list = timerListMap[msecs];\n    if (list !== undefined && L.isEmpty(list)) {\n      debug('unenroll: list empty');\n      timerListQueue.removeAt(list.priorityQueuePosition);\n      delete timerListMap[list.msecs];\n    }\n\n    decRefCount();\n  }\n\n  // If active is called later\x2C then we want to make sure not to insert again\n  item._idleTimeout = -1;\n}\n\n// Make a regular object able to act as a timer by setting some properties.\n// This function does not start the timer\x2C see `active()`.\n// Using existing objects as timers slightly reduces object overhead.\nfunction enroll(item\x2C msecs) {\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // If this item was already in a list somewhere\n  // then we should unenroll it from that\n  if (item._idleNext) unenroll(item);\n\n  L.init(item);\n  item._idleTimeout = msecs;\n}\n\n\n/**\n * Schedules the execution of a one-time `callback`\n * after `after` milliseconds.\n * @param {Function} callback\n * @param {number} [after]\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Timeout}\n */\nfunction setTimeout(callback\x2C after\x2C arg1\x2C arg2\x2C arg3) {\n  validateFunction(callback\x2C 'callback');\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n    case 2:\n      break;\n    case 3:\n      args = [arg1];\n      break;\n    case 4:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 5; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        args[i - 2] = arguments[i];\n      }\n      break;\n  }\n\n  const timeout = new Timeout(callback\x2C after\x2C args\x2C false\x2C true);\n  insert(timeout\x2C timeout._idleTimeout);\n\n  return timeout;\n}\n\nObjectDefineProperty(setTimeout\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!timersPromises)\n      timersPromises = require('timers/promises');\n    return timersPromises.setTimeout;\n  }\x2C\n});\n\n/**\n * Cancels a timeout.\n * @param {Timeout | string | number} timer\n * @returns {void}\n */\nfunction clearTimeout(timer) {\n  if (timer && timer._onTimeout) {\n    timer._onTimeout = null;\n    unenroll(timer);\n    return;\n  }\n  if (typeof timer === 'number' || typeof timer === 'string') {\n    const timerInstance = knownTimersById[timer];\n    if (timerInstance !== undefined) {\n      timerInstance._onTimeout = null;\n      unenroll(timerInstance);\n    }\n  }\n}\n\n/**\n * Schedules repeated execution of `callback`\n * every `repeat` milliseconds.\n * @param {Function} callback\n * @param {number} [repeat]\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Timeout}\n */\nfunction setInterval(callback\x2C repeat\x2C arg1\x2C arg2\x2C arg3) {\n  validateFunction(callback\x2C 'callback');\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n    case 2:\n      break;\n    case 3:\n      args = [arg1];\n      break;\n    case 4:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 5; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        args[i - 2] = arguments[i];\n      }\n      break;\n  }\n\n  const timeout = new Timeout(callback\x2C repeat\x2C args\x2C true\x2C true);\n  insert(timeout\x2C timeout._idleTimeout);\n\n  return timeout;\n}\n\n/**\n * Cancels an interval.\n * @param {Timeout | string | number} timer\n * @returns {void}\n */\nfunction clearInterval(timer) {\n  // clearTimeout and clearInterval can be used to clear timers created from\n  // both setTimeout and setInterval\x2C as specified by HTML Living Standard:\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\n  clearTimeout(timer);\n}\n\nTimeout.prototype.close = function() {\n  clearTimeout(this);\n  return this;\n};\n\nTimeout.prototype[SymbolDispose] = function() {\n  clearTimeout(this);\n};\n\n/**\n * Coerces a `Timeout` to a primitive.\n * @returns {number}\n */\nTimeout.prototype[SymbolToPrimitive] = function() {\n  const id = this[async_id_symbol];\n  if (!this[kHasPrimitive]) {\n    this[kHasPrimitive] = true;\n    knownTimersById[id] = this;\n  }\n  return id;\n};\n\n/**\n * Schedules the immediate execution of `callback`\n * after I/O events' callbacks.\n * @param {Function} callback\n * @param {any} [arg1]\n * @param {any} [arg2]\n * @param {any} [arg3]\n * @returns {Immediate}\n */\nfunction setImmediate(callback\x2C arg1\x2C arg2\x2C arg3) {\n  validateFunction(callback\x2C 'callback');\n\n  let i\x2C args;\n  switch (arguments.length) {\n    // fast cases\n    case 1:\n      break;\n    case 2:\n      args = [arg1];\n      break;\n    case 3:\n      args = [arg1\x2C arg2];\n      break;\n    default:\n      args = [arg1\x2C arg2\x2C arg3];\n      for (i = 4; i < arguments.length; i++) {\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\n        args[i - 1] = arguments[i];\n      }\n      break;\n  }\n\n  return new Immediate(callback\x2C args);\n}\n\nObjectDefineProperty(setImmediate\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!timersPromises)\n      timersPromises = require('timers/promises');\n    return timersPromises.setImmediate;\n  }\x2C\n});\n\n/**\n * Cancels an immediate.\n * @param {Immediate} immediate\n * @returns {void}\n */\nfunction clearImmediate(immediate) {\n  if (!immediate || immediate._destroyed)\n    return;\n\n  immediateInfo[kCount]--;\n  immediate._destroyed = true;\n\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0) {\n    // We need to use the binding as the receiver for fast API calls.\n    binding.toggleImmediateRef(false);\n  }\n  immediate[kRefed] = null;\n\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\n    emitDestroy(immediate[async_id_symbol]);\n  }\n\n  immediate._onImmediate = null;\n\n  immediateQueue.remove(immediate);\n}\n\nImmediate.prototype[SymbolDispose] = function() {\n  clearImmediate(this);\n};\n\nmodule.exports = timers = {\n  setTimeout\x2C\n  clearTimeout\x2C\n  setImmediate\x2C\n  clearImmediate\x2C\n  setInterval\x2C\n  clearInterval\x2C\n  _unrefActive: deprecate(\n    unrefActive\x2C\n    'timers._unrefActive() is deprecated.' +\n    ' Please use timeout.refresh() instead.'\x2C\n    'DEP0127')\x2C\n  active: deprecate(\n    active\x2C\n    'timers.active() is deprecated. Please use timeout.refresh() instead.'\x2C\n    'DEP0126')\x2C\n  unenroll: deprecate(\n    unenroll\x2C\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.'\x2C\n    'DEP0096')\x2C\n  enroll: deprecate(\n    enroll\x2C\n    'timers.enroll() is deprecated. Please use setTimeout instead.'\x2C\n    'DEP0095')\x2C\n};\n\nObjectDefineProperties(timers\x2C {\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      timersPromises ??= require('timers/promises');\n      return timersPromises;\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x2563a95929c6,39,0,9716,C0O0C4O9716,,
code-creation,JS,10,48706,0x2563a9593466,689, node:timers:1:1,0x2563a9592940,~
code-source-info,0x2563a9593466,39,0,9716,C0O0C121O1159C127O1172C132O1196C137O1222C142O1239C147O1292C151O1292C155O1292C157O1348C160O1329C166O1367C173O1367C177O1367C179O1679C186O1679C191O1409C197O1428C203O1439C209O1452C215O1488C221O1494C227O1506C233O1524C239O1534C245O1551C251O1571C257O1587C263O1605C269O1623C274O1633C279O1648C285O1658C291O1774C298O1774C303O1728C309O1738C314O1759C319O1812C327O1812C333O1845C348O1846C354O1812C356O1921C363O1921C368O1900C374O1958C375O1958C377O1978C379O2070C386O2070C391O1997C397O2053C403O4763C409O4823C423O4730C428O6707C431O6715C440O6731C444O6787C447O6795C452O6805C456O6820C460O6929C463O6937C468O6947C472O6966C476O7936C482O7996C496O7901C501O8766C504O8776C509O8786C513O8801C517O8844C525O8874C531O8888C537O8904C543O8920C549O8938C555O8953C565O9055C577O8984C597O9129C618O9256C638O9380C652O8859C656O9515C662O9537C668O9610C682O9492C688O9715,,
tick,0x7ee81c5c943e,48761,1,0x7ee81a613550,6,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x19f2a9a75eba
code-creation,JS,10,48882,0x2563a95953ce,29,defineOperation node:internal/util:558:25,0x307edb92af98,~
code-source-info,0x2563a95953ce,16,15723,15900,C0O15750C5O15779C12O15885C22O15750C28O15899,,
code-creation,Eval,10,49117,0x2563a9596d36,5, node:internal/process/execution:1:1,0x2563a9596a20,~
script-source,40,node:internal/process/execution,'use strict';\n\nconst {\n  Symbol\x2C\n  RegExpPrototypeExec\x2C\n  globalThis\x2C\n} = primordials;\n\nconst path = require('path');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET\x2C\n    ERR_EVAL_ESM_CANNOT_PRINT\x2C\n  }\x2C\n} = require('internal/errors');\nconst { pathToFileURL } = require('internal/url');\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\n\nconst {\n  executionAsyncId\x2C\n  clearDefaultTriggerAsyncId\x2C\n  clearAsyncIdStack\x2C\n  hasAsyncIdStack\x2C\n  afterHooksExist\x2C\n  emitAfter\x2C\n  popAsyncContext\x2C\n} = require('internal/async_hooks');\nconst { containsModuleSyntax } = internalBinding('contextify');\nconst { getOptionValue } = require('internal/options');\nconst {\n  makeContextifyScript\x2C runScriptInThisContext\x2C\n} = require('internal/vm');\n// shouldAbortOnUncaughtToggle is a typed array for faster\n// communication with JS.\nconst { shouldAbortOnUncaughtToggle } = internalBinding('util');\n\nfunction tryGetCwd() {\n  try {\n    return process.cwd();\n  } catch {\n    // getcwd(3) can fail if the current working directory has been deleted.\n    // Fall back to the directory name of the (absolute) executable path.\n    // It's not really correct but what are the alternatives?\n    return path.dirname(process.execPath);\n  }\n}\n\nlet evalIndex = 0;\nfunction getEvalModuleUrl() {\n  return pathToFileURL(`${process.cwd()}/[eval${++evalIndex}]`).href;\n}\n\n/**\n * Evaluate an ESM entry point and return the promise that gets fulfilled after\n * it finishes evaluation.\n * @param {string} source Source code the ESM\n * @param {boolean} print Whether the result should be printed.\n * @returns {Promise}\n */\nfunction evalModuleEntryPoint(source\x2C print) {\n  if (print) {\n    throw new ERR_EVAL_ESM_CANNOT_PRINT();\n  }\n  RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\n  return require('internal/modules/run_main').runEntryPointWithESMLoader(\n    (loader) => loader.eval(source\x2C getEvalModuleUrl()\x2C true)\x2C\n  );\n}\n\nfunction evalScript(name\x2C body\x2C breakFirstLine\x2C print\x2C shouldLoadESM = false) {\n  const CJSModule = require('internal/modules/cjs/loader').Module;\n\n  const cwd = tryGetCwd();\n  const origModule = globalThis.module;  // Set e.g. when called from the REPL.\n\n  const module = new CJSModule(name);\n  module.filename = path.join(cwd\x2C name);\n  module.paths = CJSModule._nodeModulePaths(cwd);\n\n  const baseUrl = pathToFileURL(module.filename).href;\n\n  if (getOptionValue('--experimental-detect-module') &&\n    getOptionValue('--input-type') === '' && getOptionValue('--experimental-default-type') === '' &&\n    containsModuleSyntax(body\x2C name)) {\n    return evalModuleEntryPoint(body\x2C print);\n  }\n\n  const runScript = () => {\n    // Create wrapper for cache entry\n    const script = `\n      globalThis.module = module;\n      globalThis.exports = exports;\n      globalThis.__dirname = __dirname;\n      globalThis.require = require;\n      return (main) => main();\n    `;\n    globalThis.__filename = name;\n    RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\n    const result = module._compile(script\x2C `${name}-wrapper`)(() => {\n      const hostDefinedOptionId = Symbol(name);\n      async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\n        const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n        return cascadedLoader.import(specifier\x2C baseUrl\x2C importAttributes);\n      }\n      const script = makeContextifyScript(\n        body\x2C                    // code\n        name\x2C                    // filename\x2C\n        0\x2C                       // lineOffset\n        0\x2C                       // columnOffset\x2C\n        undefined\x2C               // cachedData\n        false\x2C                   // produceCachedData\n        undefined\x2C               // parsingContext\n        hostDefinedOptionId\x2C     // hostDefinedOptionId\n        importModuleDynamically\x2C // importModuleDynamically\n      );\n      return runScriptInThisContext(script\x2C true\x2C !!breakFirstLine);\n    });\n    if (print) {\n      const { log } = require('internal/console/global');\n      log(result);\n    }\n\n    if (origModule !== undefined)\n      globalThis.module = origModule;\n  };\n\n  if (shouldLoadESM) {\n    require('internal/modules/run_main').runEntryPointWithESMLoader(runScript);\n    return;\n  }\n  runScript();\n}\n\nconst exceptionHandlerState = {\n  captureFn: null\x2C\n  reportFlag: false\x2C\n};\n\nfunction setUncaughtExceptionCaptureCallback(fn) {\n  if (fn === null) {\n    exceptionHandlerState.captureFn = fn;\n    shouldAbortOnUncaughtToggle[0] = 1;\n    process.report.reportOnUncaughtException = exceptionHandlerState.reportFlag;\n    return;\n  }\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn'\x2C ['Function'\x2C 'null']\x2C fn);\n  }\n  if (exceptionHandlerState.captureFn !== null) {\n    throw new ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET();\n  }\n  exceptionHandlerState.captureFn = fn;\n  shouldAbortOnUncaughtToggle[0] = 0;\n  exceptionHandlerState.reportFlag =\n    process.report.reportOnUncaughtException === true;\n  process.report.reportOnUncaughtException = false;\n}\n\nfunction hasUncaughtExceptionCaptureCallback() {\n  return exceptionHandlerState.captureFn !== null;\n}\n\nfunction noop() {}\n\n// XXX(joyeecheung): for some reason this cannot be defined at the top-level\n// and exported to be written to process._fatalException\x2C it has to be\n// returned as an *anonymous function* wrapped inside a factory function\x2C\n// otherwise it breaks the test-timers.setInterval async hooks test -\n// this may indicate that node::errors::TriggerUncaughtException() should\n// fix up the callback scope before calling into process._fatalException\x2C\n// or this function should take extra care of the async hooks before it\n// schedules a setImmediate.\nfunction createOnGlobalUncaughtException() {\n  // The C++ land node::errors::TriggerUncaughtException() will\n  // exit the process if it returns false\x2C and continue execution if it\n  // returns true (which indicates that the exception is handled by the user).\n  return (er\x2C fromPromise) => {\n    // It's possible that defaultTriggerAsyncId was set for a constructor\n    // call that threw and was never cleared. So clear it now.\n    clearDefaultTriggerAsyncId();\n\n    const type = fromPromise ? 'unhandledRejection' : 'uncaughtException';\n    process.emit('uncaughtExceptionMonitor'\x2C er\x2C type);\n    if (exceptionHandlerState.captureFn !== null) {\n      exceptionHandlerState.captureFn(er);\n    } else if (!process.emit('uncaughtException'\x2C er\x2C type)) {\n      // If someone handled it\x2C then great. Otherwise\x2C die in C++ land\n      // since that means that we'll exit the process\x2C emit the 'exit' event.\n      try {\n        if (!process._exiting) {\n          process._exiting = true;\n          process.exitCode = kGenericUserError;\n          process.emit('exit'\x2C kGenericUserError);\n        }\n      } catch {\n        // Nothing to be done about it at this point.\n      }\n      return false;\n    }\n\n    // If we handled an error\x2C then make sure any ticks get processed\n    // by ensuring that the next Immediate cycle isn't empty.\n    require('timers').setImmediate(noop);\n\n    // Emit the after() hooks now that the exception has been handled.\n    if (afterHooksExist()) {\n      do {\n        const asyncId = executionAsyncId();\n        if (asyncId === 0)\n          popAsyncContext(0);\n        else\n          emitAfter(asyncId);\n      } while (hasAsyncIdStack());\n    }\n    // And completely empty the id stack\x2C including anything that may be\n    // cached on the native side.\n    clearAsyncIdStack();\n\n    return true;\n  };\n}\n\nfunction readStdin(callback) {\n  process.stdin.setEncoding('utf8');\n\n  let code = '';\n  process.stdin.on('data'\x2C (d) => {\n    code += d;\n  });\n\n  process.stdin.on('end'\x2C () => {\n    callback(code);\n  });\n}\n\nmodule.exports = {\n  readStdin\x2C\n  tryGetCwd\x2C\n  evalModuleEntryPoint\x2C\n  evalScript\x2C\n  onGlobalUncaughtException: createOnGlobalUncaughtException()\x2C\n  setUncaughtExceptionCaptureCallback\x2C\n  hasUncaughtExceptionCaptureCallback\x2C\n};\n
code-source-info,0x2563a9596d36,40,0,8059,C0O0C4O8059,,
code-creation,JS,10,49249,0x2563a9597306,417, node:internal/process/execution:1:1,0x2563a9596cb0,~
code-source-info,0x2563a9597306,40,0,8059,C0O0C131O25C137O35C143O58C149O101C155O101C159O101C161O252C167O252C172O136C177O142C183O168C189O216C195O306C201O306C206O288C212O376C215O376C220O350C225O352C231O557C237O557C242O414C248O434C254O464C260O485C266O504C272O523C278O536C284O623C287O623C292O598C298O681C304O681C309O662C315O770C321O770C326O720C332O742C338O919C341O919C346O887C352O1293C353O1293C355O4393C359O4393C361O7831C368O7852C374O7865C380O7878C386O7902C390O7943C399O7980C405O8019C411O7846C416O8058,,
code-creation,Eval,10,49445,0x2563a95991d6,5, node:internal/vm:1:1,0x2563a9598fb0,~
script-source,41,node:internal/vm,'use strict';\n\nconst {\n  ReflectApply\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  ContextifyScript\x2C\n  compileFunction\x2C\n} = internalBinding('contextify');\nconst {\n  runInContext\x2C\n} = ContextifyScript.prototype;\nconst {\n  vm_dynamic_import_default_internal\x2C\n  vm_dynamic_import_main_context_default\x2C\n  vm_dynamic_import_no_callback\x2C\n  vm_dynamic_import_missing_flag\x2C\n} = internalBinding('symbols');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst {\n  getOptionValue\x2C\n} = require('internal/options');\nconst {\n  privateSymbols: {\n    contextify_context_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\n/**\n * Checks if the given object is a context object.\n * @param {object} object - The object to check.\n * @returns {boolean} - Returns true if the object is a context object\x2C else false.\n */\nfunction isContext(object) {\n  return object[contextify_context_private_symbol] !== undefined;\n}\n\n/**\n * Retrieves the host-defined option ID based on the provided importModuleDynamically and hint.\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback | undefined} importModuleDynamically -\n * The importModuleDynamically function or undefined.\n * @param {string} hint - The hint for the option ID.\n * @returns {symbol | import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} - The host-defined option\n * ID.\n */\nfunction getHostDefinedOptionId(importModuleDynamically\x2C hint) {\n  if (importModuleDynamically === vm_dynamic_import_main_context_default ||\n      importModuleDynamically === vm_dynamic_import_default_internal) {\n    return importModuleDynamically;\n  }\n\n  if (importModuleDynamically !== undefined) {\n    // Check that it's either undefined or a function before we pass\n    // it into the native constructor.\n    validateFunction(importModuleDynamically\x2C\n                     'options.importModuleDynamically');\n  }\n  if (importModuleDynamically === undefined) {\n    // We need a default host defined options that are the same for all\n    // scripts not needing custom module callbacks so that the isolate\n    // compilation cache can be hit.\n    return vm_dynamic_import_no_callback;\n  }\n  // We should've thrown here immediately when we introduced\n  // --experimental-vm-modules and importModuleDynamically\x2C but since\n  // users are already using this callback to throw a similar error\x2C\n  // we also defer the error to the time when an actual import() is called\n  // to avoid breaking them. To ensure that the isolate compilation\n  // cache can still be hit\x2C use a constant sentinel symbol here.\n  if (!getOptionValue('--experimental-vm-modules')) {\n    return vm_dynamic_import_missing_flag;\n  }\n\n  return Symbol(hint);\n}\n\n/**\n * Registers a dynamically imported module for customization.\n * @param {string} referrer - The path of the referrer module.\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} importModuleDynamically - The\n * dynamically imported module function to be registered.\n */\nfunction registerImportModuleDynamically(referrer\x2C importModuleDynamically) {\n  // If it's undefined or certain known symbol\x2C there's no customization so\n  // no need to register anything.\n  if (importModuleDynamically === undefined ||\n      importModuleDynamically === vm_dynamic_import_main_context_default ||\n      importModuleDynamically === vm_dynamic_import_default_internal) {\n    return;\n  }\n  const { importModuleDynamicallyWrap } = require('internal/vm/module');\n  const { registerModule } = require('internal/modules/esm/utils');\n  registerModule(referrer\x2C {\n    __proto__: null\x2C\n    importModuleDynamically:\n      importModuleDynamicallyWrap(importModuleDynamically)\x2C\n  });\n}\n\n/**\n * Compiles a function from the given code string.\n * @param {string} code - The code string to compile.\n * @param {string} filename - The filename to use for the compiled function.\n * @param {number} lineOffset - The line offset to use for the compiled function.\n * @param {number} columnOffset - The column offset to use for the compiled function.\n * @param {Buffer} [cachedData=undefined] - The cached data to use for the compiled function.\n * @param {boolean} produceCachedData - Whether to produce cached data for the compiled function.\n * @param {ReturnType<import('vm').createContext} [parsingContext=undefined] - The parsing context to use for the\n * compiled function.\n * @param {object[]} [contextExtensions=[]] - An array of context extensions to use for the compiled function.\n * @param {string[]} [params] - An optional array of parameter names for the compiled function.\n * @param {symbol} hostDefinedOptionId - A symbol referenced by the field `host_defined_option_symbol`.\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} [importModuleDynamically] -\n * A function to use for dynamically importing modules.\n * @returns {object} An object containing the compiled function and any associated data.\n * @throws {TypeError} If any of the arguments are of the wrong type.\n * @throws {ERR_INVALID_ARG_TYPE} If the parsing context is not a valid context object.\n */\nfunction internalCompileFunction(\n  code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\n  cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\n  params\x2C hostDefinedOptionId\x2C importModuleDynamically) {\n  const result = compileFunction(\n    code\x2C\n    filename\x2C\n    lineOffset\x2C\n    columnOffset\x2C\n    cachedData\x2C\n    produceCachedData\x2C\n    parsingContext\x2C\n    contextExtensions\x2C\n    params\x2C\n    hostDefinedOptionId\x2C\n  );\n\n  if (produceCachedData) {\n    result.function.cachedDataProduced = result.cachedDataProduced;\n  }\n\n  if (result.cachedData) {\n    result.function.cachedData = result.cachedData;\n  }\n\n  if (typeof result.cachedDataRejected === 'boolean') {\n    result.function.cachedDataRejected = result.cachedDataRejected;\n  }\n\n  registerImportModuleDynamically(result.function\x2C importModuleDynamically);\n\n  return result;\n}\n\n/**\n * Creates a contextify script.\n * @param {string} code - The code of the script.\n * @param {string} filename - The filename of the script.\n * @param {number} lineOffset - The line offset of the script.\n * @param {number} columnOffset - The column offset of the script.\n * @param {Buffer} cachedData - The cached data of the script.\n * @param {boolean} produceCachedData - Indicates whether to produce cached data.\n * @param {object} parsingContext - The parsing context of the script.\n * @param {number} hostDefinedOptionId - The host-defined option ID.\n * @param {boolean} importModuleDynamically - Indicates whether to import modules dynamically.\n * @returns {ContextifyScript} The created contextify script.\n */\nfunction makeContextifyScript(code\x2C\n                              filename\x2C\n                              lineOffset\x2C\n                              columnOffset\x2C\n                              cachedData\x2C\n                              produceCachedData\x2C\n                              parsingContext\x2C\n                              hostDefinedOptionId\x2C\n                              importModuleDynamically) {\n  let script;\n  // Calling `ReThrow()` on a native TryCatch does not generate a new\n  // abort-on-uncaught-exception check. A dummy try/catch in JS land\n  // protects against that.\n  try { // eslint-disable-line no-useless-catch\n    script = new ContextifyScript(code\x2C\n                                  filename\x2C\n                                  lineOffset\x2C\n                                  columnOffset\x2C\n                                  cachedData\x2C\n                                  produceCachedData\x2C\n                                  parsingContext\x2C\n                                  hostDefinedOptionId);\n  } catch (e) {\n    throw e; /* node-do-not-add-exception-line */\n  }\n\n  registerImportModuleDynamically(script\x2C importModuleDynamically);\n  return script;\n}\n\n/**\n * Runs a script in the current context.\n * Internal version of `vm.Script.prototype.runInThisContext()` which skips argument validation.\n * @param {ReturnType<makeContextifyScript>} script - The script to run.\n * @param {boolean} displayErrors - Whether to display errors.\n * @param {boolean} breakOnFirstLine - Whether to break on the first line.\n */\nfunction runScriptInThisContext(script\x2C displayErrors\x2C breakOnFirstLine) {\n  return ReflectApply(\n    runInContext\x2C\n    script\x2C\n    [\n      null\x2C                // sandbox - use current context\n      -1\x2C                  // timeout\n      displayErrors\x2C       // displayErrors\n      false\x2C               // breakOnSigint\n      breakOnFirstLine\x2C    // breakOnFirstLine\n    ]\x2C\n  );\n}\n\nmodule.exports = {\n  getHostDefinedOptionId\x2C\n  internalCompileFunction\x2C\n  isContext\x2C\n  makeContextifyScript\x2C\n  registerImportModuleDynamically\x2C\n  runScriptInThisContext\x2C\n};\n
code-source-info,0x2563a95991d6,41,0,8732,C0O0C4O8732,,
code-creation,JS,10,49613,0x2563a95995b6,256, node:internal/vm:1:1,0x2563a9599150,~
code-source-info,0x2563a95995b6,41,0,8732,C0O0C76O25C82O41C88O118C91O118C96O77C102O97C108O177C111O194C116O159C122O364C125O364C130O215C136O253C142O295C148O328C154O424C160O424C165O402C171O487C177O487C182O467C188O592C191O592C196O542C201O548C207O8559C214O8580C220O8606C226O8633C232O8646C238O8670C244O8705C250O8574C255O8731,,
code-creation,JS,10,49723,0x2563a959a69e,5,createOnGlobalUncaughtException node:internal/process/execution:175:41,0x2563a9596fc8,~
code-source-info,0x2563a959a69e,40,5839,7622,C0O6061C4O7620,,
tick,0x7ee81c4c24ef,49829,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x19f2a9a76037
code-creation,Eval,10,49900,0x2563a959b5ce,5, node:internal/process/warning:1:1,0x2563a959b2e8,~
script-source,42,node:internal/process/warning,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Error\x2C\n  ErrorPrototypeToString\x2C\n  ErrorCaptureStackTrace\x2C\n  String\x2C\n  SafeSet\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n} = require('internal/options');\n\nconst assert = require('internal/assert');\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\n\n// Lazily loaded\nlet fs;\nlet fd;\nlet warningFile;\nlet options;\nlet traceWarningHelperShown = false;\n\nfunction resetForSerialization() {\n  if (fd !== undefined) {\n    process.removeListener('exit'\x2C closeFdOnExit);\n  }\n  fd = undefined;\n  warningFile = undefined;\n  traceWarningHelperShown = false;\n}\n\nfunction lazyOption() {\n  // This will load `warningFile` only once. If the flag is not set\x2C\n  // `warningFile` will be set to an empty string.\n  if (warningFile === undefined) {\n    options = require('internal/options');\n    if (options.getOptionValue('--diagnostic-dir') !== '') {\n      warningFile = options.getOptionValue('--diagnostic-dir');\n    }\n    if (options.getOptionValue('--redirect-warnings') !== '') {\n      warningFile = options.getOptionValue('--redirect-warnings');\n    } else {\n      warningFile = '';\n    }\n  }\n  return warningFile;\n}\n\n// If we can't write to stderr\x2C we'd like to make this a noop\x2C\n// so use console.error.\nlet error;\nfunction writeOut(message) {\n  if (!error) {\n    error = require('internal/console/global').error;\n  }\n  error(message);\n}\n\nfunction closeFdOnExit() {\n  try {\n    fs.closeSync(fd);\n  } catch {\n    // Continue regardless of error.\n  }\n}\n\nfunction writeToFile(message) {\n  if (fd === undefined) {\n    fs = require('fs');\n    try {\n      fd = fs.openSync(warningFile\x2C 'a');\n    } catch {\n      return writeOut(message);\n    }\n    process.on('exit'\x2C closeFdOnExit);\n  }\n  fs.appendFile(fd\x2C `${message}\\n`\x2C (err) => {\n    if (err) {\n      writeOut(message);\n    }\n  });\n}\n\nfunction doEmitWarning(warning) {\n  process.emit('warning'\x2C warning);\n}\n\nlet disableWarningSet;\n\nfunction onWarning(warning) {\n  if (!disableWarningSet) {\n    disableWarningSet = new SafeSet();\n    const disableWarningValues = getOptionValue('--disable-warning');\n    for (let i = 0; i < disableWarningValues.length; i++) {\n      disableWarningSet.add(disableWarningValues[i]);\n    }\n  }\n  if ((warning?.code && disableWarningSet.has(warning.code)) ||\n      (warning?.name && disableWarningSet.has(warning.name))) return;\n\n  if (!(warning instanceof Error)) return;\n\n  const isDeprecation = warning.name === 'DeprecationWarning';\n  if (isDeprecation && process.noDeprecation) return;\n  const trace = process.traceProcessWarnings ||\n                (isDeprecation && process.traceDeprecation);\n  let msg = `(${process.release.name}:${process.pid}) `;\n  if (warning.code)\n    msg += `[${warning.code}] `;\n  if (trace && warning.stack) {\n    msg += `${warning.stack}`;\n  } else {\n    msg +=\n      typeof warning.toString === 'function' ?\n        `${warning.toString()}` :\n        ErrorPrototypeToString(warning);\n  }\n  if (typeof warning.detail === 'string') {\n    msg += `\\n${warning.detail}`;\n  }\n  if (!trace && !traceWarningHelperShown) {\n    const flag = isDeprecation ? '--trace-deprecation' : '--trace-warnings';\n    const argv0 = require('path').basename(process.argv0 || 'node'\x2C '.exe');\n    msg += `\\n(Use \\`${argv0} ${flag} ...\\` to show where the warning ` +\n           'was created)';\n    traceWarningHelperShown = true;\n  }\n  const warningFile = lazyOption();\n  if (warningFile) {\n    return writeToFile(msg);\n  }\n  writeOut(msg);\n}\n\n// process.emitWarning(error)\n// process.emitWarning(str[\x2C type[\x2C code]][\x2C ctor])\n// process.emitWarning(str[\x2C options])\nfunction emitWarning(warning\x2C type\x2C code\x2C ctor) {\n  // Fast path to avoid memory allocation\x2C\n  // this doesn't eliminate the other if a few lines below\n  if (process.noDeprecation && type === 'DeprecationWarning') {\n    return;\n  }\n  let detail;\n  if (type !== null && typeof type === 'object' && !ArrayIsArray(type)) {\n    ctor = type.ctor;\n    code = type.code;\n    if (typeof type.detail === 'string')\n      detail = type.detail;\n    type = type.type || 'Warning';\n  } else if (typeof type === 'function') {\n    ctor = type;\n    code = undefined;\n    type = 'Warning';\n  }\n  if (type !== undefined)\n    validateString(type\x2C 'type');\n  if (typeof code === 'function') {\n    ctor = code;\n    code = undefined;\n  } else if (code !== undefined) {\n    validateString(code\x2C 'code');\n  }\n  if (typeof warning === 'string') {\n    warning = createWarningObject(warning\x2C type\x2C code\x2C ctor\x2C detail);\n  } else if (!(warning instanceof Error)) {\n    throw new ERR_INVALID_ARG_TYPE('warning'\x2C ['Error'\x2C 'string']\x2C warning);\n  }\n  if (warning.name === 'DeprecationWarning') {\n    if (process.noDeprecation)\n      return;\n    if (process.throwDeprecation) {\n      // Delay throwing the error to guarantee that all former warnings were\n      // properly logged.\n      return process.nextTick(() => {\n        throw warning;\n      });\n    }\n  }\n  process.nextTick(doEmitWarning\x2C warning);\n}\n\nfunction emitWarningSync(warning\x2C type\x2C code\x2C ctor) {\n  process.emit('warning'\x2C createWarningObject(warning\x2C type\x2C code\x2C ctor));\n}\n\nfunction createWarningObject(warning\x2C type\x2C code\x2C ctor\x2C detail) {\n  assert(typeof warning === 'string');\n  // Improve error creation performance by skipping the error frames.\n  // They are added in the `captureStackTrace()` function below.\n  const tmpStackLimit = Error.stackTraceLimit;\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  warning = new Error(warning);\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpStackLimit;\n  warning.name = String(type || 'Warning');\n  if (code !== undefined) warning.code = code;\n  if (detail !== undefined) warning.detail = detail;\n  ErrorCaptureStackTrace(warning\x2C ctor || process.emitWarning);\n  return warning;\n}\n\nmodule.exports = {\n  emitWarning\x2C\n  emitWarningSync\x2C\n  onWarning\x2C\n  resetForSerialization\x2C\n};\n
code-source-info,0x2563a959b5ce,42,0,6053,C0O0C4O6053,,
code-creation,JS,10,50002,0x2563a959babe,291, node:internal/process/warning:1:1,0x2563a959b548,~
code-source-info,0x2563a959babe,42,0,6053,C0O0C123O25C129O41C135O50C141O76C147O102C153O112C159O169C165O169C170O149C176O214C182O214C186O214C188O330C194O330C199O259C204O265C210O294C216O385C222O385C227O366C233O439C234O439C236O447C237O447C239O455C240O455C242O472C243O472C245O511C246O511C248O1366C249O1366C251O2018C252O2018C254O5959C261O5980C267O5995C273O6014C279O6027C285O5974C290O6052,,
code-creation,JS,10,50089,0x2563a959c736,40,setupTaskQueue node:internal/process/task_queues:162:17,0x2563a95841c0,~
code-source-info,0x2563a959c736,35,4018,4262,C0O4082C5O4082C8O4159C16O4159C20O4207C27O4222C33O4238C39O4258,,
code-creation,JS,10,50108,0x2563a959cdbe,14,listenForRejections node:internal/process/promises:482:29,0x2563a9585f78,~
code-source-info,0x2563a959cdbe,36,13416,13472,C0O13423C8O13423C13O13471,,
code-creation,JS,10,50160,0x2563a959d156,62,getTimerCallbacks node:internal/timers:432:27,0x19f2a9a78ac0,~
code-source-info,0x2563a959d156,13,13004,18520,C0O13004C28O13266C35O13266C40O13266C42O18464C49O18477C55O18499C61O18518,,
code-creation,Eval,10,50381,0x2563a959ddde,5, node:internal/source_map/source_map_cache:1:1,0x2563a959da68,~
script-source,43,node:internal/source_map/source_map_cache,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  JSONParse\x2C\n  ObjectKeys\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\n  debug = fn;\n});\n\nconst { validateBoolean } = require('internal/validators');\nconst {\n  setSourceMapsEnabled: setSourceMapsNative\x2C\n} = internalBinding('errors');\nconst {\n  setInternalPrepareStackTrace\x2C\n} = require('internal/errors');\nconst { getLazy } = require('internal/util');\n\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\n// be purged automatically:\nconst getCjsSourceMapCache = getLazy(() => {\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\n  return new IterableWeakMap();\n});\n\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\nconst esmSourceMapCache = new SafeMap();\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\nconst generatedSourceMapCache = new SafeMap();\nconst kLeadingProtocol = /^\\w+:\\/\\//;\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\n\nconst { isAbsolute } = require('path');\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\n\nlet SourceMap;\n\n// This is configured with --enable-source-maps during pre-execution.\nlet sourceMapsEnabled = false;\nfunction getSourceMapsEnabled() {\n  return sourceMapsEnabled;\n}\n\nfunction setSourceMapsEnabled(val) {\n  validateBoolean(val\x2C 'val');\n\n  setSourceMapsNative(val);\n  if (val) {\n    const {\n      prepareStackTraceWithSourceMaps\x2C\n    } = require('internal/source_map/prepare_stack_trace');\n    setInternalPrepareStackTrace(prepareStackTraceWithSourceMaps);\n  } else if (sourceMapsEnabled !== undefined) {\n    // Reset prepare stack trace callback only when disabling source maps.\n    const {\n      defaultPrepareStackTrace\x2C\n    } = require('internal/errors');\n    setInternalPrepareStackTrace(defaultPrepareStackTrace);\n  }\n\n  sourceMapsEnabled = val;\n}\n\nfunction extractSourceURLMagicComment(content) {\n  let match;\n  let matchSourceURL;\n  // A while loop is used here to get the last occurrence of sourceURL.\n  // This is needed so that we don't match sourceURL in string literals.\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\n    matchSourceURL = match;\n  }\n  if (matchSourceURL == null) {\n    return null;\n  }\n  let sourceURL = matchSourceURL.groups.sourceURL;\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  return sourceURL;\n}\n\nfunction extractSourceMapURLMagicComment(content) {\n  let match;\n  let lastMatch;\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\n  // This is needed so that we don't match sourceMappingURL in string literals.\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\n    lastMatch = match;\n  }\n  if (lastMatch == null) {\n    return null;\n  }\n  return lastMatch.groups.sourceMappingURL;\n}\n\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n  const { normalizeReferrerURL } = require('internal/modules/helpers');\n  filename = normalizeReferrerURL(filename);\n  if (filename === undefined) {\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\n    return;\n  }\n\n  if (sourceMapURL === undefined) {\n    sourceMapURL = extractSourceMapURLMagicComment(content);\n  }\n\n  // Bail out when there is no source map url.\n  if (typeof sourceMapURL !== 'string') {\n    return;\n  }\n\n  // FIXME: callers should obtain sourceURL from v8 and pass it\n  // rather than leaving it undefined and extract by regex.\n  if (sourceURL === undefined) {\n    sourceURL = extractSourceURLMagicComment(content);\n  }\n\n  const data = dataFromUrl(filename\x2C sourceMapURL);\n  const url = data ? null : sourceMapURL;\n  if (cjsModuleInstance) {\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\n      __proto__: null\x2C\n      filename\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    });\n  } else if (isGeneratedSource) {\n    const entry = {\n      __proto__: null\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    };\n    generatedSourceMapCache.set(filename\x2C entry);\n    if (sourceURL) {\n      generatedSourceMapCache.set(sourceURL\x2C entry);\n    }\n  } else {\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\n    // "modules/esm" context.\n    const entry = {\n      __proto__: null\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    };\n    esmSourceMapCache.set(filename\x2C entry);\n    if (sourceURL) {\n      esmSourceMapCache.set(sourceURL\x2C entry);\n    }\n  }\n}\n\nfunction maybeCacheGeneratedSourceMap(content) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n\n  const sourceURL = extractSourceURLMagicComment(content);\n  if (sourceURL === null) {\n    return;\n  }\n  try {\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\n  } catch (err) {\n    // This can happen if the filename is not a valid URL.\n    // If we fail to cache the source map\x2C we should not fail the whole process.\n    debug(err);\n  }\n}\n\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\n  try {\n    const url = new URL(sourceMappingURL);\n    switch (url.protocol) {\n      case 'data:':\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\n      default:\n        debug(`unknown protocol ${url.protocol}`);\n        return null;\n    }\n  } catch (err) {\n    debug(err);\n    // If no scheme is present\x2C we assume we are dealing with a file path.\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\n    return sourceMapFromFile(mapURL);\n  }\n}\n\n// Cache the length of each line in the file that a source map was extracted\n// from. This allows translation from byte offset V8 coverage reports\x2C\n// to line/column offset Source Map V3.\nfunction lineLengths(content) {\n  const contentLength = content.length;\n  const output = [];\n  let lineLength = 0;\n  for (let i = 0; i < contentLength; i++\x2C lineLength++) {\n    const codePoint = StringPrototypeCodePointAt(content\x2C i);\n\n    // We purposefully keep \\r as part of the line-length calculation\x2C in\n    // cases where there is a \\r\\n separator\x2C so that this can be taken into\n    // account in coverage calculations.\n    // codepoints for \\n (new line)\x2C \\u2028 (line separator) and \\u2029 (paragraph separator)\n    if (codePoint === 10 || codePoint === 0x2028 || codePoint === 0x2029) {\n      ArrayPrototypePush(output\x2C lineLength);\n      lineLength = -1; // To not count the matched codePoint such as \\n character\n    }\n  }\n  ArrayPrototypePush(output\x2C lineLength);\n  return output;\n}\n\n\nfunction sourceMapFromFile(mapURL) {\n  try {\n    const fs = require('fs');\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\n    const data = JSONParse(content);\n    return sourcesToAbsolute(mapURL\x2C data);\n  } catch (err) {\n    debug(err);\n    return null;\n  }\n}\n\n// data:[<mediatype>][;base64]\x2C<data> see:\n// https://tools.ietf.org/html/rfc2397#section-2\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\n  const contentType = splitFormat[0];\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\n  if (contentType === 'application/json') {\n    const decodedData = base64 ?\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\n    try {\n      const parsedData = JSONParse(decodedData);\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\n    } catch (err) {\n      debug(err);\n      return null;\n    }\n  } else {\n    debug(`unknown content-type ${contentType}`);\n    return null;\n  }\n}\n\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\n// the sources are resolved relative to the SourceMap (like resolving script\n// src in a html document).\n// If the sources are absolute paths\x2C the sources are converted to absolute file URLs.\nfunction sourcesToAbsolute(baseURL\x2C data) {\n  data.sources = data.sources.map((source) => {\n    source = (data.sourceRoot || '') + source;\n    if (isAbsolute(source)) {\n      return pathToFileURL(source).href;\n    }\n    return new URL(source\x2C baseURL).href;\n  });\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\n  // be updated to noop.\n  data.sourceRoot = '';\n  return data;\n}\n\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\n// it important that they do not call out to any user-provided code\x2C including\n// built-in prototypes that might have been tampered with.\n\n// Get serialized representation of source-map cache\x2C this is used\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\nfunction sourceMapCacheToObject() {\n  const obj = { __proto__: null };\n\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\n    obj[k] = v;\n  }\n\n  appendCJSCache(obj);\n\n  if (ObjectKeys(obj).length === 0) {\n    return undefined;\n  }\n  return obj;\n}\n\nfunction appendCJSCache(obj) {\n  for (const value of getCjsSourceMapCache()) {\n    obj[value.filename] = {\n      __proto__: null\x2C\n      lineLengths: value.lineLengths\x2C\n      data: value.data\x2C\n      url: value.url\x2C\n    };\n  }\n}\n\nfunction findSourceMap(sourceURL) {\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  if (!SourceMap) {\n    SourceMap = require('internal/source_map/source_map').SourceMap;\n  }\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\n  if (entry === undefined) {\n    for (const value of getCjsSourceMapCache()) {\n      const filename = value.filename;\n      const cachedSourceURL = value.sourceURL;\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\n        entry = value;\n      }\n    }\n  }\n  if (entry === undefined) {\n    return undefined;\n  }\n  let sourceMap = entry.sourceMap;\n  if (sourceMap === undefined) {\n    sourceMap = new SourceMap(entry.data\x2C { lineLengths: entry.lineLengths });\n    entry.sourceMap = sourceMap;\n  }\n  return sourceMap;\n}\n\nmodule.exports = {\n  findSourceMap\x2C\n  getSourceMapsEnabled\x2C\n  setSourceMapsEnabled\x2C\n  maybeCacheSourceMap\x2C\n  maybeCacheGeneratedSourceMap\x2C\n  sourceMapCacheToObject\x2C\n};\n
code-source-info,0x2563a959ddde,43,0,10976,C0O0C4O10976,,
code-creation,JS,10,50569,0x2563a959e576,467, node:internal/source_map/source_map_cache:1:1,0x2563a959dd58,~
code-source-info,0x2563a959e576,43,0,10976,C0O0C162O25C168O47C174O60C180O74C186O97C191O108C197O138C203O270C209O270C214O259C220O301C226O301C231O334C244O335C250O301C252O415C258O415C263O395C269O504C272O504C277O479C283O575C289O575C294O541C300O623C306O623C311O611C316O857C321O857C325O857C327O1088C329O1088C334O1088C336O1221C338O1221C343O1221C345O1261C350O1261C352O1312C357O1312C359O1402C364O1402C366O1471C372O1471C377O1456C383O1534C389O1534C394O1496C400O1511C406O1526C412O1564C413O1564C415O1670C416O1670C418O10808C425O10829C431O10846C437O10870C443O10894C449O10917C455O10949C461O10823C466O10975,,
code-creation,Eval,10,50890,0x2563a95a02b6,5, node:internal/modules/helpers:1:1,0x2563a959ff10,~
script-source,44,node:internal/modules/helpers,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n} = require('internal/errors').codes;\nconst { BuiltinModule } = require('internal/bootstrap/realm');\n\nconst { validateString } = require('internal/validators');\nconst fs = require('fs'); // Import all of `fs` so that it can be monkey-patched.\nconst internalFS = require('internal/fs/utils');\nconst path = require('path');\nconst { pathToFileURL\x2C fileURLToPath } = require('internal/url');\nconst assert = require('internal/assert');\n\nconst { getOptionValue } = require('internal/options');\nconst { setOwnProperty } = require('internal/util');\nconst { inspect } = require('internal/util/inspect');\n\nconst {\n  privateSymbols: {\n    require_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\nconst { canParse: URLCanParse } = internalBinding('url');\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\n/** @typedef {import('internal/modules/cjs/loader.js').Module} Module */\n\n/**\n * Cache for storing resolved real paths of modules.\n * In order to minimize unnecessary lstat() calls\x2C this cache is a list of known-real paths.\n * Set to an empty Map to reset.\n * @type {Map<string\x2C string>}\n */\nconst realpathCache = new SafeMap();\n/**\n * Resolves the path of a given `require` specifier\x2C following symlinks.\n * @param {string} requestPath The `require` specifier\n */\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath\x2C {\n    [internalFS.realpathCacheKey]: realpathCache\x2C\n  });\n}\n\n/** @type {Set<string>} */\nlet cjsConditions;\n/**\n * Define the conditions that apply to the CommonJS loader.\n */\nfunction initializeCjsConditions() {\n  const userConditions = getOptionValue('--conditions');\n  const noAddons = getOptionValue('--no-addons');\n  const addonConditions = noAddons ? [] : ['node-addons'];\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\n  cjsConditions = new SafeSet([\n    'require'\x2C\n    'node'\x2C\n    ...addonConditions\x2C\n    ...userConditions\x2C\n  ]);\n}\n\n/**\n * Get the conditions that apply to the CommonJS loader.\n */\nfunction getCjsConditions() {\n  if (cjsConditions === undefined) {\n    initializeCjsConditions();\n  }\n  return cjsConditions;\n}\n\n/**\n * Provide one of Node.js' public modules to user code.\n * @param {string} id - The identifier/specifier of the builtin module to load\n * @param {string} request - The module requiring or importing the builtin module\n */\nfunction loadBuiltinModule(id\x2C request) {\n  if (!BuiltinModule.canBeRequiredByUsers(id)) {\n    return;\n  }\n  /** @type {import('internal/bootstrap/realm.js').BuiltinModule} */\n  const mod = BuiltinModule.map.get(id);\n  debug('load built-in module %s'\x2C request);\n  // compileForPublicLoader() throws if canBeRequiredByUsers is false:\n  mod.compileForPublicLoader();\n  return mod;\n}\n\n/** @type {Module} */\nlet $Module = null;\n/**\n * Import the Module class on first use.\n */\nfunction lazyModule() {\n  $Module = $Module || require('internal/modules/cjs/loader').Module;\n  return $Module;\n}\n\n/**\n * Invoke with `makeRequireFunction(module)` where `module` is the `Module` object to use as the context for the\n * `require()` function.\n * Use redirects to set up a mapping from a policy and restrict dependencies.\n */\nconst urlToFileCache = new SafeMap();\n/**\n * Create the module-scoped `require` function to pass into CommonJS modules.\n * @param {Module} mod - The module to create the `require` function for.\n * @param {ReturnType<import('internal/policy/manifest.js').Manifest['getDependencyMapper']>} redirects\n * @typedef {(specifier: string) => unknown} RequireFunction\n */\nfunction makeRequireFunction(mod\x2C redirects) {\n  // lazy due to cycle\n  const Module = lazyModule();\n  if (mod instanceof Module !== true) {\n    throw new ERR_INVALID_ARG_TYPE('mod'\x2C 'Module'\x2C mod);\n  }\n\n  /** @type {RequireFunction} */\n  let require;\n  if (redirects) {\n    const id = mod.filename || mod.id;\n    const conditions = getCjsConditions();\n    const { resolve\x2C reaction } = redirects;\n    require = function require(specifier) {\n      let missing = true;\n      const destination = resolve(specifier\x2C conditions);\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const { href\x2C protocol } = destination;\n        if (protocol === 'node:') {\n          const specifier = destination.pathname;\n\n          if (BuiltinModule.canBeRequiredByUsers(specifier)) {\n            const mod = loadBuiltinModule(specifier\x2C href);\n            return mod.exports;\n          }\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n        } else if (protocol === 'file:') {\n          let filepath = urlToFileCache.get(href);\n          if (!filepath) {\n            filepath = fileURLToPath(destination);\n            urlToFileCache.set(href\x2C filepath);\n          }\n          return mod[require_private_symbol](mod\x2C filepath);\n        }\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          id\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x2C\n        ));\n      }\n      return mod[require_private_symbol](mod\x2C specifier);\n    };\n  } else {\n    require = function require(path) {\n      // When no policy manifest\x2C the original prototype.require is sustained\n      return mod.require(path);\n    };\n  }\n\n  /**\n   * The `resolve` method that gets attached to module-scope `require`.\n   * @param {string} request\n   * @param {Parameters<Module['_resolveFilename']>[3]} options\n   */\n  function resolve(request\x2C options) {\n    validateString(request\x2C 'request');\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n\n  require.resolve = resolve;\n\n  /**\n   * The `paths` method that gets attached to module-scope `require`.\n   * @param {string} request\n   */\n  function paths(request) {\n    validateString(request\x2C 'request');\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n\n  resolve.paths = paths;\n\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\n\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n\n  require.cache = Module._cache;\n\n  return require;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF\x2C the UTF-16 BOM.\n * @param {string} content\n */\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n\n/**\n * Add built-in modules to a global or REPL scope object.\n * @param {Record<string\x2C unknown>} object - The object such as `globalThis` to add the built-in modules to.\n * @param {string} dummyModuleName - The label representing the set of built-in modules to add.\n */\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('internal/modules/cjs/loader').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name\x2C '_') ||\n        StringPrototypeIncludes(name\x2C '/') ||\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object\x2C name\x2C {\n      __proto__: null\x2C\n      get: () => {\n        const lib = dummyModule.require(name);\n\n        try {\n          // Override the current getter/setter and set up a new\n          // non-enumerable property.\n          ObjectDefineProperty(object\x2C name\x2C {\n            __proto__: null\x2C\n            get: () => lib\x2C\n            set: setReal\x2C\n            configurable: true\x2C\n            enumerable: false\x2C\n          });\n        } catch {\n          // If the property is no longer configurable\x2C ignore the error.\n        }\n\n        return lib;\n      }\x2C\n      set: setReal\x2C\n      configurable: true\x2C\n      enumerable: false\x2C\n    });\n  });\n}\n\n/**\n * Normalize the referrer name as a URL.\n * If it's a string containing an absolute path or a URL it's normalized as\n * a URL string.\n * Otherwise it's returned as undefined.\n * @param {string | null | undefined} referrerName\n * @returns {string | undefined}\n */\nfunction normalizeReferrerURL(referrerName) {\n  if (referrerName === null || referrerName === undefined) {\n    return undefined;\n  }\n\n  if (typeof referrerName === 'string') {\n    if (path.isAbsolute(referrerName)) {\n      return pathToFileURL(referrerName).href;\n    }\n\n    if (StringPrototypeStartsWith(referrerName\x2C 'file://') ||\n        URLCanParse(referrerName)) {\n      return referrerName;\n    }\n\n    return undefined;\n  }\n\n  assert.fail('Unreachable code reached by ' + inspect(referrerName));\n}\n\n/**\n * @param {string|undefined} url URL to convert to filename\n */\nfunction urlToFilename(url) {\n  if (url && StringPrototypeStartsWith(url\x2C 'file://')) {\n    return fileURLToPath(url);\n  }\n  return url;\n}\n\n// Whether we have started executing any user-provided CJS code.\n// This is set right before we call the wrapped CJS code (not after\x2C\n// in case we are half-way in the execution when internals check this).\n// Used for internal assertions.\nlet _hasStartedUserCJSExecution = false;\n// Similar to _hasStartedUserCJSExecution but for ESM. This is set\n// right before ESM evaluation in the default ESM loader. We do not\n// update this during vm SourceTextModule execution because at that point\n// some user code must already have been run to execute code via vm\n// there is little value checking whether any user JS code is run anyway.\nlet _hasStartedUserESMExecution = false;\n\n/**\n * Load a public built-in module. ID may or may not be prefixed by `node:` and\n * will be normalized.\n * @param {string} id ID of the built-in to be loaded.\n * @returns {object|undefined} exports of the built-in. Undefined if the built-in\n * does not exist.\n */\nfunction getBuiltinModule(id) {\n  validateString(id\x2C 'id');\n  const normalizedId = BuiltinModule.normalizeRequirableId(id);\n  return normalizedId ? require(normalizedId) : undefined;\n}\n\nmodule.exports = {\n  addBuiltinLibsToObject\x2C\n  getBuiltinModule\x2C\n  getCjsConditions\x2C\n  initializeCjsConditions\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n  toRealPath\x2C\n  hasStartedUserCJSExecution() {\n    return _hasStartedUserCJSExecution;\n  }\x2C\n  setHasStartedUserCJSExecution() {\n    _hasStartedUserCJSExecution = true;\n  }\x2C\n  hasStartedUserESMExecution() {\n    return _hasStartedUserESMExecution;\n  }\x2C\n  setHasStartedUserESMExecution() {\n    _hasStartedUserESMExecution = true;\n  }\x2C\n  urlToFilename\x2C\n};\n
code-source-info,0x2563a95a02b6,44,0,11695,C0O0C4O11695,,
code-creation,JS,10,51080,0x2563a95a0bae,617, node:internal/modules/helpers:1:1,0x2563a95a0230,~
code-source-info,0x2563a95a0bae
tick,0x7ee81c08e1a7,51104,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x19f2a9a761b9
tick,0x7ee81bee9f6f,51976,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x2563a95a0cdb,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a761b9
code-creation,Eval,10,52328,0x2563a95a4a66,5, node:fs:1:1,0x2563a95a34f8,~
script-source,45,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  Boolean\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\x2C\n} = constants;\n\nconst pathModule = require('path');\nconst { isAbsolute } = pathModule;\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst binding = internalBinding('fs');\n\nconst { createBlobFromFilePath } = require('internal/blob');\n\nconst { Buffer } = require('buffer');\nconst { isBuffer: BufferIsBuffer } = Buffer;\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_ACCESS_DENIED\x2C\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n  AbortError\x2C\n  UVException\x2C\n} = require('internal/errors');\n\nconst {\n  FSReqCallback\x2C\n  statValues\x2C\n} = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n  kEmptyObject\x2C\n  promisify: {\n    custom: kCustomPromisifiedSymbol\x2C\n  }\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  defineLazyProperties\x2C\n} = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  handleErrorFromBinding\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isInt32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateString\x2C\n  kValidateObjectAllowNullable\x2C\n} = require('internal/validators');\n\nconst permission = require('internal/process/permission');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\nlet kResistStopPropagation;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nconst isWindows = process.platform === 'win32';\nconst isOSX = process.platform === 'darwin';\n\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isInt32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void}\n */\nfunction accessSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  validateFunction(callback\x2C 'cb');\n\n  function suppressedCallback(err) {\n    callback(err ? false : true);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\n  __proto__: null\x2C\n  value: function exists(path) { // eslint-disable-line func-name-matching\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\x2C\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n\n  return binding.existsSync(pathModule.toNamespacedPath(path));\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\n  // wise\x2C similar to the promise based version (less peak memory and chunked\n  // stringify operations vs multiple C++/JS boundary crossings).\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\n      // the result and reuse the buffer instead of allocating a new one.\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C { flag: 'r' });\n  const ReadFileContext = require('internal/fs/read/context');\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               0o666\x2C\n               req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C true /* shouldNotThrow */);\n  if (stats === undefined && !isUserFd) {\n    fs.closeSync(fd);\n    throw new UVException();\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\n    if (!isInt32(path)) {\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\n    }\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  binding.close(fd);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               mode\x2C\n               req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n\n  return binding.open(\n    pathModule.toNamespacedPath(path)\x2C\n    stringToFlags(flags)\x2C\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\n  );\n}\n\n/**\n * @param {string | Buffer | URL } path\n * @param {{\n *   type?: string;\n *   }} [options]\n * @returns {Promise<Blob>}\n */\nfunction openAsBlob(path\x2C options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const type = options.type || '';\n  validateString(type\x2C 'options.type');\n  // The underlying implementation here returns the Blob synchronously for now.\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\n  // this API returns a Promise.\n  path = getValidatedPath(path);\n  return PromiseResolve(createBlobFromFilePath(pathModule.toNamespacedPath(path)\x2C { type }));\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number | {\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @param {number} length\n * @param {number | bigint | null} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  let params = null;\n  if (arguments.length <= 4) {\n    if (arguments.length === 4) {\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n      callback = length;\n      params = offsetOrOptions;\n    } else if (arguments.length === 3) {\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\n      if (!isArrayBufferView(buffer)) {\n        // This is fs.read(fd\x2C params\x2C callback)\n        params = buffer;\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\n      }\n      callback = offsetOrOptions;\n    } else {\n      // This is fs.read(fd\x2C callback)\n      callback = buffer;\n      buffer = Buffer.alloc(16384);\n    }\n\n    if (params !== undefined) {\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n    ({\n      offset = 0\x2C\n      length = buffer?.byteLength - offset\x2C\n      position = null\x2C\n    } = params ?? kEmptyObject);\n  }\n\n  validateBuffer(buffer);\n  validateFunction(callback\x2C 'cb');\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number | {\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  let offset = offsetOrOptions;\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\n    if (offsetOrOptions !== undefined) {\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offsetOrOptions ?? kEmptyObject);\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback ||= position;\n  validateFunction(callback\x2C 'cb');\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {number | object} [offsetOrOptions]\n * @param {number} [length]\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number;\n *   buffer?: Buffer | TypedArray | DataView\n *   ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    callback ||= position || length || offset;\n    validateFunction(callback\x2C 'cb');\n\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n    return;\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = buffer;\n  validateEncoding(str\x2C length);\n  callback = position;\n  validateFunction(callback\x2C 'cb');\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | null;\n *   }} [offsetOrOptions]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback ||= position;\n  validateFunction(callback\x2C 'cb');\n\n  if (buffers.length === 0) {\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\n  __proto__: null\x2C\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\x2C\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (buffers.length === 0) {\n    return 0;\n  }\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C\n                 req);\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  binding.rename(\n    pathModule.toNamespacedPath(oldPath)\x2C\n    pathModule.toNamespacedPath(newPath)\x2C\n  );\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  validateFunction(callback\x2C 'cb');\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  let ret;\n\n  try {\n    ret = fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  binding.ftruncate(fd\x2C len);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          binding.rmdir(path\x2C req);\n          return;\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  binding.rmdir(pathModule.toNamespacedPath(path));\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  path = getValidatedPath(path);\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  path = getValidatedPath(path);\n  options = validateRmOptionsSync(path\x2C options\x2C false);\n\n  lazyLoadRimraf();\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  binding.fdatasync(fd);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  binding.fsync(fd);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const result = binding.mkdir(\n    pathModule.toNamespacedPath(path)\x2C\n    parseFileMode(mode\x2C 'mode')\x2C\n    recursive\x2C\n  );\n\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\n * This function does not validate `basePath` as a directory. It is passed directly to\n * `binding.readdir`.\n * @param {string} basePath\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\n * @returns {string[] | Dirent[]}\n */\nfunction readdirSyncRecursive(basePath\x2C options) {\n  const withFileTypes = Boolean(options.withFileTypes);\n  const encoding = options.encoding;\n\n  const readdirResults = [];\n  const pathsQueue = [basePath];\n\n  function read(path) {\n    const readdirResult = binding.readdir(\n      pathModule.toNamespacedPath(path)\x2C\n      encoding\x2C\n      withFileTypes\x2C\n    );\n\n    if (readdirResult === undefined) {\n      return;\n    }\n\n    if (withFileTypes) {\n      // Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\n      // The first array is the names\x2C and the second array is the types.\n      // They are guaranteed to be the same length; hence\x2C setting `length` to the length\n      // of the first array within the result.\n      const length = readdirResult[0].length;\n      for (let i = 0; i < length; i++) {\n        const dirent = getDirent(path\x2C readdirResult[0][i]\x2C readdirResult[1][i]);\n        ArrayPrototypePush(readdirResults\x2C dirent);\n        if (dirent.isDirectory()) {\n          ArrayPrototypePush(pathsQueue\x2C pathModule.join(dirent.parentPath\x2C dirent.name));\n        }\n      }\n    } else {\n      for (let i = 0; i < readdirResult.length; i++) {\n        const resultPath = pathModule.join(path\x2C readdirResult[i]);\n        const relativeResultPath = pathModule.relative(basePath\x2C resultPath);\n        const stat = binding.internalModuleStat(resultPath);\n        ArrayPrototypePush(readdirResults\x2C relativeResultPath);\n        // 1 indicates directory\n        if (stat === 1) {\n          ArrayPrototypePush(pathsQueue\x2C resultPath);\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < pathsQueue.length; i++) {\n    read(pathsQueue[i]);\n  }\n\n  return readdirResults;\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Dirent[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    callback(null\x2C readdirSyncRecursive(path\x2C options));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\n                  !!options.withFileTypes\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    return readdirSyncRecursive(path\x2C options);\n  }\n\n  const result = binding.readdir(\n    pathModule.toNamespacedPath(path)\x2C\n    options.encoding\x2C\n    !!options.withFileTypes\x2C\n  );\n\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n  if (permission.isEnabled() && !permission.has('fs.read'\x2C path)) {\n    callback(new ERR_ACCESS_DENIED('Access to this API has been restricted'\x2C 'FileSystemRead'\x2C path));\n    return;\n  }\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  validateFunction(callback\x2C 'cb');\n  path = getValidatedPath(path);\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = (err\x2C stats) => {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(err\x2C getStatFsFromBinding(stats));\n  };\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{\n *   bigint?: boolean;\n *   }} [options]\n * @returns {Stats | undefined}\n */\nfunction fstatSync(fd\x2C options = { bigint: false }) {\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C false);\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats | undefined}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  if (permission.isEnabled() && !permission.has('fs.read'\x2C path)) {\n    throw new ERR_ACCESS_DENIED('Access to this API has been restricted'\x2C 'FileSystemRead'\x2C path);\n  }\n  const stats = binding.lstat(\n    pathModule.toNamespacedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const stats = binding.stat(\n    pathModule.toNamespacedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n  if (stats === undefined) {\n    return undefined;\n  }\n  return getStatsFromBinding(stats);\n}\n\nfunction statfsSync(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint);\n  return getStatFsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  return binding.readlink(\n    pathModule.toNamespacedPath(path)\x2C\n    options.encoding\x2C\n  );\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n        return;\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n      return;\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch {\n      // Continue regardless of error.\n    }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(destination\x2C\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        throw new ERR_ACCESS_DENIED('relative symbolic link target');\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  binding.symlink(\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n    pathModule.toNamespacedPath(path)\x2C\n    stringToSymlinkType(type)\x2C\n  );\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n               pathModule.toNamespacedPath(newPath)\x2C\n               req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  binding.link(\n    pathModule.toNamespacedPath(existingPath)\x2C\n    pathModule.toNamespacedPath(newPath)\x2C\n  );\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n  binding.unlink(path);\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  if (permission.isEnabled()) {\n    callback(new ERR_ACCESS_DENIED('fchmod API is disabled when Permission Model is enabled.'));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  if (permission.isEnabled()) {\n    throw new ERR_ACCESS_DENIED('fchmod API is disabled when Permission Model is enabled.');\n  }\n  binding.fchmod(\n    fd\x2C\n    parseFileMode(mode\x2C 'mode')\x2C\n  );\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  validateFunction(callback\x2C 'cb');\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  let ret;\n  try {\n    ret = fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  binding.chmod(\n    pathModule.toNamespacedPath(path)\x2C\n    mode\x2C\n  );\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.lchown(\n    pathModule.toNamespacedPath(path)\x2C\n    uid\x2C\n    gid\x2C\n  );\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n  if (permission.isEnabled()) {\n    callback(new ERR_ACCESS_DENIED('fchown API is disabled when Permission Model is enabled.'));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  if (permission.isEnabled()) {\n    throw new ERR_ACCESS_DENIED('fchown API is disabled when Permission Model is enabled.');\n  }\n\n  binding.fchown(fd\x2C uid\x2C gid);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.chown(\n    pathModule.toNamespacedPath(path)\x2C\n    uid\x2C\n    gid\x2C\n  );\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C\n                 toUnixTimestamp(mtime)\x2C\n                 req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  binding.utimes(\n    pathModule.toNamespacedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  binding.futimes(\n    fd\x2C\n    toUnixTimestamp(atime\x2C 'atime')\x2C\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\n  );\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  req);\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  binding.lutimes(\n    pathModule.toNamespacedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (!flush) {\n        if (isUserFd) {\n          callback(null);\n        } else {\n          fs.close(fd\x2C callback);\n        }\n      } else {\n        fs.fsync(fd\x2C (syncErr) => {\n          if (syncErr) {\n            if (isUserFd) {\n              callback(syncErr);\n            } else {\n              fs.close(fd\x2C (err) => {\n                callback(aggregateTwoErrors(err\x2C syncErr));\n              });\n            }\n          } else if (isUserFd) {\n            callback(null);\n          } else {\n            fs.close(fd\x2C callback);\n          }\n        });\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   flush?: boolean;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n  const flag = options.flag || 'w';\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   flush?: boolean;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  const flag = options.flag || 'w';\n\n  // C++ fast path for string data and UTF8 encoding\n  if (typeof data === 'string' && (options.encoding === 'utf8' || options.encoding === 'utf-8')) {\n    if (!isInt32(path)) {\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\n    }\n\n    return binding.writeFileUtf8(\n      path\x2C data\x2C\n      stringToFlags(flag)\x2C\n      parseFileMode(options.mode\x2C 'mode'\x2C 0o666)\x2C\n    );\n  }\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n\n    if (flush) {\n      fs.fsyncSync(fd);\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   flush?: boolean;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options);\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n\n  let watcher;\n  const watchers = require('internal/fs/watchers');\n  const path = getValidatedPath(filename);\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\n  // e.g. Linux due to the limitations of inotify.\n  if (options.recursive && !isOSX && !isWindows) {\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\n    watcher = new nonNativeWatcher.FSWatcher(options);\n    watcher[watchers.kFSWatchStart](path);\n  } else {\n    watcher = new watchers.FSWatcher();\n    watcher[watchers.kFSWatchStart](path\x2C\n                                    options.persistent\x2C\n                                    options.recursive\x2C\n                                    options.encoding);\n  }\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\x2C\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n  const watchers = require('internal/fs/watchers');\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n  const watchers = require('internal/fs/watchers');\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n    if (out === undefined) {\n      return;\n    }\n    knownHard.add(base);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base) || cache?.get(base) === base) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const baseLong = pathModule.toNamespacedPath(base);\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (stats === undefined) {\n        return;\n      }\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard.add(base);\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks.has(id)) {\n          linkTarget = seenLinks.get(id);\n        }\n      }\n      if (linkTarget === null) {\n        binding.stat(baseLong\x2C false\x2C undefined\x2C true);\n        linkTarget = binding.readlink(baseLong\x2C undefined);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      cache?.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (out === undefined) {\n        return;\n      }\n      knownHard.add(base);\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  return binding.realpath(\n    pathModule.toNamespacedPath(path)\x2C\n    options.encoding\x2C\n  );\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  } else {\n    validateFunction(callback\x2C 'cb');\n  }\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard.has(base)) {\n    fs.lstat(base\x2C (err\x2C stats) => {\n      if (err) return callback(err);\n      knownHard.add(base);\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base)) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard.add(base);\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks.has(id)) {\n        return gotTarget(null\x2C seenLinks.get(id));\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks.set(id\x2C target);\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard.add(base);\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(prefix\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(prefix\x2C options.encoding);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  src = pathModule.toNamespacedPath(src);\n  dest = pathModule.toNamespacedPath(dest);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  binding.copyFile(\n    pathModule.toNamespacedPath(src)\x2C\n    pathModule.toNamespacedPath(dest)\x2C\n    mode\x2C\n  );\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 KiB.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   highWaterMark?: number;\n *   flush?: boolean;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  openAsBlob\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statfs\x2C\n  statSync\x2C\n  statfsSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\x2C\n};\n\ndefineLazyProperties(\n  fs\x2C\n  'internal/fs/dir'\x2C\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\n);\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      promises ??= require('internal/fs/promises').exports;\n      return promises;\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x2563a95a4a66,45,0,86532,C0O0C4O86532,,
code-creation,JS,10,53709,0x2563a95a88ee,3266, node:fs:1:1,0x2563a95a49e0,~
code-source-info,0x2563a95a88ee
tick,0x7ee81c21c8f8,53757,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x2563a95a0cdb,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a761b9
tick,0x7ee81c4e3224,54140,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x2563a95a8d7f,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95a0cdb,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a761b9
code-creation,Eval,10,54320,0x2563a95b464e,5, node:internal/blob:1:1,0x2563a95b41f8,~
script-source,46,node:internal/blob,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  MathMax\x2C\n  MathMin\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  createBlob: _createBlob\x2C\n  createBlobFromFilePath: _createBlobFromFilePath\x2C\n  concat\x2C\n  getDataObject\x2C\n} = internalBinding('blob');\nconst {\n  kMaxLength\x2C\n} = internalBinding('buffer');\n\nconst {\n  TextDecoder\x2C\n  TextEncoder\x2C\n} = require('internal/encoding');\nconst { URL } = require('internal/url');\n\nconst {\n  makeTransferable\x2C\n  kClone\x2C\n  kDeserialize\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\n\nconst {\n  createDeferredPromise\x2C\n  customInspectSymbol: kInspect\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\nconst { inspect } = require('internal/util/inspect');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_STATE\x2C\n    ERR_BUFFER_TOO_LARGE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateDictionary\x2C\n} = require('internal/validators');\n\nconst {\n  CountQueuingStrategy\x2C\n} = require('internal/webstreams/queuingstrategies');\n\nconst { queueMicrotask } = require('internal/process/task_queues');\n\nconst kHandle = Symbol('kHandle');\nconst kType = Symbol('kType');\nconst kLength = Symbol('kLength');\nconst kNotCloneable = Symbol('kNotCloneable');\n\nconst disallowedTypeCharacters = /[^\\u{0020}-\\u{007E}]/u;\n\nlet ReadableStream;\n\nconst enc = new TextEncoder();\nlet dec;\n\n// Yes\x2C lazy loading is annoying but because of circular\n// references between the url\x2C internal/blob\x2C and buffer\n// modules\x2C lazy loading here makes sure that things work.\n\nfunction lazyReadableStream(options) {\n  // eslint-disable-next-line no-global-assign\n  ReadableStream ??=\n    require('internal/webstreams/readablestream').ReadableStream;\n  return new ReadableStream(options);\n}\n\nconst { EOL } = require('internal/constants');\n\nfunction isBlob(object) {\n  return object?.[kHandle] !== undefined;\n}\n\nfunction getSource(source\x2C endings) {\n  if (isBlob(source))\n    return [source.size\x2C source[kHandle]];\n\n  if (isAnyArrayBuffer(source)) {\n    source = new Uint8Array(source);\n  } else if (!isArrayBufferView(source)) {\n    source = `${source}`;\n    if (endings === 'native')\n      source = RegExpPrototypeSymbolReplace(/\\n|\\r\\n/g\x2C source\x2C EOL);\n    source = enc.encode(source);\n  }\n\n  // We copy into a new Uint8Array because the underlying\n  // BackingStores are going to be detached and owned by\n  // the Blob.\n  const { buffer\x2C byteOffset\x2C byteLength } = source;\n  const slice = buffer.slice(byteOffset\x2C byteOffset + byteLength);\n  return [byteLength\x2C new Uint8Array(slice)];\n}\n\nclass Blob {\n  /**\n   * @typedef {string|ArrayBuffer|ArrayBufferView|Blob} SourcePart\n   */\n\n  /**\n   * @param {SourcePart[]} [sources]\n   * @param {{\n   *   endings? : string\x2C\n   *   type? : string\x2C\n   * }} [options]\n   * @constructs {Blob}\n   */\n  constructor(sources = []\x2C options) {\n    if (sources === null ||\n        typeof sources[SymbolIterator] !== 'function' ||\n        typeof sources === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('sources'\x2C 'a sequence'\x2C sources);\n    }\n    validateDictionary(options\x2C 'options');\n    let {\n      type = ''\x2C\n      endings = 'transparent'\x2C\n    } = options ?? kEmptyObject;\n\n    endings = `${endings}`;\n    if (endings !== 'transparent' && endings !== 'native')\n      throw new ERR_INVALID_ARG_VALUE('options.endings'\x2C endings);\n\n    let length = 0;\n    const sources_ = ArrayFrom(sources\x2C (source) => {\n      const { 0: len\x2C 1: src } = getSource(source\x2C endings);\n      length += len;\n      return src;\n    });\n\n    if (length > kMaxLength)\n      throw new ERR_BUFFER_TOO_LARGE(kMaxLength);\n\n    this[kHandle] = _createBlob(sources_\x2C length);\n    this[kLength] = length;\n\n    type = `${type}`;\n    this[kType] = RegExpPrototypeExec(disallowedTypeCharacters\x2C type) !== null ?\n      '' : StringPrototypeToLowerCase(type);\n\n    // eslint-disable-next-line no-constructor-return\n    return makeTransferable(this);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0)\n      return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `Blob ${inspect({\n      size: this.size\x2C\n      type: this.type\x2C\n    }\x2C opts)}`;\n  }\n\n  [kClone]() {\n    if (this[kNotCloneable]) {\n      // We do not currently allow file-backed Blobs to be cloned or passed across\n      // worker threads.\n      throw new ERR_INVALID_STATE.TypeError('File-backed Blobs are not cloneable');\n    }\n    const handle = this[kHandle];\n    const type = this[kType];\n    const length = this[kLength];\n    return {\n      data: { handle\x2C type\x2C length }\x2C\n      deserializeInfo: 'internal/blob:ClonedBlob'\x2C\n    };\n  }\n\n  [kDeserialize]({ handle\x2C type\x2C length }) {\n    this[kHandle] = handle;\n    this[kType] = type;\n    this[kLength] = length;\n  }\n\n  /**\n   * @readonly\n   * @type {string}\n   */\n  get type() {\n    if (!isBlob(this))\n      throw new ERR_INVALID_THIS('Blob');\n    return this[kType];\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get size() {\n    if (!isBlob(this))\n      throw new ERR_INVALID_THIS('Blob');\n    return this[kLength];\n  }\n\n  /**\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [contentType]\n   * @returns {Blob}\n   */\n  slice(start = 0\x2C end = this[kLength]\x2C contentType = '') {\n    if (!isBlob(this))\n      throw new ERR_INVALID_THIS('Blob');\n    if (start < 0) {\n      start = MathMax(this[kLength] + start\x2C 0);\n    } else {\n      start = MathMin(start\x2C this[kLength]);\n    }\n\n    if (end < 0) {\n      end = MathMax(this[kLength] + end\x2C 0);\n    } else {\n      end = MathMin(end\x2C this[kLength]);\n    }\n\n    contentType = `${contentType}`;\n    if (RegExpPrototypeExec(disallowedTypeCharacters\x2C contentType) !== null) {\n      contentType = '';\n    } else {\n      contentType = StringPrototypeToLowerCase(contentType);\n    }\n\n    const span = MathMax(end - start\x2C 0);\n\n    return createBlob(\n      this[kHandle].slice(start\x2C start + span)\x2C\n      span\x2C\n      contentType);\n  }\n\n  /**\n   * @returns {Promise<ArrayBuffer>}\n   */\n  arrayBuffer() {\n    if (!isBlob(this))\n      return PromiseReject(new ERR_INVALID_THIS('Blob'));\n\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n    const reader = this[kHandle].getReader();\n    const buffers = [];\n    const readNext = () => {\n      reader.pull((status\x2C buffer) => {\n        if (status === 0) {\n          // EOS\x2C concat & resolve\n          // buffer should be undefined here\n          resolve(concat(buffers));\n          return;\n        } else if (status < 0) {\n          // The read could fail for many different reasons when reading\n          // from a non-memory resident blob part (e.g. file-backed blob).\n          // The error details the system error code.\n          const error = lazyDOMException('The blob could not be read'\x2C 'NotReadableError');\n          reject(error);\n          return;\n        }\n        if (buffer !== undefined)\n          buffers.push(buffer);\n        queueMicrotask(() => readNext());\n      });\n    };\n    readNext();\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<string>}\n   */\n  async text() {\n    if (!isBlob(this))\n      throw new ERR_INVALID_THIS('Blob');\n\n    dec ??= new TextDecoder();\n\n    return dec.decode(await this.arrayBuffer());\n  }\n\n  bytes() {\n    if (!isBlob(this))\n      throw new ERR_INVALID_THIS('Blob');\n\n    return PromisePrototypeThen(\n      this.arrayBuffer()\x2C\n      (buffer) => new Uint8Array(buffer));\n  }\n\n  /**\n   * @returns {ReadableStream}\n   */\n  stream() {\n    if (!isBlob(this))\n      throw new ERR_INVALID_THIS('Blob');\n\n    const reader = this[kHandle].getReader();\n    return new lazyReadableStream({\n      type: 'bytes'\x2C\n      start(c) {\n        // There really should only be one read at a time so using an\n        // array here is purely defensive.\n        this.pendingPulls = [];\n      }\x2C\n      pull(c) {\n        const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n        this.pendingPulls.push({ resolve\x2C reject });\n        const readNext = () => {\n          reader.pull((status\x2C buffer) => {\n            // If pendingPulls is empty here\x2C the stream had to have\n            // been canceled\x2C and we don't really care about the result.\n            // We can simply exit.\n            if (this.pendingPulls.length === 0) {\n              return;\n            }\n            if (status === 0) {\n              // EOS\n              c.close();\n              // This is to signal the end for byob readers\n              // see https://streams.spec.whatwg.org/#example-rbs-pull\n              c.byobRequest?.respond(0);\n              const pending = this.pendingPulls.shift();\n              pending.resolve();\n              return;\n            } else if (status < 0) {\n              // The read could fail for many different reasons when reading\n              // from a non-memory resident blob part (e.g. file-backed blob).\n              // The error details the system error code.\n              const error = lazyDOMException('The blob could not be read'\x2C 'NotReadableError');\n              const pending = this.pendingPulls.shift();\n              c.error(error);\n              pending.reject(error);\n              return;\n            }\n            // ReadableByteStreamController.enqueue errors if we submit a 0-length\n            // buffer. We need to check for that here.\n            if (buffer !== undefined && buffer.byteLength !== 0) {\n              c.enqueue(new Uint8Array(buffer));\n            }\n            // We keep reading until we either reach EOS\x2C some error\x2C or we\n            // hit the flow rate of the stream (c.desiredSize).\n            queueMicrotask(() => {\n              if (c.desiredSize < 0) {\n                // A manual backpressure check.\n                if (this.pendingPulls.length !== 0) {\n                  // A case of waiting pull finished (= not yet canceled)\n                  const pending = this.pendingPulls.shift();\n                  pending.resolve();\n                }\n                return;\n              }\n              readNext();\n            });\n          });\n        };\n        readNext();\n        return promise;\n      }\x2C\n      cancel(reason) {\n        // Reject any currently pending pulls here.\n        for (const pending of this.pendingPulls) {\n          pending.reject(reason);\n        }\n        this.pendingPulls = [];\n      }\x2C\n    // We set the highWaterMark to 0 because we do not want the stream to\n    // start reading immediately on creation. We want it to wait until read\n    // is called.\n    }\x2C new CountQueuingStrategy({ highWaterMark: 0 }));\n  }\n}\n\nfunction ClonedBlob() {\n  return makeTransferable(ReflectConstruct(function() {}\x2C []\x2C Blob));\n}\nClonedBlob.prototype[kDeserialize] = () => {};\n\nfunction createBlob(handle\x2C length\x2C type = '') {\n  return makeTransferable(ReflectConstruct(function() {\n    this[kHandle] = handle;\n    this[kType] = type;\n    this[kLength] = length;\n  }\x2C []\x2C Blob));\n}\n\nObjectDefineProperty(Blob.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  value: 'Blob'\x2C\n});\n\nObjectDefineProperties(Blob.prototype\x2C {\n  size: kEnumerableProperty\x2C\n  type: kEnumerableProperty\x2C\n  slice: kEnumerableProperty\x2C\n  stream: kEnumerableProperty\x2C\n  text: kEnumerableProperty\x2C\n  arrayBuffer: kEnumerableProperty\x2C\n});\n\nfunction resolveObjectURL(url) {\n  url = `${url}`;\n  try {\n    const parsed = new URL(url);\n\n    const split = StringPrototypeSplit(parsed.pathname\x2C ':');\n\n    if (split.length !== 2)\n      return;\n\n    const {\n      0: base\x2C\n      1: id\x2C\n    } = split;\n\n    if (base !== 'nodedata')\n      return;\n\n    const ret = getDataObject(id);\n\n    if (ret === undefined)\n      return;\n\n    const {\n      0: handle\x2C\n      1: length\x2C\n      2: type\x2C\n    } = ret;\n\n    if (handle !== undefined)\n      return createBlob(handle\x2C length\x2C type);\n  } catch {\n    // If there's an error\x2C it's ignored and nothing is returned\n  }\n}\n\n// TODO(@jasnell): Now that the File class exists\x2C we might consider having\n// this return a `File` instead of a `Blob`.\nfunction createBlobFromFilePath(path\x2C options) {\n  const maybeBlob = _createBlobFromFilePath(path);\n  if (maybeBlob === undefined) {\n    return lazyDOMException('The blob could not be read'\x2C 'NotReadableError');\n  }\n  const { 0: blob\x2C 1: length } = maybeBlob;\n  const res = createBlob(blob\x2C length\x2C options?.type);\n  res[kNotCloneable] = true;\n  return res;\n}\n\nmodule.exports = {\n  Blob\x2C\n  ClonedBlob\x2C\n  createBlob\x2C\n  createBlobFromFilePath\x2C\n  isBlob\x2C\n  kHandle\x2C\n  resolveObjectURL\x2C\n};\n
code-source-info,0x2563a95b464e,46,0,12850,C0O0C4O12850,,
code-creation,JS,10,54550,0x2563a95b55a6,874, node:internal/blob:1:1,0x2563a95b45c8,~
code-source-info,0x2563a95b55a
code-creation,Eval,10,55031,0x2563a95b9436,5, node:internal/encoding:1:1,0x2563a95b9028,~
script-source,47,node:internal/encoding,'use strict';\n\n// An implementation of the WHATWG Encoding Standard\n// https://encoding.spec.whatwg.org\n\nconst {\n  Boolean\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  SafeMap\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_ENCODING_NOT_SUPPORTED\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_THIS\x2C\n  ERR_NO_ICU\x2C\n} = require('internal/errors').codes;\nconst kHandle = Symbol('handle');\nconst kFlags = Symbol('flags');\nconst kEncoding = Symbol('encoding');\nconst kDecoder = Symbol('decoder');\nconst kEncoder = Symbol('encoder');\nconst kFatal = Symbol('kFatal');\nconst kUTF8FastPath = Symbol('kUTF8FastPath');\nconst kIgnoreBOM = Symbol('kIgnoreBOM');\n\nconst {\n  getConstructorOf\x2C\n  customInspectSymbol: inspect\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\n\nconst {\n  validateString\x2C\n  validateObject\x2C\n  kValidateObjectAllowObjectsAndNull\x2C\n} = require('internal/validators');\nconst binding = internalBinding('encoding_binding');\nconst {\n  encodeInto\x2C\n  encodeIntoResults\x2C\n  encodeUtf8String\x2C\n  decodeUTF8\x2C\n} = binding;\n\nconst { Buffer } = require('buffer');\n\nfunction validateEncoder(obj) {\n  if (obj == null || obj[kEncoder] !== true)\n    throw new ERR_INVALID_THIS('TextEncoder');\n}\n\nfunction validateDecoder(obj) {\n  if (obj == null || obj[kDecoder] !== true)\n    throw new ERR_INVALID_THIS('TextDecoder');\n}\n\nconst CONVERTER_FLAGS_FLUSH = 0x1;\nconst CONVERTER_FLAGS_FATAL = 0x2;\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\n\nconst empty = new Uint8Array(0);\n\nconst encodings = new SafeMap([\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\n  ['unicode11utf8'\x2C 'utf-8']\x2C\n  ['unicode20utf8'\x2C 'utf-8']\x2C\n  ['utf8'\x2C 'utf-8']\x2C\n  ['utf-8'\x2C 'utf-8']\x2C\n  ['x-unicode20utf8'\x2C 'utf-8']\x2C\n  ['866'\x2C 'ibm866']\x2C\n  ['cp866'\x2C 'ibm866']\x2C\n  ['csibm866'\x2C 'ibm866']\x2C\n  ['ibm866'\x2C 'ibm866']\x2C\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso88592'\x2C 'iso-8859-2']\x2C\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\n  ['l2'\x2C 'iso-8859-2']\x2C\n  ['latin2'\x2C 'iso-8859-2']\x2C\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso88593'\x2C 'iso-8859-3']\x2C\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\n  ['l3'\x2C 'iso-8859-3']\x2C\n  ['latin3'\x2C 'iso-8859-3']\x2C\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso88594'\x2C 'iso-8859-4']\x2C\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\n  ['l4'\x2C 'iso-8859-4']\x2C\n  ['latin4'\x2C 'iso-8859-4']\x2C\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso88595'\x2C 'iso-8859-5']\x2C\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\n  ['arabic'\x2C 'iso-8859-6']\x2C\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso88596'\x2C 'iso-8859-6']\x2C\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\n  ['elot_928'\x2C 'iso-8859-7']\x2C\n  ['greek'\x2C 'iso-8859-7']\x2C\n  ['greek8'\x2C 'iso-8859-7']\x2C\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso88597'\x2C 'iso-8859-7']\x2C\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\n  ['hebrew'\x2C 'iso-8859-8']\x2C\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso88598'\x2C 'iso-8859-8']\x2C\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\n  ['visual'\x2C 'iso-8859-8']\x2C\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\n  ['logical'\x2C 'iso-8859-8-i']\x2C\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\n  ['iso885910'\x2C 'iso-8859-10']\x2C\n  ['l6'\x2C 'iso-8859-10']\x2C\n  ['latin6'\x2C 'iso-8859-10']\x2C\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\n  ['iso885913'\x2C 'iso-8859-13']\x2C\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\n  ['iso885914'\x2C 'iso-8859-14']\x2C\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\n  ['iso885915'\x2C 'iso-8859-15']\x2C\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\n  ['l9'\x2C 'iso-8859-15']\x2C\n  ['iso-8859-16'\x2C 'iso-8859-16']\x2C\n  ['cskoi8r'\x2C 'koi8-r']\x2C\n  ['koi'\x2C 'koi8-r']\x2C\n  ['koi8'\x2C 'koi8-r']\x2C\n  ['koi8-r'\x2C 'koi8-r']\x2C\n  ['koi8_r'\x2C 'koi8-r']\x2C\n  ['koi8-ru'\x2C 'koi8-u']\x2C\n  ['koi8-u'\x2C 'koi8-u']\x2C\n  ['csmacintosh'\x2C 'macintosh']\x2C\n  ['mac'\x2C 'macintosh']\x2C\n  ['macintosh'\x2C 'macintosh']\x2C\n  ['x-mac-roman'\x2C 'macintosh']\x2C\n  ['dos-874'\x2C 'windows-874']\x2C\n  ['iso-8859-11'\x2C 'windows-874']\x2C\n  ['iso8859-11'\x2C 'windows-874']\x2C\n  ['iso885911'\x2C 'windows-874']\x2C\n  ['tis-620'\x2C 'windows-874']\x2C\n  ['windows-874'\x2C 'windows-874']\x2C\n  ['cp1250'\x2C 'windows-1250']\x2C\n  ['windows-1250'\x2C 'windows-1250']\x2C\n  ['x-cp1250'\x2C 'windows-1250']\x2C\n  ['cp1251'\x2C 'windows-1251']\x2C\n  ['windows-1251'\x2C 'windows-1251']\x2C\n  ['x-cp1251'\x2C 'windows-1251']\x2C\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\n  ['ascii'\x2C 'windows-1252']\x2C\n  ['cp1252'\x2C 'windows-1252']\x2C\n  ['cp819'\x2C 'windows-1252']\x2C\n  ['csisolatin1'\x2C 'windows-1252']\x2C\n  ['ibm819'\x2C 'windows-1252']\x2C\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\n  ['iso8859-1'\x2C 'windows-1252']\x2C\n  ['iso88591'\x2C 'windows-1252']\x2C\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\n  ['l1'\x2C 'windows-1252']\x2C\n  ['latin1'\x2C 'windows-1252']\x2C\n  ['us-ascii'\x2C 'windows-1252']\x2C\n  ['windows-1252'\x2C 'windows-1252']\x2C\n  ['x-cp1252'\x2C 'windows-1252']\x2C\n  ['cp1253'\x2C 'windows-1253']\x2C\n  ['windows-1253'\x2C 'windows-1253']\x2C\n  ['x-cp1253'\x2C 'windows-1253']\x2C\n  ['cp1254'\x2C 'windows-1254']\x2C\n  ['csisolatin5'\x2C 'windows-1254']\x2C\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\n  ['iso8859-9'\x2C 'windows-1254']\x2C\n  ['iso88599'\x2C 'windows-1254']\x2C\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\n  ['l5'\x2C 'windows-1254']\x2C\n  ['latin5'\x2C 'windows-1254']\x2C\n  ['windows-1254'\x2C 'windows-1254']\x2C\n  ['x-cp1254'\x2C 'windows-1254']\x2C\n  ['cp1255'\x2C 'windows-1255']\x2C\n  ['windows-1255'\x2C 'windows-1255']\x2C\n  ['x-cp1255'\x2C 'windows-1255']\x2C\n  ['cp1256'\x2C 'windows-1256']\x2C\n  ['windows-1256'\x2C 'windows-1256']\x2C\n  ['x-cp1256'\x2C 'windows-1256']\x2C\n  ['cp1257'\x2C 'windows-1257']\x2C\n  ['windows-1257'\x2C 'windows-1257']\x2C\n  ['x-cp1257'\x2C 'windows-1257']\x2C\n  ['cp1258'\x2C 'windows-1258']\x2C\n  ['windows-1258'\x2C 'windows-1258']\x2C\n  ['x-cp1258'\x2C 'windows-1258']\x2C\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\n  ['chinese'\x2C 'gbk']\x2C\n  ['csgb2312'\x2C 'gbk']\x2C\n  ['csiso58gb231280'\x2C 'gbk']\x2C\n  ['gb2312'\x2C 'gbk']\x2C\n  ['gb_2312'\x2C 'gbk']\x2C\n  ['gb_2312-80'\x2C 'gbk']\x2C\n  ['gbk'\x2C 'gbk']\x2C\n  ['iso-ir-58'\x2C 'gbk']\x2C\n  ['x-gbk'\x2C 'gbk']\x2C\n  ['gb18030'\x2C 'gb18030']\x2C\n  ['big5'\x2C 'big5']\x2C\n  ['big5-hkscs'\x2C 'big5']\x2C\n  ['cn-big5'\x2C 'big5']\x2C\n  ['csbig5'\x2C 'big5']\x2C\n  ['x-x-big5'\x2C 'big5']\x2C\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\n  ['euc-jp'\x2C 'euc-jp']\x2C\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\n  ['csshiftjis'\x2C 'shift_jis']\x2C\n  ['ms932'\x2C 'shift_jis']\x2C\n  ['ms_kanji'\x2C 'shift_jis']\x2C\n  ['shift-jis'\x2C 'shift_jis']\x2C\n  ['shift_jis'\x2C 'shift_jis']\x2C\n  ['sjis'\x2C 'shift_jis']\x2C\n  ['windows-31j'\x2C 'shift_jis']\x2C\n  ['x-sjis'\x2C 'shift_jis']\x2C\n  ['cseuckr'\x2C 'euc-kr']\x2C\n  ['csksc56011987'\x2C 'euc-kr']\x2C\n  ['euc-kr'\x2C 'euc-kr']\x2C\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\n  ['korean'\x2C 'euc-kr']\x2C\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\n  ['ksc5601'\x2C 'euc-kr']\x2C\n  ['ksc_5601'\x2C 'euc-kr']\x2C\n  ['windows-949'\x2C 'euc-kr']\x2C\n  ['csiso2022kr'\x2C 'replacement']\x2C\n  ['hz-gb-2312'\x2C 'replacement']\x2C\n  ['iso-2022-cn'\x2C 'replacement']\x2C\n  ['iso-2022-cn-ext'\x2C 'replacement']\x2C\n  ['iso-2022-kr'\x2C 'replacement']\x2C\n  ['replacement'\x2C 'replacement']\x2C\n  ['unicodefffe'\x2C 'utf-16be']\x2C\n  ['utf-16be'\x2C 'utf-16be']\x2C\n  ['csunicode'\x2C 'utf-16le']\x2C\n  ['iso-10646-ucs-2'\x2C 'utf-16le']\x2C\n  ['ucs-2'\x2C 'utf-16le']\x2C\n  ['unicode'\x2C 'utf-16le']\x2C\n  ['unicodefeff'\x2C 'utf-16le']\x2C\n  ['utf-16le'\x2C 'utf-16le']\x2C\n  ['utf-16'\x2C 'utf-16le']\x2C\n  ['x-user-defined'\x2C 'x-user-defined']\x2C\n]);\n\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\n// so we have to do this manually\nfunction trimAsciiWhitespace(label) {\n  let s = 0;\n  let e = label.length;\n  while (s < e && (\n    label[s] === '\\u0009' ||\n    label[s] === '\\u000a' ||\n    label[s] === '\\u000c' ||\n    label[s] === '\\u000d' ||\n    label[s] === '\\u0020')) {\n    s++;\n  }\n  while (e > s && (\n    label[e - 1] === '\\u0009' ||\n    label[e - 1] === '\\u000a' ||\n    label[e - 1] === '\\u000c' ||\n    label[e - 1] === '\\u000d' ||\n    label[e - 1] === '\\u0020')) {\n    e--;\n  }\n  return StringPrototypeSlice(label\x2C s\x2C e);\n}\n\nfunction getEncodingFromLabel(label) {\n  const enc = encodings.get(label);\n  if (enc !== undefined) return enc;\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\n}\n\nclass TextEncoder {\n  constructor() {\n    this[kEncoder] = true;\n  }\n\n  get encoding() {\n    validateEncoder(this);\n    return 'utf-8';\n  }\n\n  encode(input = '') {\n    validateEncoder(this);\n    return encodeUtf8String(`${input}`);\n  }\n\n  encodeInto(src\x2C dest) {\n    validateEncoder(this);\n    validateString(src\x2C 'src');\n    if (!dest || !isUint8Array(dest))\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\n\n    encodeInto(src\x2C dest);\n    // We need to read from the binding here since the buffer gets refreshed\n    // from the snapshot.\n    const { 0: read\x2C 1: written } = encodeIntoResults;\n    return { read\x2C written };\n  }\n\n  [inspect](depth\x2C opts) {\n    validateEncoder(this);\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n    const ctor = getConstructorOf(this);\n    const obj = { __proto__: {\n      constructor: ctor === null ? TextEncoder : ctor\x2C\n    } };\n    obj.encoding = this.encoding;\n    // Lazy to avoid circular dependency\n    return require('internal/util/inspect').inspect(obj\x2C opts);\n  }\n}\n\nObjectDefineProperties(\n  TextEncoder.prototype\x2C {\n    'encode': kEnumerableProperty\x2C\n    'encodeInto': kEnumerableProperty\x2C\n    'encoding': kEnumerableProperty\x2C\n    [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'TextEncoder' }\x2C\n  });\n\nconst TextDecoder =\n  internalBinding('config').hasIntl ?\n    makeTextDecoderICU() :\n    makeTextDecoderJS();\n\nfunction makeTextDecoderICU() {\n  const {\n    decode: _decode\x2C\n    getConverter\x2C\n  } = internalBinding('icu');\n\n  class TextDecoder {\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\n      encoding = `${encoding}`;\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n\n      const enc = getEncodingFromLabel(encoding);\n      if (enc === undefined)\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      let flags = 0;\n      if (options !== null) {\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\n      }\n\n      this[kDecoder] = true;\n      this[kFlags] = flags;\n      this[kEncoding] = enc;\n      this[kIgnoreBOM] = Boolean(options?.ignoreBOM);\n      this[kFatal] = Boolean(options?.fatal);\n      // Only support fast path for UTF-8.\n      this[kUTF8FastPath] = enc === 'utf-8';\n      this[kHandle] = undefined;\n\n      if (!this[kUTF8FastPath]) {\n        this.#prepareConverter();\n      }\n    }\n\n    #prepareConverter() {\n      if (this[kHandle] !== undefined) return;\n      const handle = getConverter(this[kEncoding]\x2C this[kFlags]);\n      if (handle === undefined)\n        throw new ERR_ENCODING_NOT_SUPPORTED(this[kEncoding]);\n      this[kHandle] = handle;\n    }\n\n    decode(input = empty\x2C options = kEmptyObject) {\n      validateDecoder(this);\n\n      this[kUTF8FastPath] &&= !(options?.stream);\n\n      if (this[kUTF8FastPath]) {\n        return decodeUTF8(input\x2C this[kIgnoreBOM]\x2C this[kFatal]);\n      }\n\n      this.#prepareConverter();\n\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n\n      let flags = 0;\n      if (options !== null)\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\n\n      return _decode(this[kHandle]\x2C input\x2C flags\x2C this.encoding);\n    }\n  }\n\n  return TextDecoder;\n}\n\nfunction makeTextDecoderJS() {\n  let StringDecoder;\n  function lazyStringDecoder() {\n    if (StringDecoder === undefined)\n      ({ StringDecoder } = require('string_decoder'));\n    return StringDecoder;\n  }\n\n  const kBOMSeen = Symbol('BOM seen');\n\n  function hasConverter(encoding) {\n    return encoding === 'utf-8' || encoding === 'utf-16le';\n  }\n\n  class TextDecoder {\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\n      encoding = `${encoding}`;\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n\n      const enc = getEncodingFromLabel(encoding);\n      if (enc === undefined || !hasConverter(enc))\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\n\n      let flags = 0;\n      if (options !== null) {\n        if (options.fatal) {\n          throw new ERR_NO_ICU('"fatal" option');\n        }\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\n      }\n\n      this[kDecoder] = true;\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\n      this[kHandle] = new (lazyStringDecoder())(enc);\n      this[kFlags] = flags;\n      this[kEncoding] = enc;\n      this[kBOMSeen] = false;\n    }\n\n    decode(input = empty\x2C options = kEmptyObject) {\n      validateDecoder(this);\n      if (isAnyArrayBuffer(input)) {\n        try {\n          input = Buffer.from(input);\n        } catch {\n          input = empty;\n        }\n      } else if (isArrayBufferView(input)) {\n        try {\n          input = Buffer.from(input.buffer\x2C input.byteOffset\x2C\n                              input.byteLength);\n        } catch {\n          input = empty;\n        }\n      } else {\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\n                                       input);\n      }\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\n\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\n        this[kBOMSeen] = false;\n      }\n\n      if (options !== null && options.stream) {\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\n      } else {\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\n      }\n\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\n        this[kHandle].end(input) :\n        this[kHandle].write(input);\n\n      if (result.length > 0 &&\n          !this[kBOMSeen] &&\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\n        // If the very first result in the stream is a BOM\x2C and we are not\n        // explicitly told to ignore it\x2C then we discard it.\n        if (result[0] === '\\ufeff') {\n          result = StringPrototypeSlice(result\x2C 1);\n        }\n        this[kBOMSeen] = true;\n      }\n\n      return result;\n    }\n  }\n\n  return TextDecoder;\n}\n\n// Mix in some shared properties.\nconst sharedProperties = ObjectGetOwnPropertyDescriptors({\n  get encoding() {\n    validateDecoder(this);\n    return this[kEncoding];\n  }\x2C\n\n  get fatal() {\n    validateDecoder(this);\n    return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\n  }\x2C\n\n  get ignoreBOM() {\n    validateDecoder(this);\n    return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\n              CONVERTER_FLAGS_IGNORE_BOM;\n  }\x2C\n\n  [inspect](depth\x2C opts) {\n    validateDecoder(this);\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n    const constructor = getConstructorOf(this) || TextDecoder;\n    const obj = { __proto__: { constructor } };\n    obj.encoding = this.encoding;\n    obj.fatal = this.fatal;\n    obj.ignoreBOM = this.ignoreBOM;\n    if (opts.showHidden) {\n      obj[kFlags] = this[kFlags];\n      obj[kHandle] = this[kHandle];\n    }\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return `${constructor.name} ${inspect(obj)}`;\n  }\x2C\n});\nconst propertiesValues = ObjectValues(sharedProperties);\nfor (let i = 0; i < propertiesValues.length; i++) {\n  // We want to use null-prototype objects to not rely on globally mutable\n  // %Object.prototype%.\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n}\nsharedProperties[inspect].enumerable = false;\n\nObjectDefineProperties(TextDecoder.prototype\x2C {\n  decode: kEnumerableProperty\x2C\n  ...sharedProperties\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: 'TextDecoder'\x2C\n  }\x2C\n});\n\nmodule.exports = {\n  getEncodingFromLabel\x2C\n  TextDecoder\x2C\n  TextEncoder\x2C\n};\n
code-source-info,0x2563a95b9436,47,0,17162,C0O0C4O17162,,
code-creation,JS,10,55347,0x2563a95bda5e,919, node:internal/encoding:1:1,0x2563a95b93b0,~
code-source-info,0x2563a95bda5e
tick,0x7ee819a91eb0,55376,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x2563a95b56ea,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95a8d7f,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95a0cdb,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a761b9
new,MemoryChunk,0x265bfec80000,262144
code-creation,JS,10,55739,0x1537ab9bf6e6,87,makeTextDecoderICU node:internal/encoding:394:28,0x2563a95b95a8,~
code-source-info,0x1537ab9bf6e6,47,10963,12794,C0O10963C11O11023C19O11023C24O10990C30O11003C84O12773C86O12792,,
code-creation,Eval,10,55941,0x265bfec83196,5, node:internal/webstreams/queuingstrategies:1:1,0x265bfec82e80,~
script-source,48,node:internal/webstreams/queuingstrategies,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_THIS\x2C\n    ERR_MISSING_OPTION\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  customInspect\x2C\n  isBrandCheck\x2C\n  kType\x2C\n  kState\x2C\n} = require('internal/webstreams/util');\n\nconst {\n  validateObject\x2C\n} = require('internal/validators');\n\nconst isByteLengthQueuingStrategy =\n  isBrandCheck('ByteLengthQueuingStrategy');\n\nconst isCountQueuingStrategy =\n  isBrandCheck('CountQueuingStrategy');\n\n/**\n * @callback QueuingStrategySize\n * @param {any} chunk\n * @returns {number}\n */\n\n/**\n * @typedef {{\n *   highWaterMark : number\x2C\n *   size? : QueuingStrategySize\x2C\n * }} QueuingStrategy\n */\n\nconst nameDescriptor = { __proto__: null\x2C value: 'size' };\nconst byteSizeFunction = ObjectDefineProperty(\n  (chunk) => chunk.byteLength\x2C\n  'name'\x2C\n  nameDescriptor\x2C\n);\nconst countSizeFunction = ObjectDefineProperty(() => 1\x2C 'name'\x2C nameDescriptor);\n\nconst getNonWritablePropertyDescriptor = (value) => {\n  return {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value\x2C\n  };\n};\n\n/**\n * @type {QueuingStrategy}\n */\nclass ByteLengthQueuingStrategy {\n  [kType] = 'ByteLengthQueuingStrategy';\n\n  /**\n   * @param {{\n   *   highWaterMark : number\n   * }} init\n   */\n  constructor(init) {\n    validateObject(init\x2C 'init');\n    if (init.highWaterMark === undefined)\n      throw new ERR_MISSING_OPTION('init.highWaterMark');\n\n    // The highWaterMark value is not checked until the strategy\n    // is actually used\x2C per the spec.\n    this[kState] = {\n      highWaterMark: +init.highWaterMark\x2C\n    };\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get highWaterMark() {\n    if (!isByteLengthQueuingStrategy(this))\n      throw new ERR_INVALID_THIS('ByteLengthQueuingStrategy');\n    return this[kState].highWaterMark;\n  }\n\n  /**\n   * @type {QueuingStrategySize}\n   */\n  get size() {\n    if (!isByteLengthQueuingStrategy(this))\n      throw new ERR_INVALID_THIS('ByteLengthQueuingStrategy');\n    return byteSizeFunction;\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      highWaterMark: this.highWaterMark\x2C\n    });\n  }\n}\n\nObjectDefineProperties(ByteLengthQueuingStrategy.prototype\x2C {\n  highWaterMark: kEnumerableProperty\x2C\n  size: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(ByteLengthQueuingStrategy.name)\x2C\n});\n\n/**\n * @type {QueuingStrategy}\n */\nclass CountQueuingStrategy {\n  [kType] = 'CountQueuingStrategy';\n\n  /**\n   * @param {{\n   *   highWaterMark : number\n   * }} init\n   */\n  constructor(init) {\n    validateObject(init\x2C 'init');\n    if (init.highWaterMark === undefined)\n      throw new ERR_MISSING_OPTION('init.highWaterMark');\n\n    // The highWaterMark value is not checked until the strategy\n    // is actually used\x2C per the spec.\n    this[kState] = {\n      highWaterMark: +init.highWaterMark\x2C\n    };\n  }\n\n  /**\n   * @readonly\n   * @type {number}\n   */\n  get highWaterMark() {\n    if (!isCountQueuingStrategy(this))\n      throw new ERR_INVALID_THIS('CountQueuingStrategy');\n    return this[kState].highWaterMark;\n  }\n\n  /**\n   * @type {QueuingStrategySize}\n   */\n  get size() {\n    if (!isCountQueuingStrategy(this))\n      throw new ERR_INVALID_THIS('CountQueuingStrategy');\n    return countSizeFunction;\n  }\n\n  [kInspect](depth\x2C options) {\n    return customInspect(depth\x2C options\x2C this[kType]\x2C {\n      highWaterMark: this.highWaterMark\x2C\n    });\n  }\n}\n\nObjectDefineProperties(CountQueuingStrategy.prototype\x2C {\n  highWaterMark: kEnumerableProperty\x2C\n  size: kEnumerableProperty\x2C\n  [SymbolToStringTag]: getNonWritablePropertyDescriptor(CountQueuingStrategy.name)\x2C\n});\n\nmodule.exports = {\n  ByteLengthQueuingStrategy\x2C\n  CountQueuingStrategy\x2C\n};\n
code-source-info,0x265bfec83196,48,0,3851,C0O0C4O3851,,
code-creation,JS,10,56015,0x265bfec83e86,459, node:internal/webstreams/queuingstrategies:1:1,0x265bfec83110,~
code-source-info,0x265bfec83e86,48,0,3851,C0O0C35O25C40O51C45O75C50O186C53O186C58O129C63O135C69O157C75O283C78O283C83O246C88O258C93O374C96O374C101O320C107O337C112O353C118O362C124O442C127O442C132O422C138O513C141O513C145O513C147O590C150O590C154O590C156O846C161O907C172O907C177O907C179O1017C190O1017C195O1017C197O1114C202O1114C219O1275C239O2146C272O2335C284O2365C290O2394C296O2418C298O2497C304O2438C313O2286C335O2576C355O3423C388O3607C400O3637C406O3666C412O3690C414O3764C420O3710C429O3563C434O3776C441O3797C447O3826C453O3791C458O3850,,
code-creation,JS,10,56025,0x265bfec84196,12,<instance_members_initializer> node:internal/webstreams/queuingstrategies:125:1,0x265bfec835f0,~
code-source-info,0x265bfec84196,48,2544,3561,C3O2585C11O3561,,
code-creation,JS,10,56029,0x265bfec8422e,12,<instance_members_initializer> node:internal/webstreams/queuingstrategies:70:1,0x265bfec83438,~
code-source-info,0x265bfec8422e,48,1238,2284,C3O1284C11O2284,,
tick,0x7ee81c1d2c94,56262,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfec83ee6,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95b57ba,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95a8d7f,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95a0cdb,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a761b9
code-creation,Eval,10,56287,0x265bfec853d6,5, node:internal/webstreams/util:1:1,0x265bfec850a0,~
script-source,49,node:internal/webstreams/util,'use strict';\n\nconst {\n  ArrayBufferPrototypeSlice\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  AsyncIteratorPrototype\x2C\n  FunctionPrototypeCall\x2C\n  MathMax\x2C\n  NumberIsNaN\x2C\n  PromisePrototypeThen\x2C\n  ReflectGet\x2C\n  Symbol\x2C\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OPERATION_FAILED\x2C\n    ERR_INVALID_STATE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  copyArrayBuffer\x2C\n  detachArrayBuffer\x2C\n} = internalBinding('buffer');\n\nconst {\n  inspect\x2C\n} = require('util');\n\nconst {\n  constants: {\n    kPending\x2C\n  }\x2C\n  getPromiseDetails\x2C\n} = internalBinding('util');\n\nconst assert = require('internal/assert');\nconst { isArrayBufferDetached } = require('internal/util');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst kState = Symbol('kState');\nconst kType = Symbol('kType');\n\nconst AsyncIterator = {\n  __proto__: AsyncIteratorPrototype\x2C\n  next: undefined\x2C\n  return: undefined\x2C\n};\n\nfunction extractHighWaterMark(value\x2C defaultHWM) {\n  if (value === undefined) return defaultHWM;\n  value = +value;\n  if (typeof value !== 'number' ||\n      NumberIsNaN(value) ||\n      value < 0)\n    throw new ERR_INVALID_ARG_VALUE.RangeError('strategy.highWaterMark'\x2C value);\n  return value;\n}\n\nfunction extractSizeAlgorithm(size) {\n  if (size === undefined) return () => 1;\n  validateFunction(size\x2C 'strategy.size');\n  return size;\n}\n\nfunction customInspect(depth\x2C options\x2C name\x2C data) {\n  if (depth < 0)\n    return this;\n\n  const opts = {\n    ...options\x2C\n    depth: options.depth == null ? null : options.depth - 1\x2C\n  };\n\n  return `${name} ${inspect(data\x2C opts)}`;\n}\n\n// These are defensive to work around the possibility that\n// the buffer\x2C byteLength\x2C and byteOffset properties on\n// ArrayBuffer and ArrayBufferView's may have been tampered with.\n\nfunction ArrayBufferViewGetBuffer(view) {\n  return ReflectGet(view.constructor.prototype\x2C 'buffer'\x2C view);\n}\n\nfunction ArrayBufferViewGetByteLength(view) {\n  return ReflectGet(view.constructor.prototype\x2C 'byteLength'\x2C view);\n}\n\nfunction ArrayBufferViewGetByteOffset(view) {\n  return ReflectGet(view.constructor.prototype\x2C 'byteOffset'\x2C view);\n}\n\nfunction cloneAsUint8Array(view) {\n  const buffer = ArrayBufferViewGetBuffer(view);\n  const byteOffset = ArrayBufferViewGetByteOffset(view);\n  const byteLength = ArrayBufferViewGetByteLength(view);\n  return new Uint8Array(\n    ArrayBufferPrototypeSlice(buffer\x2C byteOffset\x2C byteOffset + byteLength)\x2C\n  );\n}\n\nfunction isBrandCheck(brand) {\n  return (value) => {\n    return value != null &&\n           value[kState] !== undefined &&\n           value[kType] === brand;\n  };\n}\n\nfunction transferArrayBuffer(buffer) {\n  const res = detachArrayBuffer(buffer);\n  if (res === undefined) {\n    throw new ERR_OPERATION_FAILED.TypeError(\n      'The ArrayBuffer could not be transferred');\n  }\n  return res;\n}\n\nfunction isViewedArrayBufferDetached(view) {\n  return (\n    ArrayBufferViewGetByteLength(view) === 0 &&\n    isArrayBufferDetached(ArrayBufferViewGetBuffer(view))\n  );\n}\n\nfunction dequeueValue(controller) {\n  assert(controller[kState].queue !== undefined);\n  assert(controller[kState].queueTotalSize !== undefined);\n  assert(controller[kState].queue.length);\n  const {\n    value\x2C\n    size\x2C\n  } = ArrayPrototypeShift(controller[kState].queue);\n  controller[kState].queueTotalSize =\n    MathMax(0\x2C controller[kState].queueTotalSize - size);\n  return value;\n}\n\nfunction resetQueue(controller) {\n  assert(controller[kState].queue !== undefined);\n  assert(controller[kState].queueTotalSize !== undefined);\n  controller[kState].queue = [];\n  controller[kState].queueTotalSize = 0;\n}\n\nfunction peekQueueValue(controller) {\n  assert(controller[kState].queue !== undefined);\n  assert(controller[kState].queueTotalSize !== undefined);\n  assert(controller[kState].queue.length);\n  return controller[kState].queue[0].value;\n}\n\nfunction enqueueValueWithSize(controller\x2C value\x2C size) {\n  assert(controller[kState].queue !== undefined);\n  assert(controller[kState].queueTotalSize !== undefined);\n  size = +size;\n  if (typeof size !== 'number' ||\n      size < 0 ||\n      NumberIsNaN(size) ||\n      size === Infinity) {\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\n  }\n  ArrayPrototypePush(controller[kState].queue\x2C { value\x2C size });\n  controller[kState].queueTotalSize += size;\n}\n\n// This implements "invoke a callback function type" for callback functions that return a promise.\n// See https://webidl.spec.whatwg.org/#es-invoking-callback-functions\nasync function invokePromiseCallback(fn\x2C thisArg\x2C ...args) {\n  return FunctionPrototypeCall(fn\x2C thisArg\x2C ...args);\n}\n\nfunction createPromiseCallback(name\x2C fn\x2C thisArg) {\n  validateFunction(fn\x2C name);\n  return (...args) => invokePromiseCallback(fn\x2C thisArg\x2C ...args);\n}\n\nfunction isPromisePending(promise) {\n  if (promise === undefined) return false;\n  const details = getPromiseDetails(promise);\n  return details?.[0] === kPending;\n}\n\nfunction setPromiseHandled(promise) {\n  // Alternatively\x2C we could use the native API\n  // MarkAsHandled\x2C but this avoids the extra boundary cross\n  // and is hopefully faster at the cost of an extra Promise\n  // allocation.\n  PromisePrototypeThen(promise\x2C () => {}\x2C () => {});\n}\n\nasync function nonOpFlush() {}\n\nfunction nonOpStart() {}\n\nasync function nonOpPull() {}\n\nasync function nonOpCancel() {}\n\nasync function nonOpWrite() {}\n\nlet transfer;\nfunction lazyTransfer() {\n  if (transfer === undefined)\n    transfer = require('internal/webstreams/transfer');\n  return transfer;\n}\n\nfunction createAsyncFromSyncIterator(syncIteratorRecord) {\n  const syncIterable = {\n    [SymbolIterator]: () => syncIteratorRecord.iterator\x2C\n  };\n\n  const asyncIterator = (async function* () {\n    return yield* syncIterable;\n  }());\n\n  const nextMethod = asyncIterator.next;\n  return { iterator: asyncIterator\x2C nextMethod\x2C done: false };\n}\n\nfunction getIterator(obj\x2C kind = 'sync'\x2C method) {\n  if (method === undefined) {\n    if (kind === 'async') {\n      method = obj[SymbolAsyncIterator];\n      if (method === undefined) {\n        const syncMethod = obj[SymbolIterator];\n        const syncIteratorRecord = getIterator(obj\x2C 'sync'\x2C syncMethod);\n        return createAsyncFromSyncIterator(syncIteratorRecord);\n      }\n    } else {\n      method = obj[SymbolIterator];\n    }\n  }\n\n  const iterator = FunctionPrototypeCall(method\x2C obj);\n  if (typeof iterator !== 'object' || iterator === null) {\n    throw new ERR_INVALID_STATE.TypeError('The iterator method must return an object');\n  }\n  const nextMethod = iterator.next;\n  return { iterator\x2C nextMethod\x2C done: false };\n}\n\nfunction iteratorNext(iteratorRecord\x2C value) {\n  let result;\n  if (value === undefined) {\n    result = FunctionPrototypeCall(iteratorRecord.nextMethod\x2C iteratorRecord.iterator);\n  } else {\n    result = FunctionPrototypeCall(iteratorRecord.nextMethod\x2C iteratorRecord.iterator\x2C [value]);\n  }\n  if (typeof result !== 'object' || result === null) {\n    throw new ERR_INVALID_STATE.TypeError('The iterator.next() method must return an object');\n  }\n  return result;\n}\n\nmodule.exports = {\n  ArrayBufferViewGetBuffer\x2C\n  ArrayBufferViewGetByteLength\x2C\n  ArrayBufferViewGetByteOffset\x2C\n  AsyncIterator\x2C\n  createPromiseCallback\x2C\n  cloneAsUint8Array\x2C\n  copyArrayBuffer\x2C\n  customInspect\x2C\n  dequeueValue\x2C\n  enqueueValueWithSize\x2C\n  extractHighWaterMark\x2C\n  extractSizeAlgorithm\x2C\n  lazyTransfer\x2C\n  invokePromiseCallback\x2C\n  isBrandCheck\x2C\n  isPromisePending\x2C\n  isViewedArrayBufferDetached\x2C\n  peekQueueValue\x2C\n  resetQueue\x2C\n  setPromiseHandled\x2C\n  transferArrayBuffer\x2C\n  nonOpCancel\x2C\n  nonOpFlush\x2C\n  nonOpPull\x2C\n  nonOpStart\x2C\n  nonOpWrite\x2C\n  getIterator\x2C\n  iteratorNext\x2C\n  kType\x2C\n  kState\x2C\n};\n
code-source-info,0x265bfec853d6,49,0,7685,C0O0C4O7685,,
code-creation,JS,10,56420,0x265bfec861d6,715, node:internal/webstreams/util:1:1,0x265bfec85350,~
code-source-info,0x265bfec861d6,49,0,7685,C0O0C231O25C237O54C243O76C249O99C254O125C260O150C266O161C272O176C278O200C284O214C289O224C295O247C301O265C307O399C315O399C321O312C327O318C333O345C339O371C345O480C349O480C355O438C360O457C366O531C374O531C380O518C386O616C390O616C396O570C402O576C408O593C414O657C422O657C426O657C428O719C436O719C442O693C448O778C456O778C462O756C468O826C472O826C476O826C478O858C482O858C486O858C488O898C500O913C506O945C511O966C518O5401C519O5401C521O7080C529O7101C535O7129C541O7161C547O7193C553O7210C559O7235C565O7256C571O7275C577O7292C583O7308C589O7332C595O7356C601O7380C607O7396C613O7421C619O7437C625O7457C631O7488C637O7506C643O7520C649O7541C655O7564C661O7579C667O7593C673O7606C679O7620C685O7634C691O7649C697O7665C703O7674C709O7095C714O7684,,
code-creation,Eval,10,56747,0x265bfec87f16,5, node:util:1:1,0x265bfec87ac0,~
script-source,50,node:util,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePop\x2C\n  Date\x2C\n  DatePrototypeGetDate\x2C\n  DatePrototypeGetHours\x2C\n  DatePrototypeGetMinutes\x2C\n  DatePrototypeGetMonth\x2C\n  DatePrototypeGetSeconds\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  NumberIsSafeInteger\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeToWellFormed\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_FALSY_VALUE_REJECTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n} = require('internal/errors');\nconst {\n  format\x2C\n  formatWithOptions\x2C\n  inspect\x2C\n  stripVTControlCharacters\x2C\n} = require('internal/util/inspect');\nconst { debuglog } = require('internal/util/debuglog');\nconst {\n  validateFunction\x2C\n  validateNumber\x2C\n  validateString\x2C\n  validateOneOf\x2C\n} = require('internal/validators');\nconst { isBuffer } = require('buffer').Buffer;\nconst types = require('internal/util/types');\nconst binding = internalBinding('util');\n\nconst {\n  deprecate\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName: internalErrorName\x2C\n  promisify\x2C\n  defineLazyProperties\x2C\n} = require('internal/util');\n\nlet abortController;\n\nfunction lazyAbortController() {\n  abortController ??= require('internal/abort_controller');\n  return abortController;\n}\n\nlet internalDeepEqual;\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is boolean}\n */\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is null}\n */\nfunction isNull(arg) {\n  return arg === null;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is (null | undefined)}\n */\nfunction isNullOrUndefined(arg) {\n  return arg === null || arg === undefined;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is number}\n */\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\n/**\n * @param {any} arg\n * @returns {arg is string}\n */\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is symbol}\n */\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is undefined}\n */\nfunction isUndefined(arg) {\n  return arg === undefined;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {a is NonNullable<object>}\n */\nfunction isObject(arg) {\n  return arg !== null && typeof arg === 'object';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} e\n * @returns {arg is Error}\n */\nfunction isError(e) {\n  return ObjectPrototypeToString(e) === '[object Error]' || e instanceof Error;\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is Function}\n */\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\n/**\n * @deprecated since v4.0.0\n * @param {any} arg\n * @returns {arg is (boolean | null | number | string | symbol | undefined)}\n */\nfunction isPrimitive(arg) {\n  return arg === null ||\n         (typeof arg !== 'object' && typeof arg !== 'function');\n}\n\n/**\n * @param {number} n\n * @returns {string}\n */\nfunction pad(n) {\n  return StringPrototypePadStart(n.toString()\x2C 2\x2C '0');\n}\n\n/**\n * @param {string} code\n * @returns {string}\n */\nfunction escapeStyleCode(code) {\n  return `\\u001b[${code}m`;\n}\n\n/**\n * @param {string | string[]} format\n * @param {string} text\n * @returns {string}\n */\nfunction styleText(format\x2C text) {\n  validateString(text\x2C 'text');\n  if (ArrayIsArray(format)) {\n    let left = '';\n    let right = '';\n    for (const key of format) {\n      const formatCodes = inspect.colors[key];\n      if (formatCodes == null) {\n        validateOneOf(key\x2C 'format'\x2C ObjectKeys(inspect.colors));\n      }\n      left += escapeStyleCode(formatCodes[0]);\n      right = `${escapeStyleCode(formatCodes[1])}${right}`;\n    }\n\n    return `${left}${text}${right}`;\n  }\n\n  const formatCodes = inspect.colors[format];\n  if (formatCodes == null) {\n    validateOneOf(format\x2C 'format'\x2C ObjectKeys(inspect.colors));\n  }\n  return `${escapeStyleCode(formatCodes[0])}${text}${escapeStyleCode(formatCodes[1])}`;\n}\n\nconst months = ['Jan'\x2C 'Feb'\x2C 'Mar'\x2C 'Apr'\x2C 'May'\x2C 'Jun'\x2C 'Jul'\x2C 'Aug'\x2C 'Sep'\x2C\n                'Oct'\x2C 'Nov'\x2C 'Dec'];\n\n/**\n * @returns {string}  26 Feb 16:19:34\n */\nfunction timestamp() {\n  const d = new Date();\n  const t = ArrayPrototypeJoin([\n    pad(DatePrototypeGetHours(d))\x2C\n    pad(DatePrototypeGetMinutes(d))\x2C\n    pad(DatePrototypeGetSeconds(d))\x2C\n  ]\x2C ':');\n  return `${DatePrototypeGetDate(d)} ${months[DatePrototypeGetMonth(d)]} ${t}`;\n}\n\nlet console;\n/**\n * Log is just a thin wrapper to console.log that prepends a timestamp\n * @deprecated since v6.0.0\n * @type {(...args: any[]) => void}\n */\nfunction log(...args) {\n  if (!console) {\n    console = require('internal/console/global');\n  }\n  console.log('%s - %s'\x2C timestamp()\x2C format(...args));\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n * @param {Function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {Function} superCtor Constructor function to inherit prototype from.\n * @throws {TypeError} Will error if either constructor is null\x2C or if\n *     the super constructor lacks a prototype.\n */\nfunction inherits(ctor\x2C superCtor) {\n\n  if (ctor === undefined || ctor === null)\n    throw new ERR_INVALID_ARG_TYPE('ctor'\x2C 'Function'\x2C ctor);\n\n  if (superCtor === undefined || superCtor === null)\n    throw new ERR_INVALID_ARG_TYPE('superCtor'\x2C 'Function'\x2C superCtor);\n\n  if (superCtor.prototype === undefined) {\n    throw new ERR_INVALID_ARG_TYPE('superCtor.prototype'\x2C\n                                   'Object'\x2C superCtor.prototype);\n  }\n  ObjectDefineProperty(ctor\x2C 'super_'\x2C {\n    __proto__: null\x2C\n    value: superCtor\x2C\n    writable: true\x2C\n    configurable: true\x2C\n  });\n  ObjectSetPrototypeOf(ctor.prototype\x2C superCtor.prototype);\n}\n\n/**\n * @deprecated since v6.0.0\n * @template T\n * @template S\n * @param {T} target\n * @param {S} source\n * @returns {S extends null ? T : (T & S)}\n */\nfunction _extend(target\x2C source) {\n  // Don't do anything if source isn't an object\n  if (source === null || typeof source !== 'object') return target;\n\n  const keys = ObjectKeys(source);\n  let i = keys.length;\n  while (i--) {\n    target[keys[i]] = source[keys[i]];\n  }\n  return target;\n}\n\nconst callbackifyOnRejected = (reason\x2C cb) => {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means "no error\n  // occurred"\x2C we error-wrap so the callback consumer can distinguish between\n  // "the promise rejected with null" or "the promise fulfilled with undefined".\n  if (!reason) {\n    reason = new ERR_FALSY_VALUE_REJECTION.HideStackFramesError(reason);\n    ErrorCaptureStackTrace(reason\x2C callbackifyOnRejected);\n  }\n  return cb(reason);\n};\n\n/**\n * @template {(...args: any[]) => Promise<any>} T\n * @param {T} original\n * @returns {T extends (...args: infer TArgs) => Promise<infer TReturn> ?\n *   ((...params: [...TArgs\x2C ((err: Error\x2C ret: TReturn) => any)]) => void) :\n *   never\n * }\n */\nfunction callbackify(original) {\n  validateFunction(original\x2C 'original');\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified(...args) {\n    const maybeCb = ArrayPrototypePop(args);\n    validateFunction(maybeCb\x2C 'last argument');\n    const cb = FunctionPrototypeBind(maybeCb\x2C this);\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack\x2C `uncaughtException`\x2C `async_hooks`)\n    ReflectApply(original\x2C this\x2C args)\n      .then((ret) => process.nextTick(cb\x2C null\x2C ret)\x2C\n            (rej) => process.nextTick(callbackifyOnRejected\x2C rej\x2C cb));\n  }\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  // It is possible to manipulate a functions `length` or `name` property. This\n  // guards against the manipulation.\n  if (typeof descriptors.length.value === 'number') {\n    descriptors.length.value++;\n  }\n  if (typeof descriptors.name.value === 'string') {\n    descriptors.name.value += 'Callbackified';\n  }\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n  // We want to use null-prototype objects to not rely on globally mutable\n  // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  ObjectDefineProperties(callbackified\x2C descriptors);\n  return callbackified;\n}\n\n/**\n * @param {number} err\n * @returns {string}\n */\nfunction getSystemErrorName(err) {\n  validateNumber(err\x2C 'err');\n  if (err >= 0 || !NumberIsSafeInteger(err)) {\n    throw new ERR_OUT_OF_RANGE('err'\x2C 'a negative integer'\x2C err);\n  }\n  return internalErrorName(err);\n}\n\nfunction _errnoException(...args) {\n  if (isErrorStackTraceLimitWritable()) {\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const e = new ErrnoException(...args);\n    Error.stackTraceLimit = limit;\n    ErrorCaptureStackTrace(e\x2C _exceptionWithHostPort);\n    return e;\n  }\n  return new ErrnoException(...args);\n}\n\nfunction _exceptionWithHostPort(...args) {\n  if (isErrorStackTraceLimitWritable()) {\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const e = new ExceptionWithHostPort(...args);\n    Error.stackTraceLimit = limit;\n    ErrorCaptureStackTrace(e\x2C _exceptionWithHostPort);\n    return e;\n  }\n  return new ExceptionWithHostPort(...args);\n}\n\n/**\n * Parses the content of a `.env` file.\n * @param {string} content\n * @returns {Record<string\x2C string>}\n */\nfunction parseEnv(content) {\n  validateString(content\x2C 'content');\n  return binding.parseEnv(content);\n}\n\n// Keep the `exports =` so that various functions can still be monkeypatched\nmodule.exports = {\n  _errnoException\x2C\n  _exceptionWithHostPort\x2C\n  _extend\x2C\n  callbackify\x2C\n  debug: debuglog\x2C\n  debuglog\x2C\n  deprecate\x2C\n  format\x2C\n  styleText\x2C\n  formatWithOptions\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  inherits\x2C\n  inspect\x2C\n  isArray: ArrayIsArray\x2C\n  isBoolean\x2C\n  isBuffer\x2C\n  isDeepStrictEqual(a\x2C b) {\n    if (internalDeepEqual === undefined) {\n      internalDeepEqual = require('internal/util/comparisons')\n        .isDeepStrictEqual;\n    }\n    return internalDeepEqual(a\x2C b);\n  }\x2C\n  isNull\x2C\n  isNullOrUndefined\x2C\n  isNumber\x2C\n  isString\x2C\n  isSymbol\x2C\n  isUndefined\x2C\n  isRegExp: types.isRegExp\x2C\n  isObject\x2C\n  isDate: types.isDate\x2C\n  isError\x2C\n  isFunction\x2C\n  isPrimitive\x2C\n  log\x2C\n  promisify\x2C\n  stripVTControlCharacters\x2C\n  toUSVString(input) {\n    return StringPrototypeToWellFormed(`${input}`);\n  }\x2C\n  get transferableAbortSignal() {\n    return lazyAbortController().transferableAbortSignal;\n  }\x2C\n  get transferableAbortController() {\n    return lazyAbortController().transferableAbortController;\n  }\x2C\n  get aborted() {\n    return lazyAbortController().aborted;\n  }\x2C\n  types\x2C\n  parseEnv\x2C\n};\n\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/util/parse_args/parse_args'\x2C\n  ['parseArgs']\x2C\n);\n\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/encoding'\x2C\n  ['TextDecoder'\x2C 'TextEncoder']\x2C\n);\n\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/mime'\x2C\n  ['MIMEType'\x2C 'MIMEParams']\x2C\n);\n
code-source-info,0x265bfec87f16,50,0,13003,C0O0C4O13003,,
code-creation,JS,10,56971,0x265bfec8911e,1039, node:util:1:1,0x265bfec87e90,~
code-source-info,0x265bfec8911e,50,0,13003,C0O0C276O1159C282O1175C288O1197C294O1218C300O1226C306O1250C312O1275C318O1302C324O1327C330O1354C336O1363C342O1389C348O1414C354O1437C360O1463C366O1487C372O1522C378O1536C384O1563C390O1587C396O1603C402O1619C408O1646C414O1877C422O1877C428O1710C434O1716C440O1747C446O1773C452O1798C458O1832C464O1850C470O1987C478O1987C484O1915C490O1925C495O1946C501O1957C506O2042C514O2042C520O2029C525O2162C533O2162C539O2087C545O2107C551O2125C557O2143C563O2215C571O2215C577O2232C583O2202C588O2255C596O2255C601O2303C605O2303C609O2303C611O2453C619O2453C625O2339C630O2352C635O2393C641O2414C646O2427C651O2484C652O2484C654O2628C655O2628C657O5488C661O5488C663O5924C664O5924C666O8073C670O8073C672O11599C680O11620C686O11639C692O11665C698O11676C704O11698C710O11710C716O11722C722O11735C728O11745C734O11758C740O11779C746O11800C752O11822C758O11834C764O11854C770O11870C776O11883C780O11895C790O12104C796O12114C802O12135C808O12147C814O12159C820O12171C824O12202C834O12214C838O12240C848O12250C854O12261C860O12275C866O12290C872O12297C878O12310C882O12338C892O12685C898O12694C970O11614C974O12739C990O12708C995O12841C1011O12810C1016O12942C1032O12911C1038O13002,,
code-creation,JS,10,57215,0x265bfec8c3c6,14,isBrandCheck node:internal/webstreams/util:112:22,0x265bfec85638,~
code-source-info,0x265bfec8c3c6,49,2507,2650,C0O2507C9O2519C13O2648,,
code-creation,JS,10,57271,0x265bfec8d17e,14,getNonWritablePropertyDescriptor node:internal/webstreams/queuingstrategies:59:42,0x265bfec83268,~
code-source-info,0x265bfec8d17e,48,1114,1200,C0O1129C7O1187C13O1198,,
tick,0x7ee81c3eafe8,57331,0,0x0,0,0x7ee81c577880,0x265bfec84038,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95b57ba,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95a8d7f,0x7ee79be4b54f,0x7ee79be4ba05,0x2563a95a0cdb,0x7ee79be4b54f,0x7ee79be4ba05,0x19f2a9a761b9
code-creation,JS,10,57351,0x265bfec8db3e,14,TextEncoder node:internal/encoding:340:14,0x2563a95b96c0,~
code-source-info,0x265bfec8db3e,47,9551,9586,C0O9560C4O9565C8O9575C13O9585,,
code-creation,Eval,10,57470,0x265bfec8e486,5, node:internal/process/permission:1:1,0x265bfec8e300,~
script-source,51,node:internal/process/permission,'use strict';\n\nconst {\n  ObjectFreeze\x2C\n} = primordials;\n\nconst permission = internalBinding('permission');\nconst { validateString } = require('internal/validators');\n\nlet experimentalPermission;\n\nmodule.exports = ObjectFreeze({\n  __proto__: null\x2C\n  isEnabled() {\n    if (experimentalPermission === undefined) {\n      const { getOptionValue } = require('internal/options');\n      experimentalPermission = getOptionValue('--experimental-permission');\n    }\n    return experimentalPermission;\n  }\x2C\n  has(scope\x2C reference) {\n    validateString(scope\x2C 'scope');\n    if (reference != null) {\n      // TODO: add support for WHATWG URLs and Uint8Arrays.\n      validateString(reference\x2C 'reference');\n    }\n\n    return permission.has(scope\x2C reference);\n  }\x2C\n});\n
code-source-info,0x265bfec8e486,51,0,753,C0O0C4O753,,
code-creation,JS,10,57497,0x265bfec8e62e,83, node:internal/process/permission:1:1,0x265bfec8e400,~
code-source-info,0x265bfec8e62e,51,0,753,C0O0C18O25C23O76C26O76C30O76C32O134C38O134C43O115C49O171C50O171C52O213C57O249C65O497C73O213C77O211C82O752,,
code-creation,Eval,10,57896,0x265bfec91a66,5, node:internal/bootstrap/web/exposed-wildcard:1:1,0x265bfec918c0,~
script-source,52,node:internal/bootstrap/web/exposed-wildcard,'use strict';\n\n/**\n * This file exposes web interfaces that is defined with the WebIDL\n * [Exposed=*] extended attribute.\n * See more details at https://webidl.spec.whatwg.org/#Exposed.\n */\n\nconst {\n  globalThis\x2C\n} = primordials;\n\nconst {\n  exposeInterface\x2C\n  lazyDOMExceptionClass\x2C\n  exposeLazyInterfaces\x2C\n  exposeGetterAndSetter\x2C\n  exposeNamespace\x2C\n} = require('internal/util');\nconst config = internalBinding('config');\n\n// https://console.spec.whatwg.org/#console-namespace\nexposeNamespace(globalThis\x2C 'console'\x2C\n                createGlobalConsole());\n\nconst { URL\x2C URLSearchParams } = require('internal/url');\n// https://url.spec.whatwg.org/#url\nexposeInterface(globalThis\x2C 'URL'\x2C URL);\n// https://url.spec.whatwg.org/#urlsearchparams\nexposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\nexposeGetterAndSetter(globalThis\x2C\n                      'DOMException'\x2C\n                      () => {\n                        const DOMException = lazyDOMExceptionClass();\n                        exposeInterface(globalThis\x2C 'DOMException'\x2C DOMException);\n                        return DOMException;\n                      }\x2C\n                      (value) => {\n                        exposeInterface(globalThis\x2C 'DOMException'\x2C value);\n                      });\n\n// https://dom.spec.whatwg.org/#interface-abortcontroller\n// Lazy ones.\nexposeLazyInterfaces(globalThis\x2C 'internal/abort_controller'\x2C [\n  'AbortController'\x2C 'AbortSignal'\x2C\n]);\n// https://dom.spec.whatwg.org/#interface-eventtarget\nconst {\n  EventTarget\x2C Event\x2C\n} = require('internal/event_target');\nexposeInterface(globalThis\x2C 'Event'\x2C Event);\nexposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\n\n// https://encoding.spec.whatwg.org/#textencoder\n// https://encoding.spec.whatwg.org/#textdecoder\nexposeLazyInterfaces(globalThis\x2C\n                     'internal/encoding'\x2C\n                     ['TextEncoder'\x2C 'TextDecoder']);\n\nfunction createGlobalConsole() {\n  const consoleFromNode =\n    require('internal/console/global');\n  if (config.hasInspector) {\n    const inspector = require('internal/util/inspector');\n    // TODO(joyeecheung): postpone this until the first time inspector\n    // is activated.\n    inspector.wrapConsole(consoleFromNode);\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\n    // Setup inspector command line API.\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\n  }\n  return consoleFromNode;\n}\n\n// Web Streams API\nexposeLazyInterfaces(\n  globalThis\x2C\n  'internal/webstreams/transformstream'\x2C\n  ['TransformStream'\x2C 'TransformStreamDefaultController']);\n\nexposeLazyInterfaces(\n  globalThis\x2C\n  'internal/webstreams/writablestream'\x2C\n  ['WritableStream'\x2C 'WritableStreamDefaultController'\x2C 'WritableStreamDefaultWriter']);\n\nexposeLazyInterfaces(\n  globalThis\x2C\n  'internal/webstreams/readablestream'\x2C\n  [\n    'ReadableStream'\x2C 'ReadableStreamDefaultReader'\x2C\n    'ReadableStreamBYOBReader'\x2C 'ReadableStreamBYOBRequest'\x2C\n    'ReadableByteStreamController'\x2C 'ReadableStreamDefaultController'\x2C\n  ]);\n\nexposeLazyInterfaces(\n  globalThis\x2C\n  'internal/webstreams/queuingstrategies'\x2C\n  [\n    'ByteLengthQueuingStrategy'\x2C 'CountQueuingStrategy'\x2C\n  ]);\n\nexposeLazyInterfaces(\n  globalThis\x2C\n  'internal/webstreams/encoding'\x2C\n  [\n    'TextEncoderStream'\x2C 'TextDecoderStream'\x2C\n  ]);\n\nexposeLazyInterfaces(\n  globalThis\x2C\n  'internal/webstreams/compression'\x2C\n  [\n    'CompressionStream'\x2C 'DecompressionStream'\x2C\n  ]);\n
code-source-info,0x265bfec91a66,52,0,3439,C0O0C4O3439,,
code-creation,JS,10,57964,0x265bfec91ed6,362, node:internal/bootstrap/web/exposed-wildcard:1:1,0x265bfec919e0,~
code-source-info,0x265bfec91ed6,52,0,3439,C0O0C30O201C36O355C42O355C47O241C53O260C59O285C64O309C69O334C74O396C80O396C84O396C86O478C92O533C96O478C101O591C107O591C112O566C117O571C122O652C134O652C139O741C151O741C156O806C162O828C172O806C177O1341C183O1362C188O1341C193O1533C199O1533C204O1509C209O1522C214O1567C226O1567C231O1612C243O1612C248O1768C254O1789C259O1768C264O2458C270O2482C275O2458C280O2596C286O2620C291O2596C296O2762C302O2786C307O2762C312O3034C318O3058C323O3034C328O3181C334O3205C339O3181C344O3308C350O3332C355O3308C361O3438,,
code-creation,JS,10,58056,0x265bfec926be,71,createGlobalConsole node:internal/bootstrap/web/exposed-wildcard:60:29,0x265bfec91a98,~
code-source-info,0x265bfec926be,52,1926,2437,C0O1961C6O1961C11O1999C16O2010C22O2048C28O2048C33O2190C38O2190C43O2265C49O2265C54O2232C59O2379C64O2340C68O2412C70O2435,,
code-creation,Eval,10,58139,0x265bfec92dae,5, node:internal/console/global:1:1,0x265bfec92c68,~
script-source,53,node:internal/console/global,'use strict';\n\n// See https://console.spec.whatwg.org/#console-namespace\n// > For historical web-compatibility reasons\x2C the namespace object\n// > for console must have as its [[Prototype]] an empty object\x2C\n// > created as if by ObjectCreate(%ObjectPrototype%)\x2C\n// > instead of %ObjectPrototype%.\n\n// Since in Node.js\x2C the Console constructor has been exposed through\n// require('console')\x2C we need to keep the Console constructor but\n// we cannot actually use `new Console` to construct the global console.\n// Therefore\x2C the console.Console.prototype is not\n// in the global console prototype chain anymore.\n\nconst {\n  FunctionPrototypeBind\x2C\n  ReflectDefineProperty\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n} = primordials;\n\nconst {\n  Console\x2C\n  kBindProperties\x2C\n} = require('internal/console/constructor');\n\nconst globalConsole = { __proto__: {} };\n\n// Since Console is not on the prototype chain of the global console\x2C\n// the symbol properties on Console.prototype have to be looked up from\n// the global console itself. In addition\x2C we need to make the global\n// console a namespace by binding the console methods directly onto\n// the global console with the receiver fixed.\nfor (const prop of ReflectOwnKeys(Console.prototype)) {\n  if (prop === 'constructor') { continue; }\n  const desc = ReflectGetOwnPropertyDescriptor(Console.prototype\x2C prop);\n  if (typeof desc.value === 'function') { // fix the receiver\n    const name = desc.value.name;\n    desc.value = FunctionPrototypeBind(desc.value\x2C globalConsole);\n    ReflectDefineProperty(desc.value\x2C 'name'\x2C { __proto__: null\x2C value: name });\n  }\n  ReflectDefineProperty(globalConsole\x2C prop\x2C desc);\n}\n\nglobalConsole[kBindProperties](true\x2C 'auto');\n\n// This is a legacy feature - the Console constructor is exposed on\n// the global console instance.\nglobalConsole.Console = Console;\n\nmodule.exports = globalConsole;\n
code-source-info,0x265bfec92dae,53,0,1880,C0O0C4O1880,,
code-creation,JS,10,58175,0x265bfec92f0e,313, node:internal/console/global:1:1,0x265bfec92d28,~
code-source-info,0x265bfec92f0e,53,0,1880,C0O619C5O644C10O669C15O704C20O780C23O780C28O748C33O759C38O844C43O857C56O1233C61O1210C83O1202C113O1202C116O1249C118O1258C123O1279C125O1346C131O1306C137O1382C145O1448C151O1454C156O1504C162O1477C167O1475C171O1558C189O1599C193O1531C198O1614C207O1614C212O1191C282O1667C284O1680C293O1697C299O1814C301O1836C305O1848C307O1863C312O1879,,
tick,0x7ee81bedc896,58401,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfec92f25,0x7ee79be4b54f,0x7ee79be4ba05,0x265bfec926c4,0x265bfec91f32
code-creation,Eval,10,58689,0x265bfec952a6,5, node:internal/console/constructor:1:1,0x265bfec93e50,~
script-source,54,node:internal/console/constructor,'use strict';\n\n// The Console constructor is not actually used to construct the global\n// console. It's exported for backwards compatibility.\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSome\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberPrototypeToFixed\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst { trace } = internalBinding('trace_events');\nconst {\n  isStackOverflowError\x2C\n  codes: {\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { previewEntries } = internalBinding('util');\nconst { Buffer: { isBuffer } } = require('buffer');\nconst {\n  inspect\x2C\n  formatWithOptions\x2C\n} = require('internal/util/inspect');\nconst {\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\n} = require('internal/util/types');\nconst {\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\n  CHAR_UPPERCASE_C: kTraceCount\x2C\n} = require('internal/constants');\nconst { styleText } = require('util');\nconst kCounts = Symbol('counts');\n\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\n\nconst kSecond = 1000;\nconst kMinute = 60 * kSecond;\nconst kHour = 60 * kMinute;\nconst kMaxGroupIndentation = 1000;\n\n// Lazy loaded for startup performance.\nlet cliTable;\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\n// Track amount of indentation required via `console.group()`.\nconst kGroupIndent = Symbol('kGroupIndent');\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\nconst kFormatForStderr = Symbol('kFormatForStderr');\nconst kFormatForStdout = Symbol('kFormatForStdout');\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\nconst kColorMode = Symbol('kColorMode');\nconst kIsConsole = Symbol('kIsConsole');\nconst kWriteToConsole = Symbol('kWriteToConsole');\nconst kBindProperties = Symbol('kBindProperties');\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\nconst kUseStdout = Symbol('kUseStdout');\nconst kUseStderr = Symbol('kUseStderr');\n\nconst optionsMap = new SafeWeakMap();\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\n  // We have to test new.target here to see if this function is called\n  // with new\x2C because we need to define a custom instanceof to accommodate\n  // the global console.\n  if (new.target === undefined) {\n    return ReflectConstruct(Console\x2C arguments);\n  }\n\n  if (!options || typeof options.write === 'function') {\n    options = {\n      stdout: options\x2C\n      stderr: arguments[1]\x2C\n      ignoreErrors: arguments[2]\x2C\n    };\n  }\n\n  const {\n    stdout\x2C\n    stderr = stdout\x2C\n    ignoreErrors = true\x2C\n    colorMode = 'auto'\x2C\n    inspectOptions\x2C\n    groupIndentation\x2C\n  } = options;\n\n  if (!stdout || typeof stdout.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\n  }\n  if (!stderr || typeof stderr.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\n  }\n\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\n\n  if (groupIndentation !== undefined) {\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\n                    0\x2C kMaxGroupIndentation);\n  }\n\n  if (inspectOptions !== undefined) {\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\n\n    if (inspectOptions.colors !== undefined &&\n        options.colorMode !== undefined) {\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\n        'options.inspectOptions.color'\x2C 'colorMode');\n    }\n    optionsMap.set(this\x2C inspectOptions);\n  }\n\n  // Bind the prototype functions to this Console instance\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\n    // We have to bind the methods grabbed from the instance instead of from\n    // the prototype so that users extending the Console can override them\n    // from the prototype chain of the subclass.\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: key\x2C\n    });\n  });\n\n  this[kBindStreamsEager](stdout\x2C stderr);\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\n}\n\nconst consolePropAttributes = {\n  writable: true\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n};\n\n// Fixup global.console instanceof global.console.Console\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value(instance) {\n    return instance[kIsConsole];\n  }\x2C\n});\n\nconst kColorInspectOptions = { colors: true };\nconst kNoColorInspectOptions = {};\n\nObjectDefineProperties(Console.prototype\x2C {\n  [kBindStreamsEager]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Eager version for the Console constructor\n    value: function(stdout\x2C stderr) {\n      ObjectDefineProperties(this\x2C {\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\n      });\n    }\x2C\n  }\x2C\n  [kBindStreamsLazy]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Lazily load the stdout and stderr from an object so we don't\n    // create the stdio streams when they are not even accessed\n    value: function(object) {\n      let stdout;\n      let stderr;\n      ObjectDefineProperties(this\x2C {\n        '_stdout': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stdout) stdout = object.stdout;\n            return stdout;\n          }\x2C\n          set(value) { stdout = value; }\x2C\n        }\x2C\n        '_stderr': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stderr) { stderr = object.stderr; }\n            return stderr;\n          }\x2C\n          set(value) { stderr = value; }\x2C\n        }\x2C\n      });\n    }\x2C\n  }\x2C\n  [kBindProperties]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\n      ObjectDefineProperties(this\x2C {\n        '_stdoutErrorHandler': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x2C\n        }\x2C\n        '_stderrErrorHandler': {\n          ...consolePropAttributes\x2C\n          __proto__: null\x2C\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x2C\n        }\x2C\n        '_ignoreErrors': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: Boolean(ignoreErrors)\x2C\n        }\x2C\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        // Corresponds to https://console.spec.whatwg.org/#count-map\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\n        [kGroupIndentationWidth]: {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: groupIndentation\x2C\n        }\x2C\n        [SymbolToStringTag]: {\n          __proto__: null\x2C\n          writable: false\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          value: 'console'\x2C\n        }\x2C\n      });\n    }\x2C\n  }\x2C\n  [kWriteToConsole]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(streamSymbol\x2C string\x2C color = '') {\n      const ignoreErrors = this._ignoreErrors;\n      const groupIndent = this[kGroupIndent];\n\n      const useStdout = streamSymbol === kUseStdout;\n      const stream = useStdout ? this._stdout : this._stderr;\n      const errorHandler = useStdout ?\n        this._stdoutErrorHandler : this._stderrErrorHandler;\n\n      if (groupIndent.length !== 0) {\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\n        }\n        string = groupIndent + string;\n      }\n\n      if (color) {\n        string = styleText(color\x2C string);\n      }\n\n      string += '\\n';\n\n      if (ignoreErrors === false) return stream.write(string);\n\n      // There may be an error occurring synchronously (e.g. for files or TTYs\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\n      // handle both situations.\n      try {\n        // Add and later remove a noop error handler to catch synchronous\n        // errors.\n        if (stream.listenerCount('error') === 0)\n          stream.once('error'\x2C noop);\n\n        stream.write(string\x2C errorHandler);\n      } catch (e) {\n        // Console is a debugging utility\x2C so it swallowing errors is not\n        // desirable even in edge cases such as low stack space.\n        if (isStackOverflowError(e))\n          throw e;\n        // Sorry\x2C there's no proper way to pass along the error here.\n      } finally {\n        stream.removeListener('error'\x2C noop);\n      }\n    }\x2C\n  }\x2C\n  [kGetInspectOptions]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(stream) {\n      let color = this[kColorMode];\n      if (color === 'auto') {\n        color = lazyUtilColors().shouldColorize(stream);\n      }\n\n      const options = optionsMap.get(this);\n      if (options) {\n        if (options.colors === undefined) {\n          options.colors = color;\n        }\n        return options;\n      }\n\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\n    }\x2C\n  }\x2C\n  [kFormatForStdout]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stdout);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\x2C\n  }\x2C\n  [kFormatForStderr]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stderr);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\x2C\n  }\x2C\n});\n\n// Make a function that can serve as the callback passed to `stream.write()`.\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\n  return (err) => {\n    // This conditional evaluates to true if and only if there was an error\n    // that was not already emitted (which happens when the _write callback\n    // is invoked asynchronously).\n    const stream = streamSymbol === kUseStdout ?\n      instance._stdout : instance._stderr;\n    if (err !== null && !stream._writableState.errorEmitted) {\n      // If there was an error\x2C it will be emitted on `stream` as\n      // an `error` event. Adding a `once` listener will keep that error\n      // from becoming an uncaught exception\x2C but since the handler is\n      // removed after the event\x2C non-console.* writes won't be affected.\n      // we are only adding noop if there is no one else listening for 'error'\n      if (stream.listenerCount('error') === 0) {\n        stream.once('error'\x2C noop);\n      }\n    }\n  };\n}\n\nconst consoleMethods = {\n  log(...args) {\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\n  }\x2C\n  warn(...args) {\n    const color = (shouldColorize(args) && 'yellow') || '';\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args)\x2C color);\n  }\x2C\n\n  error(...args) {\n    const color = (shouldColorize(args) && 'red') || '';\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args)\x2C color);\n  }\x2C\n\n  dir(object\x2C options) {\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\n      customInspect: false\x2C\n      ...this[kGetInspectOptions](this._stdout)\x2C\n      ...options\x2C\n    }));\n  }\x2C\n\n  time(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    if (this._times.has(label)) {\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\n      return;\n    }\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    this._times.set(label\x2C process.hrtime());\n  }\x2C\n\n  timeEnd(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    if (found) {\n      this._times.delete(label);\n    }\n  }\x2C\n\n  timeLog(label = 'default'\x2C ...data) {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n  }\x2C\n\n  trace: function trace(...args) {\n    const err = {\n      name: 'Trace'\x2C\n      message: this[kFormatForStderr](args)\x2C\n    };\n    ErrorCaptureStackTrace(err\x2C trace);\n    this.error(err.stack);\n  }\x2C\n\n  assert(expression\x2C ...args) {\n    if (!expression) {\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\n      // The arguments will be formatted in warn() again\n      ReflectApply(this.warn\x2C this\x2C args);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#clear\n  clear() {\n    // It only makes sense to clear if _stdout is a TTY.\n    // Otherwise\x2C do nothing.\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\n      // The require is here intentionally to avoid readline being\n      // required too early when console is first loaded.\n      const {\n        cursorTo\x2C\n        clearScreenDown\x2C\n      } = require('internal/readline/callbacks');\n      cursorTo(this._stdout\x2C 0\x2C 0);\n      clearScreenDown(this._stdout);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#count\n  count(label = 'default') {\n    // Ensures that label is a string\x2C and only things that can be\n    // coerced to strings. e.g. Symbol is not allowed\n    label = `${label}`;\n    const counts = this[kCounts];\n    let count = counts.get(label);\n    if (count === undefined)\n      count = 1;\n    else\n      count++;\n    counts.set(label\x2C count);\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\n    this.log(`${label}: ${count}`);\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#countreset\n  countReset(label = 'default') {\n    const counts = this[kCounts];\n    if (!counts.has(label)) {\n      process.emitWarning(`Count for '${label}' does not exist`);\n      return;\n    }\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\n    counts.delete(`${label}`);\n  }\x2C\n\n  group(...data) {\n    if (data.length > 0) {\n      ReflectApply(this.log\x2C this\x2C data);\n    }\n    this[kGroupIndent] +=\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\n  }\x2C\n\n  groupEnd() {\n    this[kGroupIndent] = StringPrototypeSlice(\n      this[kGroupIndent]\x2C\n      0\x2C\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x2C\n    );\n  }\x2C\n\n  // https://console.spec.whatwg.org/#table\n  table(tabularData\x2C properties) {\n    if (properties !== undefined)\n      validateArray(properties\x2C 'properties');\n\n    if (tabularData === null || typeof tabularData !== 'object')\n      return this.log(tabularData);\n\n    cliTable ??= require('internal/cli_table');\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\n\n    const _inspect = (v) => {\n      const depth = v !== null &&\n                    typeof v === 'object' &&\n                    !isArray(v) &&\n                    ObjectKeys(v).length > 2 ? -1 : 0;\n      const opt = {\n        depth\x2C\n        maxArrayLength: 3\x2C\n        breakLength: Infinity\x2C\n        ...this[kGetInspectOptions](this._stdout)\x2C\n      };\n      return inspect(v\x2C opt);\n    };\n    const getIndexArray = (length) => ArrayFrom(\n      { length }\x2C (_\x2C i) => _inspect(i));\n\n    const mapIter = isMapIterator(tabularData);\n    let isKeyValue = false;\n    let i = 0;\n    if (mapIter) {\n      const res = previewEntries(tabularData\x2C true);\n      tabularData = res[0];\n      isKeyValue = res[1];\n    }\n\n    if (isKeyValue || isMap(tabularData)) {\n      const keys = [];\n      const values = [];\n      let length = 0;\n      if (mapIter) {\n        for (; i < tabularData.length / 2; ++i) {\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\n          length++;\n        }\n      } else {\n        for (const { 0: k\x2C 1: v } of tabularData) {\n          ArrayPrototypePush(keys\x2C _inspect(k));\n          ArrayPrototypePush(values\x2C _inspect(v));\n          length++;\n        }\n      }\n      return final([\n        iterKey\x2C keyKey\x2C valuesKey\x2C\n      ]\x2C [\n        getIndexArray(length)\x2C\n        keys\x2C\n        values\x2C\n      ]);\n    }\n\n    const setIter = isSetIterator(tabularData);\n    if (setIter)\n      tabularData = previewEntries(tabularData);\n\n    const setlike = setIter || mapIter || isSet(tabularData);\n    if (setlike) {\n      const values = [];\n      let length = 0;\n      for (const v of tabularData) {\n        ArrayPrototypePush(values\x2C _inspect(v));\n        length++;\n      }\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\n    }\n\n    const map = { __proto__: null };\n    let hasPrimitives = false;\n    const valuesKeyArray = [];\n    const indexKeyArray = ObjectKeys(tabularData);\n\n    for (; i < indexKeyArray.length; i++) {\n      const item = tabularData[indexKeyArray[i]];\n      const primitive = item === null ||\n          (typeof item !== 'function' && typeof item !== 'object');\n      if (properties === undefined && primitive) {\n        hasPrimitives = true;\n        valuesKeyArray[i] = _inspect(item);\n      } else {\n        const keys = properties || ObjectKeys(item);\n        for (const key of keys) {\n          map[key] ??= [];\n          if ((primitive && properties) ||\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\n            map[key][i] = '';\n          else\n            map[key][i] = _inspect(item[key]);\n        }\n      }\n    }\n\n    const keys = ObjectKeys(map);\n    const values = ObjectValues(map);\n    if (hasPrimitives) {\n      ArrayPrototypePush(keys\x2C valuesKey);\n      ArrayPrototypePush(values\x2C valuesKeyArray);\n    }\n    ArrayPrototypeUnshift(keys\x2C indexKey);\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\n\n    return final(keys\x2C values);\n  }\x2C\n};\n\n// Returns true if label was found\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\n  const time = self._times.get(label);\n  if (time === undefined) {\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\n    return false;\n  }\n  const duration = process.hrtime(time);\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\n\n  const formatted = formatTime(ms);\n\n  if (data === undefined) {\n    self.log('%s: %s'\x2C label\x2C formatted);\n  } else {\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\n  }\n  return true;\n}\n\nfunction pad(value) {\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\n}\n\nfunction formatTime(ms) {\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (ms >= kSecond) {\n    if (ms >= kMinute) {\n      if (ms >= kHour) {\n        hours = MathFloor(ms / kHour);\n        ms = ms % kHour;\n      }\n      minutes = MathFloor(ms / kMinute);\n      ms = ms % kMinute;\n    }\n    seconds = ms / kSecond;\n  }\n\n  if (hours !== 0 || minutes !== 0) {\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\n      '.'\x2C\n    ));\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\n  }\n\n  if (seconds !== 0) {\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\n  }\n\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\n}\n\nconst keyKey = 'Key';\nconst valuesKey = 'Values';\nconst indexKey = '(index)';\nconst iterKey = '(iteration index)';\n\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\n\n// TODO: remove string type check once the styleText supports objects\n// Return true if all args are type string\nconst shouldColorize = (args) => {\n  return lazyUtilColors().hasColors && !ArrayPrototypeSome(args\x2C (arg) => typeof arg !== 'string');\n};\n\nfunction noop() {}\n\nfor (const method of ReflectOwnKeys(consoleMethods))\n  Console.prototype[method] = consoleMethods[method];\n\nConsole.prototype.debug = Console.prototype.log;\nConsole.prototype.info = Console.prototype.log;\nConsole.prototype.dirxml = Console.prototype.log;\nConsole.prototype.groupCollapsed = Console.prototype.group;\n\nfunction initializeGlobalConsole(globalConsole) {\n  globalConsole[kBindStreamsLazy](process);\n  const {\n    namespace: {\n      addSerializeCallback\x2C\n      isBuildingSnapshot\x2C\n    }\x2C\n  } = require('internal/v8/startup_snapshot');\n\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\n    return;\n  }\n  const { console: consoleFromVM } = internalBinding('inspector');\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\n  const inspectorConsoleKeys = new SafeSet();\n  for (const key of ObjectKeys(globalConsole)) {\n    if (!originalKeys.has(key)) {\n      inspectorConsoleKeys.add(key);\n    }\n  }\n  // During deserialization these should be reinstalled to console by\n  // V8 when the inspector client is created.\n  addSerializeCallback(() => {\n    for (const key of inspectorConsoleKeys) {\n      globalConsole[key] = undefined;\n    }\n  });\n}\n\nmodule.exports = {\n  Console\x2C\n  kBindStreamsLazy\x2C\n  kBindProperties\x2C\n  initializeGlobalConsole\x2C\n  formatTime\x2C // exported for tests\n};\n
code-source-info,0x265bfec952a6,54,0,22121,C0O0C4O22121,,
code-creation,JS,10,59056,0x265bfec9661e,1766, node:internal/console/constructor:1:1,0x265bfec95220,~
code-source-info,0x265bfec9661e
code-creation,JS,11,59343,0x7ee79be4be00,2308, node:internal/console/global:1:1,0x265bfec92d28,^
code-source-info,0x7ee79be4be00,53,0,1880,,,
code-creation,JS,11,59376,0x7ee79be4c740,2600,defineLazyProperties node:internal/util:600:30,0x307edb92b0d8,^
code-source-info,0x7ee79be4c740,16,16700,17604,,,
code-creation,JS,11,59387,0x7ee79be4d180,328,SafeMap node:internal/per_context/primordials:413:16,0x168b8b496090,^
code-source-info,0x7ee79be4d180,6,11975,11992,,,
tick,0x7ee81c49317c,59474,0,0x0,2,0x7ee81c5678d0,0x7ee79be4c6ac,0x7ee79be4b54f,0x7ee79be4ba05,0x265bfec926c4,0x265bfec91f32
code-creation,JS,10,59543,0x265bfec9aafe,414,value node:internal/console/constructor:237:20,0x265bfec956f0,~
code-source-info,0x265bfec9aafe,54,6638,8038,C17O6694C27O6756C34O6798C52O6868C55O6838C73O6938C86O7035C89O7005C104O7084C111O7126C126O7166C129O7166C144O7218C151O7240C166O7274C169O7270C187O7365C191O7375C198O7397C213O7431C216O7427C235O7453C239O7466C246O7488C261O7518C275O7540C279O7553C286O7575C300O7605C314O7622C318O7637C325O7659C340O7689C354O7704C358O7729C365O7771C380O7811C394O7849C398O7869C407O6694C413O8037,,
code-creation,JS,10,59599,0x265bfec9c7a6,18,createWriteErrorHandler node:internal/console/constructor:364:33,0x265bfec95378,~
code-source-info,0x265bfec9c7a6,54,10839,11696,C0O10839C13O10868C17O11694,,
code-creation,Eval,10,59765,0x265bfec9d4a6,5, node:internal/util/inspector:1:1,0x265bfec9d220,~
script-source,55,node:internal/util/inspector,'use strict';\n\nconst {\n  ArrayPrototypeSome\x2C\n  ArrayPrototypePushApply\x2C\n  FunctionPrototypeBind\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  SafeWeakMap\x2C\n} = primordials;\n\nconst { validatePort } = require('internal/validators');\nconst permission = require('internal/process/permission');\n\nconst kMinPort = 1024;\nconst kMaxPort = 65535;\nconst kInspectArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\nconst kInspectMsgRegex = /Debugger listening on ws:\\/\\/\\[?(.+?)\\]?:(\\d+)\\/|For help\x2C see: https:\\/\\/nodejs\\.org\\/en\\/docs\\/inspector|Debugger attached|Waiting for the debugger to disconnect\\.\\.\\./;\n\nconst _isUsingInspector = new SafeWeakMap();\nfunction isUsingInspector(execArgv = process.execArgv) {\n  if (!_isUsingInspector.has(execArgv)) {\n    _isUsingInspector.set(execArgv\x2C\n                          ArrayPrototypeSome(execArgv\x2C (arg) => RegExpPrototypeExec(kInspectArgRegex\x2C arg) !== null) ||\n      RegExpPrototypeExec(kInspectArgRegex\x2C process.env.NODE_OPTIONS) !== null);\n  }\n  return _isUsingInspector.get(execArgv);\n}\n\nlet debugPortOffset = 1;\nfunction getInspectPort(inspectPort) {\n  if (typeof inspectPort === 'function') {\n    inspectPort = inspectPort();\n  } else if (inspectPort == null) {\n    inspectPort = process.debugPort + debugPortOffset;\n    if (inspectPort > kMaxPort)\n      inspectPort = inspectPort - kMaxPort + kMinPort - 1;\n    debugPortOffset++;\n  }\n  validatePort(inspectPort);\n\n  return inspectPort;\n}\n\nlet session;\nfunction sendInspectorCommand(cb\x2C onError) {\n  const { hasInspector } = internalBinding('config');\n  if (!hasInspector) return onError();\n  // Do not preview when the permission model is enabled\n  // because this feature require access to the inspector\x2C\n  // which is unavailable in this case.\n  if (permission.isEnabled()) return onError();\n  const inspector = require('inspector');\n  if (session === undefined) session = new inspector.Session();\n  session.connect();\n  try {\n    return cb(session);\n  } finally {\n    session.disconnect();\n  }\n}\n\nfunction isInspectorMessage(string) {\n  return isUsingInspector() && RegExpPrototypeExec(kInspectMsgRegex\x2C string) !== null;\n}\n\n// Create a special require function for the inspector command line API\nfunction installConsoleExtensions(commandLineApi) {\n  if (commandLineApi.require) { return; }\n  const { tryGetCwd } = require('internal/process/execution');\n  const CJSModule = require('internal/modules/cjs/loader').Module;\n  const { makeRequireFunction } = require('internal/modules/helpers');\n  const consoleAPIModule = new CJSModule('<inspector console>');\n  const cwd = tryGetCwd();\n  consoleAPIModule.paths = [];\n  ArrayPrototypePushApply(consoleAPIModule.paths\x2C CJSModule._nodeModulePaths(cwd));\n  ArrayPrototypePushApply(consoleAPIModule.paths\x2C CJSModule.globalPaths);\n  commandLineApi.require = makeRequireFunction(consoleAPIModule);\n}\n\n// Wrap a console implemented by Node.js with features from the VM inspector\nfunction wrapConsole(consoleFromNode) {\n  const { consoleCall\x2C console: consoleFromVM } = internalBinding('inspector');\n  for (const key of ObjectKeys(consoleFromVM)) {\n    // If global console has the same method as inspector console\x2C\n    // then wrap these two methods into one. Native wrapper will preserve\n    // the original stack.\n    if (ObjectPrototypeHasOwnProperty(consoleFromNode\x2C key)) {\n      consoleFromNode[key] = FunctionPrototypeBind(\n        consoleCall\x2C\n        consoleFromNode\x2C\n        consoleFromVM[key]\x2C\n        consoleFromNode[key]\x2C\n      );\n      ObjectDefineProperty(consoleFromNode[key]\x2C 'name'\x2C {\n        __proto__: null\x2C\n        value: key\x2C\n      });\n    } else {\n      // Add additional console APIs from the inspector\n      consoleFromNode[key] = consoleFromVM[key];\n    }\n  }\n}\n\nmodule.exports = {\n  getInspectPort\x2C\n  installConsoleExtensions\x2C\n  isInspectorMessage\x2C\n  isUsingInspector\x2C\n  sendInspectorCommand\x2C\n  wrapConsole\x2C\n};\n
code-source-info,0x265bfec9d4a6,55,0,3929,C0O0C4O3929,,
code-creation,JS,10,59836,0x265bfec9d856,265, node:internal/util/inspector:1:1,0x265bfec9d420,~
code-source-info,0x265bfec9d856,55,0,3929,C0O0C96O25C102O47C108O74C114O99C120O123C126O137C132O170C138O193C143O249C149O249C154O232C160O300C166O300C170O300C172O358C176O358C178O381C184O381C186O413C191O413C193O479C198O479C200O679C202O679C207O679C209O1105C211O1105C213O1491C214O1491C216O3780C223O3801C229O3819C235O3847C241O3869C247O3889C253O3913C259O3795C264O3928,,
code-creation,JS,10,59956,0x265bfec9e19e,232,wrapConsole node:internal/util/inspector:84:21,0x265bfec9d668,~
code-source-info,0x265bfec9e19e,55,2990,3778,C0O3060C6O3060C11O3020C16O3042C21O3110C26O3110C48O3103C76O3103C79O3311C84O3315C91O3376C93O3399C98O3489C105O3519C116O3399C121O3397C125O3541C132O3577C146O3634C150O3541C157O3724C159O3760C162O3745C166O3092C231O3777,,
code-creation,JS,10,60120,0x265bfeca078e,29,exposeNamespace node:internal/util:580:25,0x307edb92b038,~
code-source-info,0x265bfeca078e,16,16248,16444,C0O16284C5O16313C12O16420C22O16284C28O16443,,
code-creation,JS,10,60152,0x265bfeca08f6,29,exposeInterface node:internal/util:569:25,0x307edb92afe8,~
code-source-info,0x265bfeca08f6,16,15976,16172,C0O16012C5O16041C12O16148C22O16012C28O16171,,
code-creation,JS,10,60185,0x265bfeca0ab6,54,exposeGetterAndSetter node:internal/util:590:31,0x307edb92b088,~
code-source-info,0x265bfeca0ab6,16,16476,16669,C19O16523C24O16552C31O16637C37O16654C47O16523C53O16668,,
code-creation,JS,10,60209,0x265bfeca0bf6,21,exposeLazyInterfaces node:internal/util:683:30,0x307edb92b1e8,~
code-source-info,0x265bfeca0bf6,16,18537,18608,C0O18560C14O18560C20O18607,,
tick,0x7ee81c4c4c1d,60547,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfec91f9d
code-creation,Eval,10,60843,0x265bfeca29c6,5, node:internal/event_target:1:1,0x265bfeca1bb8,~
script-source,56,node:internal/event_target,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeReduce\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  SafeArrayIterator\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  SafeWeakSet\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_EVENT_RECURSION\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateAbortSignal\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateInternalField\x2C\n  kValidateObjectAllowObjects\x2C\n} = require('internal/validators');\n\nconst {\n  customInspectSymbol\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { inspect } = require('util');\nconst webidl = require('internal/webidl');\n\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\n\nconst EventEmitter = require('events');\nconst {\n  kMaxEventTargetListeners\x2C\n  kMaxEventTargetListenersWarned\x2C\n} = EventEmitter;\n\nconst kEvents = Symbol('kEvents');\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\nconst kStop = Symbol('kStop');\nconst kTarget = Symbol('kTarget');\nconst kHandlers = Symbol('kHandlers');\nconst kWeakHandler = Symbol('kWeak');\nconst kResistStopPropagation = Symbol('kResistStopPropagation');\n\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\nconst kRemoveWeakListenerHelper = Symbol('kRemoveWeakListenerHelper');\nconst kCreateEvent = Symbol('kCreateEvent');\nconst kNewListener = Symbol('kNewListener');\nconst kRemoveListener = Symbol('kRemoveListener');\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\nconst kTrustEvent = Symbol('kTrustEvent');\n\nconst { now } = require('internal/perf/utils');\n\nconst kType = Symbol('type');\nconst kDetail = Symbol('detail');\n\nconst isTrustedSet = new SafeWeakSet();\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\n  get isTrusted() {\n    return isTrustedSet.has(this);\n  }\x2C\n}\x2C 'isTrusted').get;\n\nconst isTrustedDescriptor = {\n  __proto__: null\x2C\n  configurable: false\x2C\n  enumerable: true\x2C\n  get: isTrusted\x2C\n};\n\nfunction isEvent(value) {\n  return typeof value?.[kType] === 'string';\n}\n\nclass Event {\n  #cancelable = false;\n  #bubbles = false;\n  #composed = false;\n  #defaultPrevented = false;\n  #timestamp = now();\n  #propagationStopped = false;\n\n  /**\n   * @param {string} type\n   * @param {{\n   *   bubbles?: boolean\x2C\n   *   cancelable?: boolean\x2C\n   *   composed?: boolean\x2C\n   * }} [options]\n   */\n  constructor(type\x2C options = kEmptyObject) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    validateObject(options\x2C 'options');\n    const { bubbles\x2C cancelable\x2C composed } = options;\n    this.#cancelable = !!cancelable;\n    this.#bubbles = !!bubbles;\n    this.#composed = !!composed;\n\n    this[kType] = `${type}`;\n    if (options?.[kTrustEvent]) {\n      isTrustedSet.add(this);\n    }\n\n    this[kTarget] = null;\n    this[kIsBeingDispatched] = false;\n  }\n\n  /**\n   * @param {string} type\n   * @param {boolean} [bubbles]\n   * @param {boolean} [cancelable]\n   */\n  initEvent(type\x2C bubbles = false\x2C cancelable = false) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n\n    if (this[kIsBeingDispatched]) {\n      return;\n    }\n    this[kType] = `${type}`;\n    this.#bubbles = !!bubbles;\n    this.#cancelable = !!cancelable;\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\n    });\n\n    return `${name} ${inspect({\n      type: this[kType]\x2C\n      defaultPrevented: this.#defaultPrevented\x2C\n      cancelable: this.#cancelable\x2C\n      timeStamp: this.#timestamp\x2C\n    }\x2C opts)}`;\n  }\n\n  stopImmediatePropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    // Spec mention "stopImmediatePropagation should set both "stop propagation"\n    // and "stop immediate propagation" flags"\n    // cf: from https://dom.spec.whatwg.org/#dom-event-stopimmediatepropagation\n    this.stopPropagation();\n    this[kStop] = true;\n  }\n\n  preventDefault() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this.#defaultPrevented = true;\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get target() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get currentTarget() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {EventTarget}\n   */\n  get srcElement() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kTarget];\n  }\n\n  /**\n   * @type {string}\n   */\n  get type() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kType];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get cancelable() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#cancelable;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get defaultPrevented() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#cancelable && this.#defaultPrevented;\n  }\n\n  /**\n   * @type {number}\n   */\n  get timeStamp() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#timestamp;\n  }\n\n\n  // The following are non-op and unused properties/methods from Web API Event.\n  // These are not supported in Node.js and are provided purely for\n  // API completeness.\n  /**\n   * @returns {EventTarget[]}\n   */\n  composedPath() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get returnValue() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return !this.#cancelable || !this.#defaultPrevented;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get bubbles() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#bubbles;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get composed() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#composed;\n  }\n\n  /**\n   * @type {number}\n   */\n  get eventPhase() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get cancelBubble() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    return this.#propagationStopped;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  set cancelBubble(value) {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    if (value) {\n      this.#propagationStopped = true;\n    }\n  }\n\n  stopPropagation() {\n    if (!isEvent(this))\n      throw new ERR_INVALID_THIS('Event');\n    this.#propagationStopped = true;\n  }\n}\n\nObjectDefineProperties(\n  Event.prototype\x2C {\n    [SymbolToStringTag]: {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: 'Event'\x2C\n    }\x2C\n    initEvent: kEnumerableProperty\x2C\n    stopImmediatePropagation: kEnumerableProperty\x2C\n    preventDefault: kEnumerableProperty\x2C\n    target: kEnumerableProperty\x2C\n    currentTarget: kEnumerableProperty\x2C\n    srcElement: kEnumerableProperty\x2C\n    type: kEnumerableProperty\x2C\n    cancelable: kEnumerableProperty\x2C\n    defaultPrevented: kEnumerableProperty\x2C\n    timeStamp: kEnumerableProperty\x2C\n    composedPath: kEnumerableProperty\x2C\n    returnValue: kEnumerableProperty\x2C\n    bubbles: kEnumerableProperty\x2C\n    composed: kEnumerableProperty\x2C\n    eventPhase: kEnumerableProperty\x2C\n    cancelBubble: kEnumerableProperty\x2C\n    stopPropagation: kEnumerableProperty\x2C\n    // Don't conform to the spec with isTrusted. The spec defines it as\n    // LegacyUnforgeable but defining it in the constructor has a big\n    // performance impact and the property doesn't seem to be useful outside of\n    // browsers.\n    isTrusted: isTrustedDescriptor\x2C\n  });\n\nconst staticProps = ['NONE'\x2C 'CAPTURING_PHASE'\x2C 'AT_TARGET'\x2C 'BUBBLING_PHASE'];\n\nObjectDefineProperties(\n  Event\x2C\n  ArrayPrototypeReduce(staticProps\x2C (result\x2C staticProp\x2C index = 0) => {\n    result[staticProp] = {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: false\x2C\n      enumerable: true\x2C\n      value: index\x2C\n    };\n    return result;\n  }\x2C {})\x2C\n);\n\nfunction isCustomEvent(value) {\n  return isEvent(value) && (value?.[kDetail] !== undefined);\n}\n\nclass CustomEvent extends Event {\n  /**\n   * @constructor\n   * @param {string} type\n   * @param {{\n   *   bubbles?: boolean\x2C\n   *   cancelable?: boolean\x2C\n   *   composed?: boolean\x2C\n   *   detail?: any\x2C\n   * }} [options]\n   */\n  constructor(type\x2C options = kEmptyObject) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('type');\n    super(type\x2C options);\n    this[kDetail] = options?.detail ?? null;\n  }\n\n  /**\n   * @type {any}\n   */\n  get detail() {\n    if (!isCustomEvent(this))\n      throw new ERR_INVALID_THIS('CustomEvent');\n    return this[kDetail];\n  }\n}\n\nObjectDefineProperties(CustomEvent.prototype\x2C {\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'CustomEvent'\x2C\n  }\x2C\n  detail: kEnumerableProperty\x2C\n});\n\n// Weak listener cleanup\n// This has to be lazy for snapshots to work\nlet weakListenersState = null;\n// The resource needs to retain the callback so that it doesn't\n// get garbage collected now that it's weak.\nlet objectToWeakListenerMap = null;\nfunction weakListeners() {\n  weakListenersState ??= new SafeFinalizationRegistry(\n    ({ eventTarget\x2C listener\x2C eventType }) => eventTarget.deref()?.[kRemoveWeakListenerHelper](eventType\x2C listener)\x2C\n  );\n  objectToWeakListenerMap ??= new SafeWeakMap();\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\n}\n\nconst kFlagOnce = 1 << 0;\nconst kFlagCapture = 1 << 1;\nconst kFlagPassive = 1 << 2;\nconst kFlagNodeStyle = 1 << 3;\nconst kFlagWeak = 1 << 4;\nconst kFlagRemoved = 1 << 5;\nconst kFlagResistStopPropagation = 1 << 6;\n\n// The listeners for an EventTarget are maintained as a linked list.\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\n// use of capture or bubbling\x2C in order to be spec compliant we have to\n// take on the additional complexity of supporting it. Fortunately\x2C using\n// the linked list makes dispatching faster\x2C even if adding/removing is\n// slower.\nclass Listener {\n  constructor(eventTarget\x2C eventType\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n              isNodeStyleListener\x2C weak\x2C resistStopPropagation) {\n    this.next = undefined;\n    if (previous !== undefined)\n      previous.next = this;\n    this.previous = previous;\n    this.listener = listener;\n\n    let flags = 0b0;\n    if (once)\n      flags |= kFlagOnce;\n    if (capture)\n      flags |= kFlagCapture;\n    if (passive)\n      flags |= kFlagPassive;\n    if (isNodeStyleListener)\n      flags |= kFlagNodeStyle;\n    if (weak)\n      flags |= kFlagWeak;\n    if (resistStopPropagation)\n      flags |= kFlagResistStopPropagation;\n    this.flags = flags;\n\n    this.removed = false;\n\n    if (this.weak) {\n      this.callback = new SafeWeakRef(listener);\n      weakListeners().registry.register(listener\x2C {\n        __proto__: null\x2C\n        // Weak ref so the listener won't hold the eventTarget alive\n        eventTarget: new SafeWeakRef(eventTarget)\x2C\n        listener: this\x2C\n        eventType\x2C\n      }\x2C this);\n      // Make the retainer retain the listener in a WeakMap\n      weakListeners().map.set(weak\x2C listener);\n      this.listener = this.callback;\n    } else if (typeof listener === 'function') {\n      this.callback = listener;\n      this.listener = listener;\n    } else {\n      this.callback = async (...args) => {\n        if (listener.handleEvent)\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\n      };\n      this.listener = listener;\n    }\n  }\n\n  get once() {\n    return Boolean(this.flags & kFlagOnce);\n  }\n  get capture() {\n    return Boolean(this.flags & kFlagCapture);\n  }\n  get passive() {\n    return Boolean(this.flags & kFlagPassive);\n  }\n  get isNodeStyleListener() {\n    return Boolean(this.flags & kFlagNodeStyle);\n  }\n  get weak() {\n    return Boolean(this.flags & kFlagWeak);\n  }\n  get resistStopPropagation() {\n    return Boolean(this.flags & kFlagResistStopPropagation);\n  }\n  get removed() {\n    return Boolean(this.flags & kFlagRemoved);\n  }\n  set removed(value) {\n    if (value)\n      this.flags |= kFlagRemoved;\n    else\n      this.flags &= ~kFlagRemoved;\n  }\n\n  same(listener\x2C capture) {\n    const myListener = this.weak ? this.listener.deref() : this.listener;\n    return myListener === listener && this.capture === capture;\n  }\n\n  remove() {\n    if (this.previous !== undefined)\n      this.previous.next = this.next;\n    if (this.next !== undefined)\n      this.next.previous = this.previous;\n    this.removed = true;\n    if (this.weak)\n      weakListeners().registry.unregister(this);\n  }\n}\n\nfunction initEventTarget(self) {\n  self[kEvents] = new SafeMap();\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\n  self[kMaxEventTargetListenersWarned] = false;\n  self[kHandlers] = new SafeMap();\n}\n\nclass EventTarget {\n  // Used in checking whether an object is an EventTarget. This is a well-known\n  // symbol as EventTarget may be used cross-realm.\n  // Ref: https://github.com/nodejs/node/pull/33661\n  static [kIsEventTarget] = true;\n\n  constructor() {\n    initEventTarget(this);\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\n    if (this[kMaxEventTargetListeners] > 0 &&\n        size > this[kMaxEventTargetListeners] &&\n        !this[kMaxEventTargetListenersWarned]) {\n      this[kMaxEventTargetListenersWarned] = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error('Possible EventTarget memory leak detected. ' +\n                          `${size} ${type} listeners ` +\n                          `added to ${inspect(this\x2C { depth: -1 })}. MaxListeners is ${this[kMaxEventTargetListeners]}. Use ` +\n                          'events.setMaxListeners() to increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.target = this;\n      w.type = type;\n      w.count = size;\n      process.emitWarning(w);\n    }\n  }\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\n\n  /**\n   * @callback EventTargetCallback\n   * @param {Event} event\n   */\n\n  /**\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\n   */\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   *   once?: boolean\x2C\n   *   passive?: boolean\x2C\n   *   signal?: AbortSignal\n   * }} [options]\n   */\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (arguments.length < 2)\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\n\n    // We validateOptions before the validateListener check because the spec\n    // requires us to hit getters.\n    const {\n      once\x2C\n      capture\x2C\n      passive\x2C\n      signal\x2C\n      isNodeStyleListener\x2C\n      weak\x2C\n      resistStopPropagation\x2C\n    } = validateEventListenerOptions(options);\n\n    validateAbortSignal(signal\x2C 'options.signal');\n\n    if (!validateEventListener(listener)) {\n      // The DOM silently allows passing undefined as a second argument\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      const w = new Error(`addEventListener called with ${listener}` +\n                          ' which has no effect.');\n      w.name = 'AddEventListenerArgumentTypeWarning';\n      w.target = this;\n      w.type = type;\n      process.emitWarning(w);\n      return;\n    }\n    type = webidl.converters.DOMString(type);\n\n    if (signal) {\n      if (signal.aborted) {\n        return;\n      }\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\n      // not prevent the event target from GC.\n      signal.addEventListener('abort'\x2C () => {\n        this.removeEventListener(type\x2C listener\x2C options);\n      }\x2C { __proto__: null\x2C once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true });\n    }\n\n    let root = this[kEvents].get(type);\n\n    if (root === undefined) {\n      root = { size: 1\x2C next: undefined\x2C resistStopPropagation: Boolean(resistStopPropagation) };\n      // This is the first handler in our linked list.\n      new Listener(this\x2C type\x2C root\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                   isNodeStyleListener\x2C weak\x2C resistStopPropagation);\n      this[kNewListener](\n        root.size\x2C\n        type\x2C\n        listener\x2C\n        once\x2C\n        capture\x2C\n        passive\x2C\n        weak);\n      this[kEvents].set(type\x2C root);\n      return;\n    }\n\n    let handler = root.next;\n    let previous = root;\n\n    // We have to walk the linked list to see if we have a match\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\n      previous = handler;\n      handler = handler.next;\n    }\n\n    if (handler !== undefined) { // Duplicate! Ignore\n      return;\n    }\n\n    new Listener(this\x2C type\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\n                 isNodeStyleListener\x2C weak\x2C resistStopPropagation);\n    root.size++;\n    root.resistStopPropagation ||= Boolean(resistStopPropagation);\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   */\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (arguments.length < 2)\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\n    if (!validateEventListener(listener))\n      return;\n\n    type = webidl.converters.DOMString(type);\n    const capture = options?.capture === true;\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined)\n      return;\n\n    let handler = root.next;\n    while (handler !== undefined) {\n      if (handler.same(listener\x2C capture)) {\n        handler.remove();\n        root.size--;\n        if (root.size === 0)\n          this[kEvents].delete(type);\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n        break;\n      }\n      handler = handler.next;\n    }\n  }\n\n  [kRemoveWeakListenerHelper](type\x2C listener) {\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined)\n      return;\n\n    const capture = listener.capture === true;\n\n    let handler = root.next;\n    while (handler !== undefined) {\n      if (handler === listener) {\n        handler.remove();\n        root.size--;\n        if (root.size === 0)\n          this[kEvents].delete(type);\n        // Undefined is passed as the listener as the listener was GCed\n        this[kRemoveListener](root.size\x2C type\x2C undefined\x2C capture);\n        break;\n      }\n      handler = handler.next;\n    }\n  }\n\n  /**\n   * @param {Event} event\n   */\n  dispatchEvent(event) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    if (arguments.length < 1)\n      throw new ERR_MISSING_ARGS('event');\n\n    if (!(event instanceof Event))\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\n\n    if (event[kIsBeingDispatched])\n      throw new ERR_EVENT_RECURSION(event.type);\n\n    this[kHybridDispatch](event\x2C event.type\x2C event);\n\n    return event.defaultPrevented !== true;\n  }\n\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\n    const createEvent = () => {\n      if (event === undefined) {\n        event = this[kCreateEvent](nodeValue\x2C type);\n        event[kTarget] = this;\n        event[kIsBeingDispatched] = true;\n      }\n      return event;\n    };\n    if (event !== undefined) {\n      event[kTarget] = this;\n      event[kIsBeingDispatched] = true;\n    }\n\n    const root = this[kEvents].get(type);\n    if (root === undefined || root.next === undefined) {\n      if (event !== undefined)\n        event[kIsBeingDispatched] = false;\n      return true;\n    }\n\n    let handler = root.next;\n    let next;\n\n    const iterationCondition = () => {\n      if (handler === undefined) {\n        return false;\n      }\n      return root.resistStopPropagation || handler.passive || event?.[kStop] !== true;\n    };\n    while (iterationCondition()) {\n      // Cache the next item in case this iteration removes the current one\n      next = handler.next;\n\n      if (handler.removed || (event?.[kStop] === true && !handler.resistStopPropagation)) {\n        // Deal with the case an event is removed while event handlers are\n        // Being processed (removeEventListener called from a listener)\n        // And the case of event.stopImmediatePropagation() being called\n        // For events not flagged as resistStopPropagation\n        handler = next;\n        continue;\n      }\n      if (handler.once) {\n        handler.remove();\n        root.size--;\n        const { listener\x2C capture } = handler;\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\n      }\n\n      try {\n        let arg;\n        if (handler.isNodeStyleListener) {\n          arg = nodeValue;\n        } else {\n          arg = createEvent();\n        }\n        const callback = handler.weak ?\n          handler.callback.deref() : handler.callback;\n        let result;\n        if (callback) {\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\n          if (!handler.isNodeStyleListener) {\n            arg[kIsBeingDispatched] = false;\n          }\n        }\n        if (result !== undefined && result !== null)\n          addCatch(result);\n      } catch (err) {\n        emitUncaughtException(err);\n      }\n\n      handler = next;\n    }\n\n    if (event !== undefined)\n      event[kIsBeingDispatched] = false;\n  }\n\n  [kCreateEvent](nodeValue\x2C type) {\n    return new CustomEvent(type\x2C { detail: nodeValue });\n  }\n  [customInspectSymbol](depth\x2C options) {\n    if (!isEventTarget(this))\n      throw new ERR_INVALID_THIS('EventTarget');\n    const name = this.constructor.name;\n    if (depth < 0)\n      return name;\n\n    const opts = ObjectAssign({}\x2C options\x2C {\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\n    });\n\n    return `${name} ${inspect({}\x2C opts)}`;\n  }\n}\n\nObjectDefineProperties(EventTarget.prototype\x2C {\n  addEventListener: kEnumerableProperty\x2C\n  removeEventListener: kEnumerableProperty\x2C\n  dispatchEvent: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'EventTarget'\x2C\n  }\x2C\n});\n\nfunction initNodeEventTarget(self) {\n  initEventTarget(self);\n}\n\nclass NodeEventTarget extends EventTarget {\n  static [kIsNodeEventTarget] = true;\n  static defaultMaxListeners = 10;\n\n  constructor() {\n    super();\n    initNodeEventTarget(this);\n  }\n\n  /**\n   * @param {number} n\n   */\n  setMaxListeners(n) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    EventEmitter.setMaxListeners(n\x2C this);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getMaxListeners() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return this[kMaxEventTargetListeners];\n  }\n\n  /**\n   * @returns {string[]}\n   */\n  eventNames() {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    return ArrayFrom(this[kEvents].keys());\n  }\n\n  /**\n   * @param {string} type\n   * @returns {number}\n   */\n  listenerCount(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    const root = this[kEvents].get(String(type));\n    return root !== undefined ? root.size : 0;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   * @returns {NodeEventTarget}\n   */\n  off(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @param {{\n   *   capture?: boolean\x2C\n   * }} [options]\n   * @returns {NodeEventTarget}\n   */\n  removeListener(type\x2C listener\x2C options) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.removeEventListener(type\x2C listener\x2C options);\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  on(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  addListener(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} type\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  emit(type\x2C arg) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    validateString(type\x2C 'type');\n    const hadListeners = this.listenerCount(type) > 0;\n    this[kHybridDispatch](arg\x2C type);\n    return hadListeners;\n  }\n\n  /**\n   * @param {string} type\n   * @param {EventTargetCallback|EventListener} listener\n   * @returns {NodeEventTarget}\n   */\n  once(type\x2C listener) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    this.addEventListener(type\x2C listener\x2C\n                          { once: true\x2C [kIsNodeStyleListener]: true });\n    return this;\n  }\n\n  /**\n   * @param {string} [type]\n   * @returns {NodeEventTarget}\n   */\n  removeAllListeners(type) {\n    if (!isNodeEventTarget(this))\n      throw new ERR_INVALID_THIS('NodeEventTarget');\n    if (type !== undefined) {\n      this[kEvents].delete(String(type));\n    } else {\n      this[kEvents].clear();\n    }\n\n    return this;\n  }\n}\n\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\n  setMaxListeners: kEnumerableProperty\x2C\n  getMaxListeners: kEnumerableProperty\x2C\n  eventNames: kEnumerableProperty\x2C\n  listenerCount: kEnumerableProperty\x2C\n  off: kEnumerableProperty\x2C\n  removeListener: kEnumerableProperty\x2C\n  on: kEnumerableProperty\x2C\n  addListener: kEnumerableProperty\x2C\n  once: kEnumerableProperty\x2C\n  emit: kEnumerableProperty\x2C\n  removeAllListeners: kEnumerableProperty\x2C\n});\n\n// EventTarget API\n\nfunction validateEventListener(listener) {\n  if (typeof listener === 'function' ||\n      typeof listener?.handleEvent === 'function') {\n    return true;\n  }\n\n  if (listener == null)\n    return false;\n\n  if (typeof listener === 'object') {\n    // Require `handleEvent` lazily.\n    return true;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\n}\n\nfunction validateEventListenerOptions(options) {\n  if (typeof options === 'boolean')\n    return { capture: options };\n\n  if (options === null)\n    return kEmptyObject;\n  validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjects);\n  return {\n    once: Boolean(options.once)\x2C\n    capture: Boolean(options.capture)\x2C\n    passive: Boolean(options.passive)\x2C\n    signal: options.signal\x2C\n    weak: options[kWeakHandler]\x2C\n    resistStopPropagation: options[kResistStopPropagation] ?? false\x2C\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x2C\n  };\n}\n\n// Test whether the argument is an event object. This is far from a fool-proof\n// test\x2C for example this input will result in a false positive:\n// > isEventTarget({ constructor: EventTarget })\n// It stands in its current implementation as a compromise.\n// Ref: https://github.com/nodejs/node/pull/33661\nfunction isEventTarget(obj) {\n  return obj?.constructor?.[kIsEventTarget];\n}\n\nfunction isNodeEventTarget(obj) {\n  return obj?.constructor?.[kIsNodeEventTarget];\n}\n\nfunction addCatch(promise) {\n  const then = promise.then;\n  if (typeof then === 'function') {\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\n      // The callback is called with nextTick to avoid a follow-up\n      // rejection from this promise.\n      emitUncaughtException(err);\n    });\n  }\n}\n\nfunction emitUncaughtException(err) {\n  process.nextTick(() => { throw err; });\n}\n\nfunction makeEventHandler(handler) {\n  // Event handlers are dispatched in the order they were first set\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\n  function eventHandler(...args) {\n    if (typeof eventHandler.handler !== 'function') {\n      return;\n    }\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\n  }\n  eventHandler.handler = handler;\n  return eventHandler;\n}\n\nfunction defineEventHandler(emitter\x2C name\x2C event = name) {\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\n  const propName = `on${name}`;\n  function get() {\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\n    return this[kHandlers]?.get(event)?.handler ?? null;\n  }\n  ObjectDefineProperty(get\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: `get ${propName}`\x2C\n  });\n\n  function set(value) {\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\n    let wrappedHandler = this[kHandlers]?.get(event);\n    if (wrappedHandler) {\n      if (typeof wrappedHandler.handler === 'function') {\n        this[kEvents].get(event).size--;\n        const size = this[kEvents].get(event).size;\n        this[kRemoveListener](size\x2C event\x2C wrappedHandler.handler\x2C false);\n      }\n      wrappedHandler.handler = value;\n      if (typeof wrappedHandler.handler === 'function') {\n        this[kEvents].get(event).size++;\n        const size = this[kEvents].get(event).size;\n        this[kNewListener](size\x2C event\x2C value\x2C false\x2C false\x2C false\x2C false);\n      }\n    } else {\n      wrappedHandler = makeEventHandler(value);\n      this.addEventListener(event\x2C wrappedHandler);\n    }\n    this[kHandlers].set(event\x2C wrappedHandler);\n  }\n  ObjectDefineProperty(set\x2C 'name'\x2C {\n    __proto__: null\x2C\n    value: `set ${propName}`\x2C\n  });\n\n  ObjectDefineProperty(emitter\x2C propName\x2C {\n    __proto__: null\x2C\n    get\x2C\n    set\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  });\n}\n\nconst EventEmitterMixin = (Superclass) => {\n  class MixedEventEmitter extends Superclass {\n    constructor(...args) {\n      args = new SafeArrayIterator(args);\n      super(...args);\n      FunctionPrototypeCall(EventEmitter\x2C this);\n    }\n  }\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\n  delete protoProps.constructor;\n  const propertiesValues = ObjectValues(protoProps);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\n  return MixedEventEmitter;\n};\n\nmodule.exports = {\n  Event\x2C\n  CustomEvent\x2C\n  EventEmitterMixin\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initEventTarget\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kTrustEvent\x2C\n  kRemoveListener\x2C\n  kEvents\x2C\n  kWeakHandler\x2C\n  kResistStopPropagation\x2C\n  isEventTarget\x2C\n};\n
code-source-info,0x265bfeca29c6,56,0,31962,C0O0C4O31962,,
code-creation,JS,10,61322,0x265bfeca6046,2164, node:internal/event_target:1:1,0x265bfeca2940,~
code-source-info,0x265bfeca
code-creation,JS,10,61351,0x265bfeca6c2e,17,<static_initializer> node:internal/event_target:875:3,0x265bfeca43b8,~
code-source-info,0x265bfeca6c2e,56,23337,23368,C3O23329C9O23366C16O23368,,
code-creation,JS,10,61355,0x265bfeca6cae,11,<static_initializer> node:internal/event_target:553:3,0x265bfeca3fc0,~
code-source-info,0x265bfeca6cae,56,13854,13884,C3O13880C10O13884,,
code-creation,JS,10,61359,0x265bfeca6d3e,65,<instance_members_initializer> node:internal/event_target:102:1,0x265bfeca36e0,~
code-source-info,0x265bfeca6d3e,56,2391,7233,C3O2421C12O2441C21O2462C30O2491C39O2513C46O2513C57O2544C64O7233,,
tick,0x7ee81c4c6e30,61575,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfeca6267,0x7ee79be4b54f,0x7ee79be4ba05,0x265bfec91f9d
code-creation,Eval,10,61642,0x265bfecaa15e,5, node:internal/webidl:1:1,0x265bfeca9f28,~
script-source,57,node:internal/webidl,'use strict';\n\nconst {\n  MathAbs\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathPow\x2C\n  MathSign\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  String\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\nconst { kEmptyObject } = require('internal/util');\n\nconst converters = { __proto__: null };\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-integerpart\nconst integerPart = MathTrunc;\n\n/* eslint-disable node-core/non-ascii-character */\n// Round x to the nearest integer\x2C choosing the even integer if it lies halfway\n// between two\x2C and choosing +0 rather than -0.\n// This is different from Math.round\x2C which rounds to the next integer in the\n// direction of +\u221e when the fraction portion is exactly 0.5.\n/* eslint-enable node-core/non-ascii-character */\nfunction evenRound(x) {\n  // Convert -0 to +0.\n  const i = integerPart(x) + 0;\n  const reminder = MathAbs(x % 1);\n  const sign = MathSign(i);\n  if (reminder === 0.5) {\n    return i % 2 === 0 ? i : i + sign;\n  }\n  const r = reminder < 0.5 ? i : i + sign;\n  // Convert -0 to +0.\n  if (r === 0) {\n    return 0;\n  }\n  return r;\n}\n\nfunction pow2(exponent) {\n  // << operates on 32 bit signed integers.\n  if (exponent < 31) {\n    return 1 << exponent;\n  }\n  if (exponent === 31) {\n    return 0x8000_0000;\n  }\n  if (exponent === 32) {\n    return 0x1_0000_0000;\n  }\n  return MathPow(2\x2C exponent);\n}\n\n// https://tc39.es/ecma262/#eqn-modulo\n// The notation \u201cx modulo y\u201d computes a value k of the same sign as y.\nfunction modulo(x\x2C y) {\n  const r = x % y;\n  // Convert -0 to +0.\n  if (r === 0) {\n    return 0;\n  }\n  return r;\n}\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\nfunction convertToInt(name\x2C value\x2C bitLength\x2C options = kEmptyObject) {\n  const { signed = false\x2C enforceRange = false\x2C clamp = false } = options;\n\n  let upperBound;\n  let lowerBound;\n  // 1. If bitLength is 64\x2C then:\n  if (bitLength === 64) {\n    // 1.1. Let upperBound be 2^53 \u2212 1.\n    upperBound = NumberMAX_SAFE_INTEGER;\n    // 1.2. If signedness is "unsigned"\x2C then let lowerBound be 0.\n    // 1.3. Otherwise let lowerBound be \u22122^53 + 1.\n    lowerBound = !signed ? 0 : NumberMIN_SAFE_INTEGER;\n  } else if (!signed) {\n    // 2. Otherwise\x2C if signedness is "unsigned"\x2C then:\n    // 2.1. Let lowerBound be 0.\n    // 2.2. Let upperBound be 2^bitLength \u2212 1.\n    lowerBound = 0;\n    upperBound = pow2(bitLength) - 1;\n  } else {\n    // 3. Otherwise:\n    // 3.1. Let lowerBound be -2^(bitLength \u2212 1).\n    // 3.2. Let upperBound be 2^(bitLength \u2212 1) \u2212 1.\n    lowerBound = -pow2(bitLength - 1);\n    upperBound = pow2(bitLength - 1) - 1;\n  }\n\n  // 4. Let x be ? ToNumber(V).\n  let x = +value;\n  // 5. If x is \u22120\x2C then set x to +0.\n  if (x === 0) {\n    x = 0;\n  }\n\n  // 6. If the conversion is to an IDL type associated with the [EnforceRange]\n  // extended attribute\x2C then:\n  if (enforceRange) {\n    // 6.1. If x is NaN\x2C +\u221e\x2C or \u2212\u221e\x2C then throw a TypeError.\n    if (NumberIsNaN(x) || x === Infinity || x === -Infinity) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C x);\n    }\n    // 6.2. Set x to IntegerPart(x).\n    x = integerPart(x);\n\n    // 6.3. If x < lowerBound or x > upperBound\x2C then throw a TypeError.\n    if (x < lowerBound || x > upperBound) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C x);\n    }\n\n    // 6.4. Return x.\n    return x;\n  }\n\n  // 7. If x is not NaN and the conversion is to an IDL type associated with\n  // the [Clamp] extended attribute\x2C then:\n  if (clamp && !NumberIsNaN(x)) {\n    // 7.1. Set x to min(max(x\x2C lowerBound)\x2C upperBound).\n    x = MathMin(MathMax(x\x2C lowerBound)\x2C upperBound);\n\n    // 7.2. Round x to the nearest integer\x2C choosing the even integer if it\n    // lies halfway between two\x2C and choosing +0 rather than \u22120.\n    x = evenRound(x);\n\n    // 7.3. Return x.\n    return x;\n  }\n\n  // 8. If x is NaN\x2C +0\x2C +\u221e\x2C or \u2212\u221e\x2C then return +0.\n  if (NumberIsNaN(x) || x === 0 || x === Infinity || x === -Infinity) {\n    return 0;\n  }\n\n  // 9. Set x to IntegerPart(x).\n  x = integerPart(x);\n\n  // 10. Set x to x modulo 2^bitLength.\n  x = modulo(x\x2C pow2(bitLength));\n\n  // 11. If signedness is "signed" and x \u2265 2^(bitLength \u2212 1)\x2C then return x \u2212\n  // 2^bitLength.\n  if (signed && x >= pow2(bitLength - 1)) {\n    return x - pow2(bitLength);\n  }\n\n  // 12. Otherwise\x2C return x.\n  return x;\n}\n\n/**\n * @see https://webidl.spec.whatwg.org/#es-DOMString\n * @param {any} V\n * @returns {string}\n */\nconverters.DOMString = function DOMString(V) {\n  if (typeof V === 'symbol') {\n    throw new ERR_INVALID_ARG_VALUE('value'\x2C V);\n  }\n\n  return String(V);\n};\n\nmodule.exports = {\n  convertToInt\x2C\n  evenRound\x2C\n  converters\x2C\n};\n
code-source-info,0x265bfecaa15e,57,0,4636,C0O0C4O4636,,
code-creation,JS,10,61730,0x265bfecaa48e,204, node:internal/webidl:1:1,0x265bfecaa0d8,~
code-source-info,0x265bfecaa48e,57,0,4636,C0O0C64O25C70O36C76O47C82O58C88O69C94O81C99O94C105O109C111O135C117O161C123O242C126O242C131O204C136O210C142O295C145O295C150O278C156O341C161O445C163O445C165O4415C169O4436C173O4571C180O4592C186O4608C192O4621C198O4586C203O4635,,
code-creation,Eval,10,61840,0x265bfecab386,5, node:internal/perf/utils:1:1,0x265bfecab200,~
script-source,58,node:internal/perf/utils,'use strict';\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN\x2C\n    NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP\x2C\n  }\x2C\n  milestones\x2C\n  now\x2C\n} = internalBinding('performance');\n\nfunction getTimeOrigin() {\n  // Do not cache this to prevent it from being serialized into the\n  // snapshot.\n  return milestones[NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN] / 1e6;\n}\n\n// Returns the milestone relative to the process start time in milliseconds.\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - getTimeOrigin();\n}\n\nfunction getTimeOriginTimestamp() {\n  return milestones[NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP] / 1e3;\n}\n\nmodule.exports = {\n  now\x2C\n  getMilestoneTimestamp\x2C\n  getTimeOriginTimestamp\x2C\n};\n
code-source-info,0x265bfecab386,58,0,810,C0O0C4O810,,
code-creation,JS,10,61866,0x265bfecab5a6,97, node:internal/perf/utils:1:1,0x265bfecab300,~
code-source-info,0x265bfecab5a6,58,0,810,C0O0C30O166C33O166C38O36C43O42C49O86C55O143C61O157C66O730C73O751C79O758C85O783C91O745C96O809,,
code-creation,JS,10,62066,0x265bfecadc4e,36, node:internal/event_target:364:37,0x265bfeca3718,~
code-source-info,0x265bfecadc4e,56,8514,8724,C16O8562C23O8688C29O8574C33O8706C35O8720,,
code-creation,Eval,10,62315,0x265bfecb21b6,5, node:internal/bootstrap/web/exposed-window-or-worker:1:1,0x265bfecb2050,~
script-source,59,node:internal/bootstrap/web/exposed-window-or-worker,'use strict';\n\n/**\n * This file exposes web interfaces that is defined with the WebIDL\n * Exposed=(Window\x2CWorker) extended attribute or exposed in\n * WindowOrWorkerGlobalScope mixin.\n * See more details at https://webidl.spec.whatwg.org/#Exposed and\n * https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope.\n */\n\nconst {\n  globalThis\x2C\n  ObjectDefineProperty\x2C\n} = primordials;\n\nconst {\n  defineOperation\x2C\n  defineLazyProperties\x2C\n  defineReplaceableLazyAttribute\x2C\n  exposeLazyInterfaces\x2C\n} = require('internal/util');\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\nconst timers = require('timers');\ndefineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\ndefineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\ndefineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\ndefineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\n\nconst {\n  queueMicrotask\x2C\n} = require('internal/process/task_queues');\ndefineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\n\nconst { structuredClone } = internalBinding('messaging');\ndefineOperation(globalThis\x2C 'structuredClone'\x2C structuredClone);\ndefineLazyProperties(globalThis\x2C 'buffer'\x2C ['atob'\x2C 'btoa']);\n\n// https://html.spec.whatwg.org/multipage/web-messaging.html#broadcasting-to-other-browsing-contexts\nexposeLazyInterfaces(globalThis\x2C 'internal/worker/io'\x2C ['BroadcastChannel']);\nexposeLazyInterfaces(globalThis\x2C 'internal/worker/io'\x2C [\n  'MessageChannel'\x2C 'MessagePort'\x2C 'MessageEvent'\x2C\n]);\n// https://www.w3.org/TR/FileAPI/#dfn-Blob\nexposeLazyInterfaces(globalThis\x2C 'internal/blob'\x2C ['Blob']);\n// https://www.w3.org/TR/FileAPI/#dfn-file\nexposeLazyInterfaces(globalThis\x2C 'internal/file'\x2C ['File']);\n// https://www.w3.org/TR/hr-time-2/#the-performance-attribute\nexposeLazyInterfaces(globalThis\x2C 'perf_hooks'\x2C [\n  'Performance'\x2C 'PerformanceEntry'\x2C 'PerformanceMark'\x2C 'PerformanceMeasure'\x2C\n  'PerformanceObserver'\x2C 'PerformanceObserverEntryList'\x2C 'PerformanceResourceTiming'\x2C\n]);\n\ndefineReplaceableLazyAttribute(globalThis\x2C 'perf_hooks'\x2C ['performance']);\n\n// https://w3c.github.io/FileAPI/#creating-revoking\nconst { installObjectURLMethods } = require('internal/url');\ninstallObjectURLMethods();\n\nlet fetchImpl;\n// https://fetch.spec.whatwg.org/#fetch-method\nObjectDefineProperty(globalThis\x2C 'fetch'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: true\x2C\n  value: function fetch(input\x2C init = undefined) { // eslint-disable-line func-name-matching\n    if (!fetchImpl) { // Implement lazy loading of undici module for fetch function\n      const undiciModule = require('internal/deps/undici/undici');\n      fetchImpl = undiciModule.fetch;\n    }\n    return fetchImpl(input\x2C init);\n  }\x2C\n});\n\n// https://xhr.spec.whatwg.org/#interface-formdata\n// https://fetch.spec.whatwg.org/#headers-class\n// https://fetch.spec.whatwg.org/#request-class\n// https://fetch.spec.whatwg.org/#response-class\nexposeLazyInterfaces(globalThis\x2C 'internal/deps/undici/undici'\x2C [\n  'FormData'\x2C 'Headers'\x2C 'Request'\x2C 'Response'\x2C\n]);\n\n// The WebAssembly Web API which relies on Response.\n// https:// webassembly.github.io/spec/web-api/#streaming-modules\ninternalBinding('wasm_web_api').setImplementation((streamState\x2C source) => {\n  require('internal/wasm_web_api').wasmStreamingCallback(streamState\x2C source);\n});\n
code-source-info,0x265bfecb21b6,59,0,3352,C0O0C4O3352,,
code-creation,JS,10,62377,0x265bfecb2646,384, node:internal/bootstrap/web/exposed-window-or-worker:1:1,0x265bfecb2130,~
code-source-info,0x265bfecb2646,59,0,3352,C0O0C12O350C17O364C22O517C28O517C33O414C38O433C43O457C48O491C53O643C59O643C64O662C67O714C75O662C80O730C83O781C91O730C96O796C99O846C107O796C112O860C115O909C123O860C128O953C134O953C139O933C144O994C153O994C158O1086C161O1086C166O1066C171O1116C180O1116C185O1181C188O1202C196O1181C201O1345C204O1366C212O1345C217O1423C220O1444C228O1423C233O1578C236O1599C244O1578C249O1682C252O1703C260O1682C265O1805C268O1826C276O1805C281O2023C284O2054C292O2023C297O2187C303O2187C308O2159C313O2212C316O2244C317O2244C319O2302C322O2323C327O2434C338O2302C343O2954C346O2975C354O2954C359O3192C362O3192C367O3223C377O3224C383O3351,,
new,MemoryChunk,0x8e06fa00000,262144
new,MemoryChunk,0x268db2080000,262144
new,MemoryChunk,0x2f9cc0a00000,262144
new,MemoryChunk,0x111923800000,262144
new,MemoryChunk,0xa5dc9c0000,262144
new,MemoryChunk,0x3f7790f40000,262144
new,MemoryChunk,0x74e460c0000,262144
new,MemoryChunk,0x1cd5b0d80000,262144
tick,0x7ee81c141647,62682,0,0x0,1
new,MemoryChunk,0x1f63ecac0000,262144
new,MemoryChunk,0x8b517fc0000,262144
new,MemoryChunk,0x365dd3dc0000,262144
new,MemoryChunk,0xcb902b40000,262144
code-creation,JS,10,63208,0x265bfecb3426,278,defineReplaceableLazyAttribute node:internal/util:640:40,0x307edb92b160,~
code-source-info,0x265bfecb3426,16,17645,18506,C0O17645C42O17696C43O17696C45O17716C56O18503C65O17737C73O17728C77O17721C116O17759C118O17763C121O17759C123O17776C124O17776C126O17806C127O17806C129O18060C139O18081C151O18139C162O18060C167O18235C177O18256C189O18314C200O18235C205O18334C215O18363C223O18449C232O18465C239O18482C243O18334C257O17703C277O18505,,
code-creation,JS,10,63317,0x265bfecb38ee,92,installObjectURLMethods node:internal/url:1144:33,0x1537ab9a4238,~
code-source-info,0x265bfecb38ee,30,33238,34227,C0O33238C18O33265C26O33265C30O33265C32O33880C43O33903C51O33931C58O34041C68O34086C75O34196C85O33880C91O34226,,
code-creation,Eval,10,63552,0x265bfecb7786,5, node:internal/bootstrap/switches/is_main_thread:1:1,0x265bfecb7540,~
script-source,60,node:internal/bootstrap/switches/is_main_thread,'use strict';\n\nconst { ObjectDefineProperty } = primordials;\nconst rawMethods = internalBinding('process_methods');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n// TODO(joyeecheung): deprecate and remove these underscore methods\nprocess._debugProcess = rawMethods._debugProcess;\nprocess._debugEnd = rawMethods._debugEnd;\n\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\n// Five word summary: they were broken beyond repair.\nprocess._startProfilerIdleNotifier = () => {};\nprocess._stopProfilerIdleNotifier = () => {};\n\nfunction defineStream(name\x2C getter) {\n  ObjectDefineProperty(process\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: getter\x2C\n  });\n}\n\ndefineStream('stdout'\x2C getStdout);\ndefineStream('stdin'\x2C getStdin);\ndefineStream('stderr'\x2C getStderr);\n\n// Worker threads don't receive signals.\nconst {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\x2C\n} = require('internal/process/signal');\nprocess.on('newListener'\x2C startListeningIfSignal);\nprocess.on('removeListener'\x2C stopListeningIfSignal);\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst { guessHandleType } = require('internal/util');\n\nfunction createWritableStdioStream(fd) {\n  let stream;\n  // Note stream._type is used for test-module-load-list.js\n  switch (guessHandleType(fd)) {\n    case 'TTY': {\n      const tty = require('tty');\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n      break;\n    }\n\n    case 'FILE': {\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\n      stream._type = 'fs';\n      break;\n    }\n\n    case 'PIPE':\n    case 'TCP': {\n      const net = require('net');\n\n      // If fd is already being used for the IPC channel\x2C libuv will return\n      // an error when trying to use it again. In that case\x2C create the socket\n      // using the existing handle instead of the fd.\n      if (process.channel && process.channel.fd === fd) {\n        const { kChannelHandle } = require('internal/child_process');\n        stream = new net.Socket({\n          handle: process[kChannelHandle]\x2C\n          readable: false\x2C\n          writable: true\x2C\n        });\n      } else {\n        stream = new net.Socket({\n          fd\x2C\n          readable: false\x2C\n          writable: true\x2C\n        });\n      }\n\n      stream._type = 'pipe';\n      break;\n    }\n\n    default: {\n      // Provide a dummy black-hole output for e.g. non-console\n      // Windows applications.\n      const { Writable } = require('stream');\n      stream = new Writable({\n        write(buf\x2C enc\x2C cb) {\n          cb();\n        }\x2C\n      });\n    }\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\nfunction dummyDestroy(err\x2C cb) {\n  cb(err);\n  this._undestroy();\n\n  // We need to emit 'close' anyway so that the closing\n  // of the stream is observable. We just make sure we\n  // are not going to do it twice.\n  // The 'close' event is needed so that finished and\n  // pipeline work correctly.\n  if (!this._writableState.emitClose) {\n    process.nextTick(() => {\n      this.emit('close');\n    });\n  }\n}\n\nlet stdin;\nlet stdout;\nlet stderr;\n\nlet stdoutDestroy;\nlet stderrDestroy;\n\nfunction refreshStdoutOnSigWinch() {\n  stdout._refreshSize();\n}\n\nfunction refreshStderrOnSigWinch() {\n  stderr._refreshSize();\n}\n\nfunction addCleanup(fn) {\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(fn);\n  }\n}\n\nfunction getStdout() {\n  if (stdout) return stdout;\n  stdout = createWritableStdioStream(1);\n  stdout.destroySoon = stdout.destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stdoutDestroy = stdout._destroy;\n  stdout._destroy = dummyDestroy;\n  if (stdout.isTTY) {\n    process.on('SIGWINCH'\x2C refreshStdoutOnSigWinch);\n  }\n\n  addCleanup(function cleanupStdout() {\n    stdout._destroy = stdoutDestroy;\n    stdout.destroy();\n    process.removeListener('SIGWINCH'\x2C refreshStdoutOnSigWinch);\n    stdout = undefined;\n  });\n  // No need to add deserialize callback because stdout = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stdout;\n}\n\nfunction getStderr() {\n  if (stderr) return stderr;\n  stderr = createWritableStdioStream(2);\n  stderr.destroySoon = stderr.destroy;\n  stderrDestroy = stderr._destroy;\n  // Override _destroy so that the fd is never actually closed.\n  stderr._destroy = dummyDestroy;\n  if (stderr.isTTY) {\n    process.on('SIGWINCH'\x2C refreshStderrOnSigWinch);\n  }\n  addCleanup(function cleanupStderr() {\n    stderr._destroy = stderrDestroy;\n    stderr.destroy();\n    process.removeListener('SIGWINCH'\x2C refreshStderrOnSigWinch);\n    stderr = undefined;\n  });\n  // No need to add deserialize callback because stderr = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stderr;\n}\n\nfunction getStdin() {\n  if (stdin) return stdin;\n  const fd = 0;\n\n  switch (guessHandleType(fd)) {\n    case 'TTY': {\n      const tty = require('tty');\n      stdin = new tty.ReadStream(fd);\n      break;\n    }\n\n    case 'FILE': {\n      const fs = require('fs');\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\n      break;\n    }\n\n    case 'PIPE':\n    case 'TCP': {\n      const net = require('net');\n\n      // It could be that process has been started with an IPC channel\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\n      // present and creating a new one will lead to the assertion failure\n      // in libuv.\n      if (process.channel && process.channel.fd === fd) {\n        stdin = new net.Socket({\n          handle: process.channel\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\x2C\n        });\n      } else {\n        stdin = new net.Socket({\n          fd: fd\x2C\n          readable: true\x2C\n          writable: false\x2C\n          manualStart: true\x2C\n        });\n      }\n      // Make sure the stdin can't be `.end()`-ed\n      stdin._writableState.ended = true;\n      break;\n    }\n\n    default: {\n      // Provide a dummy contentless input for e.g. non-console\n      // Windows applications.\n      const { Readable } = require('stream');\n      stdin = new Readable({ read() {} });\n      stdin.push(null);\n    }\n  }\n\n  // For supporting legacy API we put the FD here.\n  stdin.fd = fd;\n\n  // `stdin` starts out life in a paused state\x2C but node doesn't\n  // know yet. Explicitly to readStop() it to put it in the\n  // not-reading state.\n  if (stdin._handle && stdin._handle.readStop) {\n    stdin._handle.reading = false;\n    stdin._readableState.reading = false;\n    stdin._handle.readStop();\n  }\n\n  // If the user calls stdin.pause()\x2C then we need to stop reading\n  // once the stream implementation does so (one nextTick later)\x2C\n  // so that the process can close down.\n  stdin.on('pause'\x2C () => {\n    process.nextTick(onpause);\n  });\n\n  function onpause() {\n    if (!stdin._handle)\n      return;\n    if (stdin._handle.reading && !stdin.readableFlowing) {\n      stdin._readableState.reading = false;\n      stdin._handle.reading = false;\n      stdin._handle.readStop();\n    }\n  }\n\n  addCleanup(function cleanupStdin() {\n    stdin.destroy();\n    stdin = undefined;\n  });\n  // No need to add deserialize callback because stdin = undefined above\n  // causes the stream to be lazily initialized again later.\n  return stdin;\n}\n\n// Used by internal tests.\nrawMethods.resetStdioForTesting = function() {\n  stdin = undefined;\n  stdout = undefined;\n  stderr = undefined;\n};\n\n// Needed by the module loader and generally needed everywhere.\nrequire('fs');\nrequire('util');\nrequire('url'); // eslint-disable-line no-restricted-modules\ninternalBinding('module_wrap');\nrequire('internal/modules/cjs/loader');\nrequire('internal/modules/esm/utils');\n\n// Needed to refresh the time origin.\nrequire('internal/perf/utils');\n// Needed to register the async hooks.\nif (internalBinding('config').hasInspector) {\n  require('internal/inspector_async_hook');\n}\n// Needed to set the wasm web API callbacks.\ninternalBinding('wasm_web_api');\n// Needed to detect whether it's on main thread.\ninternalBinding('worker');\n// Needed by most execution modes.\nrequire('internal/modules/run_main');\n// Needed to refresh DNS configurations.\nrequire('internal/dns/utils');\n// Needed by almost all execution modes. It's fine to\n// load them into the snapshot as long as we don't run\n// any of the initialization.\nrequire('internal/process/pre_execution');\n
code-source-info,0x265bfecb7786,60,0,8706,C0O0C4O8706,,
code-creation,JS,10,63695,0x265bfecb7ece,432, node:internal/bootstrap/switches/is_main_thread:1:1,0x265bfecb7700,~
code-source-info,0x265bfecb7ece,60,0,8706,C0O0C90O23C96O80C99O80C104O198C110O198C115O137C120O143C126O169C132O307C135O342C139O329C143O357C146O388C150O375C154O598C161O633C165O645C172O679C176O863C179O863C184O898C187O898C192O931C195O931C200O1071C206O1071C211O1018C216O1044C221O1107C224O1115C232O1115C238O1158C241O1166C249O1166C255O1397C261O1397C266O1377C272O3438C273O3438C275O3449C276O3449C278O3461C279O3461C281O3474C282O3474C284O3493C285O3493C287O7639C291O7671C295O7819C301O7819C305O7834C311O7834C315O7851C321O7851C325O7912C328O7912C332O7944C338O7944C342O7984C348O7984C352O8062C358O8062C362O8133C365O8137C370O8162C376O8181C382O8181C386O8270C389O8270C393O8352C396O8352C400O8414C406O8414C410O8493C416O8493C420O8663C426O8663C431O8705,,
tick,0x7ee81c5e9d7e,63759,0,0x0,6
code-creation,Eval,10,63869,0x265bfecb95fe,5, node:internal/v8/startup_snapshot:1:1,0x265bfecb93a8,~
script-source,61,node:internal/v8/startup_snapshot,'use strict';\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\nconst {\n  codes: {\n    ERR_NOT_BUILDING_SNAPSHOT\x2C\n    ERR_NOT_SUPPORTED_IN_SNAPSHOT\x2C\n    ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  setSerializeCallback\x2C\n  setDeserializeCallback\x2C\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\n  isBuildingSnapshotBuffer\x2C\n} = internalBinding('mksnapshot');\n\nfunction isBuildingSnapshot() {\n  return isBuildingSnapshotBuffer[0];\n}\n\nfunction throwIfNotBuildingSnapshot() {\n  if (!isBuildingSnapshot()) {\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\n  }\n}\n\nfunction throwIfBuildingSnapshot(reason) {\n  if (isBuildingSnapshot()) {\n    throw new ERR_NOT_SUPPORTED_IN_SNAPSHOT(reason);\n  }\n}\n\nconst deserializeCallbacks = [];\nlet deserializeCallbackIsSet = false;\nfunction runDeserializeCallbacks() {\n  while (deserializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addDeserializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  if (!deserializeCallbackIsSet) {\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\n    // the deserialize callbacks can always be invoked. For now only\n    // store it in C++ when it's actually used to avoid unnecessary\n    // C++ -> JS costs.\n    setDeserializeCallback(runDeserializeCallbacks);\n    deserializeCallbackIsSet = true;\n  }\n  deserializeCallbacks.push([callback\x2C data]);\n}\n\nconst serializeCallbacks = [];\nfunction runSerializeCallbacks() {\n  while (serializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addSerializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  serializeCallbacks.push([callback\x2C data]);\n}\n\nfunction initializeCallbacks() {\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\n  // they throw.\n  if (isBuildingSnapshot()) {\n    setSerializeCallback(runSerializeCallbacks);\n  }\n}\n\nlet deserializeMainIsSet = false;\nfunction setDeserializeMainFunction(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\n  // main function to run the lib/internal/main scripts and make sure that\n  // the main function set in the snapshot building process takes precedence.\n  validateFunction(callback\x2C 'callback');\n  if (deserializeMainIsSet) {\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\n  }\n  deserializeMainIsSet = true;\n\n  _setDeserializeMainFunction(function deserializeMain() {\n    const {\n      prepareMainThreadExecution\x2C\n      markBootstrapComplete\x2C\n    } = require('internal/process/pre_execution');\n\n    // This should be in sync with run_main_module.js until we make that\n    // a built-in main function.\n    // TODO(joyeecheung): make a copy of argv[0] and insert it as argv[1].\n    prepareMainThreadExecution(false);\n    markBootstrapComplete();\n    callback(data);\n  });\n}\n\nmodule.exports = {\n  initializeCallbacks\x2C\n  runDeserializeCallbacks\x2C\n  throwIfBuildingSnapshot\x2C\n  // Exposed to require('v8').startupSnapshot\n  namespace: {\n    addDeserializeCallback\x2C\n    addSerializeCallback\x2C\n    setDeserializeMainFunction\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n};\n
code-source-info,0x265bfecb95fe,61,0,3382,C0O0C4O3382,,
code-creation,JS,10,63931,0x265bfecb9b1e,257, node:internal/v8/startup_snapshot:1:1,0x265bfecb9578,~
code-source-info,0x265bfecb9b1e,61,0,3382,C0O0C94O47C100O47C105O25C111O223C117O223C122O96C127O102C133O133C139O168C145O401C148O401C153O262C159O286C165O340C171O371C177O789C179O789C181O824C182O824C184O1570C186O1570C188O2151C189O2151C191O3107C198O3128C204O3151C210O3178C214O3262C221O3268C227O3296C233O3322C239O3354C251O3122C256O3381,,
code-creation,JS,10,64056,0x265bfecbac1e,29,defineStream node:internal/bootstrap/switches/is_main_thread:21:22,0x265bfecb77b8,~
code-source-info,0x265bfecbac1e,60,713,861,C0O732C8O762C15O846C22O732C28O860,,
code-creation,Eval,10,64142,0x265bfecbba9e,5, node:internal/process/signal:1:1,0x265bfecbb8d8,~
script-source,62,node:internal/process/signal,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n} = require('internal/errors');\n\nconst { signals } = internalBinding('constants').os;\n\nlet Signal;\nconst signalWraps = new SafeMap();\n\nfunction isSignal(event) {\n  return typeof event === 'string' && signals[event] !== undefined;\n}\n\n// Detect presence of a listener for the special signal types\nfunction startListeningIfSignal(type) {\n  if (isSignal(type) && !signalWraps.has(type)) {\n    if (Signal === undefined)\n      Signal = internalBinding('signal_wrap').Signal;\n    const wrap = new Signal();\n\n    wrap.unref();\n\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\n\n    const signum = signals[type];\n    const err = wrap.start(signum);\n    if (err) {\n      wrap.close();\n      throw new ErrnoException(err\x2C 'uv_signal_start');\n    }\n\n    signalWraps.set(type\x2C wrap);\n  }\n}\n\nfunction stopListeningIfSignal(type) {\n  const wrap = signalWraps.get(type);\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\n    wrap.close();\n    signalWraps.delete(type);\n  }\n}\n\nmodule.exports = {\n  startListeningIfSignal\x2C\n  stopListeningIfSignal\x2C\n};\n
code-source-info,0x265bfecbba9e,62,0,1180,C0O0C4O1180,,
code-creation,JS,10,64169,0x265bfecbbcb6,128, node:internal/process/signal:1:1,0x265bfecbba18,~
code-source-info,0x265bfecbbcb6,62,0,1180,C0O0C44O25C50O50C55O107C58O107C63O87C69O156C75O156C80O184C85O144C91O194C92O194C94O222C96O222C101O222C103O1107C110O1128C116O1154C122O1122C127O1179,,
code-creation,JS,10,64245,0x265bfecbc11e,19,_getMaxListeners node:events:420:26,0x305ee1ea70c0,~
code-source-info,0x265bfecbc11e,23,12157,12281,C0O12177C6O12210C9O12230C13O12250C14O12265C18O12279,,
code-creation,JS,10,64262,0x265bfecbc216,5,get node:events:282:16,0x305ee1ea77d0,~
code-source-info,0x265bfecbc216,23,8291,8331,C0O8300C4O8327,,
code-creation,JS,10,64299,0x265bfecbc476,322,arrayClone node:events:894:20,0x305ee1ea72f0,~
code-source-info,0x265bfecbc476,23,25449,25903,C0O25588C42O25610C50O25621C62O25629C71O25634C72O25647C80O25658C92O25666C104O25674C113O25679C114O25692C122O25703C134O25711C146O25719C158O25727C167O25732C168O25745C176O25756C188O25764C200O25772C212O25780C224O25788C233O25793C234O25806C242O25817C254O25825C266O25833C278O25841C290O25849C302O25857C311O25862C312O25869C317O25876C321O25901,,
code-creation,JS,10,64349,0x265bfecbc776,177,startListeningIfSignal node:internal/process/signal:22:32,0x265bfecbbb20,~
code-source-info,0x265bfecbc776,62,429,908,C0O440C3O444C11O463C14O475C19O475C26O492C32O524C38O533C43O563C50O531C56O589C61O589C67O613C72O613C76O627C78O643C84O673C98O643C103O641C107O721C114O728C118O757C123O757C129O776C131O798C136O798C140O813C153O819C158O813C159O874C164O886C169O886C176O907,,
code-creation,JS,10,64373,0x265bfecbcb1e,19,isSignal node:internal/process/signal:17:18,0x265bfecbbad0,~
code-source-info,0x265bfecbcb1e,62,255,334,C0O267C8O303C13O310C17O318C18O332,,
tick,0x7ee81c464672,64837,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfecb800f
code-creation,Eval,10,64861,0x265bfecbdc46,5, node:url:1:1,0x265bfecbd720,~
script-source,63,node:url,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Boolean\x2C\n  Int8Array\x2C\n  ObjectKeys\x2C\n  StringPrototypeCharCodeAt\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { toASCII } = require('internal/idna');\nconst { encodeStr\x2C hexTable } = require('internal/querystring');\nconst querystring = require('querystring');\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_URL\x2C\n} = require('internal/errors').codes;\nconst {\n  validateString\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\n// This ensures setURLConstructor() is called before the native\n// URL::ToObject() method is used.\nconst { spliceOne } = require('internal/util');\n\n// WHATWG URL implementation provided by internal/url\nconst {\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  fileURLToPath\x2C\n  pathToFileURL: _pathToFileURL\x2C\n  urlToHttpOptions\x2C\n  unsafeProtocol\x2C\n  hostlessProtocol\x2C\n  slashedProtocol\x2C\n} = require('internal/url');\n\nconst bindingUrl = internalBinding('url');\n\nconst { getOptionValue } = require('internal/options');\n\n// Original url.parse() API\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986\x2C RFC 1808\x2C RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^[a-z0-9.+-]+:/i;\nconst portPattern = /:[0-9]*$/;\nconst hostPattern = /^\\/\\/[^@/]+@[^@/]+/;\n\n// Special case for a simple path URL\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/;\n\nconst hostnameMaxLen = 255;\nconst {\n  CHAR_SPACE\x2C\n  CHAR_TAB\x2C\n  CHAR_CARRIAGE_RETURN\x2C\n  CHAR_LINE_FEED\x2C\n  CHAR_NO_BREAK_SPACE\x2C\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\x2C\n  CHAR_HASH\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LEFT_SQUARE_BRACKET\x2C\n  CHAR_RIGHT_SQUARE_BRACKET\x2C\n  CHAR_LEFT_ANGLE_BRACKET\x2C\n  CHAR_RIGHT_ANGLE_BRACKET\x2C\n  CHAR_LEFT_CURLY_BRACKET\x2C\n  CHAR_RIGHT_CURLY_BRACKET\x2C\n  CHAR_QUESTION_MARK\x2C\n  CHAR_DOUBLE_QUOTE\x2C\n  CHAR_SINGLE_QUOTE\x2C\n  CHAR_PERCENT\x2C\n  CHAR_SEMICOLON\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_CIRCUMFLEX_ACCENT\x2C\n  CHAR_GRAVE_ACCENT\x2C\n  CHAR_VERTICAL_LINE\x2C\n  CHAR_AT\x2C\n  CHAR_COLON\x2C\n} = require('internal/constants');\n\nlet urlParseWarned = false;\n\nfunction urlParse(url\x2C parseQueryString\x2C slashesDenoteHost) {\n  if (!urlParseWarned && getOptionValue('--pending-deprecation')) {\n    urlParseWarned = true;\n    process.emitWarning(\n      '`url.parse()` behavior is not standardized and prone to ' +\n      'errors that have security implications. Use the WHATWG URL API ' +\n      'instead. CVEs are not issued for `url.parse()` vulnerabilities.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0169'\x2C\n    );\n  }\n\n  if (url instanceof Url) return url;\n\n  const urlObject = new Url();\n  urlObject.parse(url\x2C parseQueryString\x2C slashesDenoteHost);\n  return urlObject;\n}\n\nfunction isIpv6Hostname(hostname) {\n  return (\n    StringPrototypeCharCodeAt(hostname\x2C 0) === CHAR_LEFT_SQUARE_BRACKET &&\n    StringPrototypeCharCodeAt(hostname\x2C hostname.length - 1) ===\n    CHAR_RIGHT_SQUARE_BRACKET\n  );\n}\n\n// This prevents some common spoofing bugs due to our use of IDNA toASCII. For\n// compatibility\x2C the set of characters we use here is the *intersection* of\n// "forbidden host code point" in the WHATWG URL Standard [1] and the\n// characters in the host parsing loop in Url.prototype.parse\x2C with the\n// following additions:\n//\n// - ':' since this could cause a "protocol spoofing" bug\n// - '@' since this could cause parts of the hostname to be confused with auth\n// - '[' and ']' since this could cause a non-IPv6 hostname to be interpreted\n//   as IPv6 by isIpv6Hostname above\n//\n// [1]: https://url.spec.whatwg.org/#forbidden-host-code-point\nconst forbiddenHostChars = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\n// For IPv6\x2C permit '['\x2C ']'\x2C and ':'.\nconst forbiddenHostCharsIpv6 = /[\\0\\t\\n\\r #%/<>?@\\\\^|]/;\n\nUrl.prototype.parse = function parse(url\x2C parseQueryString\x2C slashesDenoteHost) {\n  validateString(url\x2C 'url');\n\n  // Copy chrome\x2C IE\x2C opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  let hasHash = false;\n  let hasAt = false;\n  let start = -1;\n  let end = -1;\n  let rest = '';\n  let lastPos = 0;\n  for (let i = 0\x2C inWs = false\x2C split = false; i < url.length; ++i) {\n    const code = url.charCodeAt(i);\n\n    // Find first and last non-whitespace characters for trimming\n    const isWs = code < 33 ||\n                 code === CHAR_NO_BREAK_SPACE ||\n                 code === CHAR_ZERO_WIDTH_NOBREAK_SPACE;\n    if (start === -1) {\n      if (isWs)\n        continue;\n      lastPos = start = i;\n    } else if (inWs) {\n      if (!isWs) {\n        end = -1;\n        inWs = false;\n      }\n    } else if (isWs) {\n      end = i;\n      inWs = true;\n    }\n\n    // Only convert backslashes while we haven't seen a split character\n    if (!split) {\n      switch (code) {\n        case CHAR_AT:\n          hasAt = true;\n          break;\n        case CHAR_HASH:\n          hasHash = true;\n        // Fall through\n        case CHAR_QUESTION_MARK:\n          split = true;\n          break;\n        case CHAR_BACKWARD_SLASH:\n          if (i - lastPos > 0)\n            rest += url.slice(lastPos\x2C i);\n          rest += '/';\n          lastPos = i + 1;\n          break;\n      }\n    } else if (!hasHash && code === CHAR_HASH) {\n      hasHash = true;\n    }\n  }\n\n  // Check if string was non-empty (including strings with only whitespace)\n  if (start !== -1) {\n    if (lastPos === start) {\n      // We didn't convert any backslashes\n\n      if (end === -1) {\n        if (start === 0)\n          rest = url;\n        else\n          rest = url.slice(start);\n      } else {\n        rest = url.slice(start\x2C end);\n      }\n    } else if (end === -1 && lastPos < url.length) {\n      // We converted some backslashes and have only part of the entire string\n      rest += url.slice(lastPos);\n    } else if (end !== -1 && lastPos < end) {\n      // We converted some backslashes and have only part of the entire string\n      rest += url.slice(lastPos\x2C end);\n    }\n  }\n\n  if (!slashesDenoteHost && !hasHash && !hasAt) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.slice(1));\n        } else {\n          this.query = this.search.slice(1);\n        }\n      } else if (parseQueryString) {\n        this.search = null;\n        this.query = { __proto__: null };\n      }\n      return this;\n    }\n  }\n\n  let proto = protocolPattern.exec(rest);\n  let lowerProto;\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.slice(proto.length);\n  }\n\n  // Figure out if it's got a host\n  // user@server is *always* interpreted as a hostname\x2C and url\n  // resolution will treat //foo/bar as host=foo\x2Cpath=bar because that's\n  // how the browser resolves relative URLs.\n  let slashes;\n  if (slashesDenoteHost || proto || hostPattern.test(rest)) {\n    slashes = rest.charCodeAt(0) === CHAR_FORWARD_SLASH &&\n              rest.charCodeAt(1) === CHAR_FORWARD_SLASH;\n    if (slashes && !(proto && hostlessProtocol.has(lowerProto))) {\n      rest = rest.slice(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol.has(lowerProto) &&\n      (slashes || (proto && !slashedProtocol.has(proto)))) {\n\n    // there's a hostname.\n    // the first instance of /\x2C ?\x2C ;\x2C or # ends the host.\n    //\n    // If there is an @ in the hostname\x2C then non-host chars *are* allowed\n    // to the left of the last @ sign\x2C unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:b path:/?@c\n\n    let hostEnd = -1;\n    let atSign = -1;\n    let nonHost = -1;\n    for (let i = 0; i < rest.length; ++i) {\n      switch (rest.charCodeAt(i)) {\n        case CHAR_TAB:\n        case CHAR_LINE_FEED:\n        case CHAR_CARRIAGE_RETURN:\n          // WHATWG URL removes tabs\x2C newlines\x2C and carriage returns. Let's do that too.\n          rest = rest.slice(0\x2C i) + rest.slice(i + 1);\n          i -= 1;\n          break;\n        case CHAR_SPACE:\n        case CHAR_DOUBLE_QUOTE:\n        case CHAR_PERCENT:\n        case CHAR_SINGLE_QUOTE:\n        case CHAR_SEMICOLON:\n        case CHAR_LEFT_ANGLE_BRACKET:\n        case CHAR_RIGHT_ANGLE_BRACKET:\n        case CHAR_BACKWARD_SLASH:\n        case CHAR_CIRCUMFLEX_ACCENT:\n        case CHAR_GRAVE_ACCENT:\n        case CHAR_LEFT_CURLY_BRACKET:\n        case CHAR_VERTICAL_LINE:\n        case CHAR_RIGHT_CURLY_BRACKET:\n          // Characters that are never ever allowed in a hostname from RFC 2396\n          if (nonHost === -1)\n            nonHost = i;\n          break;\n        case CHAR_HASH:\n        case CHAR_FORWARD_SLASH:\n        case CHAR_QUESTION_MARK:\n          // Find the first instance of any host-ending characters\n          if (nonHost === -1)\n            nonHost = i;\n          hostEnd = i;\n          break;\n        case CHAR_AT:\n          // At this point\x2C either we have an explicit point where the\n          // auth portion cannot go past\x2C or the last @ char is the decider.\n          atSign = i;\n          nonHost = -1;\n          break;\n      }\n      if (hostEnd !== -1)\n        break;\n    }\n    start = 0;\n    if (atSign !== -1) {\n      this.auth = decodeURIComponent(rest.slice(0\x2C atSign));\n      start = atSign + 1;\n    }\n    if (nonHost === -1) {\n      this.host = rest.slice(start);\n      rest = '';\n    } else {\n      this.host = rest.slice(start\x2C nonHost);\n      rest = rest.slice(nonHost);\n    }\n\n    // pull out port.\n    this.parseHost();\n\n    // We've indicated that there is a hostname\x2C\n    // so even if it's empty\x2C it has to be present.\n    if (typeof this.hostname !== 'string')\n      this.hostname = '';\n\n    const hostname = this.hostname;\n\n    // If hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = isIpv6Hostname(hostname);\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      rest = getHostname(this\x2C rest\x2C hostname\x2C url);\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // Hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (this.hostname !== '') {\n      if (ipv6Hostname) {\n        if (forbiddenHostCharsIpv6.test(this.hostname)) {\n          throw new ERR_INVALID_URL(url);\n        }\n      } else {\n        // IDNA Support: Returns a punycoded representation of "domain".\n        // It only converts parts of the domain name that\n        // have non-ASCII characters\x2C i.e. it doesn't matter if\n        // you call it with a domain that already is ASCII-only.\n        this.hostname = toASCII(this.hostname);\n\n        // Prevent two potential routes of hostname spoofing.\n        // 1. If this.hostname is empty\x2C it must have become empty due to toASCII\n        //    since we checked this.hostname above.\n        // 2. If any of forbiddenHostChars appears in this.hostname\x2C it must have\n        //    also gotten in due to toASCII. This is since getHostname would have\n        //    filtered them out otherwise.\n        // Rather than trying to correct this by moving the non-host part into\n        // the pathname as we've done in getHostname\x2C throw an exception to\n        // convey the severity of this issue.\n        if (this.hostname === '' || forbiddenHostChars.test(this.hostname)) {\n          throw new ERR_INVALID_URL(url);\n        }\n      }\n    }\n\n    const p = this.port ? ':' + this.port : '';\n    const h = this.hostname || '';\n    this.host = h + p;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them\x2C though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.slice(1\x2C -1);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // Now rest is set to the post-host stuff.\n  // Chop off any delim chars.\n  if (!unsafeProtocol.has(lowerProto)) {\n    // First\x2C make 100% sure that any "autoEscape" chars get\n    // escaped\x2C even if encodeURIComponent doesn't think they\n    // need to be.\n    rest = autoEscapeStr(rest);\n  }\n\n  let questionIdx = -1;\n  let hashIdx = -1;\n  for (let i = 0; i < rest.length; ++i) {\n    const code = rest.charCodeAt(i);\n    if (code === CHAR_HASH) {\n      this.hash = rest.slice(i);\n      hashIdx = i;\n      break;\n    } else if (code === CHAR_QUESTION_MARK && questionIdx === -1) {\n      questionIdx = i;\n    }\n  }\n\n  if (questionIdx !== -1) {\n    if (hashIdx === -1) {\n      this.search = rest.slice(questionIdx);\n      this.query = rest.slice(questionIdx + 1);\n    } else {\n      this.search = rest.slice(questionIdx\x2C hashIdx);\n      this.query = rest.slice(questionIdx + 1\x2C hashIdx);\n    }\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n  } else if (parseQueryString) {\n    // No query string\x2C but parseQueryString still requested\n    this.search = null;\n    this.query = { __proto__: null };\n  }\n\n  const useQuestionIdx =\n    questionIdx !== -1 && (hashIdx === -1 || questionIdx < hashIdx);\n  const firstIdx = useQuestionIdx ? questionIdx : hashIdx;\n  if (firstIdx === -1) {\n    if (rest.length > 0)\n      this.pathname = rest;\n  } else if (firstIdx > 0) {\n    this.pathname = rest.slice(0\x2C firstIdx);\n  }\n  if (slashedProtocol.has(lowerProto) &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // To support http.request\n  if (this.pathname || this.search) {\n    const p = this.pathname || '';\n    const s = this.search || '';\n    this.path = p + s;\n  }\n\n  // Finally\x2C reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\nlet warnInvalidPort = true;\nfunction getHostname(self\x2C rest\x2C hostname\x2C url) {\n  for (let i = 0; i < hostname.length; ++i) {\n    const code = hostname.charCodeAt(i);\n    const isValid = (code !== CHAR_FORWARD_SLASH &&\n                     code !== CHAR_BACKWARD_SLASH &&\n                     code !== CHAR_HASH &&\n                     code !== CHAR_QUESTION_MARK &&\n                     code !== CHAR_COLON);\n\n    if (!isValid) {\n      // If leftover starts with :\x2C then it represents an invalid port.\n      // But url.parse() is lenient about it for now.\n      // Issue a warning and continue.\n      if (warnInvalidPort && code === CHAR_COLON) {\n        const detail = `The URL ${url} is invalid. Future versions of Node.js will throw an error.`;\n        process.emitWarning(detail\x2C 'DeprecationWarning'\x2C 'DEP0170');\n        warnInvalidPort = false;\n      }\n      self.hostname = hostname.slice(0\x2C i);\n      return `/${hostname.slice(i)}${rest}`;\n    }\n  }\n  return rest;\n}\n\n// Escaped characters. Use empty strings to fill up unused entries.\n// Using Array is faster than Object/Map\nconst escapedCodes = [\n  /* 0 - 9 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%09'\x2C\n  /* 10 - 19 */ '%0A'\x2C ''\x2C ''\x2C '%0D'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 20 - 29 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 30 - 39 */ ''\x2C ''\x2C '%20'\x2C ''\x2C '%22'\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%27'\x2C\n  /* 40 - 49 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 50 - 59 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 60 - 69 */ '%3C'\x2C ''\x2C '%3E'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 70 - 79 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 80 - 89 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 90 - 99 */ ''\x2C ''\x2C '%5C'\x2C ''\x2C '%5E'\x2C ''\x2C '%60'\x2C ''\x2C ''\x2C ''\x2C\n  /* 100 - 109 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 110 - 119 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\n  /* 120 - 125 */ ''\x2C ''\x2C ''\x2C '%7B'\x2C '%7C'\x2C '%7D'\x2C\n];\n\n// Automatically escape all delimiters and unwise characters from RFC 2396.\n// Also escape single quotes in case of an XSS attack.\n// Return the escaped string.\nfunction autoEscapeStr(rest) {\n  let escaped = '';\n  let lastEscapedPos = 0;\n  for (let i = 0; i < rest.length; ++i) {\n    // `escaped` contains substring up to the last escaped character.\n    const escapedChar = escapedCodes[rest.charCodeAt(i)];\n    if (escapedChar) {\n      // Concat if there are ordinary characters in the middle.\n      if (i > lastEscapedPos)\n        escaped += rest.slice(lastEscapedPos\x2C i);\n      escaped += escapedChar;\n      lastEscapedPos = i + 1;\n    }\n  }\n  if (lastEscapedPos === 0)  // Nothing has been escaped.\n    return rest;\n\n  // There are ordinary characters at the end.\n  if (lastEscapedPos < rest.length)\n    escaped += rest.slice(lastEscapedPos);\n\n  return escaped;\n}\n\n// Format a parsed object into a url string\nfunction urlFormat(urlObject\x2C options) {\n  // Ensure it's an object\x2C and not a string url.\n  // If it's an object\x2C this is a no-op.\n  // this way\x2C you can call urlParse() on strings\n  // to clean up potentially wonky urls.\n  if (typeof urlObject === 'string') {\n    urlObject = urlParse(urlObject);\n  } else if (typeof urlObject !== 'object' || urlObject === null) {\n    throw new ERR_INVALID_ARG_TYPE('urlObject'\x2C\n                                   ['Object'\x2C 'string']\x2C urlObject);\n  } else if (urlObject instanceof URL) {\n    let fragment = true;\n    let unicode = false;\n    let search = true;\n    let auth = true;\n\n    if (options) {\n      validateObject(options\x2C 'options');\n\n      if (options.fragment != null) {\n        fragment = Boolean(options.fragment);\n      }\n\n      if (options.unicode != null) {\n        unicode = Boolean(options.unicode);\n      }\n\n      if (options.search != null) {\n        search = Boolean(options.search);\n      }\n\n      if (options.auth != null) {\n        auth = Boolean(options.auth);\n      }\n    }\n\n    return bindingUrl.format(urlObject.href\x2C fragment\x2C unicode\x2C search\x2C auth);\n  }\n\n  return Url.prototype.format.call(urlObject);\n}\n\n// These characters do not need escaping:\n// ! - . _ ~\n// ' ( ) * :\n// digits\n// alpha (uppercase)\n// alpha (lowercase)\nconst noEscapeAuth = new Int8Array([\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C // 0x70 - 0x7F\n]);\n\nUrl.prototype.format = function format() {\n  let auth = this.auth || '';\n  if (auth) {\n    auth = encodeStr(auth\x2C noEscapeAuth\x2C hexTable);\n    auth += '@';\n  }\n\n  let protocol = this.protocol || '';\n  let pathname = this.pathname || '';\n  let hash = this.hash || '';\n  let host = '';\n  let query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (\n      this.hostname.includes(':') && !isIpv6Hostname(this.hostname) ?\n        '[' + this.hostname + ']' :\n        this.hostname\n    );\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query !== null && typeof this.query === 'object') {\n    query = querystring.stringify(this.query);\n  }\n\n  let search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.charCodeAt(protocol.length - 1) !== 58/* : */)\n    protocol += ':';\n\n  let newPathname = '';\n  let lastPos = 0;\n  for (let i = 0; i < pathname.length; ++i) {\n    switch (pathname.charCodeAt(i)) {\n      case CHAR_HASH:\n        if (i - lastPos > 0)\n          newPathname += pathname.slice(lastPos\x2C i);\n        newPathname += '%23';\n        lastPos = i + 1;\n        break;\n      case CHAR_QUESTION_MARK:\n        if (i - lastPos > 0)\n          newPathname += pathname.slice(lastPos\x2C i);\n        newPathname += '%3F';\n        lastPos = i + 1;\n        break;\n    }\n  }\n  if (lastPos > 0) {\n    if (lastPos !== pathname.length)\n      pathname = newPathname + pathname.slice(lastPos);\n    else\n      pathname = newPathname;\n  }\n\n  // Only the slashedProtocols get the //.  Not mailto:\x2C xmpp:\x2C etc.\n  // unless they had them to begin with.\n  if (this.slashes || slashedProtocol.has(protocol)) {\n    if (this.slashes || host) {\n      if (pathname && pathname.charCodeAt(0) !== CHAR_FORWARD_SLASH)\n        pathname = '/' + pathname;\n      host = '//' + host;\n    } else if (protocol.length >= 4 &&\n               protocol.charCodeAt(0) === 102/* f */ &&\n               protocol.charCodeAt(1) === 105/* i */ &&\n               protocol.charCodeAt(2) === 108/* l */ &&\n               protocol.charCodeAt(3) === 101/* e */) {\n      host = '//';\n    }\n  }\n\n  search = search.replace(/#/g\x2C '%23');\n\n  if (hash && hash.charCodeAt(0) !== CHAR_HASH)\n    hash = '#' + hash;\n  if (search && search.charCodeAt(0) !== CHAR_QUESTION_MARK)\n    search = '?' + search;\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source\x2C relative) {\n  return urlParse(source\x2C false\x2C true).resolve(relative);\n}\n\nUrl.prototype.resolve = function resolve(relative) {\n  return this.resolveObject(urlParse(relative\x2C false\x2C true)).format();\n};\n\nfunction urlResolveObject(source\x2C relative) {\n  if (!source) return relative;\n  return urlParse(source\x2C false\x2C true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function resolveObject(relative) {\n  if (typeof relative === 'string') {\n    const rel = new Url();\n    rel.parse(relative\x2C false\x2C true);\n    relative = rel;\n  }\n\n  const result = new Url();\n  const tkeys = ObjectKeys(this);\n  for (let tk = 0; tk < tkeys.length; tk++) {\n    const tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // Hash is always overridden\x2C no matter what.\n  // even href="" will remove it.\n  result.hash = relative.hash;\n\n  // If the relative url is empty\x2C then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // Hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // Take everything except the protocol from relative\n    const rkeys = ObjectKeys(relative);\n    for (let rk = 0; rk < rkeys.length; rk++) {\n      const rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol.has(result.protocol) &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // If it's a known url protocol\x2C then changing\n    // the protocol does weird things\n    // first\x2C if it's not file:\x2C then we MUST have a host\x2C\n    // and if there was a path\n    // to begin with\x2C then we MUST have a path.\n    // if it is file:\x2C then the host is dropped\x2C\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol.has(relative.protocol)) {\n      const keys = ObjectKeys(relative);\n      for (let v = 0; v < keys.length; v++) {\n        const k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host &&\n        !/^file:?$/.test(relative.protocol) &&\n        !hostlessProtocol.has(relative.protocol)) {\n      const relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // To support http.request\n    if (result.pathname || result.search) {\n      const p = result.pathname || '';\n      const s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  const isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/');\n  const isRelAbs = (\n    relative.host || (relative.pathname && relative.pathname.charAt(0) === '/')\n  );\n  let mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname));\n  const removeAllDots = mustEndAbs;\n  let srcPath = (result.pathname && result.pathname.split('/')) || [];\n  const relPath = (relative.pathname && relative.pathname.split('/')) || [];\n  const noLeadingSlashes = result.protocol &&\n      !slashedProtocol.has(result.protocol);\n\n  // If the url is a non-slashed url\x2C then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname\x2C as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on\x2C put the first path part into the host field.\n  if (noLeadingSlashes) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      result.auth = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    if (relative.host || relative.host === '') {\n      if (result.host !== relative.host) result.auth = null;\n      result.host = relative.host;\n      result.port = relative.port;\n    }\n    if (relative.hostname || relative.hostname === '') {\n      if (result.hostname !== relative.hostname) result.auth = null;\n      result.hostname = relative.hostname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // Fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file\x2C and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search !== null && relative.search !== undefined) {\n    // Just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (noLeadingSlashes) {\n      result.hostname = result.host = srcPath.shift();\n      // Occasionally the auth can get stuck only in host.\n      // This especially happens in cases like\n      // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\n      const authInHost =\n        result.host && result.host.indexOf('@') > 0 && result.host.split('@');\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // To support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // No path at all. All other things were already handled above.\n    result.pathname = null;\n    // To support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // If a url ENDs in . or ..\x2C then it must get a trailing slash.\n  // however\x2C if it ends in anything else non-slashy\x2C\n  // then it must NOT get a trailing slash.\n  let last = srcPath.slice(-1)[0];\n  const hasTrailingSlash = (\n    ((result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..')) || last === '');\n\n  // Strip single dots\x2C resolve double dots to parent dir\n  // if the path tries to go above the root\x2C `up` ends up > 0\n  let up = 0;\n  for (let i = srcPath.length - 1; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      spliceOne(srcPath\x2C i);\n    } else if (last === '..') {\n      spliceOne(srcPath\x2C i);\n      up++;\n    } else if (up) {\n      spliceOne(srcPath\x2C i);\n      up--;\n    }\n  }\n\n  // If the path is allowed to go above the root\x2C restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    while (up--) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').slice(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  const isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (noLeadingSlashes) {\n    result.hostname =\n      result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    // Occasionally the auth can get stuck only in host.\n    // This especially happens in cases like\n    // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\n    const authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  // To support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function parseHost() {\n  let host = this.host;\n  let port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.slice(1);\n    }\n    host = host.slice(0\x2C host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n// When used internally\x2C we are not obligated to associate TypeError with\n// this function\x2C so non-strings can be rejected by underlying implementation.\n// Public API has to validate input and throw appropriate error.\nfunction pathToFileURL(path\x2C options) {\n  validateString(path\x2C 'path');\n\n  return _pathToFileURL(path\x2C options);\n}\n\nmodule.exports = {\n  // Original API\n  Url\x2C\n  parse: urlParse\x2C\n  resolve: urlResolve\x2C\n  resolveObject: urlResolveObject\x2C\n  format: urlFormat\x2C\n\n  // WHATWG API\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n\n  // Utilities\n  pathToFileURL\x2C\n  fileURLToPath\x2C\n  urlToHttpOptions\x2C\n};\n
code-source-info,0x265bfecbdc46,63,0,32657,C0O0C4O32657,,
code-creation,JS,10,65359,0x265bfecbed16,841, node:url:1:1,0x265bfecbdbc0,~
code-source-info,0x265bfecbed
code-creation,Eval,10,65467,0x365dd3dd91fe,5, node:internal/idna:1:1,0x365dd3dd90b8,~
script-source,64,node:internal/idna,'use strict';\n\nconst { toASCII\x2C toUnicode } = internalBinding('encoding_binding');\nmodule.exports = { toASCII\x2C toUnicode };\n
code-source-info,0x365dd3dd91fe,64,0,124,C0O0C4O124,,
code-creation,JS,10,65489,0x365dd3dd92d6,43, node:internal/idna:1:1,0x365dd3dd9178,~
code-source-info,0x365dd3dd92d6,64,0,124,C0O46C3O46C8O23C13O32C18O83C25O102C31O111C37O98C42O123,,
tick,0x7ee81bedcab3,65913,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfecb8020
code-creation,Eval,10,66368,0x365dd3ddc53e,5, node:internal/modules/cjs/loader:1:1,0x365dd3ddafa8,~
script-source,65,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n} = primordials;\nconst {\n  privateSymbols: {\n    module_source_private_symbol\x2C\n    module_export_names_private_symbol\x2C\n    module_circular_visited_private_symbol\x2C\n    module_export_private_symbol\x2C\n    module_parent_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\nconst { kEvaluated } = internalBinding('module_wrap');\n\n// Internal properties for Module instances.\n/**\n * Cached {@link Module} source string.\n */\nconst kModuleSource = module_source_private_symbol;\n/**\n * Cached {@link Module} export names for ESM loader.\n */\nconst kModuleExportNames = module_export_names_private_symbol;\n/**\n * {@link Module} circular dependency visited flag.\n */\nconst kModuleCircularVisited = module_circular_visited_private_symbol;\n/**\n * {@link Module} export object snapshot for ESM loader.\n */\nconst kModuleExport = module_export_private_symbol;\n/**\n * {@link Module} parent module.\n */\nconst kModuleParent = module_parent_private_symbol;\n\nconst kIsMainSymbol = Symbol('kIsMainSymbol');\nconst kIsCachedByESMLoader = Symbol('kIsCachedByESMLoader');\nconst kRequiredModuleSymbol = Symbol('kRequiredModuleSymbol');\nconst kIsExecuting = Symbol('kIsExecuting');\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  kModuleSource\x2C\n  kModuleExport\x2C\n  kModuleExportNames\x2C\n  kModuleCircularVisited\x2C\n  initializeCJS\x2C\n  Module\x2C\n  wrapSafe\x2C\n  kIsMainSymbol\x2C\n  kIsCachedByESMLoader\x2C\n  kRequiredModuleSymbol\x2C\n  kIsExecuting\x2C\n};\n\nconst { BuiltinModule } = require('internal/bootstrap/realm');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\nconst {\n  pendingDeprecate\x2C\n  emitExperimentalWarning\x2C\n  kEmptyObject\x2C\n  setOwnProperty\x2C\n  getLazy\x2C\n} = require('internal/util');\nconst {\n  makeContextifyScript\x2C\n  runScriptInThisContext\x2C\n} = require('internal/vm');\nconst {\n  containsModuleSyntax\x2C\n  compileFunctionForCJSLoader\x2C\n} = internalBinding('contextify');\n\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst path = require('path');\nconst { internalModuleStat } = internalBinding('fs');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  privateSymbols: {\n    require_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\nconst {\n  getCjsConditions\x2C\n  initializeCjsConditions\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  setHasStartedUserCJSExecution\x2C\n  stripBOM\x2C\n  toRealPath\x2C\n} = require('internal/modules/helpers');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\nconst policy = getLazy(\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\x2C\n);\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\n\nconst permission = require('internal/process/permission');\nconst {\n  vm_dynamic_import_default_internal\x2C\n} = internalBinding('symbols');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_CYCLE_MODULE\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\n\nconst {\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n} = require('internal/constants');\n\nconst {\n  isProxy\x2C\n} = require('internal/util/types');\n\nconst isWindows = process.platform === 'win32';\n\nconst relativeResolveCache = { __proto__: null };\n\nlet requireDepth = 0;\nlet isPreloading = false;\nlet statCache = null;\n\n/**\n * Our internal implementation of `require`.\n * @param {Module} module Parent module of what is being required\n * @param {string} id Specifier of the child module being imported\n */\nfunction internalRequire(module\x2C id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C module\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n}\n\n/**\n * Get a path's properties\x2C using an in-memory cache to minimize lookups.\n * @param {string} filename Absolute path to the file\n */\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) { return result; }\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nlet _stat = stat;\nObjectDefineProperty(Module\x2C '_stat'\x2C {\n  __proto__: null\x2C\n  get() { return _stat; }\x2C\n  set(stat) {\n    emitExperimentalWarning('Module._stat');\n    _stat = stat;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\n/**\n * Update the parent's children array with the child module.\n * @param {Module} parent Module requiring the children\n * @param {Module} child Module being required\n * @param {boolean} scan Add the child to the parent's children if not already present\n */\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\n    ArrayPrototypePush(children\x2C child);\n  }\n}\n\n/**\n * Tell the watch mode that a module was required.\n * @param {string} filename Absolute path of the module\n */\nfunction reportModuleToWatchMode(filename) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': [filename] });\n  }\n}\n\n/**\n * Tell the watch mode that a module was not found.\n * @param {string} basePath The absolute path that errored\n * @param {string[]} extensions The extensions that were tried\n */\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\n  }\n}\n\n/**\n * Create a new module instance.\n * @param {string} id\n * @param {Module} parent\n */\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  setOwnProperty(this\x2C 'exports'\x2C {});\n  this[kModuleParent] = parent;\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n  let redirects;\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const moduleURL = pathToFileURL(id);\n    redirects = manifest.getDependencyMapper(moduleURL);\n    // TODO(rafaelgss): remove the necessity of this branch\n    setOwnProperty(this\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\n    // eslint-disable-next-line no-proto\n    setOwnProperty(this.__proto__\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\n  }\n  this[require_private_symbol] = internalRequire;\n}\n\n/** @type {Record<string\x2C Module>} */\nModule._cache = { __proto__: null };\n/** @type {Record<string\x2C string>} */\nModule._pathCache = { __proto__: null };\n/** @type {Record<string\x2C (module: Module\x2C filename: string) => void>} */\nModule._extensions = { __proto__: null };\n/** @type {string[]} */\nlet modulePaths = [];\n/** @type {string[]} */\nModule.globalPaths = [];\n\nlet patched = false;\n\n/**\n * Add the CommonJS wrapper around a module's source code.\n * @param {string} script Module source code\n */\nlet wrap = function(script) { // eslint-disable-line func-style\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  __proto__: null\x2C\n\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\x2C\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\x2C\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\x2C\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\n/**\n * Get the parent of the current module from our cache.\n * @this {Module}\n */\nfunction getModuleParent() {\n  return this[kModuleParent];\n}\n\n/**\n * Set the parent of the current module in our cache.\n * @this {Module}\n * @param {Module} value\n */\nfunction setModuleParent(value) {\n  this[kModuleParent] = value;\n}\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  get: pendingDeprecate(\n    getModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\x2C\n  )\x2C\n  set: pendingDeprecate(\n    setModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\x2C\n  )\x2C\n});\nModule._debug = pendingDeprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\nModule.isBuiltin = BuiltinModule.isBuiltin;\n\n/**\n * Prepare to run CommonJS code.\n * This function is called during pre-execution\x2C before any user code is run.\n */\nfunction initializeCJS() {\n  // This need to be done at runtime in case --expose-internals is set.\n  const builtinModules = BuiltinModule.getCanBeRequiredByUsersWithoutSchemeList();\n  Module.builtinModules = ObjectFreeze(builtinModules);\n\n  initializeCjsConditions();\n\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\n    Module._initPaths();\n  }\n\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n\n  if (getOptionValue('--experimental-require-module')) {\n    emitExperimentalWarning('Support for loading ES Module in require()');\n    Module._extensions['.mjs'] = loadESMFromCJS;\n  }\n}\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nlet _readPackage = packageJsonReader.readPackage;\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\n  __proto__: null\x2C\n  get() { return _readPackage; }\x2C\n  set(readPackage) {\n    emitExperimentalWarning('Module._readPackage');\n    _readPackage = readPackage;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\n/**\n * Try to load a specifier as a package.\n * @param {string} requestPath The path to what we are trying to load\n * @param {string[]} exts File extensions to try appending in order to resolve the file\n * @param {boolean} isMain Whether the file is the main entry point of the app\n * @param {string} originalPath The specifier passed to `require`\n */\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const pkg = _readPackage(requestPath).main;\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\x2C\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = path.resolve(requestPath\x2C 'package.json');\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\n      process.emitWarning(\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\x2C\n      );\n    }\n  }\n  return actual;\n}\n\n/**\n * Check if the file exists and is not a directory if using `--preserve-symlinks` and `isMain` is false or\n * `--preserve-symlinks-main` and `isMain` is true \x2C keep symlinks intact\x2C otherwise resolve to the absolute realpath.\n * @param {string} requestPath The path to the file to load.\n * @param {boolean} isMain Whether the file is the main module.\n */\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = _stat(requestPath);\n  if (rc !== 0) { return; }\n  if (getOptionValue(isMain ? '--preserve-symlinks-main' : '--preserve-symlinks')) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\n/**\n * Given a path\x2C check if the file exists with any of the set extensions.\n * @param {string} basePath The path and filename without extension\n * @param {string[]} exts The extensions to try\n * @param {boolean} isMain Whether the module is the main module\n */\nfunction tryExtensions(basePath\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(basePath + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n/**\n * Find the longest (possibly multi-dot) extension registered in `Module._extensions`.\n * @param {string} filename The filename to find the longest registered extension for.\n */\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) { continue; } // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) { return currentExtension; }\n  }\n  return '.js';\n}\n\n/**\n * Tries to get the absolute file path of the parent module.\n * @param {Module} parent The parent module object.\n */\nfunction trySelfParentPath(parent) {\n  if (!parent) { return false; }\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\n/**\n * Attempt to resolve a module request using the parent module package metadata.\n * @param {string} parentPath The path of the parent module\n * @param {string} request The module request to resolve\n */\nfunction trySelf(parentPath\x2C request) {\n  if (!parentPath) { return false; }\n\n  const { data: pkg\x2C path: pkgPath } = packageJsonReader.readPackageScope(parentPath);\n  if (!pkg || pkg.exports == null || pkg.name === undefined) {\n    return false;\n  }\n\n  let expansion;\n  if (request === pkg.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkgPath);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND') {\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n    }\n    throw e;\n  }\n}\n\n/**\n * This only applies to requests of a specific form:\n * 1. `name/.*`\n * 2. `@scope/name/.*`\n */\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\n\n/**\n * Resolves the exports for a given module path and request.\n * @param {string} nmPath The path to the module.\n * @param {string} request The request for the module.\n */\nfunction resolveExports(nmPath\x2C request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\n  if (!name) { return; }\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = _readPackage(pkgPath);\n  if (pkg.exists && pkg.exports != null) {\n    try {\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        getCjsConditions())\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND') {\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      }\n      throw e;\n    }\n  }\n}\n\n// We don't cache this in case user extends the extensions.\nfunction getDefaultExtensions() {\n  const extensions = ObjectKeys(Module._extensions);\n  if (!getOptionValue('--experimental-require-module')) {\n    return extensions;\n  }\n  // If the .mjs extension is added by --experimental-require-module\x2C\n  // remove it from the supported default extensions to maintain\n  // compatibility.\n  // TODO(joyeecheung): allow both .mjs and .cjs?\n  return ArrayPrototypeFilter(extensions\x2C (ext) => ext !== '.mjs' || Module._extensions['.mjs'] !== loadESMFromCJS);\n}\n\n/**\n * Get the absolute path to a module.\n * @param {string} request Relative or absolute file path\n * @param {Array<string>} paths Folders to search as file paths\n * @param {boolean} isMain Whether the request is the main app entry point\n * @returns {string | false}\n */\nModule._findPath = function(request\x2C paths\x2C isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry) {\n    return entry;\n  }\n\n  let exts;\n  const trailingSlash = request.length > 0 &&\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\n      (\n        request.length === 1 ||\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\n          request.length === 2 ||\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\n        ))\n      )\n    ));\n\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\n    (\n      request.length === 1 ||\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\n        request.length === 2 ||\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\n    );\n  let insidePath = true;\n  if (isRelative) {\n    const normalizedRequest = path.normalize(request);\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\n      insidePath = false;\n    }\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    // or doesn't have permission to it\n    const curPath = paths[i];\n    if (insidePath && curPath &&\n      ((permission.isEnabled() && !permission.has('fs.read'\x2C curPath)) || _stat(curPath) < 1)\n    ) {\n      continue;\n    }\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request);\n      if (exportsResolved) {\n        return exportsResolved;\n      }\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = _stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (getOptionValue('--preserve-symlinks')) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (getOptionValue('--preserve-symlinks-main')) {\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the --preserve-symlinks-main option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined) {\n          exts = getDefaultExtensions();\n        }\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined) {\n        exts = getDefaultExtensions();\n      }\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n\n    const extensions = [''];\n    if (exts !== undefined) {\n      ArrayPrototypePushApply(extensions\x2C exts);\n    }\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\n  }\n\n  return false;\n};\n\n/** `node_modules` character codes reversed */\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  /**\n   * Get the paths to the `node_modules` folder for a given path.\n   * @param {string} from `__dirname` of the module\n   */\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON) {\n      return [from + 'node_modules'];\n    }\n\n    /** @type {string[]} */\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen) {\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\n          );\n        }\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  /**\n   * Get the paths to the `node_modules` folder for a given path.\n   * @param {string} from `__dirname` of the module\n   */\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/') {\n      return ['/node_modules'];\n    }\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    /** @type {string[]} */\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen) {\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\n          );\n        }\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\n/**\n * Get the paths for module resolution.\n * @param {string} request\n * @param {Module} parent\n */\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if (BuiltinModule.normalizeRequirableId(request)) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    /** @type {string[]} */\n    let paths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeSlice(modulePaths);\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\n    } else {\n      paths = modulePaths;\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\n/**\n * Emits a warning when a non-existent property of module exports is accessed inside a circular dependency.\n * @param {string} prop The name of the non-existent property.\n */\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\x2C\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  __proto__: null\x2C\n\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') { return target[prop]; }\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule') {\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    }\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n});\n\n/**\n * Returns the exports object for a module that has a circular `require`.\n * If the exports object is a plain object\x2C it is wrapped in a proxy that warns\n * about circular dependencies.\n * @param {Module} module The module instance\n */\nfunction getExportsForCircularRequire(module) {\n  const requiredESM = module[kRequiredModuleSymbol];\n  if (requiredESM && requiredESM.getStatus() !== kEvaluated) {\n    let message = `Cannot require() ES Module ${module.id} in a cycle.`;\n    const parent = module[kModuleParent];\n    if (parent) {\n      message += ` (from ${parent.filename})`;\n    }\n    throw new ERR_REQUIRE_CYCLE_MODULE(message);\n  }\n\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n/**\n * Load a module from cache if it exists\x2C otherwise create a new module instance.\n * 1. If a module already exists in the cache: return its exports object.\n * 2. If the module is native: call\n *    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\n * 3. Otherwise\x2C create a new module for the file and save it to the cache.\n *    Then have it load the file contents before returning its exports object.\n * @param {string} request Specifier of module to load via `require`\n * @param {string} parent Absolute path of the module importing the child\n * @param {boolean} isMain Whether the module is the main entry point\n */\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    reportModuleToWatchMode(filename);\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded) {\n          return getExportsForCircularRequire(cachedModule);\n        }\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(request\x2C 5);\n\n    if (!BuiltinModule.canBeRequiredByUsers(id)) {\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\n    }\n\n    const module = loadBuiltinModule(id\x2C request);\n    return module.exports;\n  }\n\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (cachedModule.loaded) {\n      return cachedModule.exports;\n    }\n    // If it's not cached by the ESM loader\x2C the loading request\n    // comes from required CJS\x2C and we can consider it a circular\n    // dependency when it's cached.\n    if (!cachedModule[kIsCachedByESMLoader]) {\n      return getExportsForCircularRequire(cachedModule);\n    }\n    // If it's cached by the ESM loader as a way to indirectly pass\n    // the module in to avoid creating it twice\x2C the loading request\n    // came from imported CJS. In that case use the kModuleCircularVisited\n    // to determine if it's loading or not.\n    if (cachedModule[kModuleCircularVisited]) {\n      return getExportsForCircularRequire(cachedModule);\n    }\n    // This is an ESM loader created cache entry\x2C mark it as visited and fallthrough to loading the module.\n    cachedModule[kModuleCircularVisited] = true;\n  }\n\n  if (BuiltinModule.canBeRequiredWithoutScheme(filename)) {\n    const mod = loadBuiltinModule(filename\x2C request);\n    return mod.exports;\n  }\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (!cachedModule) {\n    if (isMain) {\n      setOwnProperty(process\x2C 'mainModule'\x2C module);\n      setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\n      module.id = '.';\n      module[kIsMainSymbol] = true;\n    } else {\n      module[kIsMainSymbol] = false;\n    }\n\n    reportModuleToWatchMode(filename);\n    Module._cache[filename] = module;\n    module[kIsCachedByESMLoader] = false;\n  }\n\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\n/**\n * Given a `require` string and its context\x2C get its absolute file path.\n * @param {string} request The specifier to resolve\n * @param {Module} parent The module containing the `require` call\n * @param {boolean} isMain Whether the module is the main entry point\n * @param {ResolveFilenameOptions} options Options object\n * @typedef {object} ResolveFilenameOptions\n * @property {string[]} paths Paths to search for modules in\n */\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (BuiltinModule.normalizeRequirableId(request)) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\n          StringPrototypeStartsWith(request\x2C '../') ||\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n            }\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\n    const pkg = packageJsonReader.readPackageScope(parentPath) || { __proto__: null };\n    if (pkg.data?.imports != null) {\n      try {\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\n        return finalizeEsmResolution(\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\n                                getCjsConditions())\x2C parentPath\x2C\n          pkg.path);\n      } catch (e) {\n        if (e.code === 'ERR_MODULE_NOT_FOUND') {\n          throw createEsmNotFoundErr(request);\n        }\n        throw e;\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain);\n  if (filename) { return filename; }\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = cursor[kModuleParent]) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\n/**\n * Finishes resolving an ES module specifier into an absolute file path.\n * @param {string} resolved The resolved module specifier\n * @param {string} parentPath The path of the parent module\n * @param {string} pkgPath The path of the package.json file\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the resolved module specifier contains encoded `/` or `\\\\` characters\n * @throws {Error} If the module cannot be found\n */\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  }\n  const filename = fileURLToPath(resolved);\n  const actual = tryFile(filename);\n  if (actual) {\n    return actual;\n  }\n  const err = createEsmNotFoundErr(filename\x2C\n                                   path.resolve(pkgPath\x2C 'package.json'));\n  throw err;\n}\n\n/**\n * Creates an error object for when a requested ES module cannot be found.\n * @param {string} request The name of the requested module\n * @param {string} [path] The path to the requested module\n */\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path) {\n    err.path = path;\n  }\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n/**\n * Given a file name\x2C pass it to the proper extension handler.\n * @param {string} filename The `require` specifier\n */\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename = filename;\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs']) {\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\n  }\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache for ESM loader.\n  this[kModuleExport] = exports;\n};\n\n/**\n * Loads a module at the given file path. Returns that module's `exports` property.\n * Note: when using the experimental policy mechanism this function is overridden.\n * @param {string} id\n * @throws {ERR_INVALID_ARG_TYPE} When `id` is not a string\n */\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\n/**\n * Resolved path to `process.argv[1]` will be lazily placed here\n * (needed for setting breakpoint when called with `--inspect-brk`).\n * @type {string | undefined}\n */\nlet resolvedArgv;\nlet hasPausedEntry = false;\n/** @type {import('vm').Script} */\n\n/**\n * Resolve and evaluate it synchronously as ESM if it's ESM.\n * @param {Module} mod CJS module instance\n * @param {string} filename Absolute path of the file.\n */\nfunction loadESMFromCJS(mod\x2C filename) {\n  const source = getMaybeCachedSource(mod\x2C filename);\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n  const isMain = mod[kIsMainSymbol];\n  // TODO(joyeecheung): we may want to invent optional special handling for default exports here.\n  // For now\x2C it's good enough to be identical to what `import()` returns.\n  mod.exports = cascadedLoader.importSyncForRequire(mod\x2C filename\x2C source\x2C isMain\x2C mod[kModuleParent]);\n}\n\n/**\n * Wraps the given content in a script and runs it in a new context.\n * @param {string} filename The name of the file being loaded\n * @param {string} content The content of the file being loaded\n * @param {Module} cjsModuleInstance The CommonJS loader instance\n * @param {object} codeCache The SEA code cache\n */\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance\x2C codeCache) {\n  const hostDefinedOptionId = vm_dynamic_import_default_internal;\n  const importModuleDynamically = vm_dynamic_import_default_internal;\n  if (patched) {\n    const wrapped = Module.wrap(content);\n    const script = makeContextifyScript(\n      wrapped\x2C                 // code\n      filename\x2C                // filename\n      0\x2C                       // lineOffset\n      0\x2C                       // columnOffset\n      undefined\x2C               // cachedData\n      false\x2C                   // produceCachedData\n      undefined\x2C               // parsingContext\n      hostDefinedOptionId\x2C     // hostDefinedOptionId\n      importModuleDynamically\x2C // importModuleDynamically\n    );\n\n    // Cache the source map for the module if present.\n    const { sourceMapURL } = script;\n    if (sourceMapURL) {\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C sourceMapURL);\n    }\n\n    return {\n      __proto__: null\x2C\n      function: runScriptInThisContext(script\x2C true\x2C false)\x2C\n      sourceMapURL\x2C\n    };\n  }\n\n  try {\n    const result = compileFunctionForCJSLoader(content\x2C filename);\n\n    // cachedDataRejected is only set for cache coming from SEA.\n    if (codeCache &&\n        result.cachedDataRejected !== false &&\n        internalBinding('sea').isSea()) {\n      process.emitWarning('Code cache data rejected.');\n    }\n\n    // Cache the source map for the module if present.\n    if (result.sourceMapURL) {\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\n    }\n\n    return result;\n  } catch (err) {\n    if (process.mainModule === cjsModuleInstance) {\n      const { enrichCJSError } = require('internal/modules/esm/translators');\n      enrichCJSError(err\x2C content\x2C filename);\n    }\n    throw err;\n  }\n}\n\n/**\n * Run the file contents in the correct scope or sandbox. Expose the correct helper variables (`require`\x2C `module`\x2C\n * `exports`) to the file. Returns exception\x2C if any.\n * @param {string} content The source code of the module\n * @param {string} filename The file path of the module\n * @param {boolean} loadAsESM Whether it's known to be ESM via .mjs or "type" in package.json.\n */\nModule.prototype._compile = function(content\x2C filename\x2C loadAsESM = false) {\n  let moduleURL;\n  let redirects;\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    moduleURL = pathToFileURL(filename);\n    redirects = manifest.getDependencyMapper(moduleURL);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  // TODO(joyeecheung): when the module is the entry point\x2C consider allowing TLA.\n  // Only modules being require()'d really need to avoid TLA.\n  if (loadAsESM) {\n    // Pass the source into the .mjs extension handler indirectly through the cache.\n    this[kModuleSource] = content;\n    loadESMFromCJS(this\x2C filename);\n    return;\n  }\n\n  const { function: compiledWrapper } = wrapSafe(filename\x2C content\x2C this);\n\n  // TODO(joyeecheung): the detection below is unnecessarily complex. Using the\n  // kIsMainSymbol\x2C or a kBreakOnStartSymbol that gets passed from\n  // higher level instead of doing hacky detection here.\n  let inspectorWrapper = null;\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\n    if (!resolvedArgv) {\n      // We enter the repl if we're not given a filename argument.\n      if (process.argv[1]) {\n        try {\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\n        } catch {\n          // We only expect this codepath to be reached in the case of a\n          // preloaded module (it will fail earlier with the main entry)\n          assert(ArrayIsArray(getOptionValue('--require')));\n        }\n      } else {\n        resolvedArgv = 'repl';\n      }\n    }\n\n    // Set breakpoint on module start\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\n      hasPausedEntry = true;\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\n    }\n  }\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) { statCache = new SafeMap(); }\n  setHasStartedUserCJSExecution();\n  this[kIsExecuting] = true;\n  if (inspectorWrapper) {\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\n                              require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  this[kIsExecuting] = false;\n  if (requireDepth === 0) { statCache = null; }\n  return result;\n};\n\n/**\n * Get the source code of a module\x2C using cached ones if it's cached.\n * @param {Module} mod Module instance whose source is potentially already cached.\n * @param {string} filename Absolute path to the file of the module.\n * @returns {string}\n */\nfunction getMaybeCachedSource(mod\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  let content;\n  if (mod[kModuleSource] !== undefined) {\n    content = mod[kModuleSource];\n    mod[kModuleSource] = undefined;\n  } else {\n    // TODO(joyeecheung): we can read a buffer instead to speed up\n    // compilation.\n    content = fs.readFileSync(filename\x2C 'utf8');\n  }\n  return content;\n}\n\n/**\n * Built-in handler for `.js` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.js'] = function(module\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  const content = getMaybeCachedSource(module\x2C filename);\n\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    const pkg = packageJsonReader.readPackageScope(filename) || { __proto__: null };\n    // Function require shouldn't be used in ES modules.\n    if (pkg.data?.type === 'module') {\n      if (getOptionValue('--experimental-require-module')) {\n        module._compile(content\x2C filename\x2C true);\n        return;\n      }\n\n      // This is an error path because `require` of a `.js` file in a `"type": "module"` scope is not allowed.\n      const parent = module[kModuleParent];\n      const parentPath = parent?.filename;\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\n      const usesEsm = containsModuleSyntax(content\x2C filename);\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                      packageJsonPath);\n      // Attempt to reconstruct the parent require frame.\n      if (Module._cache[parentPath]) {\n        let parentSource;\n        try {\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\n        } catch {\n          // Continue regardless of error.\n        }\n        if (parentSource) {\n          const errLine = StringPrototypeSplit(\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n          const { 1: line\x2C 2: col } =\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n          if (line && col) {\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n            setArrowMessage(err\x2C frame);\n          }\n        }\n      }\n      throw err;\n    }\n  }\n\n  module._compile(content\x2C filename\x2C false);\n};\n\n/**\n * Native handler for `.json` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.json'] = function(module\x2C filename) {\n  const content = fs.readFileSync(filename\x2C 'utf8');\n\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const moduleURL = pathToFileURL(filename);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  try {\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n/**\n * Native handler for `.node` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.node'] = function(module\x2C filename) {\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const content = fs.readFileSync(filename);\n    const moduleURL = pathToFileURL(filename);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\n/**\n * Creates a `require` function that can be used to load modules from the specified path.\n * @param {string} filename The path to the module\n */\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\n/**\n * Creates a new `require` function that can be used to load modules.\n * @param {string | URL} filename The path or URL to the module context for this `require`\n * @throws {ERR_INVALID_ARG_VALUE} If `filename` is not a string or URL\x2C or if it is a relative path that cannot be\n * resolved to an absolute path.\n */\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURL(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\nModule.createRequire = createRequire;\n\n/**\n * Define the paths to use for resolving a module.\n */\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\x2C\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\n/**\n * Handle modules loaded via `--require`.\n * @param {string[]} requests The values of `--require`\n */\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests)) { return; }\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++) {\n    internalRequire(parent\x2C requests[n]);\n  }\n  isPreloading = false;\n};\n\n/**\n * If the user has overridden an export from a builtin module\x2C this function can ensure that the override is used in\n * both CommonJS and ES module contexts.\n */\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of BuiltinModule.map.values()) {\n    if (BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\n      mod.syncExports();\n    }\n  }\n};\n\nObjectDefineProperty(Module.prototype\x2C 'constructor'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return policy() ? undefined : Module;\n  }\x2C\n  configurable: false\x2C\n  enumerable: false\x2C\n});\n\n// Backwards compatibility\nModule.Module = Module;\n
code-source-info,0x365dd3ddc53e,65,0,55858,C0O0C4O55858,,
code-creation,JS,10,67289,0x365dd3dde786,2718, node:internal/modules/cjs/loader:1:1,0x365dd3ddc4b8,~
code-source-info,0x365dd3dde
tick,0x7ee81a51b6c0,67340,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfecb8020
code-creation,Eval,10,67625,0x365dd3de3c9e,5, node:internal/modules/package_json_reader:1:1,0x365dd3de3a08,~
script-source,66,node:internal/modules/package_json_reader,'use strict';\n\nconst {\n  JSONParse\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\nconst {\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n} = require('internal/errors').codes;\nconst { internalModuleReadJSON } = internalBinding('fs');\nconst { resolve\x2C sep\x2C toNamespacedPath } = require('path');\nconst permission = require('internal/process/permission');\nconst { kEmptyObject } = require('internal/util');\n\nconst { fileURLToPath\x2C pathToFileURL } = require('internal/url');\n\nconst cache = new SafeMap();\nconst isAIX = process.platform === 'aix';\n\nlet manifest;\n\n/**\n * @typedef {{\n *   exists: boolean\x2C\n *   pjsonPath: string\x2C\n *   exports?: string | string[] | Record<string\x2C unknown>\x2C\n *   imports?: string | string[] | Record<string\x2C unknown>\x2C\n *   name?: string\x2C\n *   main?: string\x2C\n *   type: 'commonjs' | 'module' | 'none'\x2C\n * }} PackageConfig\n */\n\n/**\n * @param {string} jsonPath\n * @param {{\n *   base?: string\x2C\n *   specifier: string\x2C\n *   isESM: boolean\x2C\n * }} options\n * @returns {PackageConfig}\n */\nfunction read(jsonPath\x2C { base\x2C specifier\x2C isESM } = kEmptyObject) {\n  if (cache.has(jsonPath)) {\n    return cache.get(jsonPath);\n  }\n\n  const {\n    0: string\x2C\n    1: containsKeys\x2C\n  } = internalModuleReadJSON(\n    toNamespacedPath(jsonPath)\x2C\n  );\n  const result = {\n    __proto__: null\x2C\n    exists: false\x2C\n    pjsonPath: jsonPath\x2C\n    main: undefined\x2C\n    name: undefined\x2C\n    type: 'none'\x2C // Ignore unknown types for forwards compatibility\n    exports: undefined\x2C\n    imports: undefined\x2C\n  };\n\n  // Folder read operation succeeds in AIX.\n  // For libuv change\x2C see https://github.com/libuv/libuv/pull/2025.\n  // https://github.com/nodejs/node/pull/48477#issuecomment-1604586650\n  // TODO(anonrig): Follow-up on this change and remove it since it is a\n  // semver-major change.\n  const isResultValid = isAIX && !isESM ? containsKeys : string !== undefined;\n\n  if (isResultValid) {\n    let parsed;\n    try {\n      parsed = JSONParse(string);\n    } catch (error) {\n      if (isESM) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          jsonPath\x2C\n          (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\n          error.message\x2C\n        );\n      } else {\n        // For backward compat\x2C we modify the error returned by JSON.parse rather than creating a new one.\n        // TODO(aduh95): make it throw ERR_INVALID_PACKAGE_CONFIG in a semver-major with original error as cause\n        error.message = 'Error parsing ' + jsonPath + ': ' + error.message;\n        error.path = jsonPath;\n        throw error;\n      }\n    }\n\n    result.exists = true;\n\n    // ObjectPrototypeHasOwnProperty is used to avoid prototype pollution.\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'name') && typeof parsed.name === 'string') {\n      result.name = parsed.name;\n    }\n\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'main') && typeof parsed.main === 'string') {\n      result.main = parsed.main;\n    }\n\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'exports')) {\n      result.exports = parsed.exports;\n    }\n\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'imports')) {\n      result.imports = parsed.imports;\n    }\n\n    // Ignore unknown types for forwards compatibility\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'type') && (parsed.type === 'commonjs' || parsed.type === 'module')) {\n      result.type = parsed.type;\n    }\n\n    if (manifest === undefined) {\n      const { getOptionValue } = require('internal/options');\n      manifest = getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').manifest :\n        null;\n    }\n    if (manifest !== null) {\n      const jsonURL = pathToFileURL(jsonPath);\n      manifest.assertIntegrity(jsonURL\x2C string);\n    }\n  }\n  cache.set(jsonPath\x2C result);\n  return result;\n}\n\n/**\n * @param {string} requestPath\n * @return {PackageConfig}\n */\nfunction readPackage(requestPath) {\n  return read(resolve(requestPath\x2C 'package.json'));\n}\n\n/**\n * Get the nearest parent package.json file from a given path.\n * Return the package.json data and the path to the package.json file\x2C or false.\n * @param {string} checkPath The path to start searching from.\n */\nfunction readPackageScope(checkPath) {\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\n  let separatorIndex;\n  const enabledPermission = permission.isEnabled();\n  do {\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\n    // Stop the search when the process doesn't have permissions\n    // to walk upwards\n    if (enabledPermission && !permission.has('fs.read'\x2C checkPath + sep)) {\n      return false;\n    }\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules')) {\n      return false;\n    }\n    const pjson = readPackage(checkPath + sep);\n    if (pjson.exists) {\n      return {\n        data: pjson\x2C\n        path: checkPath\x2C\n      };\n    }\n  } while (separatorIndex > rootSeparatorIndex);\n  return false;\n}\n\nmodule.exports = {\n  read\x2C\n  readPackage\x2C\n  readPackageScope\x2C\n};\n
code-source-info,0x365dd3de3c9e,66,0,5124,C0O0C4O5124,,
code-creation,JS,10,67716,0x365dd3de3f56,293, node:internal/modules/package_json_reader:1:1,0x365dd3de3c18,~
code-source-info,0x365dd3de3f56,66,0,5124,C0O0C80O25C86O38C92O71C97O82C103O109C109O135C115O165C121O246C127O246C132O272C137O214C143O315C146O315C151O288C157O381C163O381C168O346C174O355C180O360C186O417C192O417C196O417C198O482C204O482C209O465C215O550C221O550C226O517C232O532C238O590C240O590C245O590C247O627C254O636C257O619C259O652C260O652C262O5059C269O5080C275O5088C281O5103C287O5074C292O5123,,
code-creation,JS,10,67838,0x365dd3de4e06,48,pendingDeprecate node:internal/util:133:26,0x307edb92a7a0,~
code-source-info,0x365dd3de4e06,16,3372,3644,C0O3372C17O3423C38O3423C43O3423C45O3624C47O3642,,
tick,0x7ee81c1dcf44,68056,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfecb802a
code-creation,Eval,10,68079,0x365dd3de5ffe,5, node:internal/modules/esm/utils:1:1,0x365dd3de5c78,~
script-source,67,node:internal/modules/esm/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  ObjectFreeze\x2C\n} = primordials;\n\nconst {\n  privateSymbols: {\n    host_defined_option_symbol\x2C\n  }\x2C\n} = internalBinding('util');\nconst {\n  source_text_module_default_hdo\x2C\n  vm_dynamic_import_default_internal\x2C\n  vm_dynamic_import_main_context_default\x2C\n  vm_dynamic_import_missing_flag\x2C\n  vm_dynamic_import_no_callback\x2C\n} = internalBinding('symbols');\n\nconst { ModuleWrap } = internalBinding('module_wrap');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\n\nconst {\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG\x2C\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = require('internal/errors').codes;\nconst { getOptionValue } = require('internal/options');\nconst {\n  loadPreloadModules\x2C\n  initializeFrozenIntrinsics\x2C\n} = require('internal/process/pre_execution');\nconst {\n  emitExperimentalWarning\x2C\n  getCWDURL\x2C\n} = require('internal/util');\nconst {\n  setImportModuleDynamicallyCallback\x2C\n  setInitializeImportMetaObjectCallback\x2C\n} = internalBinding('module_wrap');\nconst assert = require('internal/assert');\nconst {\n  normalizeReferrerURL\x2C\n} = require('internal/modules/helpers');\n\nlet defaultConditions;\n/**\n * Returns the default conditions for ES module loading.\n */\nfunction getDefaultConditions() {\n  assert(defaultConditions !== undefined);\n  return defaultConditions;\n}\n\n/** @type {Set<string>} */\nlet defaultConditionsSet;\n/**\n * Returns the default conditions for ES module loading\x2C as a Set.\n */\nfunction getDefaultConditionsSet() {\n  assert(defaultConditionsSet !== undefined);\n  return defaultConditionsSet;\n}\n\n/**\n * Initializes the default conditions for ESM module loading.\n * This function is called during pre-execution\x2C before any user code is run.\n */\nfunction initializeDefaultConditions() {\n  const userConditions = getOptionValue('--conditions');\n  const noAddons = getOptionValue('--no-addons');\n  const addonConditions = noAddons ? [] : ['node-addons'];\n\n  defaultConditions = ObjectFreeze([\n    'node'\x2C\n    'import'\x2C\n    ...addonConditions\x2C\n    ...userConditions\x2C\n  ]);\n  defaultConditionsSet = new SafeSet(defaultConditions);\n}\n\n/**\n * @param {string[]} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return getDefaultConditionsSet();\n}\n\n/**\n * @callback ImportModuleDynamicallyCallback\n * @param {string} specifier\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\n * @param {Record<string\x2C string>} attributes\n * @returns { Promise<void> }\n */\n\n/**\n * @callback InitializeImportMetaCallback\n * @param {object} meta\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\n */\n\n/**\n * @typedef {{\n *   callbackReferrer: ModuleWrap|ContextifyScript|Function|vm.Module\n *   initializeImportMeta? : InitializeImportMetaCallback\x2C\n *   importModuleDynamically? : ImportModuleDynamicallyCallback\n * }} ModuleRegistry\n */\n\n/**\n * @type {WeakMap<symbol\x2C ModuleRegistry>}\n */\nconst moduleRegistries = new SafeWeakMap();\n\n/**\n * @typedef {ContextifyScript|Function|ModuleWrap|ContextifiedObject} Referrer\n * A referrer can be a Script Record\x2C a Cyclic Module Record\x2C or a Realm Record\n * as defined in https://tc39.es/ecma262/#sec-HostLoadImportedModule.\n *\n * In Node.js\x2C a referrer is represented by a wrapper object of these records.\n * A referrer object has a field |host_defined_option_symbol| initialized with\n * a symbol.\n */\n\n/**\n * V8 would make sure that as long as import() can still be initiated from\n * the referrer\x2C the symbol referenced by |host_defined_option_symbol| should\n * be alive\x2C which in term would keep the settings object alive through the\n * WeakMap\x2C and in turn that keeps the referrer object alive\x2C which would be\n * passed into the callbacks.\n * The reference goes like this:\n * [v8::internal::Script] (via host defined options) ----1--> [idSymbol]\n * [callbackReferrer] (via host_defined_option_symbol) ------2------^  |\n *                                 ^----------3---- (via WeakMap)------\n * 1+3 makes sure that as long as import() can still be initiated\x2C the\n * referrer wrap is still around and can be passed into the callbacks.\n * 2 is only there so that we can get the id symbol to configure the\n * weak map.\n * @param {Referrer} referrer The referrer to\n *   get the id symbol from. This is different from callbackReferrer which\n *   could be set by the caller.\n * @param {ModuleRegistry} registry\n */\nfunction registerModule(referrer\x2C registry) {\n  const idSymbol = referrer[host_defined_option_symbol];\n  if (idSymbol === vm_dynamic_import_no_callback ||\n      idSymbol === vm_dynamic_import_missing_flag ||\n      idSymbol === vm_dynamic_import_main_context_default ||\n      idSymbol === vm_dynamic_import_default_internal) {\n    // The referrer is compiled without custom callbacks\x2C so there is\n    // no registry to hold on to. We'll throw\n    // ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING when a callback is\n    // needed.\n    return;\n  }\n  // To prevent it from being GC'ed.\n  registry.callbackReferrer ??= referrer;\n  moduleRegistries.set(idSymbol\x2C registry);\n}\n\n/**\n * Proxy the import meta handling to the default loader for source text modules.\n * @param {Record<string\x2C string | Function>} meta - The import.meta object to initialize.\n * @param {ModuleWrap} wrap - The ModuleWrap of the SourceTextModule where `import.meta` is referenced.\n */\nfunction defaultInitializeImportMetaForModule(meta\x2C wrap) {\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n  return cascadedLoader.importMetaInitialize(meta\x2C { url: wrap.url });\n}\n\n/**\n * Defines the `import.meta` object for a given module.\n * @param {symbol} symbol - Reference to the module.\n * @param {Record<string\x2C string | Function>} meta - The import.meta object to initialize.\n * @param {ModuleWrap} wrap - The ModuleWrap of the SourceTextModule where `import.meta` is referenced.\n */\nfunction initializeImportMetaObject(symbol\x2C meta\x2C wrap) {\n  if (symbol === source_text_module_default_hdo) {\n    defaultInitializeImportMetaForModule(meta\x2C wrap);\n    return;\n  }\n  const data = moduleRegistries.get(symbol);\n  assert(data\x2C `import.meta registry not found for ${wrap.url}`);\n  const { initializeImportMeta\x2C callbackReferrer } = data;\n  if (initializeImportMeta !== undefined) {\n    meta = initializeImportMeta(meta\x2C callbackReferrer);\n  }\n}\n\n/**\n * Proxy the dynamic import handling to the default loader for source text modules.\n * @param {string} specifier - The module specifier string.\n * @param {Record<string\x2C string>} attributes - The import attributes object.\n * @param {string|null|undefined} referrerName - name of the referrer.\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\n */\nfunction defaultImportModuleDynamicallyForModule(specifier\x2C attributes\x2C referrerName) {\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n  return cascadedLoader.import(specifier\x2C referrerName\x2C attributes);\n}\n\n/**\n * Proxy the dynamic import to the default loader for classic scripts.\n * @param {string} specifier - The module specifier string.\n * @param {Record<string\x2C string>} attributes - The import attributes object.\n * @param {string|null|undefined} referrerName - name of the referrer.\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\n */\nfunction defaultImportModuleDynamicallyForScript(specifier\x2C attributes\x2C referrerName) {\n  const parentURL = normalizeReferrerURL(referrerName);\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n  return cascadedLoader.import(specifier\x2C parentURL\x2C attributes);\n}\n\n/**\n * Asynchronously imports a module dynamically using a callback function. The native callback.\n * @param {symbol} referrerSymbol - Referrer symbol of the registered script\x2C function\x2C module\x2C or contextified object.\n * @param {string} specifier - The module specifier string.\n * @param {Record<string\x2C string>} attributes - The import attributes object.\n * @param {string|null|undefined} referrerName - name of the referrer.\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\n * @throws {ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING} - If the callback function is missing.\n */\nasync function importModuleDynamicallyCallback(referrerSymbol\x2C specifier\x2C attributes\x2C referrerName) {\n  // For user-provided vm.constants.USE_MAIN_CONTEXT_DEFAULT_LOADER\x2C emit the warning\n  // and fall back to the default loader.\n  if (referrerSymbol === vm_dynamic_import_main_context_default) {\n    emitExperimentalWarning('vm.USE_MAIN_CONTEXT_DEFAULT_LOADER');\n    return defaultImportModuleDynamicallyForScript(specifier\x2C attributes\x2C referrerName);\n  }\n  // For script compiled internally that should use the default loader to handle dynamic\n  // import\x2C proxy the request to the default loader without the warning.\n  if (referrerSymbol === vm_dynamic_import_default_internal) {\n    return defaultImportModuleDynamicallyForScript(specifier\x2C attributes\x2C referrerName);\n  }\n  // For SourceTextModules compiled internally\x2C proxy the request to the default loader.\n  if (referrerSymbol === source_text_module_default_hdo) {\n    return defaultImportModuleDynamicallyForModule(specifier\x2C attributes\x2C referrerName);\n  }\n\n  if (moduleRegistries.has(referrerSymbol)) {\n    const { importModuleDynamically\x2C callbackReferrer } = moduleRegistries.get(referrerSymbol);\n    if (importModuleDynamically !== undefined) {\n      return importModuleDynamically(specifier\x2C callbackReferrer\x2C attributes);\n    }\n  }\n  if (referrerSymbol === vm_dynamic_import_missing_flag) {\n    throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG();\n  }\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\n}\n\nlet _forceDefaultLoader = false;\n/**\n * Initializes handling of ES modules.\n * This is configured during pre-execution. Specifically it's set to true for\n * the loader worker in internal/main/worker_thread.js.\n * @param {boolean} [forceDefaultLoader=false] - A boolean indicating disabling custom loaders.\n */\nfunction initializeESM(forceDefaultLoader = false) {\n  _forceDefaultLoader = forceDefaultLoader;\n  initializeDefaultConditions();\n  // Setup per-realm callbacks that locate data or callbacks that we keep\n  // track of for different ESM modules.\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\n}\n\n/**\n * Determine whether custom loaders are disabled and it is forced to use the\n * default loader.\n * @returns {boolean}\n */\nfunction forceDefaultLoader() {\n  return _forceDefaultLoader;\n}\n\n/**\n * Register module customization hooks.\n */\nasync function initializeHooks() {\n  const customLoaderURLs = getOptionValue('--experimental-loader');\n\n  const { Hooks } = require('internal/modules/esm/hooks');\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n\n  const hooks = new Hooks();\n  cascadedLoader.setCustomizations(hooks);\n\n  // We need the loader customizations to be set _before_ we start invoking\n  // `--require`\x2C otherwise loops can happen because a `--require` script\n  // might call `register(...)` before we've installed ourselves. These\n  // global values are magically set in `setupUserModules` just for us and\n  // we call them in the correct order.\n  // N.B.  This block appears here specifically in order to ensure that\n  // `--require` calls occur before `--loader` ones do.\n  loadPreloadModules();\n  initializeFrozenIntrinsics();\n\n  const parentURL = getCWDURL().href;\n  for (let i = 0; i < customLoaderURLs.length; i++) {\n    await hooks.register(\n      customLoaderURLs[i]\x2C\n      parentURL\x2C\n    );\n  }\n\n  const preloadScripts = hooks.initializeGlobalPreload();\n\n  return { __proto__: null\x2C hooks\x2C preloadScripts };\n}\n\n/**\n * Compile a SourceTextModule for the built-in ESM loader. Register it for default\n * source map and import.meta and dynamic import() handling if cascadedLoader is provided.\n * @param {string} url URL of the module.\n * @param {string} source Source code of the module.\n * @param {typeof import('./loader.js').ModuleLoader|undefined} cascadedLoader If provided\x2C\n *        register the module for default handling.\n * @returns {ModuleWrap}\n */\nfunction compileSourceTextModule(url\x2C source\x2C cascadedLoader) {\n  const hostDefinedOption = cascadedLoader ? source_text_module_default_hdo : undefined;\n  const wrap = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0\x2C hostDefinedOption);\n\n  if (!cascadedLoader) {\n    return wrap;\n  }\n  // Cache the source map for the module if present.\n  if (wrap.sourceMapURL) {\n    maybeCacheSourceMap(url\x2C source\x2C null\x2C false\x2C undefined\x2C wrap.sourceMapURL);\n  }\n  return wrap;\n}\n\nmodule.exports = {\n  registerModule\x2C\n  initializeESM\x2C\n  initializeHooks\x2C\n  getDefaultConditions\x2C\n  getConditionsSet\x2C\n  loaderWorkerId: 'internal/modules/esm/worker'\x2C\n  forceDefaultLoader\x2C\n  compileSourceTextModule\x2C\n};\n
code-source-info,0x365dd3de5ffe,67,0,13378,C0O0C4O13378,,
code-creation,JS,10,68284,0x365dd3de6746,498, node:internal/modules/esm/utils:1:1,0x365dd3de5f78,~
code-source-info,0x365dd3de
tick,0x7ee81c464672,69170,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x365dd3de6896,0x7ee79be4b54f,0x7ee79be4ba05,0x265bfecb802a
code-creation,Eval,10,69204,0x365dd3de88de,5, node:internal/process/pre_execution:1:1,0x365dd3de8338,~
script-source,68,node:internal/process/pre_execution,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Date\x2C\n  DatePrototypeGetDate\x2C\n  DatePrototypeGetFullYear\x2C\n  DatePrototypeGetHours\x2C\n  DatePrototypeGetMinutes\x2C\n  DatePrototypeGetMonth\x2C\n  DatePrototypeGetSeconds\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  refreshOptions\x2C\n  getEmbedderOptions\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\nconst {\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  defineReplaceableLazyAttribute\x2C\n  setupCoverageHooks\x2C\n  emitExperimentalWarning\x2C\n} = require('internal/util');\n\nconst {\n  ERR_INVALID_THIS\x2C\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\n  ERR_NO_CRYPTO\x2C\n  ERR_MISSING_OPTION\x2C\n  ERR_ACCESS_DENIED\x2C\n} = require('internal/errors').codes;\nconst assert = require('internal/assert');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\n  return prepareExecution({\n    expandArgv1\x2C\n    initializeModules\x2C\n    isMainThread: true\x2C\n  });\n}\n\nfunction prepareWorkerThreadExecution() {\n  prepareExecution({\n    expandArgv1: false\x2C\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\n    isMainThread: false\x2C\n  });\n}\n\nfunction prepareShadowRealmExecution() {\n  // Patch the process object with legacy properties and normalizations.\n  // Do not expand argv1 as it is not available in ShadowRealm.\n  patchProcessObject(false);\n  setupDebugEnv();\n\n  // Disable custom loaders in ShadowRealm.\n  setupUserModules(true);\n  const {\n    privateSymbols: {\n      host_defined_option_symbol\x2C\n    }\x2C\n  } = internalBinding('util');\n  const {\n    vm_dynamic_import_default_internal\x2C\n  } = internalBinding('symbols');\n\n  // For ShadowRealm.prototype.importValue()\x2C the referrer name is\n  // always null\x2C so the native ImportModuleDynamically() callback would\n  // always fallback to look up the host-defined option from the\n  // global object using host_defined_option_symbol. Using\n  // vm_dynamic_import_default_internal as the host-defined option\n  // instructs the JS-land importModuleDynamicallyCallback() to\n  // proxy the request to defaultImportModuleDynamically().\n  globalThis[host_defined_option_symbol] =\n    vm_dynamic_import_default_internal;\n}\n\nfunction prepareExecution(options) {\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\n\n  refreshRuntimeOptions();\n  reconnectZeroFillToggle();\n\n  // Patch the process object and get the resolved main entry point.\n  const mainEntry = patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupInspectorHooks();\n  setupWarningHandler();\n  setupUndici();\n  setupWebCrypto();\n  setupCustomEvent();\n  setupCodeCoverage();\n  setupDebugEnv();\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n\n  // Load permission system API\n  initializePermission();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n\n  require('internal/dns/utils').initializeDns();\n\n  setupSymbolDisposePolyfill();\n\n  if (isMainThread) {\n    assert(internalBinding('worker').isMainThread);\n    // Worker threads will get the manifest in the message handler.\n    const policy = readPolicyFromDisk();\n    if (policy) {\n      require('internal/process/policy')\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\n    }\n\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n    setupStacktracePrinterOnSigint();\n    initializeReportSignalHandlers();  // Main-thread-only.\n    initializeHeapSnapshotSignalHandlers();\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n    // spawned by our child_process module\x2C then initialize IPC.\n    // This attaches some internal event listeners and creates:\n    // process.send()\x2C process.channel\x2C process.connected\x2C\n    // process.disconnect().\n    setupChildProcessIpcChannel();\n    // If this is a worker in cluster mode\x2C start up the communication\n    // channel. This needs to be done before any user code gets executed\n    // (including preload modules).\n    initializeClusterIPC();\n\n    // TODO(joyeecheung): do this for worker threads as well.\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\n  } else {\n    assert(!internalBinding('worker').isMainThread);\n    // The setup should be called in LOAD_SCRIPT message handler.\n    assert(!initializeModules);\n  }\n\n  if (initializeModules) {\n    setupUserModules();\n  }\n\n  return mainEntry;\n}\n\nfunction setupSymbolDisposePolyfill() {\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.dispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolDispose\x2C\n      writable: false\x2C\n    });\n  }\n\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.asyncDispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolAsyncDispose\x2C\n      writable: false\x2C\n    });\n  }\n}\n\nfunction setupUserModules(forceDefaultLoader = false) {\n  initializeCJSLoader();\n  initializeESMLoader(forceDefaultLoader);\n  const {\n    hasStartedUserCJSExecution\x2C\n    hasStartedUserESMExecution\x2C\n  } = require('internal/modules/helpers');\n  assert(!hasStartedUserCJSExecution());\n  assert(!hasStartedUserESMExecution());\n  if (getEmbedderOptions().hasEmbedderPreload) {\n    runEmbedderPreload();\n  }\n  // Do not enable preload modules if custom loaders are disabled.\n  // For example\x2C loader workers are responsible for doing this themselves.\n  // And preload modules are not supported in ShadowRealm as well.\n  if (!forceDefaultLoader) {\n    loadPreloadModules();\n  }\n  // Need to be done after --require setup.\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\n/**\n * Patch the process object with legacy properties and normalizations.\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\n * the main entry point.\n */\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: isBuildingSnapshot()\x2C\n    value: process.argv[0]\x2C\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  /** @type {string} */\n  let mainEntry;\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\n  // the entry point.\n  if (expandArgv1 && process.argv[1] &&\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      mainEntry = path.resolve(process.argv[1]);\n      process.argv[1] = mainEntry;\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n\n  return mainEntry;\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\x2C\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\x2C\n    resetForSerialization\x2C\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n\n    // The code above would add the listener back during deserialization\x2C\n    // if applicable.\n    if (isBuildingSnapshot()) {\n      addSerializeCallback(() => {\n        process.removeListener('warning'\x2C onWarning);\n        resetForSerialization();\n      });\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/\n// https://websockets.spec.whatwg.org/\nfunction setupUndici() {\n  if (getOptionValue('--no-experimental-fetch')) {\n    delete globalThis.fetch;\n    delete globalThis.FormData;\n    delete globalThis.Headers;\n    delete globalThis.Request;\n    delete globalThis.Response;\n  }\n\n  if (!getEmbedderOptions().noBrowserGlobals && getOptionValue('--experimental-websocket')) {\n    exposeLazyInterfaces(globalThis\x2C 'internal/deps/undici/undici'\x2C ['WebSocket']);\n  }\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupWebCrypto() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-webcrypto')) {\n    return;\n  }\n\n  if (internalBinding('config').hasOpenSSL) {\n    defineReplaceableLazyAttribute(\n      globalThis\x2C\n      'internal/crypto/webcrypto'\x2C\n      ['crypto']\x2C\n      false\x2C\n      function cryptoThisCheck() {\n        if (this !== globalThis && this != null)\n          throw new ERR_INVALID_THIS(\n            'nullish or must be the global object');\n      }\x2C\n    );\n    exposeLazyInterfaces(\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\n    );\n  } else {\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\n                           get crypto() {\n                             throw new ERR_NO_CRYPTO();\n                           }\x2C\n                         }\x2C 'crypto') });\n\n  }\n}\n\nfunction setupCodeCoverage() {\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd. Don't do anything if the\n  // --experimental-test-coverage flag is present\x2C as the test runner will\n  // handle coverage.\n  if (process.env.NODE_V8_COVERAGE &&\n      !getOptionValue('--experimental-test-coverage')) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n}\n\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\n//                removed.\nfunction setupCustomEvent() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-customevent')) {\n    return;\n  }\n  const { CustomEvent } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      const { report } = require('internal/process/report');\n      return report;\n    }\x2C\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  if (getOptionValue('--report-on-signal')) {\n    const { addSignalHandler } = require('internal/process/report');\n    addSignalHandler();\n  }\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  function doWriteHeapSnapshot() {\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\n    writeHeapSnapshot(heapSnapshotFilename);\n  }\n  process.on(signal\x2C doWriteHeapSnapshot);\n\n  // The code above would add the listener back during deserialization\x2C\n  // if applicable.\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(() => {\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\n    });\n  }\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const { deprecate } = require('internal/util');\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\x2C\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const assert = require('internal/assert');\n\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePermission() {\n  const experimentalPermission = getOptionValue('--experimental-permission');\n  if (experimentalPermission) {\n    process.binding = function binding(_module) {\n      throw new ERR_ACCESS_DENIED('process.binding');\n    };\n    // Guarantee path module isn't monkey-patched to bypass permission model\n    ObjectFreeze(require('path'));\n    emitExperimentalWarning('Permission');\n    const { has } = require('internal/process/permission');\n    const warnFlags = [\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-wasi'\x2C\n      '--allow-worker'\x2C\n    ];\n    for (const flag of warnFlags) {\n      if (getOptionValue(flag)) {\n        process.emitWarning(\n          `The flag ${flag} must be used with extreme caution. ` +\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\n      }\n    }\n    const warnCommaFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n    ];\n    for (const flag of warnCommaFlags) {\n      const value = getOptionValue(flag);\n      if (value.length === 1 && value[0].includes('\x2C')) {\n        process.emitWarning(\n          `The ${flag} CLI flag has changed. ` +\n        'Passing a comma-separated list of paths is no longer valid. ' +\n        'Documentation can be found at ' +\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\n          'Warning'\x2C\n        );\n      }\n    }\n\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: false\x2C\n      value: {\n        has\x2C\n      }\x2C\n    });\n  } else {\n    const availablePermissionFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-wasi'\x2C\n      '--allow-worker'\x2C\n    ];\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\n      const value = getOptionValue(flag);\n      if (value.length) {\n        throw new ERR_MISSING_OPTION('--experimental-permission');\n      }\n    });\n  }\n}\n\nfunction readPolicyFromDisk() {\n  const experimentalPolicy = getOptionValue('--experimental-policy');\n  if (experimentalPolicy) {\n    process.emitWarning('Policies are experimental.'\x2C\n                        'ExperimentalWarning');\n    const { pathToFileURL\x2C URL } = require('internal/url');\n    // URL here as it is slightly different parsing\n    // no bare specifiers for now\n    let manifestURL;\n    if (require('path').isAbsolute(experimentalPolicy)) {\n      manifestURL = pathToFileURL(experimentalPolicy);\n    } else {\n      const cwdURL = pathToFileURL(process.cwd());\n      cwdURL.pathname += '/';\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\n    }\n    const fs = require('fs');\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\n    if (experimentalPolicyIntegrity) {\n      const SRI = require('internal/policy/sri');\n      const { createHash\x2C timingSafeEqual } = require('crypto');\n      const realIntegrities = new SafeMap();\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\n      let foundMatch = false;\n      for (let i = 0; i < integrityEntries.length; i++) {\n        const {\n          algorithm\x2C\n          value: expected\x2C\n        } = integrityEntries[i];\n        const hash = createHash(algorithm);\n        hash.update(src);\n        const digest = hash.digest();\n        if (digest.length === expected.length &&\n          timingSafeEqual(digest\x2C expected)) {\n          foundMatch = true;\n          break;\n        }\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\n      }\n      if (!foundMatch) {\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\n      }\n    }\n    return {\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x2C\n    };\n  }\n}\n\nfunction initializeCJSLoader() {\n  const { initializeCJS } = require('internal/modules/cjs/loader');\n  initializeCJS();\n}\n\nfunction initializeESMLoader(forceDefaultLoader) {\n  const { initializeESM } = require('internal/modules/esm/utils');\n  initializeESM(forceDefaultLoader);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const {\n    setSourceMapsEnabled\x2C\n  } = require('internal/source_map/source_map_cache');\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    emitExperimentalWarning('Frozen intristics');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction runEmbedderPreload() {\n  internalBinding('mksnapshot').runEmbedderPreload(process\x2C require);\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\x2C\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nfunction markBootstrapComplete() {\n  internalBinding('performance').markBootstrapComplete();\n}\n\n// Sequence number for diagnostic filenames\nlet sequenceNumOfheapSnapshot = 0;\n\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\nfunction getHeapSnapshotFilename(diagnosticDir) {\n  if (!diagnosticDir) return undefined;\n\n  const date = new Date();\n\n  const year = DatePrototypeGetFullYear(date);\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\n\n  const dateString = `${year}${month}${day}`;\n  const timeString = `${hours}${minutes}${seconds}`;\n  const pid = process.pid;\n  const threadId = internalBinding('worker').threadId;\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\n\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\n}\n\nmodule.exports = {\n  setupUserModules\x2C\n  prepareMainThreadExecution\x2C\n  prepareWorkerThreadExecution\x2C\n  prepareShadowRealmExecution\x2C\n  markBootstrapComplete\x2C\n  loadPreloadModules\x2C\n  initializeFrozenIntrinsics\x2C\n};\n
code-source-info,0x365dd3de88de,68,0,24561,C0O0C4O24561,,
code-creation,JS,10,69697,0x365dd3de97e6,673, node:internal/process/pre_execution:1:1,0x365dd3de8858,~
code-source-info,0x365dd3de97e6,68,0,24561,C0O0C328O25C334O50C340O58C346O82C352O110C358O135C364O162C370O187C376O214C382O232C388O256C394O272C400O306C406O317C412O327C418O356C424O366C430O388C436O405C442O505C448O505C453O445C459O463C465O481C471O570C477O570C482O542C488O736C494O736C499O608C505O627C511O651C517O685C523O707C529O888C535O888C540O914C545O773C551O793C557O826C563O843C569O865C575O937C581O937C585O937C587O1047C593O1047C598O986C603O992C609O1018C615O23369C616O23369C618O24349C625O24370C631O24390C637O24420C643O24452C649O24483C655O24508C661O24530C667O24364C672O24560,,
code-creation,Eval,10,69935,0x365dd3dec03e,5, node:internal/inspector_async_hook:1:1,0x365dd3debe88,~
script-source,69,node:internal/inspector_async_hook,'use strict';\n\nlet hook;\nlet config;\n\nconst {\n  SafeSet\x2C\n} = primordials;\n\nfunction lazyHookCreation() {\n  const inspector = internalBinding('inspector');\n  const { createHook } = require('async_hooks');\n  config = internalBinding('config');\n\n  hook = createHook({\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\n    // therefore we mark all tasks as recurring. Based on the discussion\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\n    // this should be fine as long as we call asyncTaskCanceled() too.\n      const recurring = true;\n      if (type === 'PROMISE')\n        this.promiseIds.add(asyncId);\n      else\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\n    }\x2C\n\n    before(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskStarted(asyncId);\n    }\x2C\n\n    after(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return;\n      inspector.asyncTaskFinished(asyncId);\n    }\x2C\n\n    destroy(asyncId) {\n      if (this.promiseIds.has(asyncId))\n        return this.promiseIds.delete(asyncId);\n      inspector.asyncTaskCanceled(asyncId);\n    }\x2C\n  });\n\n  hook.promiseIds = new SafeSet();\n}\n\nfunction enable() {\n  if (hook === undefined) lazyHookCreation();\n  if (config.bits < 64) {\n    // V8 Inspector stores task ids as (void*) pointers.\n    // async_hooks store ids as 64bit numbers.\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\n    // ids on 32bit platforms.\n    process.emitWarning(\n      'Warning: Async stack traces in debugger are not available ' +\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\n      {\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\n      });\n  } else {\n    hook.enable();\n  }\n}\n\nfunction disable() {\n  if (hook === undefined) lazyHookCreation();\n  hook.disable();\n}\n\nmodule.exports = {\n  enable\x2C\n  disable\x2C\n};\n
code-source-info,0x365dd3dec03e,69,0,1973,C0O0C4O1973,,
code-creation,JS,10,69981,0x365dd3dec25e,79, node:internal/inspector_async_hook:1:1,0x365dd3debfb8,~
code-source-info,0x365dd3dec25e,69,0,1973,C0O0C42O19C43O19C45O29C46O29C48O48C54O1930C61O1951C67O1961C73O1945C78O1972,,
tick,0x7ee81beea700,70217,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x265bfecb8064
code-creation,Eval,10,70220,0x365dd3ded68e,5, node:internal/modules/run_main:1:1,0x365dd3ded438,~
script-source,70,node:internal/modules/run_main,'use strict';\n\nconst {\n  StringPrototypeEndsWith\x2C\n} = primordials;\n\nconst { containsModuleSyntax } = internalBinding('contextify');\nconst { getOptionValue } = require('internal/options');\nconst path = require('path');\nconst { pathToFileURL } = require('internal/url');\nconst { kEmptyObject\x2C getCWDURL } = require('internal/util');\nconst {\n  hasUncaughtExceptionCaptureCallback\x2C\n} = require('internal/process/execution');\nconst {\n  triggerUncaughtException\x2C\n  exitCodes: { kUnfinishedTopLevelAwait }\x2C\n} = internalBinding('errors');\n\n/**\n * Get the absolute path to the main entry point.\n * @param {string} main - Entry point path\n */\nfunction resolveMainPath(main) {\n  const defaultType = getOptionValue('--experimental-default-type');\n  /** @type {string} */\n  let mainPath;\n  if (defaultType === 'module') {\n    if (getOptionValue('--preserve-symlinks-main')) { return; }\n    mainPath = path.resolve(main);\n  } else {\n    // Extension searching for the main entry point is supported only in legacy mode.\n    // Module._findPath is monkey-patchable here.\n    const { Module } = require('internal/modules/cjs/loader');\n    mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\n  }\n  if (!mainPath) { return; }\n\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n  if (!preserveSymlinksMain) {\n    const { toRealPath } = require('internal/modules/helpers');\n    try {\n      mainPath = toRealPath(mainPath);\n    } catch (err) {\n      if (defaultType === 'module' && err?.code === 'ENOENT') {\n        const { decorateErrorWithCommonJSHints } = require('internal/modules/esm/resolve');\n        const { getCWDURL } = require('internal/util');\n        decorateErrorWithCommonJSHints(err\x2C mainPath\x2C getCWDURL());\n      }\n      throw err;\n    }\n  }\n\n  return mainPath;\n}\n\n/**\n * Determine whether the main entry point should be loaded through the ESM Loader.\n * @param {string} mainPath - Absolute path to the main entry point\n */\nfunction shouldUseESMLoader(mainPath) {\n  if (getOptionValue('--experimental-default-type') === 'module') { return true; }\n\n  /**\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userLoaders = getOptionValue('--experimental-loader');\n  /**\n   * @type {string[]} userImports A list of preloaded modules registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userImports = getOptionValue('--import');\n  if (userLoaders.length > 0 || userImports.length > 0) { return true; }\n\n  // Determine the module format of the entry point.\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs')) { return true; }\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs')) { return false; }\n\n  const { readPackageScope } = require('internal/modules/package_json_reader');\n  const pkg = readPackageScope(mainPath);\n  // No need to guard `pkg` as it can only be an object or `false`.\n  switch (pkg.data?.type) {\n    case 'module':\n      return true;\n    case 'commonjs':\n      return false;\n    default: { // No package.json or no `type` field.\n      if (getOptionValue('--experimental-detect-module')) {\n        // If the first argument of `containsModuleSyntax` is undefined\x2C it will read `mainPath` from the file system.\n        return containsModuleSyntax(undefined\x2C mainPath);\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * Handle a Promise from running code that potentially does Top-Level Await.\n * In that case\x2C it makes sense to set the exit code to a specific non-zero value\n * if the main code never finishes running.\n */\nfunction handleProcessExit() {\n  process.exitCode ??= kUnfinishedTopLevelAwait;\n}\n\n/**\n * @param {function(ModuleLoader):ModuleWrap|undefined} callback\n */\nasync function asyncRunEntryPointWithESMLoader(callback) {\n  process.on('exit'\x2C handleProcessExit);\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n  try {\n    const userImports = getOptionValue('--import');\n    if (userImports.length > 0) {\n      const parentURL = getCWDURL().href;\n      for (let i = 0; i < userImports.length; i++) {\n        await cascadedLoader.import(userImports[i]\x2C parentURL\x2C kEmptyObject);\n      }\n    } else {\n      cascadedLoader.forceLoadHooks();\n    }\n    await callback(cascadedLoader);\n  } catch (err) {\n    if (hasUncaughtExceptionCaptureCallback()) {\n      process._fatalException(err);\n      return;\n    }\n    triggerUncaughtException(\n      err\x2C\n      true\x2C /* fromPromise */\n    );\n  } finally {\n    process.off('exit'\x2C handleProcessExit);\n  }\n}\n\n/**\n * This initializes the ESM loader and runs --import (if any) before executing the\n * callback to run the entry point.\n * If the callback intends to evaluate a ESM module as entry point\x2C it should return\n * the corresponding ModuleWrap so that stalled TLA can be checked a process exit.\n * @param {function(ModuleLoader):ModuleWrap|undefined} callback\n * @returns {Promise}\n */\nfunction runEntryPointWithESMLoader(callback) {\n  const promise = asyncRunEntryPointWithESMLoader(callback);\n  return promise;\n}\n\n/**\n * Parse the CLI main entry point string and run it.\n * For backwards compatibility\x2C we have to run a bunch of monkey-patchable code that belongs to the CJS loader (exposed\n * by `require('module')`) even when the entry point is ESM.\n * This monkey-patchable code is bypassed under `--experimental-default-type=module`.\n * Because of backwards compatibility\x2C this function is exposed publicly via `import { runMain } from 'node:module'`.\n * @param {string} main - First positional CLI argument\x2C such as `'entry.js'` from `node entry.js`\n */\nfunction executeUserEntryPoint(main = process.argv[1]) {\n  const resolvedMain = resolveMainPath(main);\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\n  if (useESMLoader) {\n    const mainPath = resolvedMain || main;\n    const mainURL = pathToFileURL(mainPath).href;\n\n    runEntryPointWithESMLoader((cascadedLoader) => {\n      // Note that if the graph contains unfinished TLA\x2C this may never resolve\n      // even after the event loop stops running.\n      return cascadedLoader.import(mainURL\x2C undefined\x2C { __proto__: null }\x2C true);\n    });\n  } else {\n    // Module._load is the monkey-patchable CJS module loader.\n    const { Module } = require('internal/modules/cjs/loader');\n    Module._load(main\x2C null\x2C true);\n  }\n}\n\nmodule.exports = {\n  executeUserEntryPoint\x2C\n  runEntryPointWithESMLoader\x2C\n  handleProcessExit\x2C\n};\n
code-source-info,0x365dd3ded68e,70,0,6492,C0O0C4O6492,,
code-creation,JS,10,70328,0x365dd3deda16,240, node:internal/modules/run_main:1:1,0x365dd3ded608,~
code-source-info,0x365dd3deda16,70,0,6492,C0O0C78O25C84O101C87O101C92O76C98O159C104O159C109O140C115O201C121O201C125O201C127O244C133O244C138O226C144O305C150O305C155O277C161O291C167O382C173O382C178O341C184O504C187O504C192O431C198O470C203O472C209O6394C216O6415C222O6440C228O6470C234O6409C239O6491,,
code-creation,Eval,10,70685,0x365dd3def716,5, node:internal/dns/utils:1:1,0x365dd3def360,~
script-source,71,node:internal/dns/utils,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  Symbol\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst { isIP } = require('internal/net');\nconst { getOptionValue } = require('internal/options');\nconst {\n  validateArray\x2C\n  validateInt32\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nlet binding;\nfunction lazyBinding() {\n  binding ??= internalBinding('cares_wrap');\n  return binding;\n}\nconst IANA_DNS_PORT = 53;\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\nconst {\n  ERR_DNS_SET_SERVERS_FAILED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_IP_ADDRESS\x2C\n} = errors.codes;\n\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    addDeserializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction validateTimeout(options) {\n  const { timeout = -1 } = { ...options };\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\n  return timeout;\n}\n\nfunction validateTries(options) {\n  const { tries = 4 } = { ...options };\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\n  return tries;\n}\n\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\nconst kSnapshotStates = Symbol('dns:resolver:config');\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\n\n// Resolver instances correspond 1:1 to c-ares channels.\n\nclass ResolverBase {\n  constructor(options = undefined) {\n    const timeout = validateTimeout(options);\n    const tries = validateTries(options);\n    // If we are building snapshot\x2C save the states of the resolver along\n    // the way.\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates] = { timeout\x2C tries };\n    }\n    this[kInitializeHandle](timeout\x2C tries);\n  }\n\n  [kInitializeHandle](timeout\x2C tries) {\n    const { ChannelWrap } = lazyBinding();\n    this._handle = new ChannelWrap(timeout\x2C tries);\n  }\n\n  cancel() {\n    this._handle.cancel();\n  }\n\n  getServers() {\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      if (!val[1] || val[1] === IANA_DNS_PORT)\n        return val[0];\n\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\n      return `${host}:${val[1]}`;\n    });\n  }\n\n  setServers(servers) {\n    validateArray(servers\x2C 'servers');\n\n    // Cache the original servers because in the event of an error while\n    // setting the servers\x2C c-ares won't have any servers available for\n    // resolution.\n    const newSet = [];\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\n      validateString(serv\x2C `servers[${index}]`);\n      let ipVersion = isIP(serv);\n\n      if (ipVersion !== 0)\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\n\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\n\n      // Check for an IPv6 in brackets.\n      if (match) {\n        ipVersion = isIP(match[1]);\n\n        if (ipVersion !== 0) {\n          const port = NumberParseInt(\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\n        }\n      }\n\n      // addr::port\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\n\n      if (addrSplitMatch) {\n        const hostIP = addrSplitMatch[1];\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\n\n        ipVersion = isIP(hostIP);\n\n        if (ipVersion !== 0) {\n          return ArrayPrototypePush(\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\n        }\n      }\n\n      throw new ERR_INVALID_IP_ADDRESS(serv);\n    });\n\n    this[kSetServersInteral](newSet\x2C servers);\n  }\n\n  [kSetServersInteral](newSet\x2C servers) {\n    const orig = ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      val.unshift(isIP(val[0]));\n      return val;\n    });\n    const errorNumber = this._handle.setServers(newSet);\n\n    if (errorNumber !== 0) {\n      // Reset the servers to the old servers\x2C because ares probably unset them.\n      this._handle.setServers(orig);\n      const { strerror } = lazyBinding();\n      const err = strerror(errorNumber);\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\n    }\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].servers = newSet;\n    }\n  }\n\n\n  setLocalAddress(ipv4\x2C ipv6) {\n    validateString(ipv4\x2C 'ipv4');\n\n    if (ipv6 !== undefined) {\n      validateString(ipv6\x2C 'ipv6');\n    }\n\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\n    }\n  }\n\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\n  // end up being useful for snapshot users.\n  [kSerializeResolver]() {\n    this._handle = null;  // We'll restore it during deserialization.\n    addDeserializeCallback(function deserializeResolver(resolver) {\n      resolver[kDeserializeResolver]();\n    }\x2C this);\n  }\n\n  [kDeserializeResolver]() {\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\n    this[kInitializeHandle](timeout\x2C tries);\n    if (localAddress) {\n      const { ipv4\x2C ipv6 } = localAddress;\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\n    }\n    if (servers) {\n      this[kSetServersInteral](servers\x2C servers);\n    }\n  }\n}\n\nlet defaultResolver;\nlet dnsOrder;\n\nfunction initializeDns() {\n  const orderFromCLI = getOptionValue('--dns-result-order');\n  if (!orderFromCLI) {\n    dnsOrder ??= 'verbatim';\n  } else {\n    // Allow the deserialized application to override order from CLI.\n    validateOneOf(orderFromCLI\x2C '--dns-result-order'\x2C ['verbatim'\x2C 'ipv4first'\x2C 'ipv6first']);\n    dnsOrder = orderFromCLI;\n  }\n\n  if (!isBuildingSnapshot()) {\n    return;\n  }\n\n  addSerializeCallback(() => {\n    defaultResolver?.[kSerializeResolver]();\n  });\n}\n\nconst resolverKeys = [\n  'getServers'\x2C\n  'resolve'\x2C\n  'resolve4'\x2C\n  'resolve6'\x2C\n  'resolveAny'\x2C\n  'resolveCaa'\x2C\n  'resolveCname'\x2C\n  'resolveMx'\x2C\n  'resolveNaptr'\x2C\n  'resolveNs'\x2C\n  'resolvePtr'\x2C\n  'resolveSoa'\x2C\n  'resolveSrv'\x2C\n  'resolveTxt'\x2C\n  'reverse'\x2C\n];\n\nfunction getDefaultResolver() {\n  // We do this here instead of pre-execution so that the default resolver is\n  // only ever created when the user loads any dns module.\n  if (defaultResolver === undefined) {\n    defaultResolver = new ResolverBase();\n  }\n  return defaultResolver;\n}\n\nfunction setDefaultResolver(resolver) {\n  defaultResolver = resolver;\n}\n\nfunction bindDefaultResolver(target\x2C source) {\n  const defaultResolver = getDefaultResolver();\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\n  });\n}\n\nfunction validateHints(hints) {\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\n  }\n}\n\nlet invalidHostnameWarningEmitted = false;\nfunction emitInvalidHostnameWarning(hostname) {\n  if (!invalidHostnameWarningEmitted) {\n    process.emitWarning(\n      `The provided hostname "${hostname}" is not a valid ` +\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0118'\x2C\n    );\n    invalidHostnameWarningEmitted = true;\n  }\n}\n\nfunction setDefaultResultOrder(value) {\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first'\x2C 'ipv6first']);\n  dnsOrder = value;\n}\n\nfunction getDefaultResultOrder() {\n  return dnsOrder;\n}\n\nfunction createResolverClass(resolver) {\n  const resolveMap = { __proto__: null };\n\n  class Resolver extends ResolverBase {}\n\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\n  Resolver.prototype.reverse = resolver('getHostByAddr');\n\n  return {\n    resolveMap\x2C\n    Resolver\x2C\n  };\n}\n\n// ERROR CODES\nconst errorCodes = {\n  NODATA: 'ENODATA'\x2C\n  FORMERR: 'EFORMERR'\x2C\n  SERVFAIL: 'ESERVFAIL'\x2C\n  NOTFOUND: 'ENOTFOUND'\x2C\n  NOTIMP: 'ENOTIMP'\x2C\n  REFUSED: 'EREFUSED'\x2C\n  BADQUERY: 'EBADQUERY'\x2C\n  BADNAME: 'EBADNAME'\x2C\n  BADFAMILY: 'EBADFAMILY'\x2C\n  BADRESP: 'EBADRESP'\x2C\n  CONNREFUSED: 'ECONNREFUSED'\x2C\n  TIMEOUT: 'ETIMEOUT'\x2C\n  EOF: 'EOF'\x2C\n  FILE: 'EFILE'\x2C\n  NOMEM: 'ENOMEM'\x2C\n  DESTRUCTION: 'EDESTRUCTION'\x2C\n  BADSTR: 'EBADSTR'\x2C\n  BADFLAGS: 'EBADFLAGS'\x2C\n  NONAME: 'ENONAME'\x2C\n  BADHINTS: 'EBADHINTS'\x2C\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\n  CANCELLED: 'ECANCELLED'\x2C\n};\n\nmodule.exports = {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  validateHints\x2C\n  validateTimeout\x2C\n  validateTries\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultResultOrder\x2C\n  setDefaultResultOrder\x2C\n  errorCodes\x2C\n  createResolverClass\x2C\n  initializeDns\x2C\n};\n
code-source-info,0x365dd3def716,71,0,9641,C0O0C4O9641,,
code-creation,JS,10,70855,0x365dd3df0786,602, node:internal/dns/utils:1:1,0x365dd3def690,~
code-source-info,0x365dd3df0786,71,0,9641,C0O0C176O25C182O50C188O71C194O93C200O118C206O136C212O159C218O191C223O232C226O232C231O277C234O277C239O268C245O329C248O329C253O310C259O439C262O439C267O368C273O385C279O402C285O419C291O475C292O475C294O596C296O596C298O615C303O615C305O653C310O653C312O775C317O685C323O715C329O740C335O893C338O893C343O804C348O810C354O836C360O864C366O1248C369O1248C373O1248C375O1311C378O1311C382O1311C384O1371C387O1371C391O1371C393O1428C396O1428C400O1428C402O1496C405O1496C409O1496C421O1967C449O3829C465O4857C475O5081C495O1590C497O5436C498O5436C500O5457C501O5457C503O5972C507O5972C509O7047C510O7047C512O8750C517O9365C524O9386C530O9409C536O9431C542O9453C548O9470C554O9489C560O9506C566O9536C572O9561C578O9586C584O9600C590O9623C596O9380C601O9640,,
code-creation,Eval,10,71039,0x365dd3df2076,5, node:internal/net:1:1,0x365dd3df1eb0,~
script-source,72,node:internal/net,'use strict';\n\nconst {\n  RegExp\x2C\n  RegExpPrototypeTest\x2C\n  Symbol\x2C\n} = primordials;\n\nconst Buffer = require('buffer').Buffer;\nconst { writeBuffer } = internalBinding('fs');\nconst errors = require('internal/errors');\n\n// IPv4 Segment\nconst v4Seg = '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])';\nconst v4Str = `(?:${v4Seg}\\\\.){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\nconst IPv6Reg = new RegExp('^(?:' +\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n  `(?:${v6Seg}:){5}(?::${v4Str}|(?::${v6Seg}){1\x2C2}|:)|` +\n  `(?:${v6Seg}:){4}(?:(?::${v6Seg}){0\x2C1}:${v4Str}|(?::${v6Seg}){1\x2C3}|:)|` +\n  `(?:${v6Seg}:){3}(?:(?::${v6Seg}){0\x2C2}:${v4Str}|(?::${v6Seg}){1\x2C4}|:)|` +\n  `(?:${v6Seg}:){2}(?:(?::${v6Seg}){0\x2C3}:${v4Str}|(?::${v6Seg}){1\x2C5}|:)|` +\n  `(?:${v6Seg}:){1}(?:(?::${v6Seg}){0\x2C4}:${v4Str}|(?::${v6Seg}){1\x2C6}|:)|` +\n  `(?::(?:(?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\n')(?:%[0-9a-zA-Z-.:]{1\x2C})?$');\n\nfunction isIPv4(s) {\n  // TODO(aduh95): Replace RegExpPrototypeTest with RegExpPrototypeExec when it\n  // no longer creates a perf regression in the dns benchmark.\n  // eslint-disable-next-line node-core/avoid-prototype-pollution\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\n}\n\nfunction isIPv6(s) {\n  // TODO(aduh95): Replace RegExpPrototypeTest with RegExpPrototypeExec when it\n  // no longer creates a perf regression in the dns benchmark.\n  // eslint-disable-next-line node-core/avoid-prototype-pollution\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\n}\n\nfunction isIP(s) {\n  if (isIPv4(s)) return 4;\n  if (isIPv6(s)) return 6;\n  return 0;\n}\n\nfunction makeSyncWrite(fd) {\n  return function(chunk\x2C enc\x2C cb) {\n    if (enc !== 'buffer')\n      chunk = Buffer.from(chunk\x2C enc);\n\n    this._handle.bytesWritten += chunk.length;\n\n    const ctx = {};\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\n    if (ctx.errno !== undefined) {\n      const ex = new errors.UVException(ctx);\n      ex.errno = ctx.errno;\n      return cb(ex);\n    }\n    cb();\n  };\n}\n\nmodule.exports = {\n  kReinitializeHandle: Symbol('kReinitializeHandle')\x2C\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  makeSyncWrite\x2C\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x2C\n};\n
code-source-info,0x365dd3df2076,72,0,2252,C0O0C4O2252,,
code-creation,JS,10,71086,0x365dd3df246e,628, node:internal/net:1:1,0x365dd3df1ff0,~
code-source-info,0x365dd3df246e,72,0,2252,C0O0C45O25C50O35C56O58C61O99C64O99C69O116C73O99C75O149C78O149C83O133C89O187C92O187C96O187C98O246C101O316C106O322C119O337C124O362C129O377C142O362C147O362C149O419C152O459C160O487C173O503C183O477C192O525C205O541C218O551C228O515C237O573C250O590C263O603C273O563C282O631C295O651C308O666C321O679C331O621C340O707C353O727C366O742C379O755C389O697C398O783C411O803C424O818C437O831C447O773C456O859C469O879C482O894C495O907C505O849C514O943C527O958C540O971C550O925C556O989C562O459C567O459C569O2081C577O2123C587O2156C593O2164C599O2174C605O2184C612O2223C622O2096C627O2251,,
tick,0x7ee81c4d66cf,71287,0,0x0,2
code-creation,Eval,10,71370,0x365dd3df3ea6,5, node:internal/bootstrap/switches/does_own_process_state:1:1,0x365dd3df3cf0,~
script-source,73,node:internal/bootstrap/switches/does_own_process_state,'use strict';\n\nconst credentials = internalBinding('credentials');\nconst rawMethods = internalBinding('process_methods');\nconst {\n  namespace: {\n    addDeserializeCallback\x2C\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nprocess.abort = rawMethods.abort;\nprocess.umask = wrappedUmask;\nprocess.chdir = wrappedChdir;\nprocess.cwd = wrappedCwd;\n\nif (credentials.implementsPosixCredentials) {\n  const wrapped = wrapPosixCredentialSetters(credentials);\n\n  process.initgroups = wrapped.initgroups;\n  process.setgroups = wrapped.setgroups;\n  process.setegid = wrapped.setegid;\n  process.seteuid = wrapped.seteuid;\n  process.setgid = wrapped.setgid;\n  process.setuid = wrapped.setuid;\n}\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst {\n  parseFileMode\x2C\n  validateArray\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nfunction wrapPosixCredentialSetters(credentials) {\n  const {\n    codes: {\n      ERR_INVALID_ARG_TYPE\x2C\n      ERR_UNKNOWN_CREDENTIAL\x2C\n    }\x2C\n  } = require('internal/errors');\n  const {\n    validateUint32\x2C\n  } = require('internal/validators');\n\n  const {\n    initgroups: _initgroups\x2C\n    setgroups: _setgroups\x2C\n    setegid: _setegid\x2C\n    seteuid: _seteuid\x2C\n    setgid: _setgid\x2C\n    setuid: _setuid\x2C\n  } = credentials;\n\n  function initgroups(user\x2C extraGroup) {\n    validateId(user\x2C 'user');\n    validateId(extraGroup\x2C 'extraGroup');\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\n    const result = _initgroups(user\x2C extraGroup);\n    if (result === 1) {\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\n    } else if (result === 2) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\n    }\n  }\n\n  function setgroups(groups) {\n    validateArray(groups\x2C 'groups');\n    for (let i = 0; i < groups.length; i++) {\n      validateId(groups[i]\x2C `groups[${i}]`);\n    }\n    // Result is 0 on success. A positive integer indicates that the\n    // corresponding group was not found.\n    const result = _setgroups(groups);\n    if (result > 0) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\n    }\n  }\n\n  function wrapIdSetter(type\x2C method) {\n    return function(id) {\n      validateId(id\x2C 'id');\n      if (typeof id === 'number') id >>>= 0;\n      // Result is 0 on success\x2C 1 if credential is unknown.\n      const result = method(id);\n      if (result === 1) {\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\n      }\n    };\n  }\n\n  function validateId(id\x2C name) {\n    if (typeof id === 'number') {\n      validateUint32(id\x2C name);\n    } else if (typeof id !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\n    }\n  }\n\n  return {\n    initgroups\x2C\n    setgroups\x2C\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\n    setuid: wrapIdSetter('User'\x2C _setuid)\x2C\n  };\n}\n\n// Cache the working directory to prevent lots of lookups. If the working\n// directory is changed by `chdir`\x2C it'll be updated.\nlet cachedCwd = '';\n\nif (isBuildingSnapshot()) {\n  // Reset the cwd on both serialization and deserialization so it's fine\n  // for process.cwd() to be accessed inside of serialization callbacks.\n  addSerializeCallback(() => {\n    cachedCwd = '';\n    addDeserializeCallback(() => {\n      cachedCwd = '';\n    });\n  });\n}\n\nfunction wrappedChdir(directory) {\n  validateString(directory\x2C 'directory');\n  rawMethods.chdir(directory);\n  // Mark cache that it requires an update.\n  cachedCwd = '';\n}\n\nfunction wrappedUmask(mask) {\n  if (mask !== undefined) {\n    mask = parseFileMode(mask\x2C 'mask');\n  }\n  return rawMethods.umask(mask);\n}\n\nfunction wrappedCwd() {\n  if (cachedCwd === '')\n    cachedCwd = rawMethods.cwd();\n  return cachedCwd;\n}\n
code-source-info,0x365dd3df3ea6,73,0,3885,C0O0C4O3885,,
code-creation,JS,10,71441,0x365dd3df41fe,233, node:internal/bootstrap/switches/does_own_process_state:1:1,0x365dd3df3e20,~
code-source-info,0x365dd3df41fe,73,0,3885,C0O0C47O35C50O35C55O86C58O86C62O86C64O232C70O232C75O143C80O149C86O177C91O203C96O274C99O301C103O288C107O308C109O322C113O338C115O352C119O368C121O380C125O411C131O459C136O532C140O522C144O574C148O564C152O613C156O603C160O650C164O640C168O686C172O676C176O721C180O711C184O953C190O953C195O899C201O916C207O933C213O3165C215O3165C217O3174C222O3347C227O3347C232O3884,,
code-creation,JS,10,71575,0x365dd3df4dbe,190,wrapPosixCredentialSetters node:internal/bootstrap/switches/does_own_process_state:38:36,0x365dd3df3ed8,~
code-source-info,0x365dd3df4dbe,73,1021,3019,C0O1021C41O1131C49O1131C54O1058C59O1066C65O1094C71O1195C79O1195C84O1173C90O1254C96O1282C102O1307C107O1330C112O1352C117O1373C122O2795C129O2808C135O2824C142O2848C154O2894C166O2938C178O2982C189O3017,,
code-creation,JS,10,71622,0x365dd3df56fe,18,wrapIdSetter node:internal/bootstrap/switches/does_own_process_state:83:24,0x365dd3df4bb8,~
code-source-info,0x365dd3df56fe,73,2263,2569,C0O2263C13O2284C17O2565,,
code-creation,JS,10,71660,0x365dd3df59be,10,isBuildingSnapshot node:internal/v8/startup_snapshot:21:28,0x265bfecb9630,~
code-source-info,0x365dd3df59be,61,460,504,C0O467C6O498C9O502,,
code-creation,Eval,10,71745,0x365dd3df6186,5, node:internal/main/run_main_module:1:1,0x365dd3df6040,~
script-source,74,node:internal/main/run_main_module,'use strict';\n\nconst { RegExpPrototypeExec } = primordials;\n\nconst {\n  prepareMainThreadExecution\x2C\n  markBootstrapComplete\x2C\n} = require('internal/process/pre_execution');\nconst { getOptionValue } = require('internal/options');\n\nconst mainEntry = prepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Necessary to reset RegExp statics before user code runs.\nRegExpPrototypeExec(/^/\x2C '');\n\nif (getOptionValue('--experimental-default-type') === 'module') {\n  require('internal/modules/run_main').executeUserEntryPoint(mainEntry);\n} else {\n  /**\n   * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin\n   * the execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an\n   * ES module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch\n   * before the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability\n   * is undesirable and is removed in `--experimental-default-type=module` mode.\n   */\n  require('internal/modules/cjs/loader').Module.runMain(mainEntry);\n}\n
code-source-info,0x365dd3df6186,74,0,1182,C0O0C4O1182,,
code-creation,JS,10,71776,0x365dd3df6276,120, node:internal/main/run_main_module:1:1,0x365dd3df6100,~
code-source-info,0x365dd3df6276,74,0,1182,C0O23C5O128C8O128C13O71C18O101C23O198C26O198C31O179C36O246C38O246C43O281C46O367C55O367C60O398C63O402C70O448C75O466C78O466C83O502C88O503C95O1114C98O1114C103O1152C108O1159C113O1160C119O1181,,
code-creation,JS,10,71858,0x365dd3df6576,45,prepareMainThreadExecution node:internal/process/pre_execution:54:36,0x365dd3de8910,~
code-source-info,0x365dd3df6576,68,1124,1273,C20O1176C30O1206C36O1223C40O1183C44O1271,,
code-creation,JS,10,71932,0x365dd3df800e,309,prepareExecution node:internal/process/pre_execution:98:26,0x365dd3de8a00,~
code-source-info,0x365dd3df800e
code-creation,JS,10,71957,0x365dd3df82fe,10,refreshRuntimeOptions node:internal/process/pre_execution:213:31,0x365dd3de8af0,~
code-source-info,0x365dd3df82fe,68,6216,6242,C0O6223C5O6223C9O6241,,
code-creation,JS,10,71973,0x365dd3df83de,12,refreshOptions node:internal/options:40:24,0x307edb93ba50,~
code-source-info,0x365dd3df83de,17,914,947,C0O921C4O933C11O946,,
code-creation,JS,10,71989,0x365dd3df86f6,19,reconnectZeroFillToggle node:internal/buffer:1074:33,0x2bf7c80254e8,~
code-source-info,0x365dd3df86f6,26,30714,30754,C0O30721C5O30732C11O30730C18O30753,,
code-creation,JS,10,72074,0x365dd3df8d1e,442,patchProcessObject node:internal/process/pre_execution:224:28,0x365dd3de8b40,~
code-source-info,0x365dd3df8d1e
code-creation,JS,10,72204,0x365dd3df924e,134,set node:internal/bootstrap/node:116:8,0x19f2a9a75158,~
code-source-info,0x365dd3df924e,12,4131,4547,C0O4146C8O4209C11O4223C19O4260C28O4280C35O4301C38O4301C43O4280C49O4329C54O4361C64O4361C69O4401C78O4408C83O4419C87O4436C96O4443C101O4457C107O4485C116O4492C120O4506C124O4525C126O4534C133O4546,,
code-creation,JS,10,72328,0x365dd3df943e,189,resolve node:path:1123:10,0x1537ab9b1768,~
code-source-info,0x365dd3df943e,33,34648,35564,C0O34648C3O34683C6O34714C8O34744C12O34751C16O34764C18O34758C25O34768C27O34812C28O34814C35O34825C42O34831C45O34831C49O34849C59O34879C70O34849C75O34930C81O34937C86O34954C88O34979C100O35005C105O35027C112O35054C120O35093C122O35089C126O34787C131O34726C135O35309C140O35355C151O35324C157O35441C161O35471C166O35482C170O35497C171O35528C177O35535C188O35560,,
tick,0x7ee819b1d9bd,72370,0,0x0,3,0x7ee81c5678d0,0x365dd3df8ddf,0x365dd3df802e,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,72395,0x365dd3dfc796,13, node:path:1114:10,0x1537ab9b23d8,~
code-source-info,0x365dd3dfc796,33,34497,34516,C0O34511C3O34511C8O34511C12O34516,,
code-creation,JS,10,72416,0x365dd3dfc896,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:142:20,0x365dd3df4030,~
code-source-info,0x365dd3dfc896,73,3800,3884,C0O3807C7O3821C12O3833C17O3856C22O3856C29O3843C35O3865C39O3882,,
code-creation,JS,10,72510,0x365dd3dfca0e,444,normalizeString node:path:74:25,0x1537ab9b1230,~
code-source-info,0x365dd3dfca0e
code-creation,JS,10,72557,0x365dd3dfcd96,8,isPosixPathSeparator node:path:64:30,0x1537ab9b1190,~
code-source-info,0x365dd3dfcd96,33,2066,2114,C0O2077C2O2093C4O2089C7O2112,,
code-creation,JS,11,72663,0x7ee79be4d300,3176,normalizeString node:path:74:25,0x1537ab9b1230,^
code-source-info,0x7ee79be4d300,33,2373,4297,,,
code-creation,JS,11,72696,0x7ee79be4df80,1848,wrapConsole node:internal/util/inspector:84:21,0x265bfec9d668,^
code-source-info,0x7ee79be4df80,55,2990,3778,,,
code-creation,JS,11,72705,0x7ee79be4e700,140,exposeLazyInterfaces node:internal/util:683:30,0x307edb92b1e8,^
code-source-info,0x7ee79be4e700,16,18537,18608,,,
code-creation,JS,11,72719,0x7ee79be4e7c0,992,getDeprecationWarningEmitter node:internal/util:102:38,0x307edb92a6d8,^
code-source-info,0x7ee79be4e7c0,16,2438,3050,,,
code-creation,JS,11,72725,0x7ee79be4ebc0,116,isPosixPathSeparator node:path:64:30,0x1537ab9b1190,^
code-source-info,0x7ee79be4ebc0,33,2066,2114,,,
code-creation,JS,10,72817,0x365dd3dfd46e,352,initializeGlobalConsole node:internal/console/constructor:705:33,0x265bfec95508,~
code-source-info,0x365dd3dfd46e,54,21026,21984,C0O21026C12O21046C19O21060C21O21059C30O21077C35O21182C43O21182C48O21113C53O21121C58O21149C63O21226C71O21231C76O21256C82O21274C87O21302C88O21309C89O21351C97O21351C102O21333C107O21407C119O21426C124O21407C129O21462C136O21462C141O21512C148O21538C153O21538C161O21512C167O21595C174O21595C179O21595C181O21630C191O21630C213O21623C243O21623C246O21681C252O21681C259O21699C263O21720C269O21720C274O21612C341O21858C346O21858C351O21983,,
code-creation,JS,10,72863,0x365dd3dfda16,94,value node:internal/console/constructor:207:20,0x265bfec95630,~
code-source-info,0x365dd3dfda16,54,5901,6538,C0O5901C15O5922C16O5922C18O5940C19O5940C21O5954C33O6004C38O6102C46O6209C60O6271C65O6369C73O6480C87O5954C93O6537,,
code-creation,JS,10,73079,0x365dd3dfdd36,63,addReadOnlyProcessAlias node:internal/process/pre_execution:282:33,0x365dd3de8b90,~
code-source-info,0x365dd3dfdd36,68,9068,9317,C16O9120C21O9120C26O9146C28O9163C36O9193C43O9279C49O9297C56O9163C62O9316,,
code-creation,JS,10,73120,0x365dd3dfde46,13,getOptionValue node:internal/options:44:24,0x307edb93baa0,~
code-source-info,0x365dd3dfde46,17,972,1072,C0O1009C3O1009C7O1039C9O1057C12O1070,,
code-creation,JS,10,73141,0x365dd3dfdf36,28,getCLIOptionsFromBinding node:internal/options:19:34,0x307edb93b960,~
code-source-info,0x365dd3dfdf36,17,528,623,C0O535C6O559C11O573C17O571C23O602C27O621,,
code-creation,JS,10,73413,0x265bfecbfb3e,46,setupTraceCategoryState node:internal/process/pre_execution:452:33,0x365dd3de8f78,~
code-source-info,0x265bfecbfb3e,68,14026,14253,C0O14068C6O14068C11O14041C16O14140C22O14140C27O14111C32O14182C35O14207C40O14182C45O14252,,
tick,0x7ee819b1d9bd,73483,0,0x0,3,0x7ee81c5678d0,0x365dd3df8036,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,73514,0x265bfecbfcae,77,toggleTraceCategoryState node:internal/process/per_thread:417:34,0x2bf7c803b518,~
code-source-info,0x265bfecbfcae,28,12405,12702,C0O12429C4O12458C10O12493C16O12524C21O12568C26O12569C33O12514C39O12593C44O12614C49O12614C55O12633C61O12665C66O12686C71O12686C76O12701,,
code-creation,JS,10,73567,0x265bfecbfe26,62,setupInspectorHooks node:internal/process/pre_execution:458:29,0x365dd3de8fc8,~
code-source-info,0x265bfecbfe26,68,14283,14837,C0O14626C6O14630C11O14655C17O14721C23O14721C28O14690C33O14704C38O14767C44O14767C49O14795C54O14796C61O14836,,
code-creation,JS,10,73637,0x8b517fc56be,126,setupWarningHandler node:internal/process/pre_execution:295:29,0x365dd3de8be0,~
code-source-info,0x8b517fc56be,68,9347,9839,C0O9347C11O9410C19O9410C24O9366C30O9381C36O9449C46O9453C57O9497C62O9501C69O9518C74O9533C79O9541C90O9541C96O9668C103O9672C108O9702C120O9702C125O9838,,
code-creation,JS,10,73721,0x8b517fc59a6,113,setupUndici node:internal/process/pre_execution:317:21,0x365dd3de8c30,~
code-source-info,0x8b517fc59a6,68,9934,10333,C0O9941C8O9945C14O9994C23O10023C32O10055C41O10086C50O10117C59O10152C64O10157C68O10177C76O10198C82O10198C88O10248C95O10269C106O10248C112O10332,,
code-creation,JS,10,73743,0x8b517fc5b16,28,getEmbedderOptions node:internal/options:33:28,0x307edb93ba00,~
code-source-info,0x8b517fc5b16,17,772,889,C0O779C6O807C11O825C17O823C23O864C27O887,,
code-creation,JS,10,73804,0x8b517fc5f46,174,setupWebCrypto node:internal/process/pre_execution:333:24,0x365dd3de8c80,~
code-source-info,0x8b517fc5f46,68,10460,11389,C0O10467C5O10471C9O10491C17O10518C23O10518C29O10578C30O10585C31O10593C37O10597C42O10622C48O10641C55O10679C73O10641C78O10952C85O10980C96O10952C103O11090C110O11111C123O11180C154O11180C167O11090C173O11388,,
code-creation,JS,10,73890,0x8b517fc62ce,70,setupCustomEvent node:internal/process/pre_execution:381:26,0x365dd3de8d48,~
code-source-info,0x8b517fc62ce,68,12043,12295,C0O12050C5O12054C9O12074C17O12101C23O12101C29O12163C30O12170C31O12201C37O12201C42O12185C47O12237C54O12253C63O12237C69O12294,,
code-creation,JS,10,73928,0x8b517fc646e,64,setupCodeCoverage node:internal/process/pre_execution:366:27,0x365dd3de8cf8,~
code-source-info,0x8b517fc646e,68,11417,11912,C0O11723C3O11735C8O11739C16O11766C22O11766C28O11820C31O11828C38O11857C44O11884C49O11888C54O11857C58O11849C63O11911,,
code-creation,JS,10,73954,0x8b517fc65fe,75,setupDebugEnv node:internal/process/pre_execution:412:23,0x365dd3de8e60,~
code-source-info,0x8b517fc65fe,68,12797,13006,C0O12804C6O12804C11O12837C19O12865C24O12869C29O12838C34O12884C42O12888C48O12932C54O12932C59O12967C64O12981C69O12982C74O13005,,
code-creation,JS,10,74013,0x8b517fc68ee,153,initializeDebugEnv node:internal/util/debuglog:21:28,0x305ee1ea0450,~
code-source-info,0x8b517fc68ee,22,530,976,C0O545C7O556C13O581C24O694C38O694C45O738C56O739C63O767C74O768C82O818C94O833C110O818C115O818C117O856C126O868C138O944C145O956C152O975,,
code-creation,JS,10,74047,0x8b517fc6bd6,31,initializeReport node:internal/process/pre_execution:400:26,0x365dd3de8de8,~
code-source-info,0x8b517fc6bd6,68,12549,12773,C0O12556C11O12577C16O12669C24O12556C30O12772,,
code-creation,JS,10,74152,0x8b517fc7266,552,initializePermission node:internal/process/pre_execution:565:30,0x365dd3de9108,~
code-source-info,0x8b517fc
code-creation,JS,10,74190,0x8b517fc7686,34, node:internal/process/pre_execution:622:53,0x8b517fc6f08,~
code-source-info,0x8b517fc7686,68,19654,19814,C0O19686C5O19686C10O19724C16O19742C26O19748C31O19742C33O19813,,
code-creation,JS,10,74227,0x8b517fc779e,35,initializeSourceMapsHandlers node:internal/process/pre_execution:703:38,0x365dd3de9280,~
code-source-info,0x8b517fc779e,68,22390,22551,C0O22437C6O22437C11O22409C16O22488C18O22509C24O22509C29O22488C34O22550,,
code-creation,JS,10,74278,0x8b517fc791e,94,setSourceMapsEnabled node:internal/source_map/source_map_cache:55:30,0x2563a959de60,~
code-source-info,0x8b517fc791e,43,1771,2326,C0O1781C8O1781C13O1813C18O1813C22O1841C26O1911C32O1911C37O1870C42O1967C47O1967C53O2039C59O2205C65O2205C70O2171C75O2237C80O2237C84O2300C86O2318C93O2325,,
code-creation,JS,10,74305,0x8b517fc85a6,30, node:internal/validators:216:41,0x307edb925e48,~
code-source-info,0x8b517fc85a6,15,5880,5994,C0O5901C6O5937C22O5943C27O5937C29O5993,,
code-creation,JS,10,74325,0x8b517fc869e,10,setInternalPrepareStackTrace node:internal/errors:113:38,0x168b8b4b9a88,~
code-source-info,0x8b517fc869e,10,2808,2862,C0O2823C2O2849C9O2861,,
code-creation,JS,10,74391,0x8b517fc8b76,348,initializeDeprecations node:internal/process/pre_execution:476:32,0x365dd3de9018,~
code-source-info,0x8b517fc8b76,68,15063,16984,C0O15092C6O15092C11O15078C16O15147C24O15147C29O15338C35O15338C40O15379C46O15379C51O15432C73O15424C101O15424C104O15750C112O15770C116O15812C127O15886C138O15976C149O15931C158O15797C167O16035C170O15768C174O15413C239O16312C245O16312C250O16291C255O16341C257O16369C268O16390C275O16531C279O16369C284O16564C288O16594C294O16630C304O16707C311O16612C316O16610C320O16793C326O16835C337O16817C342O16815C347O16983,,
code-creation,JS,10,74473,0x8b517fc8fa6,93,initializeDns node:internal/dns/utils:204:23,0x365dd3def838,~
code-source-info,0x8b517fc8fa6,71,5490,5949,C0O5518C8O5518C13O5558C15O5583C28O5592C36O5693C44O5707C52O5693C57O5788C59O5797C65O5820C70O5825C75O5853C76O5860C77O5868C87O5868C92O5948,,
tick,0x7ee81c4da700,74516,0,0x0,2,0x7ee81c5678d0,0x365dd3df8092,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,74542,0x8b517fc9d8e,90,setupSymbolDisposePolyfill node:internal/process/pre_execution:166:36,0x365dd3de8a50,~
code-source-info,0x8b517fc9d8e,68,4734,5434,C0O4904C5O4922C13O4950C20O4971C33O5080C39O4950C44O5192C49O5210C57O5243C64O5264C77O5378C83O5243C89O5433,,
code-creation,JS,10,74601,0x8b517fc9f56,21,assert node:internal/assert:11:16,0x19f2a9a50958,~
code-source-info,0x8b517fc9f56,11,172,307,C0O193C4O242C7O242C11O259C13O265C18O259C20O306,,
code-creation,JS,10,74686,0x8b517fca306,432,readPolicyFromDisk node:internal/process/pre_execution:631:28,0x365dd3de9190,~
code-source-info,0x8b517fca
code-creation,JS,10,74719,0x8b517fca6be,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:390:40,0x365dd3de8d98,~
code-source-info,0x8b517fca6be,68,12336,12522,C0O12343C8O12348C14O12388C15O12395C16O12429C22O12429C27O12410C32O12479C38O12512C43O12512C48O12521,,
code-creation,JS,10,74740,0x8b517fca816,35,initializeReportSignalHandlers node:internal/process/pre_execution:420:40,0x365dd3de8eb0,~
code-source-info,0x8b517fca816,68,13107,13256,C0O13114C8O13118C14O13191C20O13191C25O13170C30O13231C34O13255,,
code-creation,JS,10,74774,0x8b517fcaa5e,155,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:427:46,0x365dd3de8f00,~
code-source-info,0x8b517fcaa5e,68,13303,13992,C0O13303C20O13325C30O13325C34O13325C36O13390C46O13390C50O13390C52O13429C56O13446C57O13453C58O13457C66O13457C71O13487C79O13488C84O13548C92O13548C97O13526C103O13723C108O13731C119O13731C125O13859C132O13863C137O13891C149O13891C154O13991,,
code-creation,JS,10,74822,0x8b517fcad5e,138,setupChildProcessIpcChannel node:internal/process/pre_execution:537:37,0x365dd3de9068,~
code-source-info,0x8b517fcad5e,68,17022,17551,C0O17029C3O17041C8O17045C14O17083C20O17083C25O17127C33O17150C38O17154C46O17127C52O17180C53O17190C57O17180C61O17271C64O17286C73O17344C76O17352C81O17356C90O17403C93O17418C102O17460C108O17460C113O17484C118O17485C124O17524C127O17539C132O17524C137O17550,,
code-creation,JS,10,74853,0x8b517fcaf66,63,initializeClusterIPC node:internal/process/pre_execution:556:30,0x365dd3de90b8,~
code-source-info,0x8b517fcaf66,68,17582,17823,C0O17589C3O17601C10O17605C18O17620C23O17624C29O17662C35O17662C40O17694C45O17694C49O17783C52O17798C62O17822,,
code-creation,JS,10,74888,0x8b517fcb0a6,54,runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33,0x265bfecb9720,~
code-source-info,0x8b517fcb0a6,61,863,1004,C0O905C5O898C11O905C16O949C21O970C26O970C33O927C40O940C44O983C48O870C53O1003,,
code-creation,JS,10,74924,0x8b517fcb1f6,111,setupUserModules node:internal/process/pre_execution:191:26,0x365dd3de8aa0,~
code-source-info,0x8b517fcb1f6,68,5461,6184,C10O5494C13O5494C16O5519C19O5519C23O5640C29O5640C34O5574C39O5606C44O5679C49O5687C54O5679C58O5720C63O5728C68O5720C72O5761C77O5765C81O5785C87O5812C90O5812C93O6050C97O6081C100O6081C103O6153C106O6153C110O6183,,
code-creation,JS,10,74943,0x8b517fcb386,21,initializeCJSLoader node:internal/process/pre_execution:681:29,0x365dd3de91e0,~
code-source-info,0x8b517fcb386,68,21673,21766,C0O21706C6O21706C11O21688C16O21748C20O21765,,
code-creation,JS,10,75033,0x8b517fcb54e,130,initializeCJS node:internal/modules/cjs/loader:421:23,0x365dd3ddc7f0,~
code-source-info,0x8b517fcb54e,65,11592,12256,C0O11694C5O11708C10O11708C15O11754C20O11778C23O11778C27O11776C31O11811C36O11811C39O11841C44O11846C48O11866C54O11894C57O11901C62O11901C66O11988C75O12009C80O12045C84O12003C88O12072C96O12076C102O12131C110O12131C114O12206C117O12213C124O12233C129O12255,,
code-creation,JS,10,75056,0x8b517fcecde,19,getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:322:50,0x168b8b4a9440,~
code-source-info,0x8b517fcecde,9,10315,10384,C0O10324C11O10341C14O10331C18O10380,,
code-creation,JS,10,75146,0x8b517fcf05e,158,initializeCjsConditions node:internal/modules/helpers:68:33,0x2563a95a0338,~
code-source-info,0x8b517fcf05e,44,1956,2316,C0O1986C8O1986C13O2037C21O2037C26O2094C37O2205C50O2269C95O2293C142O2221C150O2219C157O2315,,
code-creation,JS,10,75231,0x8b517fcff76,315,Module._initPaths node:internal/modules/cjs/loader:1643:29,0x365dd3ddda30,~
code-source-info,0x8b517fcff
code-creation,JS,10,75346,0x8b517fd043e,91,initializeESMLoader node:internal/process/pre_execution:686:29,0x365dd3de9230,~
code-source-info,0x8b517fd043e,68,21796,22351,C0O21847C6O21847C11O21829C16O21888C20O22055C28O22059C34O22175C40O22175C45O22124C50O22132C55O22150C60O22221C66O22221C71O22240C73O22250C77O22264C79O22284C83O22308C85O22327C90O22350,,
code-creation,JS,10,75391,0x8b517fd05b6,50,initializeESM node:internal/modules/esm/utils:275:23,0x365dd3de6350,~
code-source-info,0x8b517fd05b6,67,10501,10865,C10O10534C12O10554C18O10578C21O10578C24O10726C32O10726C36O10795C44O10795C49O10864,,
code-creation,JS,10,75423,0x8b517fd12fe,181,initializeDefaultConditions node:internal/modules/esm/utils:74:37,0x365dd3de60d0,~
code-source-info,0x8b517fd12fe,67,1821,2167,C0O1851C8O1851C13O1902C21O1902C26O1959C37O1995C50O2063C95O2087C140O2015C147O2013C153O2111C160O2146C165O2134C173O2132C180O2166,,
code-creation,JS,10,75459,0x8b517fd14c6,5,hasStartedUserCJSExecution node:internal/modules/helpers:367:29,0x2563a95a06e8,~
code-source-info,0x8b517fd14c6,44,11385,11433,C0O11394C4O11429,,
code-creation,JS,10,75472,0x8b517fd158e,5,hasStartedUserESMExecution node:internal/modules/helpers:373:29,0x2563a95a0788,~
code-source-info,0x8b517fd158e,44,11544,11592,C0O11553C4O11588,,
code-creation,JS,10,75496,0x8b517fd167e,53,loadPreloadModules node:internal/process/pre_execution:721:28,0x365dd3de9370,~
code-source-info,0x8b517fd167e,68,22874,23195,C0O22961C8O22961C13O22992C15O23029C21O23036C26O23113C32O23113C37O23069C42O23079C47O23157C52O23194,,
code-creation,JS,10,75573,0x8b517fd1866,165,Module._preloadModules node:internal/modules/cjs/loader:1677:34,0x365dd3dddac0,~
code-source-info,0x8b517fd1866,65,54643,55232,C0O54658C5O54663C11O54689C12O54696C13O54702C17O54715C23O54910C33O54910C42O54960C45O54982C53O55007C58O55007C63O54982C68O54973C85O55035C88O55041C95O55046C100O55068C106O55081C114O55096C116O55096C119O55130C121O55146C125O55135C130O55165C135O55197C139O55165C144O55155C149O55117C153O55209C157O55222C164O55231,,
tick,0x7ee81c1ef461,75596,0,0x0,3,0x7ee81c5678d0,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,75644,0x8b517fd1ae6,213,Module node:internal/modules/cjs/loader:288:16,0x365dd3ddc700,~
code-source-info,0x8b517fd1ae6,65,8107,8842,C14O8129C16O8137C20O8145C22O8157C25O8162C30O8162C35O8155C39O8177C52O8177C57O8216C59O8221C64O8236C68O8248C79O8248C84O8287C85O8301C89O8311C90O8323C94O8334C96O8348C100O8360C102O8390C107O8390C113O8398C121O8412C123O8450C128O8450C133O8494C138O8494C144O8590C154O8622C157O8622C166O8590C171O8706C176O8726C186O8748C189O8748C195O8706C200O8793C202O8798C207O8822C212O8841,,
code-creation,JS,10,75710,0x8b517fd1e7e,163,dirname node:path:1306:10,0x1537ab9b1948,~
code-source-info,0x8b517fd1e7e,33,39614,40283,C0O39627C8O39627C13O39670C19O39677C24O39690C26O39701C27O39722C34O39722C42O39761C44O39757C48O39795C51O39822C53O39850C57O39857C61O39864C63O39864C68O39883C73O39887C81O39926C83O39922C88O39956C92O39987C97O40006C101O40093C103O39872C108O39832C112O40134C114O40142C119O40156C129O40183C130O40188C136O40207C141O40220C143O40232C144O40237C157O40244C162O40279,,
code-creation,JS,10,75753,0x8b517fd20fe,28,setOwnProperty node:internal/util:732:24,0x307edb92b288,~
code-source-info,0x8b517fd20fe,16,19826,19993,C0O19848C5O19881C12O19959C22O19855C27O19991,,
code-creation,JS,10,75792,0x8b517fd229e,45,updateChildren node:internal/modules/cjs/loader:255:24,0x365dd3ddc610,~
code-source-info,0x8b517fd229e,65,7126,7305,C0O7169C7O7175C15O7189C19O7207C23O7215C26O7215C33O7263C38O7263C44O7304,,
code-creation,JS,10,75819,0x8b517fd2496,40, node:internal/util:803:18,0x1537ab9b5ae8,~
code-source-info,0x8b517fd2496,16,22103,22223,C0O22112C10O22147C13O22155C19O22153C25O22176C29O22188C35O22206C39O22219,,
code-creation,JS,10,75836,0x8b517fd25ae,28, node:internal/modules/cjs/loader:160:3,0x365dd3ddcd90,~
code-source-info,0x8b517fd25ae,65,4603,4694,C0O4610C8O4610C20O4652C27O4694,,
code-creation,JS,10,75890,0x8b517fd2796,184,Module._nodeModulePaths node:internal/modules/cjs/loader:849:37,0x365dd3ddd360,~
code-source-info,0x8b517fd2796,65,25921,27101,C0O25976C5O25988C10O25988C17O26167C19O26176C24O26193C28O26218C29O26467C32O26493C36O26500C40O26509C42O26524C47O26534C48O26534C53O26566C58O26566C64O26608C66O26621C68O26617C73O26651C75O26661C77O26657C82O26680C89O26731C100O26731C108O26767C112O26680C117O26817C120O26835C124O26855C126O26861C131O26879C138O26890C144O26894C149O26916C156O26948C159O26542C164O26475C168O27035C176O27035C181O27084C183O27097,,
code-creation,JS,10,75966,0x8b517fd2b86,127,internalRequire node:internal/modules/cjs/loader:205:25,0x365dd3ddc570,~
code-source-info,0x8b517fd2b86,65,5759,6060,C0O5776C8O5776C13O5804C15O5811C20O5825C36O5831C41O5825C42O5940C51O5952C60O5968C63O5982C76O5982C93O6039C102O6051C126O6059,,
code-creation,JS,10,76085,0x8b517fd2e9e,704,Module._load node:internal/modules/cjs/loader:1016:24,0x365dd3ddd520,~
code-source-info,0x8b517fd2e9e
code-creation,JS,10,76138,0x8b517fd33ce,89,logger node:internal/util/debuglog:100:18,0x305ee1ea0fd8,~
code-source-info,0x8b517fd33ce,22,2965,3160,C0O2965C3O2997C24O3021C30O3038C34O3028C38O3043C39O3058C45O3075C51O3084C55O3065C60O3089C61O3105C65O3112C72O3125C77O3121C83O3112C88O3150,,
code-creation,JS,10,76193,0x8b517fd3656,140,debug node:internal/util/debuglog:81:15,0x305ee1ea0f38,~
code-source-info,0x8b517fd3656,22,2453,2847,C0O2453C3O2472C6O2472C9O2580C16O2601C22O2588C30O2586C36O2620C42O2656C47O2659C50O2656C54O2684C75O2708C81O2725C85O2715C89O2730C90O2745C96O2762C102O2771C106O2752C111O2776C112O2792C116O2799C123O2812C128O2808C134O2799C139O2837,,
code-creation,JS,10,76216,0x8b517fd3806,41,init node:internal/util/debuglog:77:16,0x305ee1ea0ee8,~
code-source-info,0x8b517fd3806,22,2355,2438,C0O2364C10O2370C14O2368C16O2407C26O2417C33O2415C40O2437,,
code-creation,JS,10,76231,0x8b517fd38f6,2,testEnabled node:internal/util/debuglog:31:19,0x8b517fc67c8,~
code-source-info,0x8b517fd38f6,22,958,969,C0O964C1O969,,
code-creation,JS,10,76261,0x8b517fd3a6e,116,debuglogImpl node:internal/util/debuglog:54:22,0x305ee1ea0540,~
code-source-info,0x8b517fd3a6e,22,1554,2091,C0O1554C9O1573C18O1587C23O1614C34O1647C39O1655C43O1647C45O1666C55O1666C59O1698C71O1709C75O1714C83O2030C97O2048C99O2046C103O2066C112O2083C115O2089,,
code-creation,JS,10,76284,0x8b517fd3c26,10, node:internal/modules/cjs/loader:395:66,0x365dd3ddd150,~
code-source-info,0x8b517fd3c26,65,10825,10850,C0O10837C2O10843C9O10849,,
code-creation,JS,10,76298,0x8b517fd3cd6,2,noop node:internal/util/debuglog:46:14,0x305ee1ea0638,~
code-source-info,0x8b517fd3cd6,22,1404,1412,C1O1411,,
code-creation,JS,10,76324,0x8b517fd3e86,58,reportModuleToWatchMode node:internal/modules/cjs/loader:266:33,0x365dd3ddc660,~
code-source-info,0x8b517fd3e86,65,7454,7578,C0O7469C5O7473C13O7514C19O7526C22O7534C32O7558C41O7559C51O7534C57O7577,,
code-creation,JS,10,76341,0x8b517fd3fa6,13, node:internal/modules/cjs/loader:162:45,0x365dd3ddcde0,~
code-source-info,0x8b517fd3fa6,65,4743,4786,C0O4761C3O4757C8O4761C12O4786,,
code-creation,JS,10,76500,0x8b517fd43ae,871,Module._resolveFilename node:internal/modules/cjs/loader:1139:35,0x365dd3ddd5a8,~
code-source-info,0x8b517fd43ae
code-creation,JS,10,76572,0x8b517fd49ce,77,normalizeRequirableId node:internal/bootstrap/realm:301:31,0x168b8b4a93a0,~
code-source-info,0x8b517fd49ce,9,9688,10012,C0O9699C10O9703C17O9772C27O9772C33O9807C38O9825C43O9825C50O9871C52O9891C55O9911C60O9929C65O9929C72O9969C74O9979C75O9991C76O10008,,
code-creation,JS,10,76596,0x8b517fd4b16,18,canBeRequiredWithoutScheme node:internal/bootstrap/realm:297:36,0x168b8b4a9350,~
code-source-info,0x8b517fd4b16,9,9588,9656,C0O9599C7O9644C12O9644C17O9652,,
code-creation,JS,10,76656,0x8b517fd4dbe,345,Module._resolveLookupPaths node:internal/modules/cjs/loader:895:38,0x365dd3ddd3f0,~
code-source-info,0x8b517fd4dbe
tick,0x7ee819b1d9bd,76696,0,0x0,3,0x7ee81c5678d0,0x8b517fd4510,0x8b517fd2f7a,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,76724,0x8b517fd50de,76,trySelfParentPath node:internal/modules/cjs/loader:563:27,0x365dd3ddc980,~
code-source-info,0x8b517fd50de,65,16337,16604,C0O16350C4O16365C5O16378C6O16395C12O16425C16O16434C17O16455C24O16458C29O16481C36O16484C44O16526C47O16541C52O16541C59O16549C62O16554C66O16547C69O16558C72O16579C73O16592C75O16603,,
code-creation,JS,10,76784,0x8b517fd5336,249,trySelf node:internal/modules/cjs/loader:582:17,0x365dd3ddc9d0,~
code-source-info,0x8b517fd5336,65,16828,17740,C0O16854C4O16873C5O16886C6O16929C11O16947C16O16947C22O16906C27O16917C32O16979C36O16995C43O17018C49O17044C50O17057C51O17069C53O17102C57O17094C62O17114C67O17140C72O17186C84O17144C91O17202C96O17220C99O17254C104O17259C109O17220C114O17218C120O17283C121O17296C125O17348C131O17348C136O17322C141O17393C146O17451C151O17473C155O17451C162O17515C165O17515C172O17542C175O17542C185O17422C197O17400C202O17584C214O17605C217O17611C224O17616C229O17652C236O17696C240O17658C245O17652C246O17726C248O17726,,
code-creation,JS,10,76845,0x8b517fd5666,184,readPackageScope node:internal/modules/package_json_reader:149:26,0x365dd3de3d70,~
code-source-info,0x8b517fd5666,66,4262,5057,C0O4305C7O4339C10O4305C16O4351C18O4395C23O4406C28O4406C33O4430C40O4485C43O4447C49O4495C62O4507C69O4651C75O4677C78O4688C88O4715C90O4713C94O4688C102O4729C103O4742C104O4753C111O4792C116O4796C120O4757C127O4823C128O4836C129O4861C134O4885C136O4883C140O4861C145O4905C151O4921C158O4944C164O4965C170O4984C171O5017C173O5017C178O4421C182O5042C183O5055,,
code-creation,JS,10,76889,0x8b517fd5e26,43,isEnabled node:internal/process/permission:14:12,0x265bfec8e4b8,~
code-source-info,0x8b517fd5e26,51,258,493,C0O267C6O344C12O344C17O325C22O379C25O404C32O402C38O459C42O489,,
code-creation,JS,10,76924,0x8b517fd6046,22,readPackage node:internal/modules/package_json_reader:140:21,0x365dd3de3d20,~
code-source-info,0x8b517fd6046,66,3950,4020,C0O3968C5O3980C11O3980C17O3975C21O4018,,
code-creation,JS,10,77042,0x8b517fd63ce,573,read node:internal/modules/package_json_reader:48:14,0x365dd3de3cd0,~
code-source-info,0x8b517fd63ce
code-creation,JS,10,77074,0x8b517fd67ee,3,toNamespacedPath node:path:1297:19,0x1537ab9b18f8,~
code-source-info,0x8b517fd67ee,33,39481,39541,C0O39525C2O39537,,
code-creation,JS,10,77292,0x8b517fd6b66,863,Module._findPath node:internal/modules/cjs/loader:666:28,0x365dd3ddd240,~
code-source-info,0x8b517fd6b
code-creation,JS,10,77354,0x8b517fd7196,45,isAbsolute node:path:1187:13,0x1537ab9b1808,~
code-source-info,0x8b517fd7196,33,36320,36466,C0O36333C8O36333C13O36379C19O36386C26O36404C31O36404C39O36443C41O36439C44O36462,,
code-creation,JS,10,77405,0x8b517fd7326,85,stat node:internal/modules/cjs/loader:223:14,0x365dd3ddc5c0,~
code-source-info,0x8b517fd7326,65,6211,6612,C0O6226C5O6242C10O6242C17O6272C23O6317C28O6327C33O6327C39O6346C41O6374C43O6388C44O6412C49O6412C54O6444C61O6477C66O6557C71O6567C76O6567C82O6596C84O6610,,
code-creation,JS,10,77461,0x8b517fd74f6,51,getDefaultExtensions node:internal/modules/cjs/loader:647:30,0x365dd3ddca70,~
code-source-info,0x8b517fd74f6,65,18997,19463,C0O19023C8O19041C13O19023C18O19057C26O19062C32O19117C34O19135C35O19347C40O19375C45O19354C50O19461,,
code-creation,JS,10,77503,0x8b517fd7646,45,tryExtensions node:internal/modules/cjs/loader:530:23,0x365dd3ddc8e0,~
code-source-info,0x8b517fd7646,65,15330,15528,C0O15372C2O15384C6O15377C11O15420C16O15443C19O15437C23O15420C29O15462C31O15484C33O15500C34O15393C39O15359C43O15513C44O15526,,
code-creation,JS,10,77545,0x8b517fd7796,66,tryFile node:internal/modules/cjs/loader:515:17,0x365dd3ddc890,~
code-source-info,0x8b517fd7796,65,14796,15043,C0O14833C5O14833C10O14855C11O14862C16O14871C17O14878C18O14883C25O14902C34O14887C40O14970C45O14982C50O14982C55O15003C56O15010C61O15017C65O15041,,
code-creation,JS,10,77610,0x8b517fd78ee,42,toRealPath node:internal/modules/helpers:57:20,0x2563a95a02e8,~
code-source-info,0x8b517fd78ee,44,1695,1808,C0O1713C5O1723C10O1736C17O1756C20O1767C28O1786C35O1723C41O1806,,
tick,0x7ee81c464677,77863,0,0x0,3,0x7ee81c5678d0,0x8b517fd7911,0x8b517fd77d3,0x8b517fd765d,0x8b517fd6e55,0x8b517fd4683,0x8b517fd2f7a,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,77929,0x8b517fd7b46,963,realpathSync node:fs:2652:22,0x2563a95a6940,~
code-source-info,0x8b517fd7b
code-creation,JS,10,78087,0x8b517fde94e,135,getOptions node:internal/fs/utils:321:20,0x2bf7c803f520,~
code-source-info,0x8b517fde94e,29,7410,8017,C9O7437C16O7455C27O7515C29O7537C30O7545C36O7584C41O7628C43O7652C47O7667C54O7702C60O7741C78O7747C83O7741C84O7834C91O7843C96O7861C99O7884C104O7861C108O7910C114O7938C119O7966C127O7938C132O8000C134O8015,,
code-creation,JS,10,78123,0x8b517fe08e6,48,assertEncoding node:internal/fs/utils:155:24,0x2bf7c803f390,~
code-source-info,0x8b517fe08e6,29,3580,3757,C0O3595C6O3612C9O3619C14O3619C21O3662C24O3689C40O3695C45O3689C47O3756,,
code-creation,JS,10,78144,0x8b517fe09de,20,toPathIfFileURL node:internal/url:1553:25,0x1537ab9a4628,~
code-source-info,0x8b517fe09de,30,46484,46597,C0O46504C3O46509C9O46535C11O46556C12O46559C15O46566C19O46595,,
code-creation,JS,10,78167,0x8b517fe0af6,45,isURL node:internal/url:763:15,0x1537ab9a41e8,~
code-source-info,0x8b517fe0af6,30,21751,21862,C0O21762C12O21781C21O21796C27O21813C34O21840C40O21769C44O21860,,
code-creation,JS,10,78230,0x8b517fe0c8e,149, node:internal/fs/utils:671:38,0x1537ab99ce78,~
code-source-info,0x8b517fe0c8e,29,18284,18996,C14O18317C22O18350C25O18350C31O18376C36O18407C41O18428C54O18382C59O18376C60O18502C65O18555C70O18555C75O18649C81O18672C85O18700C89O18717C95O18717C104O18768C108O18789C113O18789C120O18834C121O18841C122O18849C127O18881C143O18855C148O18849,,
code-creation,JS,10,78268,0x8b517fe0e3e,16,isUint8Array node:internal/util/types:13:22,0x307edb93e9b0,~
code-source-info,0x8b517fe0e3e,18,257,342,C0O269C5O276C12O323C15O340,,
code-creation,JS,10,78338,0x8b517fe12c6,62,splitRoot node:fs:2608:33,0x2563a95a6d98,~
code-source-info,0x8b517fe12c6,45,69370,69562,C0O69395C2O69406C6O69400C11O69427C16O69431C24O69469C26O69465C31O69497C44O69504C49O69536C50O69416C55O69382C59O69547C61O69558,,
code-creation,JS,10,78366,0x8b517fe13fe,20,nextPart node:fs:2641:31,0x2563a95a6e38,~
code-source-info,0x8b517fe13fe,45,70277,70335,C0O70290C14O70297C19O70331,,
code-creation,JS,10,78423,0x8b517fe14f6,34,isFileType node:fs:204:20,0x2563a95a4b88,~
code-source-info,0x8b517fe14f6,45,5195,5436,C0O5329C2O5334C6O5341C10O5375C15O5382C20O5398C22O5413C24O5411C30O5421C33O5434,,
code-creation,JS,10,78511,0x8b517fe165e,72,encodeRealpathResult node:fs:2617:30,0x2563a95a68f0,~
code-source-info,0x8b517fe165e,45,69596,69854,C0O69618C4O69643C10O69663C17O69672C22O69688C24O69702C25O69722C30O69729C35O69729C41O69757C48O69766C53O69786C55O69802C56O69825C61O69842C66O69825C71O69852,,
code-creation,JS,10,78663,0x8b517fe19a6,173,Module.load node:internal/modules/cjs/loader:1275:33,0x365dd3ddd638,~
code-source-info,0x8b517fe19a6,65,40778,41437,C0O40793C8O40839C16O40793C21O40847C26O40860C32O40847C36O40871C38O40885C42O40899C45O40919C52O40936C55O40941C60O40941C66O40919C71O40910C75O40982C78O40982C83O41059C91O41063C101O41116C106O41127C112O41143C124O41149C129O41143C130O41193C133O41200C140O41211C144O41222C150O41242C151O41254C155O41354C160O41405C162O41410C167O41425C172O41436,,
code-creation,JS,11,78764,0x7ee79be4ec80,1380,dirname node:path:1306:10,0x1537ab9b1948,^
code-source-info,0x7ee79be4ec80,33,39614,40283,,,
code-creation,JS,11,78776,0x7ee79be4f200,104,getOptionValue node:internal/options:44:24,0x307edb93baa0,^
code-source-info,0x7ee79be4f200,17,972,1072,,,
code-creation,JS,11,78787,0x7ee79be4f280,396,getCLIOptionsFromBinding node:internal/options:19:34,0x307edb93b960,^
code-source-info,0x7ee79be4f280,17,528,623,,,
code-creation,JS,11,78794,0x7ee79be4f440,108,next node:internal/per_context/primordials:335:9,0x168b8b49b478,^
code-source-info,0x7ee79be4f440,6,9579,9624,,,
code-creation,JS,11,78808,0x7ee79be4f4c0,592,wrappedFn node:internal/errors:536:21,0x19f2a9a53548,^
code-source-info,0x7ee79be4f4c0,10,14708,14896,,,
code-creation,JS,11,78825,0x7ee79be4f740,1428,resolve node:path:1123:10,0x1537ab9b1768,^
code-source-info,0x7ee79be4f740,33,34648,35564,,,
code-creation,JS,11,78850,0x7ee79be4fd00,1516,Module._nodeModulePaths node:internal/modules/cjs/loader:849:37,0x365dd3ddd360,^
code-source-info,0x7ee79be4fd00,65,25921,27101,,,
code-creation,JS,11,78858,0x7ee79be50300,44,toNamespacedPath node:path:1297:19,0x1537ab9b18f8,^
code-source-info,0x7ee79be50300,33,39481,39541,,,
code-creation,JS,11,78869,0x7ee79be50340,284, node:internal/validators:160:40,0x307edb925d58,^
code-source-info,0x7ee79be50340,15,4363,4475,,,
tick,0x7ee79be4dccf,78930,0,0x0,0,0x7ee79be4fbed,0x7ee79be4fd95,0x8b517fe19e8,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,78992,0x8b517fe215e,99,findLongestRegisteredExtension node:internal/modules/cjs/loader:545:40,0x365dd3ddc930,~
code-source-info,0x8b517fe215e,65,15751,16188,C0O15779C5O15784C10O15784C16O15810C18O15834C20O15860C22O15928C36O15881C44O15928C49O15942C51O15961C55O15970C56O15980C61O15989C63O16038C68O16057C74O16096C77O16107C84O16118C89O16140C91O16164C92O15865C96O16173C98O16186,,
code-creation,JS,10,79067,0x8b517fe230e,355,basename node:path:1337:11,0x1537ab9b1998,~
code-source-info,0x8b517fe230e,33,40387,42806,C0O40408C4O40440C12O40440C17O40475C25O40475C30O40522C32O40539C35O40566C37O40577C41O40612C47O40619C52O40633C57O40648C61O40640C66O40664C68O40675C73O40693C75O40703C76O40730C80O40737C84O40771C87O40799C91O40806C95O40813C96O40813C101O40847C106O40847C112O40891C114O40904C116O40900C121O41074C125O41107C127O41117C131O41134C135O41180C137O41201C142O41367C144O41401C146O41422C150O41449C151O41460C156O41531C158O41544C161O41544C166O41540C171O41603C178O41616C183O41752C190O41915C193O41942C198O40821C203O40781C207O42017C209O42027C214O42044C221O42079C223O42087C228O42114C233O42128C247O42135C252O42174C253O42203C257O42210C261O42217C262O42217C267O42236C272O42240C280O42279C282O42275C287O42443C291O42474C293O42484C297O42499C301O42529C303O42537C308O42657C310O42687C312O42695C316O42225C321O42185C325O42719C327O42727C332O42741C334O42751C335O42756C349O42763C354O42802,,
code-creation,JS,10,79190,0x8b517fe27ae,470,Module._extensions..js node:internal/modules/cjs/loader:1502:37,0x365dd3ddd7d8,~
code-source-info,0x8b517fe27ae
code-creation,JS,10,79230,0x8b517fe2b46,54,getMaybeCachedSource node:internal/modules/cjs/loader:1483:30,0x365dd3ddcca0,~
code-source-info,0x8b517fe2b46,65,48248,48624,C0O48333C2O48344C4O48352C6O48351C11O48388C13O48402C15O48401C19O48422C21O48426C25O48441C31O48556C36O48569C44O48569C51O48607C53O48622,,
code-creation,JS,10,79320,0x8b517fe2d4e,472,readFileSync node:fs:441:22,0x2563a95a4f98,~
code-source-info,0x8b517fe2d4e
code-creation,JS,10,79374,0x8b517fe32ce,30,isEncoding node:buffer:557:40,0x305ee1eb2e00,~
code-source-info,0x8b517fe32ce,25,15563,15695,C0O15578C6O15626C12O15633C20O15651C23O15651C28O15679C29O15693,,
code-creation,JS,10,79399,0x8b517fe33d6,30,normalizeEncoding node:internal/util:202:27,0x307edb92a930,~
code-source-info,0x8b517fe33d6,16,5402,5507,C0O5412C7O5435C14O5453C19O5466C21O5480C22O5483C25O5490C29O5505,,
code-creation,JS,10,79415,0x8b517fe34be,9,isInt32 node:internal/validators:43:17,0x307edb925ad8,~
code-source-info,0x8b517fe34be,15,1085,1128,C0O1097C2O1121C5O1110C8O1126,,
code-creation,JS,10,79440,0x8b517fe35ae,37, node:internal/fs/utils:693:42,0x1537ab99cec8,~
code-source-info,0x8b517fe35ae,29,19041,19176,C14O19096C19O19096C24O19130C29O19130C34O19162C36O19174,,
code-creation,JS,10,79504,0x8b517fe3986,515,stringToFlags node:internal/fs/utils:558:23,0x2bf7c803f890,~
code-source-info,0x8b517fe
code-creation,JS,10,79796,0x8b517fe5606,543,Module._compile node:internal/modules/cjs/loader:1409:37,0x365dd3ddd748,~
code-source-info,0x8b517fe
code-creation,JS,10,79883,0x8b517fe5b86,293,wrapSafe node:internal/modules/cjs/loader:1347:18,0x365dd3ddcc50,~
code-source-info,0x8b517fe5b86,65,43290,45091,C0O43372C5O43442C6O43480C12O43515C15O43522C20O43522C26O43556C53O43556C59O44085C64O44114C66O44140C87O44140C92O44229C99O44277C109O44277C120O44328C126O44348C130O44381C135O44381C141O44499C145O44531C161O44571C166O44593C171O44594C177O44611C180O44619C188O44619C193O44738C199O44760C208O44830C222O44760C227O44856C229O44870C241O44893C246O44905C253O44916C258O44974C266O44974C271O44955C276O45025C285O45025C290O45075C292O45075,,
code-creation,Eval,10,79938,0x8b517fe5fa6,5, /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/no-cluster.js:1:1,0x8b517fe5e60,~
script-source,75,/home/user/rustdoc-js-profile/node_modules/0x/lib/preload/no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x8b517fe5fa6,75,0,119,C0O0C4O119,,
code-creation,JS,10,79951,0x8b517fe608e,29, /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/no-cluster.js:1:1,0x8b517fe5f20,~
code-source-info,0x8b517fe608e,75,0,119,C0O16C3O16C8O44C21O44C28O118,,
tick,0x7ee81bee9d24,80030,0,0x0,2,0x7ee81c5678d0,0x8b517fe5759,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,80070,0x8b517fe64be,215,makeRequireFunction node:internal/modules/helpers:130:29,0x2563a95a0478,~
code-source-info,0x8b517fe64be,44,3940,6444,C0O3940C22O3999C27O3999C30O3999C32O4015C37O4023C46O4057C64O4063C69O4057C70O4155C72O4166C92O4198C97O4202C108O4218C112O4198C114O4245C119O4245C122O4245C124O4277C130O4286C136O4314C145O5464C150O5950C152O5966C156O6217C158O6231C162O6243C177O6283C185O6243C190O6349C193O6377C197O6368C201O6393C204O6416C208O6407C212O6427C214O6442,,
code-creation,JS,10,80100,0x8b517fe676e,35,lazyModule node:internal/modules/helpers:113:20,0x2563a95a0428,~
code-source-info,0x8b517fe676e,44,3229,3323,C0O3236C12O3257C17O3295C24O3244C30O3306C34O3321,,
code-creation,JS,10,80143,0x8b517fe6b1e,12,setHasStartedUserCJSExecution node:internal/modules/helpers:370:32,0x2563a95a0738,~
code-source-info,0x8b517fe6b1e,44,11466,11514,C0O11475C4O11503C11O11513,,
code-creation,JS,10,80168,0x8b517fe6c36,14,require node:internal/modules/helpers:177:31,0x8b517fe6380,~
code-source-info,0x8b517fe6c36,44,5490,5614,C0O5583C3O5594C8O5594C13O5608,,
code-creation,JS,10,80208,0x8b517fe6d7e,127,Module.require node:internal/modules/cjs/loader:1303:36,0x365dd3ddd6c0,~
code-source-info,0x8b517fe6d7e,65,41732,42023,C0O41741C8O41741C13O41769C15O41776C20O41790C36O41796C41O41790C42O41905C51O41917C60O41933C63O41947C76O41947C93O42002C102O42014C126O42022,,
code-creation,JS,10,80252,0x8b517fe6f9e,65,loadBuiltinModule node:internal/modules/helpers:96:27,0x2563a95a03d8,~
code-source-info,0x8b517fe6f9e,44,2763,3117,C0O2781C5O2800C10O2800C17O2832C18O2839C19O2927C24O2941C29O2945C34O2945C40O2956C48O2956C53O3076C58O3076C62O3104C64O3115,,
code-creation,JS,10,80274,0x8b517fe70de,18,canBeRequiredByUsers node:internal/bootstrap/realm:293:30,0x168b8b4a9300,~
code-source-info,0x8b517fe70de,9,9496,9551,C0O9507C7O9539C12O9539C17O9547,,
code-creation,JS,10,80296,0x8b517fe71c6,10, node:internal/modules/helpers:40:66,0x2563a95a0698,~
code-source-info,0x8b517fe71c6,44,1182,1207,C0O1194C2O1200C9O1206,,
code-creation,JS,10,80329,0x8b517fe732e,127,compileForPublicLoader node:internal/bootstrap/realm:331:25,0x168b8b4a94e0,~
code-source-info,0x8b517fe732e,9,10564,11205,C0O10573C5O10592C10O10618C15O10592C22O10745C32O10788C49O10751C54O10745C55O10825C60O10825C64O10867C70O11056C77O11087C85O11056C91O11111C96O11129C106O11145C109O11161C114O11145C118O11127C122O11193C126O11201,,
code-creation,Eval,10,80383,0x8b517fe7696,5, node:cluster:1:1,0x8b517fe7550,~
script-source,76,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectPrototypeHasOwnProperty: ObjectHasOwn\x2C\n} = primordials;\n\nconst childOrPrimary = ObjectHasOwn(process.env\x2C 'NODE_UNIQUE_ID') ? 'child' : 'primary';\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\n
code-source-info,0x8b517fe7696,76,0,1376,C0O0C4O1376,,
code-creation,JS,10,80412,0x8b517fe7746,47, node:cluster:1:1,0x8b517fe7610,~
code-source-info,0x8b517fe7746,76,0,1376,C0O1190C5O1266C13O1245C27O1312C32O1357C37O1329C41O1327C46O1375,,
code-creation,Eval,10,80718,0x8b517fe8266,5, node:internal/cluster/primary:1:1,0x8b517fe7f00,~
script-source,77,node:internal/cluster/primary,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSome\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst assert = require('internal/assert');\nconst { fork } = require('child_process');\nconst path = require('path');\nconst EventEmitter = require('events');\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\nconst SharedHandle = require('internal/cluster/shared_handle');\nconst Worker = require('internal/cluster/worker');\nconst { getInspectPort\x2C isUsingInspector } = require('internal/util/inspector');\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\nconst cluster = new EventEmitter();\nconst intercom = new EventEmitter();\nconst SCHED_NONE = 1;\nconst SCHED_RR = 2;\n\nmodule.exports = cluster;\n\nconst handles = new SafeMap();\ncluster.isWorker = false;\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\ncluster.isPrimary = true;\ncluster.Worker = Worker;\ncluster.workers = {};\ncluster.settings = {};\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\n\nlet ids = 0;\nlet initialized = false;\n\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\nif (schedulingPolicy === 'rr')\n  schedulingPolicy = SCHED_RR;\nelse if (schedulingPolicy === 'none')\n  schedulingPolicy = SCHED_NONE;\nelse if (process.platform === 'win32') {\n  // Round-robin doesn't perform well on\n  // Windows due to the way IOCP is wired up.\n  schedulingPolicy = SCHED_NONE;\n} else\n  schedulingPolicy = SCHED_RR;\n\ncluster.schedulingPolicy = schedulingPolicy;\n\ncluster.setupPrimary = function(options) {\n  const settings = {\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\n    exec: process.argv[1]\x2C\n    execArgv: process.execArgv\x2C\n    silent: false\x2C\n    ...cluster.settings\x2C\n    ...options\x2C\n  };\n\n  // Tell V8 to write profile data for each process to a separate file.\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\n  // file. (Unusable because what V8 logs are memory addresses and each\n  // process has its own memory mappings.)\n  if (ArrayPrototypeSome(settings.execArgv\x2C\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\n      !ArrayPrototypeSome(settings.execArgv\x2C\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\n  }\n\n  cluster.settings = settings;\n\n  if (initialized === true)\n    return process.nextTick(setupSettingsNT\x2C settings);\n\n  initialized = true;\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\n\n  process.nextTick(setupSettingsNT\x2C settings);\n\n  process.on('internalMessage'\x2C (message) => {\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\n      return;\n\n    for (const worker of ObjectValues(cluster.workers)) {\n      if (worker.state === 'online' || worker.state === 'listening') {\n        process._debugProcess(worker.process.pid);\n      } else {\n        worker.once('online'\x2C function() {\n          process._debugProcess(this.process.pid);\n        });\n      }\n    }\n  });\n};\n\n// Deprecated alias must be same as setupPrimary\ncluster.setupMaster = cluster.setupPrimary;\n\nfunction setupSettingsNT(settings) {\n  cluster.emit('setup'\x2C settings);\n}\n\nfunction createWorkerProcess(id\x2C env) {\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\n  const execArgv = [...cluster.settings.execArgv];\n\n  if (cluster.settings.inspectPort === null) {\n    throw new ERR_SOCKET_BAD_PORT('Port'\x2C null\x2C true);\n  }\n  if (isUsingInspector(cluster.settings.execArgv)) {\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${getInspectPort(cluster.settings.inspectPort)}`);\n  }\n\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\n    cwd: cluster.settings.cwd\x2C\n    env: workerEnv\x2C\n    serialization: cluster.settings.serialization\x2C\n    silent: cluster.settings.silent\x2C\n    windowsHide: cluster.settings.windowsHide\x2C\n    execArgv: execArgv\x2C\n    stdio: cluster.settings.stdio\x2C\n    gid: cluster.settings.gid\x2C\n    uid: cluster.settings.uid\x2C\n  });\n}\n\nfunction removeWorker(worker) {\n  assert(worker);\n  delete cluster.workers[worker.id];\n\n  if (ObjectKeys(cluster.workers).length === 0) {\n    assert(handles.size === 0\x2C 'Resource leak detected.');\n    intercom.emit('disconnect');\n  }\n}\n\nfunction removeHandlesForWorker(worker) {\n  assert(worker);\n\n  for (const { 0: key\x2C 1: handle } of handles) {\n    if (handle.remove(worker))\n      handles.delete(key);\n  }\n}\n\ncluster.fork = function(env) {\n  cluster.setupPrimary();\n  const id = ++ids;\n  const workerProcess = createWorkerProcess(id\x2C env);\n  const worker = new Worker({\n    id: id\x2C\n    process: workerProcess\x2C\n  });\n\n  worker.on('message'\x2C function(message\x2C handle) {\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\n  });\n\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\n    /*\n     * Remove the worker from the workers list only\n     * if it has disconnected\x2C otherwise we might\n     * still want to access it.\n     */\n    if (!worker.isConnected()) {\n      removeHandlesForWorker(worker);\n      removeWorker(worker);\n    }\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'dead';\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\n  });\n\n  worker.process.once('disconnect'\x2C () => {\n    /*\n     * Now is a good time to remove the handles\n     * associated with this worker because it is\n     * not connected to the primary anymore.\n     */\n    removeHandlesForWorker(worker);\n\n    /*\n     * Remove the worker from the workers list only\n     * if its process has exited. Otherwise\x2C we might\n     * still want to access it.\n     */\n    if (worker.isDead())\n      removeWorker(worker);\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'disconnected';\n    worker.emit('disconnect');\n    cluster.emit('disconnect'\x2C worker);\n  });\n\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\n  process.nextTick(emitForkNT\x2C worker);\n  cluster.workers[worker.id] = worker;\n  return worker;\n};\n\nfunction emitForkNT(worker) {\n  cluster.emit('fork'\x2C worker);\n}\n\ncluster.disconnect = function(cb) {\n  const workers = ObjectValues(cluster.workers);\n\n  if (workers.length === 0) {\n    process.nextTick(() => intercom.emit('disconnect'));\n  } else {\n    for (const worker of workers) {\n      if (worker.isConnected()) {\n        worker.disconnect();\n      }\n    }\n  }\n\n  if (typeof cb === 'function')\n    intercom.once('disconnect'\x2C cb);\n};\n\nconst methodMessageMapping = {\n  close\x2C\n  exitedAfterDisconnect\x2C\n  listening\x2C\n  online\x2C\n  queryServer\x2C\n};\n\nfunction onmessage(message\x2C handle) {\n  const worker = this;\n\n  const fn = methodMessageMapping[message.act];\n\n  if (typeof fn === 'function')\n    fn(worker\x2C message);\n}\n\nfunction online(worker) {\n  worker.state = 'online';\n  worker.emit('online');\n  cluster.emit('online'\x2C worker);\n}\n\nfunction exitedAfterDisconnect(worker\x2C message) {\n  worker.exitedAfterDisconnect = true;\n  send(worker\x2C { ack: message.seq });\n}\n\nfunction queryServer(worker\x2C message) {\n  // Stop processing if worker already disconnecting\n  if (worker.exitedAfterDisconnect)\n    return;\n\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\n              `${message.fd}:${message.index}`;\n  let handle = handles.get(key);\n\n  if (handle === undefined) {\n    let address = message.address;\n\n    // Find shortest path for unix sockets because of the ~100 byte limit\n    if (message.port < 0 && typeof address === 'string' &&\n        process.platform !== 'win32') {\n\n      address = path.relative(process.cwd()\x2C address);\n\n      if (message.address.length < address.length)\n        address = message.address;\n    }\n\n    // UDP is exempt from round-robin connection balancing for what should\n    // be obvious reasons: it's connectionless. There is nothing to send to\n    // the workers except raw datagrams and that's pointless.\n    if (schedulingPolicy !== SCHED_RR ||\n        message.addressType === 'udp4' ||\n        message.addressType === 'udp6') {\n      handle = new SharedHandle(key\x2C address\x2C message);\n    } else {\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\n    }\n\n    handles.set(key\x2C handle);\n  }\n\n  if (!handle.data)\n    handle.data = message.data;\n\n  // Set custom server data\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\n    const { data } = handles.get(key);\n\n    if (errno)\n      handles.delete(key);  // Gives other workers a chance to retry.\n\n    send(worker\x2C {\n      errno\x2C\n      key\x2C\n      ack: message.seq\x2C\n      data\x2C\n      ...reply\x2C\n    }\x2C handle);\n  });\n}\n\nfunction listening(worker\x2C message) {\n  const info = {\n    addressType: message.addressType\x2C\n    address: message.address\x2C\n    port: message.port\x2C\n    fd: message.fd\x2C\n  };\n\n  worker.state = 'listening';\n  worker.emit('listening'\x2C info);\n  cluster.emit('listening'\x2C worker\x2C info);\n}\n\n// Server in worker is closing\x2C remove from list. The handle may have been\n// removed by a prior call to removeHandlesForWorker() so guard against that.\nfunction close(worker\x2C message) {\n  const key = message.key;\n  const handle = handles.get(key);\n\n  if (handle && handle.remove(worker))\n    handles.delete(key);\n}\n\nfunction send(worker\x2C message\x2C handle\x2C cb) {\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\n}\n\n// Extend generic Worker with methods specific to the primary process.\nWorker.prototype.disconnect = function() {\n  this.exitedAfterDisconnect = true;\n  send(this\x2C { act: 'disconnect' });\n  removeHandlesForWorker(this);\n  removeWorker(this);\n  return this;\n};\n\nWorker.prototype.destroy = function(signo) {\n  const signal = signo || 'SIGTERM';\n  this.process.kill(signal);\n};\n
code-source-info,0x8b517fe8266,77,0,10095,C0O0C4O10095,,
code-creation,JS,10,80893,0x8b517fe8c46,632, node:internal/cluster/primary:1:1,0x8b517fe81e0,~
code-source-info,0x8b517fe8c
tick,0x7ee81c4c15f6,81107,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,81426,0x8b517feac26,5, node:child_process:1:1,0x8b517fea680,~
script-source,78,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeLastIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypePushApply\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst {\n  convertToValidSignal\x2C\n  createDeferredPromise\x2C\n  getSystemErrorName\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n} = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nlet debug = require('internal/util/debuglog').debuglog(\n  'child_process'\x2C\n  (fn) => {\n    debug = fn;\n  }\x2C\n);\nconst { Buffer } = require('buffer');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\n\nconst {\n  AbortError\x2C\n  codes: errorCodes\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\x2C\n} = errorCodes;\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst child_process = require('internal/child_process');\nconst {\n  getValidStdio\x2C\n  setupChannel\x2C\n  ChildProcess\x2C\n  stdioStringToArray\x2C\n} = child_process;\n\nconst MAX_BUFFER = 1024 * 1024;\n\nconst isZOS = process.platform === 'os390';\nlet addAbortListener;\n\n/**\n * Spawns a new Node.js process + fork.\n * @param {string|URL} modulePath\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   detached?: boolean;\n *   env?: Record<string\x2C string>;\n *   execPath?: string;\n *   execArgv?: string[];\n *   gid?: number;\n *   serialization?: string;\n *   signal?: AbortSignal;\n *   killSignal?: string | number;\n *   silent?: boolean;\n *   stdio?: Array | string;\n *   uid?: number;\n *   windowsVerbatimArguments?: boolean;\n *   timeout?: number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction fork(modulePath\x2C args = []\x2C options) {\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\n\n  // Get options and args arguments.\n  let execArgv;\n\n  if (args == null) {\n    args = [];\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\n    options = args;\n    args = [];\n  } else {\n    validateArray(args\x2C 'args');\n  }\n\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  options = { __proto__: null\x2C ...options\x2C shell: false };\n  options.execPath = options.execPath || process.execPath;\n  validateArgumentNullCheck(options.execPath\x2C 'options.execPath');\n\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n  validateArgumentsNullCheck(execArgv\x2C 'options.execArgv');\n\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = ArrayPrototypeSlice(execArgv);\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\n    }\n  }\n\n  args = [...execArgv\x2C modulePath\x2C ...args];\n\n  if (typeof options.stdio === 'string') {\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\n  } else if (!ArrayIsArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(\n      options.silent ? 'pipe' : 'inherit'\x2C\n      'ipc');\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\n  }\n\n  return spawn(options.execPath\x2C args\x2C options);\n}\n\nfunction _forkChild(fd\x2C serializationMode) {\n  // set process.send()\n  const p = new Pipe(PipeConstants.IPC);\n  p.open(fd);\n  p.unref();\n  const control = setupChannel(process\x2C p\x2C serializationMode);\n  process.on('newListener'\x2C function onNewListener(name) {\n    if (name === 'message' || name === 'disconnect') control.refCounted();\n  });\n  process.on('removeListener'\x2C function onRemoveListener(name) {\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\n  });\n}\n\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\n  validateString(command\x2C 'command');\n  validateArgumentNullCheck(command\x2C 'command');\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  // Make a shallow copy so we don't clobber the user's options object.\n  options = { __proto__: null\x2C ...options };\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\n\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\x2C\n  };\n}\n\n/**\n * Spawns a shell executing the given command.\n * @param {string} command\n * @param {{\n *   cmd?: string;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   shell?: string;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction exec(command\x2C options\x2C callback) {\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\n  return module.exports.execFile(opts.file\x2C\n                                 opts.options\x2C\n                                 opts.callback);\n}\n\nconst customPromiseExecFunction = (orig) => {\n  return (...args) => {\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\n      if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n        reject(err);\n      } else {\n        resolve({ stdout\x2C stderr });\n      }\n    });\n\n    return promise;\n  };\n};\n\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\x2C\n});\n\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args != null && typeof args === 'object') {\n    callback = options;\n    options = args;\n    args = null;\n  } else if (typeof args === 'function') {\n    callback = args;\n    options = null;\n    args = null;\n  }\n\n  if (args == null) {\n    args = [];\n  }\n\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n\n  if (options == null) {\n    options = kEmptyObject;\n  }\n\n  if (callback != null) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\n  }\n\n  return { file\x2C args\x2C options\x2C callback };\n}\n\n/**\n * Spawns the specified file as a shell.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   windowsVerbatimArguments?: boolean;\n *   shell?: boolean | string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction execFile(file\x2C args\x2C options\x2C callback) {\n  ({ file\x2C args\x2C options\x2C callback } = normalizeExecFileArgs(file\x2C args\x2C options\x2C callback));\n\n  options = {\n    __proto__: null\x2C\n    encoding: 'utf8'\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: 'SIGTERM'\x2C\n    cwd: null\x2C\n    env: null\x2C\n    shell: false\x2C\n    ...options\x2C\n  };\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  const child = spawn(file\x2C args\x2C {\n    cwd: options.cwd\x2C\n    env: options.env\x2C\n    gid: options.gid\x2C\n    shell: options.shell\x2C\n    signal: options.signal\x2C\n    uid: options.uid\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x2C\n  });\n\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\n    encoding = options.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n\n  let ex = null;\n\n  let cmd = file;\n\n  function exithandler(code\x2C signal) {\n    if (exited) return;\n    exited = true;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (!callback) return;\n\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding ||\n      (\n        child.stdout &&\n        child.stdout.readableEncoding\n      )) {\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding ||\n      (\n        child.stderr &&\n        child.stderr.readableEncoding\n      )) {\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n\n    if (args?.length)\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\n\n    if (!ex) {\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\n        killed: child.killed || killed\x2C\n        signal: signal\x2C\n      });\n    }\n\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n\n  function errorhandler(e) {\n    ex = e;\n\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    exithandler();\n  }\n\n  function kill() {\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    killed = true;\n    try {\n      child.kill(options.killSignal);\n    } catch (e) {\n      ex = e;\n      exithandler();\n    }\n  }\n\n  if (options.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C options.timeout);\n  }\n\n  if (child.stdout) {\n    if (encoding)\n      child.stdout.setEncoding(encoding);\n\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stdout\x2C chunk);\n        return;\n      }\n      const encoding = child.stdout.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      const slice = encoding ? StringPrototypeSlice :\n        (buf\x2C ...args) => buf.slice(...args);\n      stdoutLen += length;\n\n      if (stdoutLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n\n  if (child.stderr) {\n    if (encoding)\n      child.stderr.setEncoding(encoding);\n\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stderr\x2C chunk);\n        return;\n      }\n      const encoding = child.stderr.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      stderrLen += length;\n\n      if (stderrLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C\n                           chunk.slice(0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\n        kill();\n      } else {\n        ArrayPrototypePush(_stderr\x2C chunk);\n      }\n    });\n  }\n\n  child.addListener('close'\x2C exithandler);\n  child.addListener('error'\x2C errorhandler);\n\n  return child;\n}\n\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(execFile)\x2C\n});\n\nfunction copyProcessEnvToEnv(env\x2C name\x2C optionEnv) {\n  if (process.env[name] &&\n      (!optionEnv ||\n       !ObjectPrototypeHasOwnProperty(optionEnv\x2C name))) {\n    env[name] = process.env[name];\n  }\n}\n\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\n  validateString(file\x2C 'file');\n  validateArgumentNullCheck(file\x2C 'file');\n\n  if (file.length === 0)\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\n\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\n  } else {\n    options = args;\n    args = [];\n  }\n\n  validateArgumentsNullCheck(args\x2C 'args');\n\n  if (options === undefined)\n    options = kEmptyObject;\n  else\n    validateObject(options\x2C 'options');\n\n  options = { __proto__: null\x2C ...options };\n  let cwd = options.cwd;\n\n  // Validate the cwd\x2C if present.\n  if (cwd != null) {\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\n  }\n\n  // Validate detached\x2C if present.\n  if (options.detached != null) {\n    validateBoolean(options.detached\x2C 'options.detached');\n  }\n\n  // Validate the uid\x2C if present.\n  if (options.uid != null && !isInt32(options.uid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\n  }\n\n  // Validate the gid\x2C if present.\n  if (options.gid != null && !isInt32(options.gid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\n  }\n\n  // Validate the shell\x2C if present.\n  if (options.shell != null &&\n      typeof options.shell !== 'boolean' &&\n      typeof options.shell !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\n                                   ['boolean'\x2C 'string']\x2C options.shell);\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\n  }\n\n  // Validate windowsHide\x2C if present.\n  if (options.windowsHide != null) {\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\n  }\n\n  // Validate windowsVerbatimArguments\x2C if present.\n  let { windowsVerbatimArguments } = options;\n  if (windowsVerbatimArguments != null) {\n    validateBoolean(windowsVerbatimArguments\x2C\n                    'options.windowsVerbatimArguments');\n  }\n\n  if (options.shell) {\n    validateArgumentNullCheck(options.shell\x2C 'options.shell');\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\n    // Set the shell\x2C switches\x2C and commands.\n    if (process.platform === 'win32') {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else\n        file = process.env.comspec || 'cmd.exe';\n      // '/d /s /c' is used only for cmd.exe.\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\n        windowsVerbatimArguments = true;\n      } else {\n        args = ['-c'\x2C command];\n      }\n    } else {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else if (process.platform === 'android')\n        file = '/system/bin/sh';\n      else\n        file = '/bin/sh';\n      args = ['-c'\x2C command];\n    }\n  }\n\n  if (typeof options.argv0 === 'string') {\n    ArrayPrototypeUnshift(args\x2C options.argv0);\n  } else {\n    ArrayPrototypeUnshift(args\x2C file);\n  }\n\n  const env = options.env || process.env;\n  const envPairs = [];\n\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\n  // collect coverage for programs that spawn with white-listed environment.\n  copyProcessEnvToEnv(env\x2C 'NODE_V8_COVERAGE'\x2C options.env);\n\n  if (isZOS) {\n    // The following environment variables must always propagate if set.\n    copyProcessEnvToEnv(env\x2C '_BPXK_AUTOCVT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_CEE_RUNOPTS'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_ERR'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_IN'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_OUT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'STEPLIB'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'LIBPATH'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SIG_DFLT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SUSV3'\x2C options.env);\n  }\n\n  let envKeys = [];\n  // Prototype values are intentionally included.\n  for (const key in env) {\n    ArrayPrototypePush(envKeys\x2C key);\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\n    // keeping only the first one (in lexicographic order)\n    const sawKey = new SafeSet();\n    envKeys = ArrayPrototypeFilter(\n      ArrayPrototypeSort(envKeys)\x2C\n      (key) => {\n        const uppercaseKey = StringPrototypeToUpperCase(key);\n        if (sawKey.has(uppercaseKey)) {\n          return false;\n        }\n        sawKey.add(uppercaseKey);\n        return true;\n      }\x2C\n    );\n  }\n\n  for (const key of envKeys) {\n    const value = env[key];\n    if (value !== undefined) {\n      validateArgumentNullCheck(key\x2C `options.env['${key}']`);\n      validateArgumentNullCheck(value\x2C `options.env['${key}']`);\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\n    }\n  }\n\n  return {\n    // Make a shallow copy so we don't clobber the user's options object.\n    __proto__: null\x2C\n    ...options\x2C\n    args\x2C\n    cwd\x2C\n    detached: !!options.detached\x2C\n    envPairs\x2C\n    file\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\n  };\n}\n\nfunction abortChildProcess(child\x2C killSignal\x2C reason) {\n  if (!child)\n    return;\n  try {\n    if (child.kill(killSignal)) {\n      child.emit('error'\x2C new AbortError(undefined\x2C { cause: reason }));\n    }\n  } catch (err) {\n    child.emit('error'\x2C err);\n  }\n}\n\n/**\n * Spawns a new process using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   env?: Record<string\x2C string>;\n *   argv0?: string;\n *   stdio?: Array | string;\n *   detached?: boolean;\n *   uid?: number;\n *   gid?: number;\n *   serialization?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction spawn(file\x2C args\x2C options) {\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\n  validateTimeout(options.timeout);\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const killSignal = sanitizeKillSignal(options.killSignal);\n  const child = new ChildProcess();\n\n  debug('spawn'\x2C options);\n  child.spawn(options);\n\n  if (options.timeout > 0) {\n    let timeoutId = setTimeout(() => {\n      if (timeoutId) {\n        try {\n          child.kill(killSignal);\n        } catch (err) {\n          child.emit('error'\x2C err);\n        }\n        timeoutId = null;\n      }\n    }\x2C options.timeout);\n\n    child.once('exit'\x2C () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    });\n  }\n\n  if (options.signal) {\n    const signal = options.signal;\n    if (signal.aborted) {\n      process.nextTick(onAbortListener);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(signal\x2C onAbortListener);\n      child.once('exit'\x2C disposable[SymbolDispose]);\n    }\n\n    function onAbortListener() {\n      abortChildProcess(child\x2C killSignal\x2C options.signal.reason);\n    }\n  }\n\n  return child;\n}\n\n/**\n * Spawns a new process synchronously using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   argv0?: string;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {{\n *   pid: number;\n *   output: Array;\n *   stdout: Buffer | string;\n *   stderr: Buffer | string;\n *   status: number | null;\n *   signal: string | null;\n *   error: Error;\n *   }}\n */\nfunction spawnSync(file\x2C args\x2C options) {\n  options = {\n    __proto__: null\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x2C\n  };\n\n  debug('spawnSync'\x2C options);\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  // Validate and translate the kill signal\x2C if present.\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\n\n  if (options.input) {\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\n    stdin.input = options.input;\n  }\n\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\n  for (let i = 0; i < options.stdio.length; i++) {\n    const input = options.stdio[i] && options.stdio[i].input;\n    if (input != null) {\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\n      if (isArrayBufferView(input)) {\n        pipe.input = input;\n      } else if (typeof input === 'string') {\n        pipe.input = Buffer.from(input\x2C options.encoding);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\n                                       ['Buffer'\x2C\n                                        'TypedArray'\x2C\n                                        'DataView'\x2C\n                                        'string']\x2C\n                                       input);\n      }\n    }\n  }\n\n  return child_process.spawnSync(options);\n}\n\n\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n    ObjectAssign(err\x2C ret);\n  } else if (ret.status !== 0) {\n    let msg = 'Command failed: ';\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\n    if (ret.stderr && ret.stderr.length > 0)\n      msg += `\\n${ret.stderr.toString()}`;\n    err = genericNodeError(msg\x2C ret);\n  }\n  return err;\n}\n\n/**\n * Spawns a file as a shell synchronously.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   shell?: boolean | string;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execFileSync(file\x2C args\x2C options) {\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\n\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(file\x2C args\x2C options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const errArgs = [options.argv0 || file];\n  ArrayPrototypePushApply(errArgs\x2C args);\n  const err = checkExecSyncError(ret\x2C errArgs);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n/**\n * Spawns a shell executing the given `command` synchronously.\n * @param {string} command\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   shell?: string;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\n  const inheritStderr = !opts.options.stdio;\n\n  const ret = spawnSync(opts.file\x2C opts.options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C undefined\x2C command);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n\nfunction validateArgumentNullCheck(arg\x2C propName) {\n  if (typeof arg === 'string' && StringPrototypeIncludes(arg\x2C '\\u0000')) {\n    throw new ERR_INVALID_ARG_VALUE(propName\x2C arg\x2C 'must be a string without null bytes');\n  }\n}\n\n\nfunction validateArgumentsNullCheck(args\x2C propName) {\n  for (let i = 0; i < args.length; ++i) {\n    validateArgumentNullCheck(args[i]\x2C `${propName}[${i}]`);\n  }\n}\n\n\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\n  }\n}\n\n\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\n                               'a positive number'\x2C\n                               maxBuffer);\n  }\n}\n\n\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\n                                   ['string'\x2C 'number']\x2C\n                                   killSignal);\n  }\n}\n\nmodule.exports = {\n  _forkChild\x2C\n  ChildProcess\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  fork\x2C\n  spawn\x2C\n  spawnSync\x2C\n};\n
code-source-info,0x8b517feac26,78,0,27267,C0O0C4O27267,,
code-creation,JS,10,81865,0x8b517feb826,881, node:child_process:1:1,0x8b517feaba0,~
code-source-info,0x8b517feb
tick,0x7ee81c4c4a29,82174,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,82614,0x8b517ff1d2e,5, node:internal/child_process:1:1,0x8b517ff1070,~
script-source,79,node:internal/child_process,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototype\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolDispose\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\n    ERR_IPC_CHANNEL_CLOSED\x2C\n    ERR_IPC_DISCONNECTED\x2C\n    ERR_IPC_ONE_PIPE\x2C\n    ERR_IPC_SYNC_FORK\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst EventEmitter = require('events');\nconst net = require('net');\nconst dgram = require('dgram');\nconst inspect = require('internal/util/inspect').inspect;\nconst assert = require('internal/assert');\n\nconst { Process } = internalBinding('process_wrap');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { TCP } = internalBinding('tcp_wrap');\nconst { TTY } = internalBinding('tty_wrap');\nconst { UDP } = internalBinding('udp_wrap');\nconst SocketList = require('internal/socket_list');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst spawn_sync = internalBinding('spawn_sync');\nconst { kStateSymbol } = require('internal/dgram');\nconst dc = require('diagnostics_channel');\nconst childProcessChannel = dc.channel('child_process');\n\nconst {\n  UV_EACCES\x2C\n  UV_EAGAIN\x2C\n  UV_EINVAL\x2C\n  UV_EMFILE\x2C\n  UV_ENFILE\x2C\n  UV_ENOENT\x2C\n  UV_ENOSYS\x2C\n  UV_ESRCH\x2C\n} = internalBinding('uv');\n\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\n\n// Lazy loaded for startup performance and to allow monkey patching of\n// internalBinding('http_parser').HTTPParser.\nlet freeParser;\nlet HTTPParser;\n\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\nconst kChannelHandle = Symbol('kChannelHandle');\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\nconst kPendingMessages = Symbol('kPendingMessages');\n\n// This object contain function to convert TCP objects to native handle objects\n// and back again.\nconst handleConversion = {\n  'net.Native': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\x2C\n  }\x2C\n\n  'net.Server': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C server\x2C options) {\n      return server._handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const server = new net.Server();\n      server.listen(handle\x2C () => {\n        emit(server);\n      });\n    }\x2C\n  }\x2C\n\n  'net.Socket': {\n    send(message\x2C socket\x2C options) {\n      if (!socket._handle)\n        return;\n\n      // If the socket was created by net.Server\n      if (socket.server) {\n        // The worker should keep track of the socket\n        message.key = socket.server._connectionKey;\n\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\n\n        // The server should no longer expose a .connection property\n        // and when asked to close it should query the socket status from\n        // the workers\n        if (firstTime) socket.server._setupWorker(socketList);\n\n        // Act like socket is detached\n        if (!options.keepOpen)\n          socket.server._connections--;\n      }\n\n      const handle = socket._handle;\n\n      // Remove handle from socket object\x2C it will be closed when the socket\n      // will be sent\n      if (!options.keepOpen) {\n        handle.onread = nop;\n        socket._handle = null;\n        socket.setTimeout(0);\n\n        if (freeParser === undefined)\n          freeParser = require('_http_common').freeParser;\n        if (HTTPParser === undefined)\n          HTTPParser = require('_http_common').HTTPParser;\n\n        // In case of an HTTP connection socket\x2C release the associated\n        // resources\n        if (socket.parser && socket.parser instanceof HTTPParser) {\n          freeParser(socket.parser\x2C null\x2C socket);\n          if (socket._httpMessage)\n            socket._httpMessage.detachSocket(socket);\n        }\n      }\n\n      return handle;\n    }\x2C\n\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\n      // Store the handle after successfully sending it\x2C so it can be closed\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\n      // just close it.\n      if (handle && !options.keepOpen) {\n        if (target) {\n          // There can only be one _pendingMessage as passing handles are\n          // processed one at a time: handles are stored in _handleQueue while\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\n          assert(!target._pendingMessage);\n          target._pendingMessage =\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\n        } else {\n          handle.close();\n        }\n      }\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new net.Socket({\n        handle: handle\x2C\n        readable: true\x2C\n        writable: true\x2C\n      });\n\n      // If the socket was created by net.Server we will track the socket\n      if (message.key) {\n\n        // Add socket to connections list\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\n        socketList.add({\n          socket: socket\x2C\n        });\n      }\n\n      emit(socket);\n    }\x2C\n  }\x2C\n\n  'dgram.Native': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\x2C\n  }\x2C\n\n  'dgram.Socket': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C socket\x2C options) {\n      message.dgramType = socket.type;\n\n      return socket[kStateSymbol].handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new dgram.Socket(message.dgramType);\n\n      socket.bind(handle\x2C () => {\n        emit(socket);\n      });\n    }\x2C\n  }\x2C\n};\n\nfunction stdioStringToArray(stdio\x2C channel) {\n  const options = [];\n\n  switch (stdio) {\n    case 'ignore':\n    case 'overlapped':\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  if (channel) ArrayPrototypePush(options\x2C channel);\n\n  return options;\n}\n\nfunction ChildProcess() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._closesNeeded = 1;\n  this._closesGot = 0;\n  this.connected = false;\n\n  this.signalCode = null;\n  this.exitCode = null;\n  this.killed = false;\n  this.spawnfile = null;\n\n  this._handle = new Process();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onexit = (exitCode\x2C signalCode) => {\n    if (signalCode) {\n      this.signalCode = signalCode;\n    } else {\n      this.exitCode = exitCode;\n    }\n\n    if (this.stdin) {\n      this.stdin.destroy();\n    }\n\n    this._handle.close();\n    this._handle = null;\n\n    if (exitCode < 0) {\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = new ErrnoException(exitCode\x2C syscall);\n\n      if (this.spawnfile)\n        err.path = this.spawnfile;\n\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\n      this.emit('error'\x2C err);\n    } else {\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\n    }\n\n    // If any of the stdio streams have not been touched\x2C\n    // then pull all the data through so that it can get the\n    // eof and emit a 'close' event.\n    // Do it on nextTick so that the user has one last chance\n    // to consume the output\x2C if for example they only want to\n    // start reading the data once the process exits.\n    process.nextTick(flushStdio\x2C this);\n\n    maybeClose(this);\n  };\n  if (childProcessChannel.hasSubscribers) {\n    childProcessChannel.publish({\n      process: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\n\n\nfunction flushStdio(subprocess) {\n  const stdio = subprocess.stdio;\n\n  if (stdio == null) return;\n\n  for (let i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\n    // which data can be read from a stream\x2C e.g. being consumed on the\n    // native layer directly as a StreamBase.\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\n      continue;\n    }\n    stream.resume();\n  }\n}\n\n\nfunction createSocket(pipe\x2C readable) {\n  return net.Socket({ handle: pipe\x2C readable });\n}\n\n\nfunction getHandleWrapType(stream) {\n  if (stream instanceof Pipe) return 'pipe';\n  if (stream instanceof TTY) return 'tty';\n  if (stream instanceof TCP) return 'tcp';\n  if (stream instanceof UDP) return 'udp';\n\n  return false;\n}\n\nfunction closePendingHandle(target) {\n  target._pendingMessage.handle.close();\n  target._pendingMessage = null;\n}\n\n\nChildProcess.prototype.spawn = function(options) {\n  let i = 0;\n\n  validateObject(options\x2C 'options');\n\n  // If no `stdio` option was given - use default\n  let stdio = options.stdio || 'pipe';\n\n  stdio = getValidStdio(stdio\x2C false);\n\n  const ipc = stdio.ipc;\n  const ipcFd = stdio.ipcFd;\n  stdio = options.stdio = stdio.stdio;\n\n\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\n                [undefined\x2C 'json'\x2C 'advanced']);\n  const serialization = options.serialization || 'json';\n\n  if (ipc !== undefined) {\n    // Let child process know about opened IPC channel\n    if (options.envPairs === undefined)\n      options.envPairs = [];\n    else\n      validateArray(options.envPairs\x2C 'options.envPairs');\n\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\n    ArrayPrototypePush(options.envPairs\x2C\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\n  }\n\n  validateString(options.file\x2C 'options.file');\n  this.spawnfile = options.file;\n\n  if (options.args === undefined) {\n    this.spawnargs = [];\n  } else {\n    validateArray(options.args\x2C 'options.args');\n    this.spawnargs = options.args;\n  }\n\n  const err = this._handle.spawn(options);\n\n  // Run-time errors should emit an error\x2C not throw an exception.\n  if (err === UV_EACCES ||\n      err === UV_EAGAIN ||\n      err === UV_EMFILE ||\n      err === UV_ENFILE ||\n      err === UV_ENOENT) {\n    process.nextTick(onErrorNT\x2C this\x2C err);\n\n    // There is no point in continuing when we've hit EMFILE or ENFILE\n    // because we won't be able to set up the stdio file descriptors.\n    if (err === UV_EMFILE || err === UV_ENFILE)\n      return err;\n  } else if (err) {\n    // Close all opened fds on error\n    for (i = 0; i < stdio.length; i++) {\n      const stream = stdio[i];\n      if (stream.type === 'pipe') {\n        stream.handle.close();\n      }\n    }\n\n    this._handle.close();\n    this._handle = null;\n    throw new ErrnoException(err\x2C 'spawn');\n  } else {\n    process.nextTick(onSpawnNT\x2C this);\n  }\n\n  this.pid = this._handle.pid;\n\n  for (i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    if (stream.type === 'ignore') continue;\n\n    if (stream.ipc) {\n      this._closesNeeded++;\n      continue;\n    }\n\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\n    // otherwise we might attempt to read from the stream when at the same time\n    // the child process does.\n    if (stream.type === 'wrap') {\n      stream.handle.reading = false;\n      stream.handle.readStop();\n      stream._stdio.pause();\n      stream._stdio.readableFlowing = false;\n      stream._stdio._readableState.reading = false;\n      stream._stdio[kIsUsedAsStdio] = true;\n      continue;\n    }\n\n    if (stream.handle) {\n      stream.socket = createSocket(this.pid !== 0 ?\n        stream.handle : null\x2C i > 0);\n\n      if (i > 0 && this.pid !== 0) {\n        this._closesNeeded++;\n        stream.socket.on('close'\x2C () => {\n          maybeClose(this);\n        });\n      }\n    }\n  }\n\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\n    stdio[0].socket : null;\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\n    stdio[1].socket : null;\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\n    stdio[2].socket : null;\n\n  this.stdio = [];\n\n  for (i = 0; i < stdio.length; i++)\n    ArrayPrototypePush(this.stdio\x2C\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\n\n  // Add .send() method and start listening for IPC data\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\n\n  return err;\n};\n\n\nfunction onErrorNT(self\x2C err) {\n  self._handle.onexit(err);\n}\n\n\nfunction onSpawnNT(self) {\n  self.emit('spawn');\n}\n\n\nChildProcess.prototype.kill = function(sig) {\n\n  const signal = sig === 0 ? sig :\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\n\n  if (this._handle) {\n    const err = this._handle.kill(signal);\n    if (err === 0) {\n      /* Success. */\n      this.killed = true;\n      return true;\n    }\n    if (err === UV_ESRCH) {\n      /* Already dead. */\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\n      /* The underlying platform doesn't support this signal. */\n      throw new ErrnoException(err\x2C 'kill');\n    } else {\n      /* Other error\x2C almost certainly EPERM. */\n      this.emit('error'\x2C new ErrnoException(err\x2C 'kill'));\n    }\n  }\n\n  /* Kill didn't succeed. */\n  return false;\n};\n\nChildProcess.prototype[SymbolDispose] = function() {\n  if (!this.killed) {\n    this.kill();\n  }\n};\n\n\nChildProcess.prototype.ref = function() {\n  if (this._handle) this._handle.ref();\n};\n\n\nChildProcess.prototype.unref = function() {\n  if (this._handle) this._handle.unref();\n};\n\nclass Control extends EventEmitter {\n  #channel = null;\n  #refs = 0;\n  #refExplicitlySet = false;\n\n  constructor(channel) {\n    super();\n    this.#channel = channel;\n    this[kPendingMessages] = [];\n  }\n\n  // The methods keeping track of the counter are being used to track the\n  // listener count on the child process object as well as when writes are\n  // in progress. Once the user has explicitly requested a certain state\x2C these\n  // methods become no-ops in order to not interfere with the user's intentions.\n  refCounted() {\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\n      this.#channel.ref();\n    }\n  }\n\n  unrefCounted() {\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\n      this.#channel.unref();\n      this.emit('unref');\n    }\n  }\n\n  ref() {\n    this.#refExplicitlySet = true;\n    this.#channel.ref();\n  }\n\n  unref() {\n    this.#refExplicitlySet = true;\n    this.#channel.unref();\n  }\n\n  get fd() {\n    return this.#channel ? this.#channel.fd : undefined;\n  }\n}\n\nconst channelDeprecationMsg = '_channel is deprecated. ' +\n                              'Use ChildProcess.channel instead.';\n\nlet serialization;\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\n  const control = new Control(channel);\n  target.channel = control;\n  target[kChannelHandle] = channel;\n\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\n    __proto__: null\x2C\n    get: deprecate(() => {\n      return target.channel;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    set: deprecate((val) => {\n      target.channel = val;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n  });\n\n  target._handleQueue = null;\n  target._pendingMessage = null;\n\n  if (serialization === undefined)\n    serialization = require('internal/child_process/serialization');\n  const {\n    initMessageChannel\x2C\n    parseChannelMessages\x2C\n    writeChannelMessage\x2C\n  } = serialization[serializationMode];\n\n  let pendingHandle = null;\n  initMessageChannel(channel);\n  channel.pendingHandle = null;\n  channel.onread = function(arrayBuffer) {\n    const recvHandle = channel.pendingHandle;\n    channel.pendingHandle = null;\n    if (arrayBuffer) {\n      const nread = streamBaseState[kReadBytesOrError];\n      const offset = streamBaseState[kArrayBufferOffset];\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\n      if (recvHandle)\n        pendingHandle = recvHandle;\n\n      for (const message of parseChannelMessages(channel\x2C pool)) {\n        // There will be at most one NODE_HANDLE message in every chunk we\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\n        // that we deliver the handle with the right message however.\n        if (isInternal(message)) {\n          if (message.cmd === 'NODE_HANDLE') {\n            handleMessage(message\x2C pendingHandle\x2C true);\n            pendingHandle = null;\n          } else {\n            handleMessage(message\x2C undefined\x2C true);\n          }\n        } else {\n          handleMessage(message\x2C undefined\x2C false);\n        }\n      }\n    } else {\n      this.buffering = false;\n      target.disconnect();\n      channel.onread = nop;\n      channel.close();\n      target.channel = null;\n      maybeClose(target);\n    }\n  };\n\n  // Object where socket lists will live\n  channel.sockets = { got: {}\x2C send: {} };\n\n  // Handlers will go through this\n  target.on('internalMessage'\x2C function(message\x2C handle) {\n    // Once acknowledged - continue sending handles.\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\n        message.cmd === 'NODE_HANDLE_NACK') {\n\n      if (target._pendingMessage) {\n        if (message.cmd === 'NODE_HANDLE_ACK') {\n          closePendingHandle(target);\n        } else if (target._pendingMessage.retransmissions++ ===\n                   MAX_HANDLE_RETRANSMISSIONS) {\n          closePendingHandle(target);\n          process.emitWarning('Handle did not reach the receiving process ' +\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\n        }\n      }\n\n      assert(ArrayIsArray(target._handleQueue));\n      const queue = target._handleQueue;\n      target._handleQueue = null;\n\n      if (target._pendingMessage) {\n        target._send(target._pendingMessage.message\x2C\n                     target._pendingMessage.handle\x2C\n                     target._pendingMessage.options\x2C\n                     target._pendingMessage.callback);\n      }\n\n      for (let i = 0; i < queue.length; i++) {\n        const args = queue[i];\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\n      }\n\n      // Process a pending disconnect (if any).\n      if (!target.connected && target.channel && !target._handleQueue)\n        target._disconnect();\n\n      return;\n    }\n\n    if (message.cmd !== 'NODE_HANDLE') return;\n\n    // It is possible that the handle is not received because of some error on\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\n    // sender about it by sending a NODE_HANDLE_NACK message.\n    if (!handle)\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\n\n    // Acknowledge handle receival. Don't emit error events (for example if\n    // the other side has disconnected) because this call to send() is not\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\n    // a message.\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\n\n    const obj = handleConversion[message.type];\n\n    // Update simultaneous accepts on Windows\n    if (process.platform === 'win32') {\n      handle.setSimultaneousAccepts(false);\n    }\n\n    // Convert handle object\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\n    });\n  });\n\n  target.on('newListener'\x2C function() {\n\n    process.nextTick(() => {\n      if (!target.channel || !target.listenerCount('message'))\n        return;\n\n      const messages = target.channel[kPendingMessages];\n      const { length } = messages;\n      if (!length) return;\n\n      for (let i = 0; i < length; i++) {\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\n      }\n\n      target.channel[kPendingMessages] = [];\n    });\n  });\n\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\n    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options\x2C 'options');\n    }\n\n    options = { swallowErrors: false\x2C ...options };\n\n    if (this.connected) {\n      return this._send(message\x2C handle\x2C options\x2C callback);\n    }\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n    } else {\n      process.nextTick(() => this.emit('error'\x2C ex));\n    }\n    return false;\n  };\n\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\n    assert(this.connected || this.channel);\n\n    if (message === undefined)\n      throw new ERR_MISSING_ARGS('message');\n\n    // Non-serializable messages should not reach the remote\n    // end point; as any failure in the stringification there\n    // will result in error message that is weakly consumable.\n    // So perform a final check on message prior to sending.\n    if (typeof message !== 'string' &&\n        typeof message !== 'object' &&\n        typeof message !== 'number' &&\n        typeof message !== 'boolean') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\n    }\n\n    // Support legacy function signature\n    if (typeof options === 'boolean') {\n      options = { swallowErrors: options };\n    }\n\n    let obj;\n\n    // Package messages with a handle object\n    if (handle) {\n      // This message will be handled by an internalMessage event handler\n      message = {\n        cmd: 'NODE_HANDLE'\x2C\n        type: null\x2C\n        msg: message\x2C\n      };\n\n      if (handle instanceof net.Socket) {\n        message.type = 'net.Socket';\n      } else if (handle instanceof net.Server) {\n        message.type = 'net.Server';\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\n        message.type = 'net.Native';\n      } else if (handle instanceof dgram.Socket) {\n        message.type = 'dgram.Socket';\n      } else if (handle instanceof UDP) {\n        message.type = 'dgram.Native';\n      } else {\n        throw new ERR_INVALID_HANDLE_TYPE();\n      }\n\n      // Queue-up message and handle if we haven't received ACK yet.\n      if (this._handleQueue) {\n        ArrayPrototypePush(this._handleQueue\x2C {\n          callback: callback\x2C\n          handle: handle\x2C\n          options: options\x2C\n          message: message.msg\x2C\n        });\n        return this._handleQueue.length === 1;\n      }\n\n      obj = handleConversion[message.type];\n\n      // convert TCP object to native handle object\n      handle = ReflectApply(handleConversion[message.type].send\x2C\n                            target\x2C [message\x2C handle\x2C options]);\n\n      // If handle was sent twice\x2C or it is impossible to get native handle\n      // out of it - just send a text without the handle.\n      if (!handle)\n        message = message.msg;\n\n      // Update simultaneous accepts on Windows\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\n        handle.setSimultaneousAccepts(true);\n      }\n    } else if (this._handleQueue &&\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\n      // Queue request anyway to avoid out-of-order messages.\n      ArrayPrototypePush(this._handleQueue\x2C {\n        callback: callback\x2C\n        handle: null\x2C\n        options: options\x2C\n        message: message\x2C\n      });\n      return this._handleQueue.length === 1;\n    }\n\n    const req = new WriteWrap();\n\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\n\n    if (err === 0) {\n      if (handle) {\n        if (!this._handleQueue)\n          this._handleQueue = [];\n        if (obj && obj.postSend)\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\n      }\n\n      if (wasAsyncWrite) {\n        req.oncomplete = () => {\n          control.unrefCounted();\n          if (typeof callback === 'function')\n            callback(null);\n        };\n        control.refCounted();\n      } else if (typeof callback === 'function') {\n        process.nextTick(callback\x2C null);\n      }\n    } else {\n      // Cleanup handle on error\n      if (obj && obj.postSend)\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\n\n      if (!options.swallowErrors) {\n        const ex = new ErrnoException(err\x2C 'write');\n        if (typeof callback === 'function') {\n          process.nextTick(callback\x2C ex);\n        } else {\n          process.nextTick(() => this.emit('error'\x2C ex));\n        }\n      }\n    }\n\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\n    return channel.writeQueueSize < (65536 * 2);\n  };\n\n  // Connected will be set to false immediately when a disconnect() is\n  // requested\x2C even though the channel might still be alive internally to\n  // process queued messages. The three states are distinguished as follows:\n  // - disconnect() never requested: channel is not null and connected\n  //   is true\n  // - disconnect() requested\x2C messages in the queue: channel is not null\n  //   and connected is false\n  // - disconnect() requested\x2C channel actually disconnected: channel is\n  //   null and connected is false\n  target.connected = true;\n\n  target.disconnect = function() {\n    if (!this.connected) {\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\n      return;\n    }\n\n    // Do not allow any new messages to be written.\n    this.connected = false;\n\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\n    // postpone the disconnect so that it happens internally after the\n    // queue is flushed.\n    if (!this._handleQueue)\n      this._disconnect();\n  };\n\n  target._disconnect = function() {\n    assert(this.channel);\n\n    // This marks the fact that the channel is actually disconnected.\n    this.channel = null;\n    this[kChannelHandle] = null;\n\n    if (this._pendingMessage)\n      closePendingHandle(this);\n\n    let fired = false;\n    function finish() {\n      if (fired) return;\n      fired = true;\n\n      channel.close();\n      target.emit('disconnect');\n    }\n\n    // If a message is being read\x2C then wait for it to complete.\n    if (channel.buffering) {\n      this.once('message'\x2C finish);\n      this.once('internalMessage'\x2C finish);\n\n      return;\n    }\n\n    process.nextTick(finish);\n  };\n\n  function emit(event\x2C message\x2C handle) {\n    if ('internalMessage' === event || target.listenerCount('message')) {\n      target.emit(event\x2C message\x2C handle);\n      return;\n    }\n\n    ArrayPrototypePush(\n      target.channel[kPendingMessages]\x2C\n      [event\x2C message\x2C handle]\x2C\n    );\n  }\n\n  function handleMessage(message\x2C handle\x2C internal) {\n    if (!target.channel)\n      return;\n\n    const eventName = (internal ? 'internalMessage' : 'message');\n\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\n  }\n\n  channel.readStart();\n  return control;\n}\n\nconst INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\n            INTERNAL_PREFIX);\n}\n\nconst nop = FunctionPrototype;\n\nfunction getValidStdio(stdio\x2C sync) {\n  let ipc;\n  let ipcFd;\n\n  // Replace shortcut with an array\n  if (typeof stdio === 'string') {\n    stdio = stdioStringToArray(stdio);\n  } else if (!ArrayIsArray(stdio)) {\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  // At least 3 stdio will be created\n  // Don't concat() a new Array() because it would be sparse\x2C and\n  // stdio.reduce() would skip the sparse elements of stdio.\n  // See https://stackoverflow.com/a/5501711/3561\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\n\n  // Translate stdio into C++-readable form\n  // (i.e. PipeWraps or fds)\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\n    function cleanup() {\n      for (let i = 0; i < acc.length; i++) {\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\n          acc[i].handle.close();\n      }\n    }\n\n    // Defaults\n    if (stdio == null) {\n      stdio = i < 3 ? 'pipe' : 'ignore';\n    }\n\n    if (stdio === 'ignore') {\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\n               (typeof stdio === 'number' && stdio < 0)) {\n      const a = {\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\n        readable: i === 0\x2C\n        writable: i !== 0\x2C\n      };\n\n      if (!sync)\n        a.handle = new Pipe(PipeConstants.SOCKET);\n\n      ArrayPrototypePush(acc\x2C a);\n    } else if (stdio === 'ipc') {\n      if (sync || ipc !== undefined) {\n        // Cleanup previously created pipes\n        cleanup();\n        if (!sync)\n          throw new ERR_IPC_ONE_PIPE();\n        else\n          throw new ERR_IPC_SYNC_FORK();\n      }\n\n      ipc = new Pipe(PipeConstants.IPC);\n      ipcFd = i;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'pipe'\x2C\n        handle: ipc\x2C\n        ipc: true\x2C\n      });\n    } else if (stdio === 'inherit') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'inherit'\x2C\n        fd: i\x2C\n      });\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'fd'\x2C\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x2C\n      });\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\n               getHandleWrapType(stdio._handle)) {\n      const handle = getHandleWrapType(stdio) ?\n        stdio :\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'wrap'\x2C\n        wrapType: getHandleWrapType(handle)\x2C\n        handle: handle\x2C\n        _stdio: stdio\x2C\n      });\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\n      if (!sync) {\n        cleanup();\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\n      }\n    } else {\n      // Cleanup\n      cleanup();\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n    }\n\n    return acc;\n  }\x2C []);\n\n  return { stdio\x2C ipc\x2C ipcFd };\n}\n\n\nfunction getSocketList(type\x2C worker\x2C key) {\n  const sockets = worker[kChannelHandle].sockets[type];\n  let socketList = sockets[key];\n  if (!socketList) {\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\n    socketList = sockets[key] = new Construct(worker\x2C key);\n  }\n  return socketList;\n}\n\n\nfunction maybeClose(subprocess) {\n  subprocess._closesGot++;\n\n  if (subprocess._closesGot === subprocess._closesNeeded) {\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\n  }\n}\n\nfunction spawnSync(options) {\n  const result = spawn_sync.spawn(options);\n\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\n    for (let i = 0; i < result.output.length; i++) {\n      if (!result.output[i])\n        continue;\n      result.output[i] = result.output[i].toString(options.encoding);\n    }\n  }\n\n  result.stdout = result.output && result.output[1];\n  result.stderr = result.output && result.output[2];\n\n  if (result.error) {\n    result.error = new ErrnoException(result.error\x2C 'spawnSync ' + options.file);\n    result.error.path = options.file;\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  ChildProcess\x2C\n  kChannelHandle\x2C\n  setupChannel\x2C\n  getValidStdio\x2C\n  stdioStringToArray\x2C\n  spawnSync\x2C\n};\n
code-source-info,0x8b517ff1d2e,79,0,31801,C0O0C4O31801,,
code-creation,JS,10,83134,0x8b517ff3406,1312, node:internal/child_process:1:1,0x8b517ff1ca8,~
code-source-info,0x8b517ff
code-creation,JS,10,83157,0x8b517ff3bce,29,<instance_members_initializer> node:internal/child_process:536:1,0x8b517ff2aa0,~
code-source-info,0x8b517ff3bce,79,13906,14903,C3O13956C12O13972C21O13997C28O14903,,
tick,0x7ee81c5c5adf,83252,1,0x7ee81a613550,6,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
tick,0x7ee81c1d14f6,84384,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,84638,0x8b517ff95ae,5, node:net:1:1,0x8b517ff7fa8,~
script-source,80,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  kReinitializeHandle\x2C\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\x2C\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\x2C\n  UV_ECANCELED\x2C\n  UV_ETIMEDOUT\x2C\n} = internalBinding('uv');\n\nconst { Buffer } = require('buffer');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\x2C\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\x2C\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n} = require('internal/stream_base_commons');\nconst {\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CONNECTION_TIMEOUT\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  genericNodeError\x2C\n  NodeAggregateError\x2C\n  UVExceptionWithHostPort\x2C\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst { queueMicrotask } = require('internal/process/task_queues');\nconst { kEmptyObject\x2C guessHandleType\x2C promisify } = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst { getOptionValue } = require('internal/options');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\nlet autoSelectFamilyDefault = getOptionValue('--network-family-autoselection');\nlet autoSelectFamilyAttemptTimeoutDefault = getOptionValue('--network-family-autoselection-attempt-timeout');\n\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst isWindows = process.platform === 'win32';\n\nconst noop = () => {};\n\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\n\nconst dc = require('diagnostics_channel');\nconst netClientSocketChannel = dc.channel('net.client.socket');\nconst netServerSocketChannel = dc.channel('net.server.socket');\nconst netServerListen = dc.tracingChannel('net.server.listen');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\n\nfunction getFlags(ipv6Only) {\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n\n  if (netClientSocketChannel.hasSubscribers) {\n    netClientSocketChannel.publish({\n      socket\x2C\n    });\n  }\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\nfunction getDefaultAutoSelectFamily() {\n  return autoSelectFamilyDefault;\n}\n\nfunction setDefaultAutoSelectFamily(value) {\n  validateBoolean(value\x2C 'value');\n  autoSelectFamilyDefault = value;\n}\n\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\n  return autoSelectFamilyAttemptTimeoutDefault;\n}\n\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\n  validateInt32(value\x2C 'value'\x2C 1);\n\n  if (value < 10) {\n    value = 10;\n  }\n\n  autoSelectFamilyAttemptTimeoutDefault = value;\n}\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\n  if (self._handle) {\n    self._handle.close(() => {\n      debug('emit close');\n      self.emit('close'\x2C isException);\n      if (isCleanupPending) {\n        self._handle.onread = noop;\n        self._handle = null;\n        self._sockname = null;\n      }\n    });\n  }\n}\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  if (options?.objectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'options.objectMode'\x2C\n      options.objectMode\x2C\n      'is not supported'\x2C\n    );\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      `options.${\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\n      }`\x2C\n      options.readableObjectMode || options.writableObjectMode\x2C\n      'is not supported'\x2C\n    );\n  }\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n  this._closeAfterHandlingError = false;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw new ErrnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw new ErrnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        __proto__: null\x2C\n        value: 0\x2C writable: true\x2C\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  this[kSetNoDelay] = Boolean(options.noDelay);\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  if (options.signal) {\n    addClientAbortSignalOption(this\x2C options);\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.pending) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  const er = genericNodeError(\n    'This socket has been ended by the other party'\x2C\n    { code: 'EPIPE' }\x2C\n  );\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  // Backwards compatibility: assume true when `enable` is omitted\n  enable = Boolean(enable === undefined ? true : enable);\n\n  if (!this._handle) {\n    this[kSetNoDelay] = enable;\n    return this;\n  }\n\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = enable;\n    this._handle.setNoDelay(enable);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\n  enable = Boolean(enable);\n  const initialDelay = ~~(initialDelayMsecs / 1000);\n\n  if (!this._handle) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    return this;\n  }\n\n  if (!this._handle.setKeepAlive) {\n    return this;\n  }\n\n  if (enable !== this[kSetKeepAlive] ||\n      (\n        enable &&\n        this[kSetKeepAliveInitialDelay] !== initialDelay\n      )\n  ) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    this._handle.setKeepAlive(enable\x2C initialDelay);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.connecting;\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this._unrefTimer;\n  }\x2C\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(new ErrnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug(\n    '_read - n'\x2C n\x2C\n    'isConnecting?'\x2C !!this.connecting\x2C\n    'hasHandle?'\x2C !!this._handle\x2C\n  );\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  return this;\n};\n\nSocket.prototype.resetAndDestroy = function() {\n  if (this._handle) {\n    if (!(this._handle instanceof TCP))\n      throw new ERR_INVALID_HANDLE_TYPE();\n    if (this.connecting) {\n      debug('reset wait for connection');\n      this.once('connect'\x2C () => this._reset());\n    } else {\n      this._reset();\n    }\n  } else {\n    this.destroy(new ERR_SOCKET_CLOSED());\n  }\n  return this;\n};\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      this._handle.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(new ErrnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    if (this.resetAndClosing) {\n      this.resetAndClosing = false;\n      const err = this._handle.reset(() => {\n        debug('emit close');\n        this.emit('close'\x2C isException);\n      });\n      if (err)\n        this.emit('error'\x2C new ErrnoException(err\x2C 'reset'));\n    } else if (this._closeAfterHandlingError) {\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\n      // accessible when an `error` event is handled in the `next tick queue`.\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\n    } else {\n      closeSocketHandle(this\x2C isException);\n    }\n\n    if (!this._closeAfterHandlingError) {\n      this._handle.onread = noop;\n      this._handle = null;\n      this._sockname = null;\n    }\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._reset = function() {\n  debug('reset connection');\n  this.resetAndClosing = true;\n  return this.destroy();\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    const out = {};\n    const err = this._handle.getpeername(out);\n    if (err) return out;\n    this._peername = out;\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\x2C\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\nprotoGetter('localFamily'\x2C function localFamily() {\n  return this._getsockname().family;\n});\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this.off('close'\x2C onClose);\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    function onClose() {\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\n    }\n    this.once('close'\x2C onClose);\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n    req.addressType = addressType;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\n  }\n}\n\n\nfunction internalConnectMultiple(context\x2C canceled) {\n  clearTimeout(context[kTimeout]);\n  const self = context.socket;\n\n  // We were requested to abort. Stop all operations\n  if (self._aborted) {\n    return;\n  }\n\n  // All connections have been tried without success\x2C destroy with error\n  if (canceled || context.current === context.addresses.length) {\n    if (context.errors.length === 0) {\n      self.destroy(new ERR_SOCKET_CONNECTION_TIMEOUT());\n      return;\n    }\n\n    self.destroy(new NodeAggregateError(context.errors));\n    return;\n  }\n\n  assert(self.connecting);\n\n  const current = context.current++;\n\n  if (current > 0) {\n    self[kReinitializeHandle](new TCP(TCPConstants.SOCKET));\n  }\n\n  const { localPort\x2C port\x2C flags } = context;\n  const { address\x2C family: addressType } = context.addresses[current];\n  let localAddress;\n  let err;\n\n  if (localPort) {\n    if (addressType === 4) {\n      localAddress = DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\n      internalConnectMultiple(context);\n      return;\n    }\n  }\n\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  const req = new TCPConnectWrap();\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context\x2C current);\n  req.address = address;\n  req.port = port;\n  req.localAddress = localAddress;\n  req.localPort = localPort;\n  req.addressType = addressType;\n\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\n\n  if (addressType === 4) {\n    err = self._handle.connect(req\x2C address\x2C port);\n  } else {\n    err = self._handle.connect6(req\x2C address\x2C port);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C address\x2C port\x2C addressType\x2C ex);\n    internalConnectMultiple(context);\n    return;\n  }\n\n  if (current < context.addresses.length - 1) {\n    debug('connect/multiple: setting the attempt timeout to %d ms'\x2C context.timeout);\n\n    // If the attempt has not returned an error\x2C start the connection timer\n    context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req\x2C self._handle);\n  }\n}\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  // If the parent is already connecting\x2C do not attempt to connect again\n  if (this._parent && this._parent.connecting) {\n    return this;\n  }\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\n  this._handle?.close();\n\n  this._handle = handle;\n  this._handle[owner_symbol] = this;\n\n  initSocketHandle(this);\n};\n\nfunction socketToDnsFamily(family) {\n  switch (family) {\n    case 'IPv4':\n      return 4;\n    case 'IPv6':\n      return 6;\n  }\n\n  return family;\n}\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (typeof port !== 'undefined') {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n\n  if (autoSelectFamily != null) {\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\n  } else {\n    autoSelectFamily = autoSelectFamilyDefault;\n  }\n\n  if (autoSelectFamilyAttemptTimeout != null) {\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\n\n    if (autoSelectFamilyAttemptTimeout < 10) {\n      autoSelectFamilyAttemptTimeout = 10;\n    }\n  } else {\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\n  }\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n    });\n    return;\n  }\n\n  if (options.lookup != null)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: socketToDnsFamily(options.family)\x2C\n    hints: options.hints || 0\x2C\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\n    debug('connect: autodetecting');\n\n    dnsopts.all = true;\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n      lookupAndConnectMultiple(\n        self\x2C\n        async_id_symbol\x2C\n        lookup\x2C\n        host\x2C\n        options\x2C\n        dnsopts\x2C\n        port\x2C\n        localAddress\x2C\n        localPort\x2C\n        autoSelectFamilyAttemptTimeout\x2C\n      );\n    });\n\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n      }\n    });\n  });\n}\n\nfunction lookupAndConnectMultiple(\n  self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localAddress\x2C localPort\x2C timeout\x2C\n) {\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) {\n        return;\n      } else if (err) {\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\n\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n        return;\n      }\n\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\n      // The first valid address determines which group has preference on the\n      // alternate family sorting which happens later.\n      const validAddresses = [[]\x2C []];\n      const validIps = [[]\x2C []];\n      let destinations;\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\n        const address = addresses[i];\n        const { address: ip\x2C family: addressType } = address;\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n        // It's possible we were destroyed while looking this up.\n        if (!self.connecting) {\n          return;\n        }\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\n          if (!destinations) {\n            destinations = addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\n          }\n\n          const destination = destinations[addressType];\n\n          // Only try an address once\n          if (!ArrayPrototypeIncludes(validIps[destination]\x2C ip)) {\n            ArrayPrototypePush(validAddresses[destination]\x2C address);\n            ArrayPrototypePush(validIps[destination]\x2C ip);\n          }\n        }\n      }\n\n\n      // When no AAAA or A records are available\x2C fail on the first one\n      if (!validAddresses[0].length && !validAddresses[1].length) {\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\n\n        if (!isIP(firstIp)) {\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\n                                               options.host\x2C\n                                               options.port);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        }\n\n        return;\n      }\n\n      // Sort addresses alternating families\n      const toAttempt = [];\n      for (let i = 0\x2C l = MathMax(validAddresses[0].length\x2C validAddresses[1].length); i < l; i++) {\n        if (i in validAddresses[0]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[0][i]);\n        }\n        if (i in validAddresses[1]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[1][i]);\n        }\n      }\n\n      if (toAttempt.length === 1) {\n        debug('connect/multiple: only one address found\x2C switching back to single connection');\n        const { address: ip\x2C family: addressType } = toAttempt[0];\n\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C\n          ip\x2C\n          port\x2C\n          addressType\x2C\n          localAddress\x2C\n          localPort\x2C\n        );\n\n        return;\n      }\n\n      self.autoSelectFamilyAttemptedAddresses = [];\n      debug('connect/multiple: will try the following addresses'\x2C toAttempt);\n\n      const context = {\n        socket: self\x2C\n        addresses: toAttempt\x2C\n        current: 0\x2C\n        port\x2C\n        localPort\x2C\n        timeout\x2C\n        [kTimeout]: null\x2C\n        errors: []\x2C\n      };\n\n      self._unrefTimer();\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\n    });\n  });\n}\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  const self = handle[owner_symbol];\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\n      self._handle.setNoDelay(true);\n    }\n\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\n    }\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\n    }\n  } else {\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = new ExceptionWithHostPort(status\x2C\n                                         'connect'\x2C\n                                         req.address\x2C\n                                         req.port\x2C\n                                         details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n    self.destroy(ex);\n  }\n}\n\nfunction addClientAbortSignalOption(self\x2C options) {\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  let disposable;\n\n  function onAbort() {\n    disposable?.[SymbolDispose]();\n    self._aborted = true;\n  }\n\n  if (signal.aborted) {\n    process.nextTick(onAbort);\n  } else {\n    process.nextTick(() => {\n      disposable = addAbortListener(signal\x2C onAbort);\n    });\n  }\n}\n\nfunction createConnectionError(req\x2C status) {\n  let details;\n\n  if (req.localAddress && req.localPort) {\n    details = req.localAddress + ':' + req.localPort;\n  }\n\n  const ex = new ExceptionWithHostPort(status\x2C\n                                       'connect'\x2C\n                                       req.address\x2C\n                                       req.port\x2C\n                                       details);\n  if (details) {\n    ex.localAddress = req.localAddress;\n    ex.localPort = req.localPort;\n  }\n\n  return ex;\n}\n\nfunction afterConnectMultiple(context\x2C current\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\n  debug('connect/multiple: connection attempt to %s:%s completed with status %s'\x2C req.address\x2C req.port\x2C status);\n\n  // Make sure another connection is not spawned\n  clearTimeout(context[kTimeout]);\n\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\n  if (status === 0 && current !== context.current - 1) {\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\n    handle.close();\n    return;\n  }\n\n  const self = context.socket;\n\n  // Some error occurred\x2C add to the list of exceptions\n  if (status !== 0) {\n    const ex = createConnectionError(req\x2C status);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n\n    // Try the next address\x2C unless we were aborted\n    if (context.socket.connecting) {\n      internalConnectMultiple(context\x2C status === UV_ECANCELED);\n    }\n\n    return;\n  }\n\n  if (hasObserver('net')) {\n    startPerf(\n      self\x2C\n      kPerfHooksNetConnectContext\x2C\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\n    );\n  }\n\n  afterConnect(status\x2C self._handle\x2C req\x2C readable\x2C writable);\n}\n\nfunction internalConnectMultipleTimeout(context\x2C req\x2C handle) {\n  debug('connect/multiple: connection to %s:%s timed out'\x2C req.address\x2C req.port);\n  context.socket.emit('connectionAttemptTimeout'\x2C req.address\x2C req.port\x2C req.addressType);\n\n  req.oncomplete = undefined;\n  ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C UV_ETIMEDOUT));\n  handle.close();\n\n  // Try the next address\x2C unless we were aborted\n  if (context.socket.connecting) {\n    internalConnectMultiple(context);\n  }\n}\n\nfunction addServerAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    const disposable = addAbortListener(signal\x2C onAborted);\n    self.once('close'\x2C disposable[SymbolDispose]);\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = kEmptyObject;\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n  if (typeof options.highWaterMark !== 'undefined') {\n    validateNumber(\n      options.highWaterMark\x2C 'options.highWaterMark'\x2C\n    );\n\n    if (options.highWaterMark < 0) {\n      options.highWaterMark = getDefaultHighWaterMark();\n    }\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n  this._listeningId = 1;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n  this.noDelay = Boolean(options.noDelay);\n  this.keepAlive = Boolean(options.keepAlive);\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\n  this.highWaterMark = options.highWaterMark ?? getDefaultHighWaterMark();\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = new UVExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n\n      if (netServerListen.hasSubscribers) {\n        netServerListen.error.publish({ server: this\x2C error });\n      }\n\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = new UVExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n\n    if (netServerListen.hasSubscribers) {\n      netServerListen.error.publish({ server: this\x2C error: ex });\n    }\n\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncEnd.publish({ server: this });\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n    backlog\x2C\n    ...options\x2C\n  };\n  const listeningId = server._listeningId;\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n  function listenOnPrimaryHandle(err\x2C handle) {\n    if (listeningId !== server._listeningId) {\n      handle.close();\n      return;\n    }\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n    // If there was a handle\x2C just close it to avoid fd leak\n    // but it doesn't look like that's going to happen right now\n    if (server._handle) {\n      server._handle.close();\n    }\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncStart.publish({ server: this\x2C options });\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options.ipv6Only);\n  //  Refresh the id to make the previous call invalid\n  this._listeningId++;\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs\x2C undefined\x2C true);\n    return this;\n  }\n  addServerAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (typeof options.port === 'undefined' && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    // We can not call fchmod on abstract unix socket\n    if (options.path[0] === '\\0' &&\n        (options.readableAll || options.writableAll)) {\n      const msg = 'can not set readableAll or writableAllt to true when path is abstract unix socket';\n      throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C msg);\n    }\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C\n                    pipeName\x2C\n                    -1\x2C\n                    -1\x2C\n                    backlog\x2C\n                    undefined\x2C\n                    options.exclusive\x2C\n                    undefined\x2C\n                    {\n                      readableAll: options.readableAll\x2C\n                      writableAll: options.writableAll\x2C\n                    });\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw new ErrnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C\n                         exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  const listeningId = self._listeningId;\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\n    if (listeningId !== self._listeningId) {\n      return;\n    }\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      addressType = ip ? addressType : 4;\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n});\n\nServer.prototype.address = function() {\n  if (this._handle && this._handle.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw new ErrnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C new ErrnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections && self._connections >= self.maxConnections) {\n    if (clientHandle.getsockname || clientHandle.getpeername) {\n      const data = { __proto__: null };\n      if (clientHandle.getsockname) {\n        const localInfo = { __proto__: null };\n        clientHandle.getsockname(localInfo);\n        data.localAddress = localInfo.address;\n        data.localPort = localInfo.port;\n        data.localFamily = localInfo.family;\n      }\n      if (clientHandle.getpeername) {\n        const remoteInfo = { __proto__: null };\n        clientHandle.getpeername(remoteInfo);\n        data.remoteAddress = remoteInfo.address;\n        data.remotePort = remoteInfo.port;\n        data.remoteFamily = remoteInfo.family;\n      }\n      self.emit('drop'\x2C data);\n    } else {\n      self.emit('drop');\n    }\n    clientHandle.close();\n    return;\n  }\n\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\x2C\n    readableHighWaterMark: self.highWaterMark\x2C\n    writableHighWaterMark: self.highWaterMark\x2C\n  });\n\n  if (self.noDelay && clientHandle.setNoDelay) {\n    socket[kSetNoDelay] = true;\n    clientHandle.setNoDelay(true);\n  }\n  if (self.keepAlive && clientHandle.setKeepAlive) {\n    socket[kSetKeepAlive] = true;\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\n  }\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n  self.emit('connection'\x2C socket);\n  if (netServerSocketChannel.hasSubscribers) {\n    netServerSocketChannel.publish({\n      socket\x2C\n    });\n  }\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  this._listeningId++;\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype[SymbolAsyncDispose] = async function() {\n  if (!this._handle) {\n    return;\n  }\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\x2C\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nlet _setSimultaneousAccepts;\nlet warnSimultaneousAccepts = true;\n\nif (isWindows) {\n  let simultaneousAccepts;\n\n  _setSimultaneousAccepts = function(handle) {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n    if (handle === undefined) {\n      return;\n    }\n\n    if (simultaneousAccepts === undefined) {\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\n                             process.env.NODE_MANY_ACCEPTS !== '0');\n    }\n\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\n      handle._simultaneousAccepts = simultaneousAccepts;\n    }\n  };\n} else {\n  _setSimultaneousAccepts = function() {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n  };\n}\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  _setSimultaneousAccepts\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n  getDefaultAutoSelectFamily\x2C\n  setDefaultAutoSelectFamily\x2C\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\n};\n
code-source-info,0x8b517ff95ae,80,0,68422,C0O0C4O68422,,
code-creation,JS,10,86021,0x8b517ffcd36,3704, node:net:1:1,0x8b517ff9528,~
code-source-info,0x8b517ffcd
tick,0x7ee819a47ed6,86090,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
tick,0x7ee81c1da603,86484,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,86505,0xcb902b4e5be,5, node:stream:1:1,0xcb902b4e3b8,~
script-source,81,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  promisify: { custom: customPromisify }\x2C\n} = require('internal/util');\n\nconst {\n  streamReturningOperators\x2C\n  promiseReturningOperators\x2C\n} = require('internal/streams/operators');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\nconst compose = require('internal/streams/compose');\nconst { setDefaultHighWaterMark\x2C getDefaultHighWaterMark } = require('internal/streams/state');\nconst { pipeline } = require('internal/streams/pipeline');\nconst { destroyer } = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst internalBuffer = require('internal/buffer');\n\nconst promises = require('stream/promises');\nconst utils = require('internal/streams/utils');\nconst { isArrayBufferView\x2C isUint8Array } = require('internal/util/types');\n\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\n\nStream.isDestroyed = utils.isDestroyed;\nStream.isDisturbed = utils.isDisturbed;\nStream.isErrored = utils.isErrored;\nStream.isReadable = utils.isReadable;\nStream.isWritable = utils.isWritable;\n\nStream.Readable = require('internal/streams/readable');\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return ReflectApply(op\x2C this\x2C args);\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nStream.Writable = require('internal/streams/writable');\nStream.Duplex = require('internal/streams/duplex');\nStream.Transform = require('internal/streams/transform');\nStream.PassThrough = require('internal/streams/passthrough');\nStream.duplexPair = require('internal/streams/duplexpair');\nStream.pipeline = pipeline;\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\nStream.destroy = destroyer;\nStream.compose = compose;\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\n\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return promises;\n  }\x2C\n});\n\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.pipeline;\n  }\x2C\n});\n\nObjectDefineProperty(eos\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.finished;\n  }\x2C\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream._isArrayBufferView = isArrayBufferView;\nStream._isUint8Array = isUint8Array;\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\n                                       chunk.byteOffset\x2C\n                                       chunk.byteLength);\n};\n
code-source-info,0xcb902b4e5be,81,0,4944,C0O0C4O4944,,
code-creation,JS,10,86618,0xcb902b4ecfe,1107, node:stream:1:1,0xcb902b4e538,~
code-source-info,0xcb902b4ecfe
code-creation,Eval,10,86927,0xcb902b501ae,5, node:internal/streams/operators:1:1,0xcb902b4fe68,~
script-source,82,node:internal/streams/operators,'use strict';\n\nconst { AbortController\x2C AbortSignal } = require('internal/abort_controller');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\nconst {\n  validateAbortSignal\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { kWeakHandler\x2C kResistStopPropagation } = require('internal/event_target');\nconst { finished } = require('internal/streams/end-of-stream');\nconst staticCompose = require('internal/streams/compose');\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\nconst { deprecate } = require('internal/util');\n\nconst {\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  Promise\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  PromisePrototypeThen\x2C\n  Symbol\x2C\n} = primordials;\n\nconst kEmpty = Symbol('kEmpty');\nconst kEof = Symbol('kEof');\n\nfunction compose(stream\x2C options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\n  }\n\n  const composedStream = staticCompose(this\x2C stream);\n\n  if (options?.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(\n      options.signal\x2C\n      composedStream\x2C\n    );\n  }\n\n  return composedStream;\n}\n\nfunction map(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let concurrency = 1;\n  if (options?.concurrency != null) {\n    concurrency = MathFloor(options.concurrency);\n  }\n\n  let highWaterMark = concurrency - 1;\n  if (options?.highWaterMark != null) {\n    highWaterMark = MathFloor(options.highWaterMark);\n  }\n\n  validateInteger(concurrency\x2C 'options.concurrency'\x2C 1);\n  validateInteger(highWaterMark\x2C 'options.highWaterMark'\x2C 0);\n\n  highWaterMark += concurrency;\n\n  return async function* map() {\n    const signal = AbortSignal.any([options?.signal].filter(Boolean));\n    const stream = this;\n    const queue = [];\n    const signalOpt = { signal };\n\n    let next;\n    let resume;\n    let done = false;\n    let cnt = 0;\n\n    function onCatch() {\n      done = true;\n      afterItemProcessed();\n    }\n\n    function afterItemProcessed() {\n      cnt -= 1;\n      maybeResume();\n    }\n\n    function maybeResume() {\n      if (\n        resume &&\n        !done &&\n        cnt < concurrency &&\n        queue.length < highWaterMark\n      ) {\n        resume();\n        resume = null;\n      }\n    }\n\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          if (done) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          try {\n            val = fn(val\x2C signalOpt);\n\n            if (val === kEmpty) {\n              continue;\n            }\n\n            val = PromiseResolve(val);\n          } catch (err) {\n            val = PromiseReject(err);\n          }\n\n          cnt += 1;\n\n          PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n\n          queue.push(val);\n          if (next) {\n            next();\n            next = null;\n          }\n\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\n            await new Promise((resolve) => {\n              resume = resolve;\n            });\n          }\n        }\n        queue.push(kEof);\n      } catch (err) {\n        const val = PromiseReject(err);\n        PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n        queue.push(val);\n      } finally {\n        done = true;\n        if (next) {\n          next();\n          next = null;\n        }\n      }\n    }\n\n    pump();\n\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0];\n\n          if (val === kEof) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          if (val !== kEmpty) {\n            yield val;\n          }\n\n          queue.shift();\n          maybeResume();\n        }\n\n        await new Promise((resolve) => {\n          next = resolve;\n        });\n      }\n    } finally {\n      done = true;\n      if (resume) {\n        resume();\n        resume = null;\n      }\n    }\n  }.call(this);\n}\n\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  return async function* asIndexedPairs() {\n    let index = 0;\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError({ cause: options.signal.reason });\n      }\n      yield [index++\x2C val];\n    }\n  }.call(this);\n}\n\nasync function some(fn\x2C options = undefined) {\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\n    return true;\n  }\n  return false;\n}\n\nasync function every(fn\x2C options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(this\x2C async (...args) => {\n    return !(await fn(...args));\n  }\x2C options));\n}\n\nasync function find(fn\x2C options) {\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\n    return result;\n  }\n  return undefined;\n}\n\nasync function forEach(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function forEachFn(value\x2C options) {\n    await fn(value\x2C options);\n    return kEmpty;\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\n}\n\nfunction filter(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function filterFn(value\x2C options) {\n    if (await fn(value\x2C options)) {\n      return value;\n    }\n    return kEmpty;\n  }\n  return map.call(this\x2C filterFn\x2C options);\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce');\n    this.message = 'Reduce of an empty stream requires an initial value';\n  }\n}\n\nasync function reduce(reducer\x2C initialValue\x2C options) {\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let hasInitialValue = arguments.length > 1;\n  if (options?.signal?.aborted) {\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\n    this.once('error'\x2C () => {}); // The error is already propagated\n    await finished(this.destroy(err));\n    throw err;\n  }\n  const ac = new AbortController();\n  const signal = ac.signal;\n  if (options?.signal) {\n    const opts = { once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true };\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\n  }\n  let gotAnyItemFromStream = false;\n  try {\n    for await (const value of this) {\n      gotAnyItemFromStream = true;\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (!hasInitialValue) {\n        initialValue = value;\n        hasInitialValue = true;\n      } else {\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs();\n    }\n  } finally {\n    ac.abort();\n  }\n  return initialValue;\n}\n\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  const result = [];\n  for await (const val of this) {\n    if (options?.signal?.aborted) {\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\n    }\n    ArrayPrototypePush(result\x2C val);\n  }\n  return result;\n}\n\nfunction flatMap(fn\x2C options) {\n  const values = map.call(this\x2C fn\x2C options);\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val;\n    }\n  }.call(this);\n}\n\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number);\n  if (NumberIsNaN(number)) {\n    return 0;\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\n  }\n  return number;\n}\n\nfunction drop(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* drop() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- <= 0) {\n        yield val;\n      }\n    }\n  }.call(this);\n}\n\nfunction take(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* take() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- > 0) {\n        yield val;\n      }\n\n      // Don't get another item from iterator in case we reached the end\n      if (number <= 0) {\n        return;\n      }\n    }\n  }.call(this);\n}\n\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs: deprecate(asIndexedPairs\x2C 'readable.asIndexedPairs will be removed in a future version.')\x2C\n  drop\x2C\n  filter\x2C\n  flatMap\x2C\n  map\x2C\n  take\x2C\n  compose\x2C\n};\n\nmodule.exports.promiseReturningOperators = {\n  every\x2C\n  forEach\x2C\n  reduce\x2C\n  toArray\x2C\n  some\x2C\n  find\x2C\n};\n
code-source-info,0xcb902b501ae,82,0,10772,C0O0C4O10772,,
code-creation,JS,10,87097,0xcb902b50cbe,560, node:internal/streams/operators:1:1,0xcb902b50128,~
code-source-info,0xcb902b50cbe,82,0,10772,C0O0C163O56C166O56C171O23C177O40C183O234C186O234C191O112C196O118C202O145C208O171C213O193C219O218C225O334C228O334C233O272C239O295C245O314C251O415C254O415C259O374C265O388C271O470C274O470C279O457C285O535C288O535C292O535C294O612C297O612C302O582C308O695C311O695C316O666C322O678C328O752C331O752C336O738C341O789C347O811C353O822C359O835C365O845C371O860C377O871C383O888C389O906C395O930C400O971C403O971C407O971C409O1002C412O1002C416O1002C418O6699C439O6659C441O10462C455O10517C466O10610C472O10618C478O10628C484O10639C490O10646C496O10654C502O10495C506O10674C518O10714C524O10723C530O10734C536O10744C542O10755C548O10763C554O10708C559O10771,,
code-creation,Eval,10,87425,0xcb902b52bbe,5, node:internal/abort_controller:1:1,0xcb902b52678,~
script-source,83,node:internal/abort_controller,'use strict';\n\n// Modeled very closely on the AbortController implementation\n// in https://github.com/mysticatea/abort-controller (MIT license)\n\nconst {\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectDefineProperty\x2C\n  PromiseResolve\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  WeakRef\x2C\n} = primordials;\n\nconst {\n  defineEventHandler\x2C\n  EventTarget\x2C\n  Event\x2C\n  kTrustEvent\x2C\n  kNewListener\x2C\n  kRemoveListener\x2C\n  kResistStopPropagation\x2C\n  kWeakHandler\x2C\n} = require('internal/event_target');\nconst {\n  createDeferredPromise\x2C\n  customInspectSymbol\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateAbortSignal\x2C\n  validateAbortSignalArray\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  kValidateObjectAllowObjects\x2C\n} = require('internal/validators');\n\nconst {\n  DOMException\x2C\n} = internalBinding('messaging');\n\nconst {\n  clearTimeout\x2C\n  setTimeout\x2C\n} = require('timers');\nconst assert = require('internal/assert');\n\nconst {\n  messaging_deserialize_symbol: kDeserialize\x2C\n  messaging_transfer_symbol: kTransfer\x2C\n  messaging_transfer_list_symbol: kTransferList\x2C\n} = internalBinding('symbols');\n\nlet _MessageChannel;\nlet makeTransferable;\n\n// Loading the MessageChannel and makeTransferable have to be done lazily\n// because otherwise we'll end up with a require cycle that ends up with\n// an incomplete initialization of abort_controller.\n\nfunction lazyMessageChannel() {\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\n  return new _MessageChannel();\n}\n\nfunction lazyMakeTransferable(obj) {\n  makeTransferable ??=\n    require('internal/worker/js_transferable').makeTransferable;\n  return makeTransferable(obj);\n}\n\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\nconst gcPersistentSignals = new SafeSet();\n\nconst kAborted = Symbol('kAborted');\nconst kReason = Symbol('kReason');\nconst kCloneData = Symbol('kCloneData');\nconst kTimeout = Symbol('kTimeout');\nconst kMakeTransferable = Symbol('kMakeTransferable');\nconst kComposite = Symbol('kComposite');\nconst kSourceSignals = Symbol('kSourceSignals');\nconst kDependantSignals = Symbol('kDependantSignals');\n\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\n  if (depth < 0)\n    return self;\n\n  const opts = ObjectAssign({}\x2C options\x2C {\n    depth: options.depth === null ? null : options.depth - 1\x2C\n  });\n\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\n}\n\nfunction validateThisAbortSignal(obj) {\n  if (obj?.[kAborted] === undefined)\n    throw new ERR_INVALID_THIS('AbortSignal');\n}\n\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\n// presence of the timer alone to keep the AbortSignal from being garbage\n// collected if it otherwise no longer accessible. We also don't want the\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\n// the AbortSignal in a WeakRef and have the setTimeout callback close\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\n// the created timer object. Separately\x2C we add the signal to a\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\n  const timeout = setTimeout(() => {\n    const signal = weakRef.deref();\n    if (signal !== undefined) {\n      gcPersistentSignals.delete(signal);\n      abortSignal(\n        signal\x2C\n        new DOMException(\n          'The operation was aborted due to timeout'\x2C\n          'TimeoutError'));\n    }\n  }\x2C delay);\n  timeout.unref();\n  return timeout;\n}\n\nclass AbortSignal extends EventTarget {\n  constructor() {\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get aborted() {\n    validateThisAbortSignal(this);\n    return !!this[kAborted];\n  }\n\n  /**\n   * @type {any}\n   */\n  get reason() {\n    validateThisAbortSignal(this);\n    return this[kReason];\n  }\n\n  throwIfAborted() {\n    validateThisAbortSignal(this);\n    if (this[kAborted]) {\n      throw this[kReason];\n    }\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      aborted: this.aborted\x2C\n    }\x2C depth\x2C options);\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {AbortSignal}\n   */\n  static abort(\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    return createAbortSignal({ aborted: true\x2C reason });\n  }\n\n  /**\n   * @param {number} delay\n   * @returns {AbortSignal}\n   */\n  static timeout(delay) {\n    validateUint32(delay\x2C 'delay'\x2C false);\n    const signal = createAbortSignal();\n    signal[kTimeout] = true;\n    clearTimeoutRegistry.register(\n      signal\x2C\n      setWeakAbortSignalTimeout(new WeakRef(signal)\x2C delay));\n    return signal;\n  }\n\n  /**\n   * @param {AbortSignal[]} signals\n   * @returns {AbortSignal}\n   */\n  static any(signals) {\n    validateAbortSignalArray(signals\x2C 'signals');\n    const resultSignal = createAbortSignal({ composite: true });\n    if (!signals.length) {\n      return resultSignal;\n    }\n    const resultSignalWeakRef = new WeakRef(resultSignal);\n    resultSignal[kSourceSignals] = new SafeSet();\n    for (let i = 0; i < signals.length; i++) {\n      const signal = signals[i];\n      if (signal.aborted) {\n        abortSignal(resultSignal\x2C signal.reason);\n        return resultSignal;\n      }\n      signal[kDependantSignals] ??= new SafeSet();\n      if (!signal[kComposite]) {\n        resultSignal[kSourceSignals].add(new WeakRef(signal));\n        signal[kDependantSignals].add(resultSignalWeakRef);\n      } else if (!signal[kSourceSignals]) {\n        continue;\n      } else {\n        for (const sourceSignal of signal[kSourceSignals]) {\n          const sourceSignalRef = sourceSignal.deref();\n          if (!sourceSignalRef) {\n            continue;\n          }\n          assert(!sourceSignalRef.aborted);\n          assert(!sourceSignalRef[kComposite]);\n\n          if (resultSignal[kSourceSignals].has(sourceSignal)) {\n            continue;\n          }\n          resultSignal[kSourceSignals].add(sourceSignal);\n          sourceSignalRef[kDependantSignals].add(resultSignalWeakRef);\n        }\n      }\n    }\n    return resultSignal;\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal &&\n        type === 'abort' &&\n        !this.aborted &&\n        !weak &&\n        size === 1) {\n      // If this is a timeout signal\x2C or a non-empty composite signal\x2C and we're adding a non-weak abort\n      // listener\x2C then we don't want it to be gc'd while the listener\n      // is attached and the timer still hasn't fired. So\x2C we retain a\n      // strong ref that is held for as long as the listener is registered.\n      gcPersistentSignals.add(this);\n    }\n  }\n\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal && type === 'abort' && size === 0) {\n      gcPersistentSignals.delete(this);\n    }\n  }\n\n  [kTransfer]() {\n    validateThisAbortSignal(this);\n    const aborted = this.aborted;\n    if (aborted) {\n      const reason = this.reason;\n      return {\n        data: { aborted\x2C reason }\x2C\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n      };\n    }\n\n    const { port1\x2C port2 } = this[kCloneData];\n    this[kCloneData] = undefined;\n\n    this.addEventListener('abort'\x2C () => {\n      port1.postMessage(this.reason);\n      port1.close();\n    }\x2C { once: true });\n\n    return {\n      data: { port: port2 }\x2C\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n    };\n  }\n\n  [kTransferList]() {\n    if (!this.aborted) {\n      const { port1\x2C port2 } = lazyMessageChannel();\n      port1.unref();\n      port2.unref();\n      this[kCloneData] = {\n        port1\x2C\n        port2\x2C\n      };\n      return [port2];\n    }\n    return [];\n  }\n\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\n    if (aborted) {\n      this[kAborted] = aborted;\n      this[kReason] = reason;\n      return;\n    }\n\n    port.onmessage = ({ data }) => {\n      abortSignal(this\x2C data);\n      port.close();\n      port.onmessage = undefined;\n    };\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\n    // The unref() has to be called *after* setting the onmessage handler.\n    port.unref();\n  }\n}\n\nfunction ClonedAbortSignal() {\n  return createAbortSignal({ transferable: true });\n}\nClonedAbortSignal.prototype[kDeserialize] = () => {};\n\nObjectDefineProperties(AbortSignal.prototype\x2C {\n  aborted: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortSignal'\x2C\n});\n\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\n\n/**\n * @param {{\n *   aborted? : boolean\x2C\n *   reason? : any\x2C\n *   transferable? : boolean\x2C\n *   composite? : boolean\x2C\n * }} [init]\n * @returns {AbortSignal}\n */\nfunction createAbortSignal(init = kEmptyObject) {\n  const {\n    aborted = false\x2C\n    reason = undefined\x2C\n    transferable = false\x2C\n    composite = false\x2C\n  } = init;\n  const signal = new EventTarget();\n  ObjectSetPrototypeOf(signal\x2C AbortSignal.prototype);\n  signal[kAborted] = aborted;\n  signal[kReason] = reason;\n  signal[kComposite] = composite;\n  return transferable ? lazyMakeTransferable(signal) : signal;\n}\n\nfunction abortSignal(signal\x2C reason) {\n  if (signal[kAborted]) return;\n  signal[kAborted] = true;\n  signal[kReason] = reason;\n  const event = new Event('abort'\x2C {\n    [kTrustEvent]: true\x2C\n  });\n  signal.dispatchEvent(event);\n  signal[kDependantSignals]?.forEach((s) => {\n    const signalRef = s.deref();\n    if (signalRef) abortSignal(signalRef\x2C reason);\n  });\n}\n\nclass AbortController {\n  #signal;\n\n  /**\n   * @type {AbortSignal}\n   */\n  get signal() {\n    this.#signal ??= createAbortSignal();\n    return this.#signal;\n  }\n\n  /**\n   * @param {any} [reason]\n   */\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    abortSignal(this.#signal ??= createAbortSignal()\x2C reason);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      signal: this.signal\x2C\n    }\x2C depth\x2C options);\n  }\n\n  static [kMakeTransferable]() {\n    const controller = new AbortController();\n    controller.#signal = createAbortSignal({ transferable: true });\n    return controller;\n  }\n}\n\n/**\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\n * @param {AbortSignal} signal\n * @returns {AbortSignal}\n */\nfunction transferableAbortSignal(signal) {\n  if (signal?.[kAborted] === undefined)\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  return lazyMakeTransferable(signal);\n}\n\n/**\n * Creates an AbortController with a transferable AbortSignal\n */\nfunction transferableAbortController() {\n  return AbortController[kMakeTransferable]();\n}\n\n/**\n * @param {AbortSignal} signal\n * @param {any} resource\n * @returns {Promise<void>}\n */\nasync function aborted(signal\x2C resource) {\n  if (signal === undefined) {\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  }\n  validateAbortSignal(signal\x2C 'signal');\n  validateObject(resource\x2C 'resource'\x2C kValidateObjectAllowObjects);\n  if (signal.aborted)\n    return PromiseResolve();\n  const abortPromise = createDeferredPromise();\n  const opts = { __proto__: null\x2C [kWeakHandler]: resource\x2C once: true\x2C [kResistStopPropagation]: true };\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C opts);\n  return abortPromise.promise;\n}\n\nObjectDefineProperties(AbortController.prototype\x2C {\n  signal: kEnumerableProperty\x2C\n  abort: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortController'\x2C\n});\n\nmodule.exports = {\n  AbortController\x2C\n  AbortSignal\x2C\n  ClonedAbortSignal\x2C\n  aborted\x2C\n  transferableAbortSignal\x2C\n  transferableAbortController\x2C\n};\n
code-source-info,0xcb902b52bbe,83,0,12413,C0O0C4O12413,,
code-creation,JS,10,87676,0xcb902b5450e,1067, node:internal/abort_controller:1:1,0xcb902b52b38,~
code-source-info,0xcb902b5450e
code-creation,JS,10,87697,0xcb902b54b56,11,<instance_members_initializer> node:internal/abort_controller:377:1,0xcb902b535f0,~
code-source-info,0xcb902b54b56,83,10156,10812,C4O10182C10O10812,,
tick,0x7ee819149a08,87705,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b50d64,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,87923,0xcb902b5651e,155,defineEventHandler node:internal/event_target:1110:28,0x265bfeca2e08,~
code-source-info,0xcb902b5651e,56,29501,30940,C0O29501C24O29525C36O29619C41O29624C46O29773C56O29794C66O29848C77O29773C82O30710C92O30731C102O30785C113O30710C118O30806C125O30836C132O30873C138O30882C148O30806C154O30939,,
code-creation,Eval,10,88153,0xcb902b574ce,5, node:internal/streams/end-of-stream:1:1,0xcb902b57178,~
script-source,84,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  AbortError\x2C\n  codes\x2C\n} = require('internal/errors');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_STREAM_PREMATURE_CLOSE\x2C\n} = codes;\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateBoolean\x2C\n} = require('internal/validators');\n\nconst {\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst {\n  isClosed\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n  isReadableErrored\x2C\n  isWritable\x2C\n  isWritableNodeStream\x2C\n  isWritableStream\x2C\n  isWritableFinished\x2C\n  isWritableErrored\x2C\n  isNodeStream\x2C\n  willEmitClose: _willEmitClose\x2C\n  kIsClosedPromise\x2C\n} = require('internal/streams/utils');\nlet addAbortListener;\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nconst nop = () => {};\n\nfunction eos(stream\x2C options\x2C callback) {\n  if (arguments.length === 2) {\n    callback = options;\n    options = kEmptyObject;\n  } else if (options == null) {\n    options = kEmptyObject;\n  } else {\n    validateObject(options\x2C 'options');\n  }\n  validateFunction(callback\x2C 'callback');\n  validateAbortSignal(options.signal\x2C 'options.signal');\n\n  callback = once(callback);\n\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream\x2C options\x2C callback);\n  }\n\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n\n  const readable = options.readable ?? isReadableNodeStream(stream);\n  const writable = options.writable ?? isWritableNodeStream(stream);\n\n  const wState = stream._writableState;\n  const rState = stream._readableState;\n\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish();\n    }\n  };\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose = (\n    _willEmitClose(stream) &&\n    isReadableNodeStream(stream) === readable &&\n    isWritableNodeStream(stream) === writable\n  );\n\n  let writableFinished = isWritableFinished(stream\x2C false);\n  const onfinish = () => {\n    writableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.readable || readable)) {\n      return;\n    }\n\n    if (!readable || readableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  let readableFinished = isReadableFinished(stream\x2C false);\n  const onend = () => {\n    readableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.writable || writable)) {\n      return;\n    }\n\n    if (!writable || writableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  const onerror = (err) => {\n    callback.call(stream\x2C err);\n  };\n\n  let closed = isClosed(stream);\n\n  const onclose = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\n      if (!isReadableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n\n    callback.call(stream);\n  };\n\n  const onclosed = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    callback.call(stream);\n  };\n\n  const onrequest = () => {\n    stream.req.on('finish'\x2C onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete'\x2C onfinish);\n    if (!willEmitClose) {\n      stream.on('abort'\x2C onclose);\n    }\n    if (stream.req) {\n      onrequest();\n    } else {\n      stream.on('request'\x2C onrequest);\n    }\n  } else if (writable && !wState) { // legacy streams\n    stream.on('end'\x2C onlegacyfinish);\n    stream.on('close'\x2C onlegacyfinish);\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted'\x2C onclose);\n  }\n\n  stream.on('end'\x2C onend);\n  stream.on('finish'\x2C onfinish);\n  if (options.error !== false) {\n    stream.on('error'\x2C onerror);\n  }\n  stream.on('close'\x2C onclose);\n\n  if (closed) {\n    process.nextTick(onclose);\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed);\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false) &&\n    (wState == null || wState.pendingcb === 0)\n  ) {\n    process.nextTick(onclosed);\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed);\n  } else if ((rState && stream.req && stream.aborted)) {\n    process.nextTick(onclosed);\n  }\n\n  const cleanup = () => {\n    callback = nop;\n    stream.removeListener('aborted'\x2C onclose);\n    stream.removeListener('complete'\x2C onfinish);\n    stream.removeListener('abort'\x2C onclose);\n    stream.removeListener('request'\x2C onrequest);\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onlegacyfinish);\n    stream.removeListener('close'\x2C onlegacyfinish);\n    stream.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onend);\n    stream.removeListener('error'\x2C onerror);\n    stream.removeListener('close'\x2C onclose);\n  };\n\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback;\n      cleanup();\n      endCallback.call(\n        stream\x2C\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n\n  return cleanup;\n}\n\nfunction eosWeb(stream\x2C options\x2C callback) {\n  let isAborted = false;\n  let abort = nop;\n  if (options.signal) {\n    abort = () => {\n      isAborted = true;\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream\x2C args));\n    }\n  };\n  PromisePrototypeThen(\n    stream[kIsClosedPromise].promise\x2C\n    resolverFn\x2C\n    resolverFn\x2C\n  );\n  return nop;\n}\n\nfunction finished(stream\x2C opts) {\n  let autoCleanup = false;\n  if (opts === null) {\n    opts = kEmptyObject;\n  }\n  if (opts?.cleanup) {\n    validateBoolean(opts.cleanup\x2C 'cleanup');\n    autoCleanup = opts.cleanup;\n  }\n  return new Promise((resolve\x2C reject) => {\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\n      if (autoCleanup) {\n        cleanup();\n      }\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nmodule.exports = eos;\nmodule.exports.finished = finished;\n
code-source-info,0xcb902b574ce,84,0,8458,C0O0C4O8458,,
code-creation,JS,10,88290,0xcb902b5780e,353, node:internal/streams/end-of-stream:1:1,0xcb902b57448,~
code-source-info,0xcb902b5780e,84,0,8458,C0O0C120O172C126O172C131O147C137O161C142O210C148O234C154O309C160O309C165O283C171O299C177O427C183O427C188O345C194O368C200O388C206O406C212O470C218O481C224O505C230O833C236O833C241O548C247O560C253O574C259O598C265O618C271O640C277O661C283O675C289O699C295O719C301O741C307O762C313O793C319O811C325O872C326O872C328O1000C332O1000C334O8400C336O8415C340O8429C347O8446C352O8457,,
code-creation,Eval,10,88508,0xcb902b58dde,5, node:internal/streams/utils:1:1,0xcb902b58b58,~
script-source,85,node:internal/streams/utils,'use strict';\n\nconst {\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n  SymbolFor\x2C\n  Symbol\x2C\n} = primordials;\n\n// We need to use SymbolFor to make these globally available\n// for interopt with readable-stream\x2C i.e. readable-stream\n// and node core needs to be able to read/write private state\n// from each other for proper interoperability.\nconst kIsDestroyed = SymbolFor('nodejs.stream.destroyed');\nconst kIsErrored = SymbolFor('nodejs.stream.errored');\nconst kIsReadable = SymbolFor('nodejs.stream.readable');\nconst kIsWritable = SymbolFor('nodejs.stream.writable');\nconst kIsDisturbed = SymbolFor('nodejs.stream.disturbed');\n\nconst kOnConstructed = Symbol('kOnConstructed');\n\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise');\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction');\n\nconst kState = Symbol('kState');\nconst kObjectMode = 1 << 0;\nconst kErrorEmitted = 1 << 1;\nconst kAutoDestroy = 1 << 2;\nconst kEmitClose = 1 << 3;\nconst kDestroyed = 1 << 4;\nconst kClosed = 1 << 5;\nconst kCloseEmitted = 1 << 6;\nconst kErrored = 1 << 7;\nconst kConstructed = 1 << 8;\n\nfunction isReadableNodeStream(obj\x2C strict = false) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    typeof obj.on === 'function' &&\n    (\n      !strict ||\n      (typeof obj.pause === 'function' && typeof obj.resume === 'function')\n    ) &&\n    (!obj._writableState || obj._readableState?.readable !== false) && // Duplex\n    (!obj._writableState || obj._readableState) // Writable has .pipe.\n  );\n}\n\nfunction isWritableNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.write === 'function' &&\n    typeof obj.on === 'function' &&\n    (!obj._readableState || obj._writableState?.writable !== false) // Duplex\n  );\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    (typeof obj.pipe === 'function' && obj._readableState) &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  );\n}\n\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (\n      obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function')\n    )\n  );\n}\n\nfunction isReadableStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.pipeThrough === 'function' &&\n    typeof obj.getReader === 'function' &&\n    typeof obj.cancel === 'function'\n  );\n}\n\nfunction isWritableStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.getWriter === 'function' &&\n    typeof obj.abort === 'function'\n  );\n}\n\nfunction isTransformStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.readable === 'object' &&\n    typeof obj.writable === 'object'\n  );\n}\n\nfunction isWebStream(obj) {\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj);\n}\n\nfunction isIterable(obj\x2C isAsync) {\n  if (obj == null) return false;\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function';\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function';\n  return typeof obj[SymbolAsyncIterator] === 'function' ||\n    typeof obj[SymbolIterator] === 'function';\n}\n\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null;\n  const wState = stream._writableState;\n  const rState = stream._readableState;\n  const state = wState || rState;\n  return !!(stream.destroyed || stream[kIsDestroyed] || state?.destroyed);\n}\n\n// Have been end():d.\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null;\n  if (stream.writableEnded === true) return true;\n  const wState = stream._writableState;\n  if (wState?.errored) return false;\n  if (typeof wState?.ended !== 'boolean') return null;\n  return wState.ended;\n}\n\n// Have emitted 'finish'.\nfunction isWritableFinished(stream\x2C strict) {\n  if (!isWritableNodeStream(stream)) return null;\n  if (stream.writableFinished === true) return true;\n  const wState = stream._writableState;\n  if (wState?.errored) return false;\n  if (typeof wState?.finished !== 'boolean') return null;\n  return !!(\n    wState.finished ||\n    (strict === false && wState.ended === true && wState.length === 0)\n  );\n}\n\n// Have been push(null):d.\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null;\n  if (stream.readableEnded === true) return true;\n  const rState = stream._readableState;\n  if (!rState || rState.errored) return false;\n  if (typeof rState?.ended !== 'boolean') return null;\n  return rState.ended;\n}\n\n// Have emitted 'end'.\nfunction isReadableFinished(stream\x2C strict) {\n  if (!isReadableNodeStream(stream)) return null;\n  const rState = stream._readableState;\n  if (rState?.errored) return false;\n  if (typeof rState?.endEmitted !== 'boolean') return null;\n  return !!(\n    rState.endEmitted ||\n    (strict === false && rState.ended === true && rState.length === 0)\n  );\n}\n\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable];\n  if (typeof stream?.readable !== 'boolean') return null;\n  if (isDestroyed(stream)) return false;\n  return isReadableNodeStream(stream) &&\n    stream.readable &&\n    !isReadableFinished(stream);\n}\n\nfunction isWritable(stream) {\n  if (stream && stream[kIsWritable] != null) return stream[kIsWritable];\n  if (typeof stream?.writable !== 'boolean') return null;\n  if (isDestroyed(stream)) return false;\n  return isWritableNodeStream(stream) &&\n    stream.writable &&\n    !isWritableEnded(stream);\n}\n\nfunction isFinished(stream\x2C opts) {\n  if (!isNodeStream(stream)) {\n    return null;\n  }\n\n  if (isDestroyed(stream)) {\n    return true;\n  }\n\n  if (opts?.readable !== false && isReadable(stream)) {\n    return false;\n  }\n\n  if (opts?.writable !== false && isWritable(stream)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isWritableErrored(stream) {\n  if (!isNodeStream(stream)) {\n    return null;\n  }\n\n  if (stream.writableErrored) {\n    return stream.writableErrored;\n  }\n\n  return stream._writableState?.errored ?? null;\n}\n\nfunction isReadableErrored(stream) {\n  if (!isNodeStream(stream)) {\n    return null;\n  }\n\n  if (stream.readableErrored) {\n    return stream.readableErrored;\n  }\n\n  return stream._readableState?.errored ?? null;\n}\n\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null;\n  }\n\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed;\n  }\n\n  const wState = stream._writableState;\n  const rState = stream._readableState;\n\n  if (\n    typeof wState?.closed === 'boolean' ||\n    typeof rState?.closed === 'boolean'\n  ) {\n    return wState?.closed || rState?.closed;\n  }\n\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed;\n  }\n\n  return null;\n}\n\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  );\n}\n\nfunction isServerResponse(stream) {\n  return (\n    typeof stream._sent100 === 'boolean' &&\n    isOutgoingMessage(stream)\n  );\n}\n\nfunction isServerRequest(stream) {\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    stream.req?.upgradeOrConnect === undefined\n  );\n}\n\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null;\n\n  const wState = stream._writableState;\n  const rState = stream._readableState;\n  const state = wState || rState;\n\n  return (!state && isServerResponse(stream)) || !!(\n    state &&\n    state.autoDestroy &&\n    state.emitClose &&\n    state.closed === false\n  );\n}\n\nfunction isDisturbed(stream) {\n  return !!(stream && (\n    stream[kIsDisturbed] ??\n    (stream.readableDidRead || stream.readableAborted)\n  ));\n}\n\nfunction isErrored(stream) {\n  return !!(stream && (\n    stream[kIsErrored] ??\n    stream.readableErrored ??\n    stream.writableErrored ??\n    stream._readableState?.errorEmitted ??\n    stream._writableState?.errorEmitted ??\n    stream._readableState?.errored ??\n    stream._writableState?.errored\n  ));\n}\n\nmodule.exports = {\n  kOnConstructed\x2C\n  isDestroyed\x2C\n  kIsDestroyed\x2C\n  isDisturbed\x2C\n  kIsDisturbed\x2C\n  isErrored\x2C\n  kIsErrored\x2C\n  isReadable\x2C\n  kIsReadable\x2C\n  kIsClosedPromise\x2C\n  kControllerErrorFunction\x2C\n  kIsWritable\x2C\n  isClosed\x2C\n  isDuplexNodeStream\x2C\n  isFinished\x2C\n  isIterable\x2C\n  isReadableNodeStream\x2C\n  isReadableStream\x2C\n  isReadableEnded\x2C\n  isReadableFinished\x2C\n  isReadableErrored\x2C\n  isNodeStream\x2C\n  isWebStream\x2C\n  isWritable\x2C\n  isWritableNodeStream\x2C\n  isWritableStream\x2C\n  isWritableEnded\x2C\n  isWritableFinished\x2C\n  isWritableErrored\x2C\n  isServerRequest\x2C\n  isServerResponse\x2C\n  willEmitClose\x2C\n  isTransformStream\x2C\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n};\n
code-source-info,0xcb902b58dde,85,0,8934,C0O0C4O8934,,
code-creation,JS,10,88685,0xcb902b59bd6,592, node:internal/streams/utils:1:1,0xcb902b58d58,~
code-source-info,0xcb902b59bd6,85,0,8934,C0O0C181O25C187O48C193O66C198O79C203O356C207O356C211O356C213O413C217O413C221O413C223O469C227O469C231O469C233O526C237O526C241O526C243O584C247O584C251O584C253O646C257O646C262O698C266O698C271O778C275O778C280O849C284O849C289O887C292O917C295O946C298O973C301O1000C304O1024C307O1054C310O1079C315O1108C320O8160C328O8181C334O8199C340O8214C346O8230C352O8245C358O8261C364O8274C370O8288C376O8302C382O8317C388O8337C394O8365C400O8380C406O8392C412O8414C418O8428C424O8442C430O8466C436O8486C442O8505C448O8527C454O8548C460O8564C466O8579C472O8593C478O8617C484O8637C490O8656C496O8678C502O8699C508O8718C514O8738C520O8755C526O8776C532O8801C538O8816C544O8833C550O8849C556O8863C562O8877C568O8888C574O8905C580O8917C586O8175C591O8933,,
tick,0x7ee81c21c8d2,88710,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b578fa,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b50dd0,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,88949,0xcb902b5bfde,5, node:internal/streams/compose:1:1,0xcb902b5bdb8,~
script-source,86,node:internal/streams/compose,'use strict';\n\nconst { pipeline } = require('internal/streams/pipeline');\nconst Duplex = require('internal/streams/duplex');\nconst { destroyer } = require('internal/streams/destroy');\nconst {\n  isNodeStream\x2C\n  isReadable\x2C\n  isWritable\x2C\n  isWebStream\x2C\n  isTransformStream\x2C\n  isWritableStream\x2C\n  isReadableStream\x2C\n} = require('internal/streams/utils');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst eos = require('internal/streams/end-of-stream');\n\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  if (streams.length === 1) {\n    return Duplex.from(streams[0]);\n  }\n\n  const orgStreams = [...streams];\n\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0]);\n  }\n\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1;\n    streams[idx] = Duplex.from(streams[idx]);\n  }\n\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue;\n    }\n    if (\n      n < streams.length - 1 &&\n      !(\n        isReadable(streams[n]) ||\n        isReadableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be readable'\x2C\n      );\n    }\n    if (\n      n > 0 &&\n      !(\n        isWritable(streams[n]) ||\n        isWritableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be writable'\x2C\n      );\n    }\n  }\n\n  let ondrain;\n  let onfinish;\n  let onreadable;\n  let onclose;\n  let d;\n\n  function onfinished(err) {\n    const cb = onclose;\n    onclose = null;\n\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      d.destroy(err);\n    } else if (!readable && !writable) {\n      d.destroy();\n    }\n  }\n\n  const head = streams[0];\n  const tail = pipeline(streams\x2C onfinished);\n\n  const writable = !!(\n    isWritable(head) ||\n    isWritableStream(head) ||\n    isTransformStream(head)\n  );\n  const readable = !!(\n    isReadable(tail) ||\n    isReadableStream(tail) ||\n    isTransformStream(tail)\n  );\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See\x2C https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!head?.writableObjectMode\x2C\n    readableObjectMode: !!tail?.readableObjectMode\x2C\n    writable\x2C\n    readable\x2C\n  });\n\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function(chunk\x2C encoding\x2C callback) {\n        if (head.write(chunk\x2C encoding)) {\n          callback();\n        } else {\n          ondrain = callback;\n        }\n      };\n\n      d._final = function(callback) {\n        head.end();\n        onfinish = callback;\n      };\n\n      head.on('drain'\x2C function() {\n        if (ondrain) {\n          const cb = ondrain;\n          ondrain = null;\n          cb();\n        }\n      });\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head;\n      const writer = writable.getWriter();\n\n      d._write = async function(chunk\x2C encoding\x2C callback) {\n        try {\n          await writer.ready;\n          writer.write(chunk).catch(() => {});\n          callback();\n        } catch (err) {\n          callback(err);\n        }\n      };\n\n      d._final = async function(callback) {\n        try {\n          await writer.ready;\n          writer.close().catch(() => {});\n          onfinish = callback;\n        } catch (err) {\n          callback(err);\n        }\n      };\n    }\n\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\n\n    eos(toRead\x2C () => {\n      if (onfinish) {\n        const cb = onfinish;\n        onfinish = null;\n        cb();\n      }\n    });\n  }\n\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable'\x2C function() {\n        if (onreadable) {\n          const cb = onreadable;\n          onreadable = null;\n          cb();\n        }\n      });\n\n      tail.on('end'\x2C function() {\n        d.push(null);\n      });\n\n      d._read = function() {\n        while (true) {\n          const buf = tail.read();\n          if (buf === null) {\n            onreadable = d._read;\n            return;\n          }\n\n          if (!d.push(buf)) {\n            return;\n          }\n        }\n      };\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail;\n      const reader = readable.getReader();\n      d._read = async function() {\n        while (true) {\n          try {\n            const { value\x2C done } = await reader.read();\n\n            if (!d.push(value)) {\n              return;\n            }\n\n            if (done) {\n              d.push(null);\n              return;\n            }\n          } catch {\n            return;\n          }\n        }\n      };\n    }\n  }\n\n  d._destroy = function(err\x2C callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError();\n    }\n\n    onreadable = null;\n    ondrain = null;\n    onfinish = null;\n\n    if (isNodeStream(tail)) {\n      destroyer(tail\x2C err);\n    }\n\n    if (onclose === null) {\n      callback(err);\n    } else {\n      onclose = callback;\n    }\n  };\n\n  return d;\n};\n
code-source-info,0xcb902b5bfde,86,0,5446,C0O0C4O5446,,
code-creation,JS,10,89047,0xcb902b5c1d6,184, node:internal/streams/compose:1:1,0xcb902b5bf58,~
code-source-info,0xcb902b5c1d6,86,0,5446,C0O0C47O36C50O36C55O23C61O89C64O89C68O89C70O147C73O147C78O133C84O316C87O316C92O194C98O210C104O224C110O238C116O253C122O274C128O294C134O442C137O442C142O361C148O382C153O388C159O415C165O482C168O482C172O482C174O526C178O541C183O5445,,
code-creation,Eval,10,89296,0xcb902b5d326,5, node:internal/streams/pipeline:1:1,0xcb902b5cf70,~
script-source,87,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Promise\x2C\n  SymbolAsyncIterator\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst eos = require('internal/streams/end-of-stream');\nconst { once } = require('internal/util');\nconst destroyImpl = require('internal/streams/destroy');\nconst Duplex = require('internal/streams/duplex');\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_RETURN_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_PREMATURE_CLOSE\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateAbortSignal\x2C\n} = require('internal/validators');\n\nconst {\n  isIterable\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isNodeStream\x2C\n  isTransformStream\x2C\n  isWebStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n} = require('internal/streams/utils');\nconst { AbortController } = require('internal/abort_controller');\n\nlet PassThrough;\nlet Readable;\nlet addAbortListener;\n\nfunction destroyer(stream\x2C reading\x2C writing) {\n  let finished = false;\n  stream.on('close'\x2C () => {\n    finished = true;\n  });\n\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\n    finished = !err;\n  });\n\n  return {\n    destroy: (err) => {\n      if (finished) return;\n      finished = true;\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\n    }\x2C\n    cleanup\x2C\n  };\n}\n\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\n  return streams.pop();\n}\n\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val;\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val);\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\n}\n\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('internal/streams/readable');\n  }\n\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\n}\n\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\n  let error;\n  let onresolve = null;\n\n  const resume = (err) => {\n    if (err) {\n      error = err;\n    }\n\n    if (onresolve) {\n      const callback = onresolve;\n      onresolve = null;\n      callback();\n    }\n  };\n\n  const wait = () => new Promise((resolve\x2C reject) => {\n    if (error) {\n      reject(error);\n    } else {\n      onresolve = () => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      };\n    }\n  });\n\n  writable.on('drain'\x2C resume);\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\n\n  try {\n    if (writable.writableNeedDrain) {\n      await wait();\n    }\n\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait();\n      }\n    }\n\n    if (end) {\n      writable.end();\n      await wait();\n    }\n\n    finish();\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\n  } finally {\n    cleanup();\n    writable.off('drain'\x2C resume);\n  }\n}\n\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable;\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter();\n  try {\n    for await (const chunk of readable) {\n      await writer.ready;\n      writer.write(chunk).catch(() => {});\n    }\n\n    await writer.ready;\n\n    if (end) {\n      await writer.close();\n    }\n\n    finish();\n  } catch (err) {\n    try {\n      await writer.abort(err);\n      finish(err);\n    } catch (err) {\n      finish(err);\n    }\n  }\n}\n\nfunction pipeline(...streams) {\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\n}\n\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0];\n  }\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  const ac = new AbortController();\n  const signal = ac.signal;\n  const outerSignal = opts?.signal;\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = [];\n\n  validateAbortSignal(outerSignal\x2C 'options.signal');\n\n  function abort() {\n    finishImpl(new AbortError());\n  }\n\n  addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n  let disposable;\n  if (outerSignal) {\n    disposable = addAbortListener(outerSignal\x2C abort);\n  }\n\n  let error;\n  let value;\n  const destroys = [];\n\n  let finishCount = 0;\n\n  function finish(err) {\n    finishImpl(err\x2C --finishCount === 0);\n  }\n\n  function finishImpl(err\x2C final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err;\n    }\n\n    if (!error && !final) {\n      return;\n    }\n\n    while (destroys.length) {\n      destroys.shift()(error);\n    }\n\n    disposable?.[SymbolDispose]();\n    ac.abort();\n\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn());\n      }\n      process.nextTick(callback\x2C error\x2C value);\n    }\n  }\n\n  let ret;\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i];\n    const reading = i < streams.length - 1;\n    const writing = i > 0;\n    const end = reading || opts?.end !== false;\n    const isLastStream = i === streams.length - 1;\n\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\n        destroys.push(destroy);\n\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (\n          err &&\n          err.name !== 'AbortError' &&\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\n        ) {\n          finish(err);\n        }\n      }\n      stream.on('error'\x2C onError);\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error'\x2C onError);\n        });\n      }\n    }\n\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({ signal });\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream;\n      } else {\n        ret = Duplex.from(stream);\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        ret = makeAsyncIterable(ret?.readable);\n      } else {\n        ret = makeAsyncIterable(ret);\n      }\n      ret = stream(ret\x2C { signal });\n\n      if (reading) {\n        if (!isIterable(ret\x2C true)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\n        }\n      } else {\n        if (!PassThrough) {\n          PassThrough = require('internal/streams/passthrough');\n        }\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\x2C\n        });\n\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\n        // second use.\n        const then = ret?.then;\n        if (typeof then === 'function') {\n          finishCount++;\n          then.call(ret\x2C\n                    (val) => {\n                      value = val;\n                      if (val != null) {\n                        pt.write(val);\n                      }\n                      if (end) {\n                        pt.end();\n                      }\n                      process.nextTick(finish);\n                    }\x2C (err) => {\n                      pt.destroy(err);\n                      process.nextTick(finish\x2C err);\n                    }\x2C\n          );\n        } else if (isIterable(ret\x2C true)) {\n          finishCount++;\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret;\n          finishCount++;\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\n        }\n\n        ret = pt;\n\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\n        destroys.push(destroy);\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2;\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C { end });\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret;\n        finishCount++;\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\n      } else if (isIterable(ret)) {\n        finishCount++;\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++;\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++;\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\n      } else if (isTransformStream(ret)) {\n        finishCount++;\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else {\n      ret = Duplex.from(stream);\n    }\n  }\n\n  if (signal?.aborted || outerSignal?.aborted) {\n    process.nextTick(abort);\n  }\n\n  return ret;\n}\n\nfunction pipe(src\x2C dst\x2C finish\x2C { end }) {\n  let ended = false;\n  dst.on('close'\x2C () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE());\n    }\n  });\n\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but "secretly" don't close the underlying fd.\n\n    function endFn() {\n      ended = true;\n      dst.end();\n    }\n\n    if (isReadableFinished(src)) { // End the destination if the source has already ended.\n      process.nextTick(endFn);\n    } else {\n      src.once('end'\x2C endFn);\n    }\n  } else {\n    finish();\n  }\n\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\n    const rState = src._readableState;\n    if (\n      err &&\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n      (rState && rState.ended && !rState.errored && !rState.errorEmitted)\n    ) {\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\n      // this is on the readable side 'end' should still be emitted if the\n      // stream has been ended and no error emitted. This should be allowed in\n      // favor of backwards compatibility. Since the stream is piped to a\n      // destination this should not result in any observable difference.\n      // We don't need to check if this is a writable premature close since\n      // eos will only fail with premature close on the reading side for\n      // duplex streams.\n      src\n        .once('end'\x2C finish)\n        .once('error'\x2C finish);\n    } else {\n      finish(err);\n    }\n  });\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\n}\n\nmodule.exports = { pipelineImpl\x2C pipeline };\n
code-source-info,0xcb902b5d326,87,0,12350,C0O0C4O12350,,
code-creation,JS,10,89490,0xcb902b5d89e,421, node:internal/streams/pipeline:1:1,0xcb902b5d2a0,~
code-source-info,0xcb902b5d89e,87,0,12350,C0O0C153O138C159O154C165O165C171O188C177O233C183O233C187O233C189O293C195O293C200O284C206O339C212O339C216O339C218O391C224O391C228O391C230O627C236O627C241O437C247O466C252O472C258O498C264O528C270O550C276O576C282O611C288O711C294O711C299O666C305O686C311O902C317O902C322O754C328O768C334O782C340O806C346O822C352O843C358O858C364O878C370O965C376O965C381O945C387O1008C388O1008C390O1025C391O1025C393O1039C394O1039C396O12305C403O12324C409O12338C415O12320C420O12349,,
tick,0x7ee81c4e3772,89690,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b5d972,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5c208,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b50dde,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,89739,0xcb902b5f0d6,5, node:internal/streams/destroy:1:1,0xcb902b5edc0,~
script-source,88,node:internal/streams/destroy,'use strict';\n\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_MULTIPLE_CALLBACK\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\nconst {\n  Symbol\x2C\n} = primordials;\nconst {\n  kIsDestroyed\x2C\n  isDestroyed\x2C\n  isFinished\x2C\n  isServerRequest\x2C\n  kState\x2C\n  kErrorEmitted\x2C\n  kEmitClose\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kConstructed\x2C\n  kDestroyed\x2C\n  kAutoDestroy\x2C\n  kErrored\x2C\n} = require('internal/streams/utils');\n\nconst kDestroy = Symbol('kDestroy');\nconst kConstruct = Symbol('kConstruct');\n\nfunction checkError(err\x2C w\x2C r) {\n  if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err\x2C cb) {\n  const r = this._readableState;\n  const w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  const s = w || r;\n\n  if (\n    (w && (w[kState] & kDestroyed) !== 0) ||\n    (r && (r[kState] & kDestroyed) !== 0)\n  ) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return this;\n  }\n\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err\x2C w\x2C r);\n\n  if (w) {\n    w[kState] |= kDestroyed;\n  }\n  if (r) {\n    r[kState] |= kDestroyed;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if ((s[kState] & kConstructed) === 0) {\n    this.once(kDestroy\x2C function(er) {\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n    });\n  } else {\n    _destroy(this\x2C err\x2C cb);\n  }\n\n  return this;\n}\n\nfunction _destroy(self\x2C err\x2C cb) {\n  let called = false;\n\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n\n    const r = self._readableState;\n    const w = self._writableState;\n\n    checkError(err\x2C w\x2C r);\n\n    if (w) {\n      w[kState] |= kClosed;\n    }\n    if (r) {\n      r[kState] |= kClosed;\n    }\n\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\n    } else {\n      process.nextTick(emitCloseNT\x2C self);\n    }\n  }\n  try {\n    self._destroy(err || null\x2C onDestroy);\n  } catch (err) {\n    onDestroy(err);\n  }\n}\n\nfunction emitErrorCloseNT(self\x2C err) {\n  emitErrorNT(self\x2C err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (w) {\n    w[kState] |= kCloseEmitted;\n  }\n  if (r) {\n    r[kState] |= kCloseEmitted;\n  }\n\n  if (\n    (w && (w[kState] & kEmitClose) !== 0) ||\n    (r && (r[kState] & kEmitClose) !== 0)\n  ) {\n    self.emit('close');\n  }\n}\n\nfunction emitErrorNT(self\x2C err) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (\n    (w && (w[kState] & kErrorEmitted) !== 0) ||\n    (r && (r[kState] & kErrorEmitted) !== 0)\n  ) {\n    return;\n  }\n\n  if (w) {\n    w[kState] |= kErrorEmitted;\n  }\n  if (r) {\n    r[kState] |= kErrorEmitted;\n  }\n\n  self.emit('error'\x2C err);\n}\n\nfunction undestroy() {\n  const r = this._readableState;\n  const w = this._writableState;\n\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = r.readable === false;\n    r.endEmitted = r.readable === false;\n  }\n\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.ended = w.writable === false;\n    w.ending = w.writable === false;\n    w.finished = w.writable === false;\n  }\n}\n\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick\x2C so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (\n    (w && (w[kState] ? (w[kState] & kDestroyed) !== 0 : w.destroyed)) ||\n    (r && (r[kState] ? (r[kState] & kDestroyed) !== 0 : r.destroyed))\n  ) {\n    return this;\n  }\n\n  if (\n    (r && (r[kState] & kAutoDestroy) !== 0) ||\n    (w && (w[kState] & kAutoDestroy) !== 0)\n  ) {\n    stream.destroy(err);\n  } else if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && (w[kState] & kErrored) === 0) {\n      w.errored = err;\n    }\n    if (r && (r[kState] & kErrored) === 0) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\n    } else {\n      emitErrorNT(stream\x2C err);\n    }\n  }\n}\n\nfunction construct(stream\x2C cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (r) {\n    r[kState] &= ~kConstructed;\n  }\n  if (w) {\n    w[kState] &= ~kConstructed;\n  }\n\n  stream.once(kConstruct\x2C cb);\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n\n  process.nextTick(constructNT\x2C stream);\n}\n\nfunction constructNT(stream) {\n  let called = false;\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    const r = stream._readableState;\n    const w = stream._writableState;\n    const s = w || r;\n\n    if (r) {\n      r[kState] |= kConstructed;\n    }\n    if (w) {\n      w[kState] |= kConstructed;\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy\x2C err);\n    } else if (err) {\n      errorOrDestroy(stream\x2C err\x2C true);\n    } else {\n      stream.emit(kConstruct);\n    }\n  }\n\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct\x2C err);\n    });\n  } catch (err) {\n    process.nextTick(onConstruct\x2C err);\n  }\n}\n\nfunction isRequest(stream) {\n  return stream?.setHeader && typeof stream.abort === 'function';\n}\n\nfunction emitCloseLegacy(stream) {\n  stream.emit('close');\n}\n\nfunction emitErrorCloseLegacy(stream\x2C err) {\n  stream.emit('error'\x2C err);\n  process.nextTick(emitCloseLegacy\x2C stream);\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream\x2C err) {\n  if (!stream || isDestroyed(stream)) {\n    return;\n  }\n\n  if (!err && !isFinished(stream)) {\n    err = new AbortError();\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null;\n    stream.destroy(err);\n  } else if (isRequest(stream)) {\n    stream.abort();\n  } else if (isRequest(stream.req)) {\n    stream.req.abort();\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err);\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close();\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\n  } else {\n    process.nextTick(emitCloseLegacy\x2C stream);\n  }\n\n  if (!stream.destroyed) {\n    stream[kIsDestroyed] = true;\n  }\n}\n\nmodule.exports = {\n  construct\x2C\n  destroyer\x2C\n  destroy\x2C\n  undestroy\x2C\n  errorOrDestroy\x2C\n};\n
code-source-info,0xcb902b5f0d6,88,0,7354,C0O0C4O7354,,
code-creation,JS,10,89860,0xcb902b5f7ee,326, node:internal/streams/destroy:1:1,0xcb902b5f050,~
code-source-info,0xcb902b5f7ee,88,0,7354,C0O0C143O106C146O106C151O25C157O54C162O60C168O90C174O144C179O372C182O372C187O179C193O195C199O210C205O224C211O243C217O253C223O270C229O284C235O295C241O312C247O328C253O342C259O358C265O425C268O425C272O425C274O464C277O464C281O464C283O7264C290O7285C296O7298C302O7311C308O7322C314O7335C320O7279C325O7353,,
code-creation,Eval,10,90080,0xcb902b60d3e,5, node:internal/streams/duplex:1:1,0xcb902b60b48,~
script-source,89,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance\x2C this class\n// prototypically inherits from Readable\x2C and then parasitically from\n// Writable.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = Duplex;\n\nconst Stream = require('internal/streams/legacy').Stream;\nconst Readable = require('internal/streams/readable');\nconst Writable = require('internal/streams/writable');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst destroyImpl = require('internal/streams/destroy');\nconst { kOnConstructed } = require('internal/streams/utils');\n\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(Duplex\x2C Readable);\n\n{\n  const keys = ObjectKeys(Writable.prototype);\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i];\n    if (!Duplex.prototype[method])\n      Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\n// Use the `destroy` method of `Writable`.\nDuplex.prototype.destroy = Writable.prototype.destroy;\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new Readable.ReadableState(options\x2C this\x2C true);\n  this._writableState = new Writable.WritableState(options\x2C this\x2C true);\n\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false;\n\n    if (options.readable === false) {\n      this._readableState.readable = false;\n      this._readableState.ended = true;\n      this._readableState.endEmitted = true;\n    }\n\n    if (options.writable === false) {\n      this._writableState.writable = false;\n      this._writableState.ending = true;\n      this._writableState.ended = true;\n      this._writableState.finished = true;\n    }\n\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  } else {\n    this.allowHalfOpen = true;\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperties(Duplex.prototype\x2C {\n  writable:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\n  writableHighWaterMark:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\n  writableObjectMode:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\n  writableBuffer:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\n  writableLength:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\n  writableFinished:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\n  writableCorked:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\n  writableEnded:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\n  writableNeedDrain:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      if (this._readableState === undefined ||\n        this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value;\n        this._writableState.destroyed = value;\n      }\n    }\x2C\n  }\x2C\n});\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nDuplex.fromWeb = function(pair\x2C options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\n    pair\x2C\n    options);\n};\n\nDuplex.toWeb = function(duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\n};\n\nlet duplexify;\n\nDuplex.from = function(body) {\n  if (!duplexify) {\n    duplexify = require('internal/streams/duplexify');\n  }\n  return duplexify(body\x2C 'body');\n};\n
code-source-info,0xcb902b60d3e,89,0,6588,C0O0C4O6588,,
code-creation,JS,10,90195,0xcb902b613f6,703, node:internal/streams/duplex:1:1,0xcb902b60cb8,~
code-source-info,0xcb902b613f6,89,0,6588,C0O0C45O1383C50O1409C55O1443C60O1457C65O1497C67O1512C71O1538C77O1538C82O1572C86O1538C88O1598C94O1598C98O1598C100O1653C106O1653C110O1653C112O1722C118O1722C123O1702C129O1789C135O1789C139O1789C141O1853C147O1853C152O1834C158O1889C161O1917C169O1937C174O1889C179O1949C185O1949C190O2007C193O2027C198O2007C203O2093C205O2105C209O2098C214O2139C216O2143C220O2152C223O2164C230O2173C235O2189C238O2196C246O2225C253O2234C256O2214C260O2114C265O2080C269O2294C272O2301C280O2330C285O2340C289O2319C293O4315C296O4345C306O4374C314O4436C323O4396C342O4491C350O4553C359O4513C378O4618C386O4680C395O4640C414O4738C422O4800C431O4760C450O4854C458O4916C467O4876C486O4972C494O5034C503O4994C522O5090C530O5152C539O5112C558O5205C566O5267C575O5227C594O5323C602O5385C611O5345C630O5434C635O5461C643O5679C657O4315C662O5956C663O5956C665O6180C672O6195C676O6318C683O6331C687O6429C688O6429C690O6441C697O6453C702O6587,,
code-creation,Eval,10,90334,0xcb902b622a6,5, node:internal/streams/legacy:1:1,0xcb902b62120,~
script-source,90,node:internal/streams/legacy,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectOwnKeys\x2C\n} = primordials;\n\nconst EE = require('events');\n\nfunction Stream(opts) {\n  EE.call(this\x2C opts);\n}\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\nObjectSetPrototypeOf(Stream\x2C EE);\n\nStream.prototype.pipe = function(dest\x2C options) {\n  const source = this;\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause();\n    }\n  }\n\n  source.on('data'\x2C ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain'\x2C ondrain);\n\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end'\x2C onend);\n    source.on('close'\x2C onclose);\n  }\n\n  let didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this\x2C 'error') === 0) {\n      this.emit('error'\x2C er);\n    }\n  }\n\n  prependListener(source\x2C 'error'\x2C onerror);\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data'\x2C ondata);\n    dest.removeListener('drain'\x2C ondrain);\n\n    source.removeListener('end'\x2C onend);\n    source.removeListener('close'\x2C onclose);\n\n    source.removeListener('error'\x2C onerror);\n    dest.removeListener('error'\x2C onerror);\n\n    source.removeListener('end'\x2C cleanup);\n    source.removeListener('close'\x2C cleanup);\n\n    dest.removeListener('close'\x2C cleanup);\n  }\n\n  source.on('end'\x2C cleanup);\n  source.on('close'\x2C cleanup);\n\n  dest.on('close'\x2C cleanup);\n  dest.emit('pipe'\x2C source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nStream.prototype.eventNames = function eventNames() {\n  const names = [];\n  for (const key of ReflectOwnKeys(this._events)) {\n    if (typeof this._events[key] === 'function' || (ArrayIsArray(this._events[key]) && this._events[key].length > 0)) {\n      names.push(key);\n    }\n  }\n  return names;\n};\n\nfunction prependListener(emitter\x2C event\x2C fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function')\n    return emitter.prependListener(event\x2C fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event])\n    emitter.on(event\x2C fn);\n  else if (ArrayIsArray(emitter._events[event]))\n    emitter._events[event].unshift(fn);\n  else\n    emitter._events[event] = [fn\x2C emitter._events[event]];\n}\n\nmodule.exports = { Stream\x2C prependListener };\n
code-source-info,0xcb902b622a6,90,0,3251,C0O0C4O3251,,
code-creation,JS,10,90396,0xcb902b62596,128, node:internal/streams/legacy:1:1,0xcb902b62220,~
code-source-info,0xcb902b62596,90,0,3251,C0O0C25O25C31O41C36O65C42O110C45O110C49O110C51O207C59O221C64O179C69O233C72O233C77O275C86O290C90O2104C99O2125C103O3205C110O3224C116O3232C122O3220C127O3250,,
tick,0x7ee81bee8e27,90765,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b61454,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5d97e,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5c208,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b50dde,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,91276,0xcb902b6526e,5, node:internal/streams/readable:1:1,0xcb902b63df0,~
script-source,91,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolAsyncIterator\x2C\n  SymbolSpecies\x2C\n  TypedArrayPrototypeSet\x2C\n} = primordials;\n\nmodule.exports = Readable;\nReadable.ReadableState = ReadableState;\n\nconst EE = require('events');\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\nconst { Buffer } = require('buffer');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\nconst eos = require('internal/streams/end-of-stream');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst destroyImpl = require('internal/streams/destroy');\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n  AbortError\x2C\n} = require('internal/errors');\nconst { validateObject } = require('internal/validators');\n\nconst FastBuffer = Buffer[SymbolSpecies];\n\nconst { StringDecoder } = require('string_decoder');\nconst from = require('internal/streams/from');\n\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Readable\x2C Stream);\nconst nop = () => {};\n\nconst { errorOrDestroy } = destroyImpl;\n\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kDecoderValue = Symbol('kDecoderValue');\nconst kEncodingValue = Symbol('kEncodingValue');\n\nconst kEnded = 1 << 9;\nconst kEndEmitted = 1 << 10;\nconst kReading = 1 << 11;\nconst kSync = 1 << 12;\nconst kNeedReadable = 1 << 13;\nconst kEmittedReadable = 1 << 14;\nconst kReadableListening = 1 << 15;\nconst kResumeScheduled = 1 << 16;\nconst kMultiAwaitDrain = 1 << 17;\nconst kReadingMore = 1 << 18;\nconst kDataEmitted = 1 << 19;\nconst kDefaultUTF8Encoding = 1 << 20;\nconst kDecoder = 1 << 21;\nconst kEncoding = 1 << 22;\nconst kHasFlowing = 1 << 23;\nconst kFlowing = 1 << 24;\nconst kHasPaused = 1 << 25;\nconst kPaused = 1 << 26;\nconst kDataListening = 1 << 27;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(ReadableState.prototype\x2C {\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n  ended: makeBitMapDescriptor(kEnded)\x2C\n  endEmitted: makeBitMapDescriptor(kEndEmitted)\x2C\n  reading: makeBitMapDescriptor(kReading)\x2C\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\n  // any actions that shouldn't happen until "later" should generally also\n  // not happen before the first read call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n  // Whenever we return null\x2C then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  needReadable: makeBitMapDescriptor(kNeedReadable)\x2C\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable)\x2C\n  readableListening: makeBitMapDescriptor(kReadableListening)\x2C\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled)\x2C\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain)\x2C\n  // If true\x2C a maybeReadMore has been scheduled.\n  readingMore: makeBitMapDescriptor(kReadingMore)\x2C\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\x2C\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  decoder: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kDecoder) !== 0 ? this[kDecoderValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kDecoderValue] = value;\n        this[kState] |= kDecoder;\n      } else {\n        this[kState] &= ~kDecoder;\n      }\n    }\x2C\n  }\x2C\n\n  encoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kEncoding) !== 0 ? this[kEncodingValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kEncodingValue] = value;\n        this[kState] |= kEncoding;\n      } else {\n        this[kState] &= ~kEncoding;\n      }\n    }\x2C\n  }\x2C\n\n  flowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kHasFlowing) !== 0 ? (this[kState] & kFlowing) !== 0 : null;\n    }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasFlowing | kFlowing);\n      } else if (value) {\n        this[kState] |= (kHasFlowing | kFlowing);\n      } else {\n        this[kState] |= kHasFlowing;\n        this[kState] &= ~kFlowing;\n      }\n    }\x2C\n  }\x2C\n});\n\n\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store ReadableState more effciently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kEmitClose | kAutoDestroy | kConstructed | kSync;\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  if (options && options.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options && options.readableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  this.buffer = [];\n  this.bufferIndex = 0;\n  this.length = 0;\n  this.pipes = [];\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options?.defaultEncoding;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this.defaultEncoding = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null;\n\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nReadableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kNeedReadable) !== 0) {\n    maybeReadMore(stream\x2C this);\n  }\n};\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new ReadableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n    });\n  }\n}\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nReadable.prototype[SymbolAsyncDispose] = function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.readableEnded ? null : new AbortError();\n    this.destroy(error);\n  }\n  return new Promise((resolve\x2C reject) => eos(this\x2C (err) => (err && err !== error ? reject(err) : resolve(null))));\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet\x2C\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk\x2C encoding) {\n  debug('push'\x2C chunk);\n\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkPushByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkPushObjectMode(this\x2C state\x2C chunk\x2C encoding);\n};\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function(chunk\x2C encoding) {\n  debug('unshift'\x2C chunk);\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkUnshiftByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkUnshiftObjectMode(this\x2C state\x2C chunk);\n};\n\n\nfunction readableAddChunkUnshiftByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      if (state.encoding) {\n        // When unshifting\x2C if state.encoding is set\x2C we have to save\n        // the string in the BufferList with the state encoding.\n        chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\n      } else {\n        chunk = Buffer.from(chunk\x2C encoding);\n      }\n    }\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n  } else if (chunk !== undefined && !(chunk instanceof Buffer)) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n\n  if (!(chunk && chunk.length > 0)) {\n    return canPushMore(state);\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftObjectMode(stream\x2C state\x2C chunk) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftValue(stream\x2C state\x2C chunk) {\n  if ((state[kState] & kEndEmitted) !== 0)\n    errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n  else if ((state[kState] & (kDestroyed | kErrored)) !== 0)\n    return false;\n  else\n    addChunk(stream\x2C state\x2C chunk\x2C true);\n\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      chunk = Buffer.from(chunk\x2C encoding);\n      encoding = '';\n    }\n  } else if (chunk instanceof Buffer) {\n    encoding = '';\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n    encoding = '';\n  } else if (chunk !== undefined) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n  if (!chunk || chunk.length <= 0) {\n    state[kState] &= ~kReading;\n    maybeReadMore(stream\x2C state);\n\n    return canPushMore(state);\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n    if (chunk.length === 0) {\n      maybeReadMore(stream\x2C state);\n      return canPushMore(state);\n    }\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushObjectMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction canPushMore(state) {\n  // We can push more data if we are below the highWaterMark.\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\n  // This is to work around cases where hwm=0\x2C such as the repl.\n  return (state[kState] & kEnded) === 0 &&\n    (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n  if ((state[kState] & (kFlowing | kSync | kDataListening)) === (kFlowing | kDataListening) && state.length === 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n\n    state[kState] |= kDataEmitted;\n    stream.emit('data'\x2C chunk);\n  } else {\n    // Update the buffer info.\n    state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    if (addToFront) {\n      if (state.bufferIndex > 0) {\n        state.buffer[--state.bufferIndex] = chunk;\n      } else {\n        state.buffer.unshift(chunk); // Slow path\n      }\n    } else {\n      state.buffer.push(chunk);\n    }\n\n    if ((state[kState] & kNeedReadable) !== 0)\n      emitReadable(stream);\n  }\n  maybeReadMore(stream\x2C state);\n}\n\nReadable.prototype.isPaused = function() {\n  const state = this._readableState;\n  return (state[kState] & kPaused) !== 0 || (state[kState] & (kHasFlowing | kFlowing)) === kHasFlowing;\n};\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  const state = this._readableState;\n\n  const decoder = new StringDecoder(enc);\n  state.decoder = decoder;\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\n  state.encoding = state.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = '';\n  for (const data of state.buffer.slice(state.bufferIndex)) {\n    content += decoder.write(data);\n  }\n  state.buffer.length = 0;\n  state.bufferIndex = 0;\n\n  if (content !== '')\n    state.buffer.push(content);\n  state.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n\x2C state) {\n  if (n <= 0 || (state.length === 0 && (state[kState] & kEnded) !== 0))\n    return 0;\n  if ((state[kState] & kObjectMode) !== 0)\n    return 1;\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if ((state[kState] & kFlowing) !== 0 && state.length)\n      return state.buffer[state.bufferIndex].length;\n    return state.length;\n  }\n  if (n <= state.length)\n    return n;\n  return (state[kState] & kEnded) !== 0 ? state.length : 0;\n}\n\n// You can override either this method\x2C or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read'\x2C n);\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\n  // in this scenario\x2C so we are doing it manually.\n  if (n === undefined) {\n    n = NaN;\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n\x2C 10);\n  }\n  const state = this._readableState;\n  const nOrig = n;\n\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  if (n !== 0)\n    state[kState] &= ~kEmittedReadable;\n\n  // If we're doing read(0) to trigger a readable event\x2C but we\n  // already have a bunch of data in the buffer\x2C then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      (state[kState] & kNeedReadable) !== 0 &&\n      ((state.highWaterMark !== 0 ?\n        state.length >= state.highWaterMark :\n        state.length > 0) ||\n       (state[kState] & kEnded) !== 0)) {\n    debug('read: emitReadable');\n    if (state.length === 0 && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n\x2C state);\n\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\n  if (n === 0 && (state[kState] & kEnded) !== 0) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer\x2C providing enough data when\n  // before there was *not* enough.\n  //\n  // So\x2C the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\n  // that the Readable class should behave improperly\x2C as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie\x2C if the read call\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event\x2C then we need to do some reading.\n  let doRead = (state[kState] & kNeedReadable) !== 0;\n  debug('need readable'\x2C doRead);\n\n  // If we currently have less than the highWaterMark\x2C then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark'\x2C doRead);\n  }\n\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\n  if ((state[kState] & (kReading | kEnded | kDestroyed | kErrored | kConstructed)) !== kConstructed) {\n    doRead = false;\n    debug('reading\x2C ended or constructing'\x2C doRead);\n  } else if (doRead) {\n    debug('do read');\n    state[kState] |= kReading | kSync;\n    // If the length is currently zero\x2C then we *need* a readable event.\n    if (state.length === 0)\n      state[kState] |= kNeedReadable;\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark);\n    } catch (err) {\n      errorOrDestroy(this\x2C err);\n    }\n    state[kState] &= ~kSync;\n\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\n    // and we need to re-evaluate how much data we can return to the user.\n    if ((state[kState] & kReading) === 0)\n      n = howMuchToRead(nOrig\x2C state);\n  }\n\n  let ret;\n  if (n > 0)\n    ret = fromList(n\x2C state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state[kState] |= state.length <= state.highWaterMark ? kNeedReadable : 0;\n    n = 0;\n  } else {\n    state.length -= n;\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer\x2C then we want to know\n    // as soon as we *do* get something into the buffer.\n    if ((state[kState] & kEnded) === 0)\n      state[kState] |= kNeedReadable;\n\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\n    if (nOrig !== n && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n  }\n\n  if (ret !== null && (state[kState] & (kErrorEmitted | kCloseEmitted)) === 0) {\n    state[kState] |= kDataEmitted;\n    this.emit('data'\x2C ret);\n  }\n\n  return ret;\n};\n\nfunction onEofChunk(stream\x2C state) {\n  debug('onEofChunk');\n  if ((state[kState] & kEnded) !== 0) return;\n  const decoder = (state[kState] & kDecoder) !== 0 ? state[kDecoderValue] : null;\n  if (decoder) {\n    const chunk = decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    }\n  }\n  state[kState] |= kEnded;\n\n  if ((state[kState] & kSync) !== 0) {\n    // If we are sync\x2C wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream);\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state[kState] &= ~kNeedReadable;\n    state[kState] |= kEmittedReadable;\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream);\n  }\n}\n\n// Don't emit readable right away in sync mode\x2C because this can trigger\n// another read() call => stack overflow.  This way\x2C it might trigger\n// a nextTick recursion warning\x2C but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState;\n  debug('emitReadable');\n  state[kState] &= ~kNeedReadable;\n  if ((state[kState] & kEmittedReadable) === 0) {\n    debug('emitReadable'\x2C (state[kState] & kFlowing) !== 0);\n    state[kState] |= kEmittedReadable;\n    process.nextTick(emitReadable_\x2C stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState;\n  debug('emitReadable_');\n  if ((state[kState] & (kDestroyed | kErrored)) === 0 && (state.length || (state[kState] & kEnded) !== 0)) {\n    stream.emit('readable');\n    state[kState] &= ~kEmittedReadable;\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing\x2C as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark\x2C so we can schedule\n  //    another readable later.\n  state[kState] |=\n    (state[kState] & (kFlowing | kEnded)) === 0 &&\n    state.length <= state.highWaterMark ? kNeedReadable : 0;\n  flow(stream);\n}\n\n\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call\x2C in which case reading = true if\n// it's in progress.\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream\x2C state) {\n  if ((state[kState] & (kReadingMore | kConstructed)) === kConstructed) {\n    state[kState] |= kReadingMore;\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\n  }\n}\n\nfunction maybeReadMore_(stream\x2C state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data\x2C the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method\x2C but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while ((state[kState] & (kReading | kEnded)) === 0 &&\n         (state.length < state.highWaterMark ||\n          ((state[kState] & kFlowing) !== 0 && state.length === 0))) {\n    const len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // Didn't get any data\x2C stop spinning.\n      break;\n  }\n  state[kState] &= ~kReadingMore;\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er\x2C data) where data is <= n in length.\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\n// arbitrary\x2C and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\n};\n\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\n  const src = this;\n  const state = this._readableState;\n\n  if (state.pipes.length === 1) {\n    if ((state[kState] & kMultiAwaitDrain) === 0) {\n      state[kState] |= kMultiAwaitDrain;\n      state.awaitDrainWriters = new SafeSet(\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\n      );\n    }\n  }\n\n  state.pipes.push(dest);\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\n\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  const endFn = doEnd ? onend : unpipe;\n  if ((state[kState] & kEndEmitted) !== 0)\n    process.nextTick(endFn);\n  else\n    src.once('end'\x2C endFn);\n\n  dest.on('unpipe'\x2C onunpipe);\n  function onunpipe(readable\x2C unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  let ondrain;\n\n  let cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close'\x2C onclose);\n    dest.removeListener('finish'\x2C onfinish);\n    if (ondrain) {\n      dest.removeListener('drain'\x2C ondrain);\n    }\n    dest.removeListener('error'\x2C onerror);\n    dest.removeListener('unpipe'\x2C onunpipe);\n    src.removeListener('end'\x2C onend);\n    src.removeListener('end'\x2C unpipe);\n    src.removeListener('data'\x2C ondata);\n\n    cleanedUp = true;\n\n    // If the reader is waiting for a drain event from this\n    // specific writer\x2C then it would cause it to never start\n    // flowing again.\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\n    // If we don't know\x2C then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`\x2C it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response\x2C pause'\x2C 0);\n        state.awaitDrainWriters = dest;\n        state[kState] &= ~kMultiAwaitDrain;\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\n        state.awaitDrainWriters.add(dest);\n      }\n      src.pause();\n    }\n    if (!ondrain) {\n      // When the dest drains\x2C it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow()\x2C but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src\x2C dest);\n      dest.on('drain'\x2C ondrain);\n    }\n  }\n\n  src.on('data'\x2C ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    const ret = dest.write(chunk);\n    debug('dest.write'\x2C ret);\n    if (ret === false) {\n      pause();\n    }\n  }\n\n  // If the dest has an error\x2C then stop piping into it.\n  // However\x2C don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror'\x2C er);\n    unpipe();\n    dest.removeListener('error'\x2C onerror);\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState;\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest\x2C er);\n      } else {\n        dest.emit('error'\x2C er);\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Both close and finish should trigger unpipe\x2C but only once.\n  function onclose() {\n    dest.removeListener('finish'\x2C onfinish);\n    unpipe();\n  }\n  dest.once('close'\x2C onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close'\x2C onclose);\n    unpipe();\n  }\n  dest.once('finish'\x2C onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe'\x2C src);\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    pause();\n  } else if ((state[kState] & kFlowing) === 0) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src\x2C dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState;\n\n    // `ondrain` will call directly\x2C\n    // `this` maybe not a reference to dest\x2C\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain'\x2C 1);\n      state.awaitDrainWriters = null;\n    } else if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\n      state.awaitDrainWriters.delete(dest);\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n      (state[kState] & kDataListening) !== 0) {\n      src.resume();\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  const state = this._readableState;\n  const unpipeInfo = { hasUnpiped: false };\n\n  // If we're not piping anywhere\x2C then do nothing.\n  if (state.pipes.length === 0)\n    return this;\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes;\n    state.pipes = [];\n    this.pause();\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\n    return this;\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n  if (index === -1)\n    return this;\n\n  state.pipes.splice(index\x2C 1);\n  if (state.pipes.length === 0)\n    this.pause();\n\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\n\n  return this;\n};\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function(ev\x2C fn) {\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n  const state = this._readableState;\n\n  if (ev === 'data') {\n    state[kState] |= kDataListening;\n\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state[kState] |= this.listenerCount('readable') > 0 ? kReadableListening : 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n      this.resume();\n    }\n  } else if (ev === 'readable') {\n    if ((state[kState] & (kEndEmitted | kReadableListening)) === 0) {\n      state[kState] |= kReadableListening | kNeedReadable | kHasFlowing;\n      state[kState] &= ~(kFlowing | kEmittedReadable);\n      debug('on readable');\n      if (state.length) {\n        emitReadable(this);\n      } else if ((state[kState] & kReading) === 0) {\n        process.nextTick(nReadingNextTick\x2C this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function(ev\x2C fn) {\n  const state = this._readableState;\n\n  const res = Stream.prototype.removeListener.call(this\x2C\n                                                   ev\x2C fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  } else if (ev === 'data' && this.listenerCount('data') === 0) {\n    state[kState] &= ~kDataListening;\n  }\n\n  return res;\n};\nReadable.prototype.off = Readable.prototype.removeListener;\n\nReadable.prototype.removeAllListeners = function(ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\n                                                        arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  const state = self._readableState;\n\n  if (self.listenerCount('readable') > 0) {\n    state[kState] |= kReadableListening;\n  } else {\n    state[kState] &= ~kReadableListening;\n  }\n\n  if ((state[kState] & (kHasPaused | kPaused | kResumeScheduled)) === (kHasPaused | kResumeScheduled)) {\n    // Flowing needs to be set to true now\x2C otherwise\n    // the upcoming resume will not flow.\n    state[kState] |= kHasFlowing | kFlowing;\n\n    // Crude way to check if we should resume.\n  } else if ((state[kState] & kDataListening) !== 0) {\n    self.resume();\n  } else if ((state[kState] & kReadableListening) === 0) {\n    state[kState] &= ~(kHasFlowing | kFlowing);\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them\x2C then switch into old mode.\nReadable.prototype.resume = function() {\n  const state = this._readableState;\n  if ((state[kState] & kFlowing) === 0) {\n    debug('resume');\n    // We flow only if there is no one listening\n    // for readable\x2C but we still have to call\n    // resume().\n    state[kState] |= kHasFlowing;\n    if ((state[kState] & kReadableListening) === 0) {\n      state[kState] |= kFlowing;\n    } else {\n      state[kState] &= ~kFlowing;\n    }\n    resume(this\x2C state);\n  }\n  state[kState] |= kHasPaused;\n  state[kState] &= ~kPaused;\n  return this;\n};\n\nfunction resume(stream\x2C state) {\n  if ((state[kState] & kResumeScheduled) === 0) {\n    state[kState] |= kResumeScheduled;\n    process.nextTick(resume_\x2C stream\x2C state);\n  }\n}\n\nfunction resume_(stream\x2C state) {\n  debug('resume'\x2C (state[kState] & kReading) !== 0);\n  if ((state[kState] & kReading) === 0) {\n    stream.read(0);\n  }\n\n  state[kState] &= ~kResumeScheduled;\n  stream.emit('resume');\n  flow(stream);\n  if ((state[kState] & (kFlowing | kReading)) === kFlowing)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  const state = this._readableState;\n  debug('call pause');\n  if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n    debug('pause');\n    state[kState] |= kHasFlowing;\n    state[kState] &= ~kFlowing;\n    this.emit('pause');\n  }\n  state[kState] |= kHasPaused | kPaused;\n  return this;\n};\n\nfunction flow(stream) {\n  const state = stream._readableState;\n  debug('flow');\n  while ((state[kState] & kFlowing) !== 0 && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  let paused = false;\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method\x2C e.g. Readable.wrap(stream).\n\n  stream.on('data'\x2C (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  stream.on('end'\x2C () => {\n    this.push(null);\n  });\n\n  stream.on('error'\x2C (err) => {\n    errorOrDestroy(this\x2C err);\n  });\n\n  stream.on('close'\x2C () => {\n    this.destroy();\n  });\n\n  stream.on('destroy'\x2C () => {\n    this.destroy();\n  });\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream);\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j];\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream);\n    }\n  }\n\n  return this;\n};\n\nReadable.prototype[SymbolAsyncIterator] = function() {\n  return streamToAsyncIterator(this);\n};\n\nReadable.prototype.iterator = function(options) {\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n  }\n  return streamToAsyncIterator(this\x2C options);\n};\n\nfunction streamToAsyncIterator(stream\x2C options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream\x2C { objectMode: true });\n  }\n\n  const iter = createAsyncIterator(stream\x2C options);\n  iter.stream = stream;\n  return iter;\n}\n\nasync function* createAsyncIterator(stream\x2C options) {\n  let callback = nop;\n\n  function next(resolve) {\n    if (this === stream) {\n      callback();\n      callback = nop;\n    } else {\n      callback = resolve;\n    }\n  }\n\n  stream.on('readable'\x2C next);\n\n  let error;\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\n    callback();\n    callback = nop;\n  });\n\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read();\n      if (chunk !== null) {\n        yield chunk;\n      } else if (error) {\n        throw error;\n      } else if (error === null) {\n        return;\n      } else {\n        await new Promise(next);\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error\x2C err);\n    throw error;\n  } finally {\n    if (\n      (error || options?.destroyOnReturn !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream\x2C null);\n    } else {\n      stream.off('readable'\x2C next);\n      cleanup();\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype\x2C {\n  readable: {\n    __proto__: null\x2C\n    get() {\n      const r = this._readableState;\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\n        !r.endEmitted;\n    }\x2C\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  readableDidRead: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.dataEmitted;\n    }\x2C\n  }\x2C\n\n  readableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      );\n    }\x2C\n  }\x2C\n\n  readableHighWaterMark: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\x2C\n  }\x2C\n\n  readableBuffer: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState && this._readableState.buffer;\n    }\x2C\n  }\x2C\n\n  readableFlowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.flowing;\n    }\x2C\n    set: function(state) {\n      if (this._readableState) {\n        this._readableState.flowing = state;\n      }\n    }\x2C\n  }\x2C\n\n  readableLength: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState.length;\n    }\x2C\n  }\x2C\n\n  readableObjectMode: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.objectMode : false;\n    }\x2C\n  }\x2C\n\n  readableEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.encoding : null;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.errored : null;\n    }\x2C\n  }\x2C\n\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._readableState ? this._readableState.closed : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return;\n      }\n\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value;\n    }\x2C\n  }\x2C\n\n  readableEnded: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false;\n    }\x2C\n  }\x2C\n\n});\n\nObjectDefineProperties(ReadableState.prototype\x2C {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null\x2C\n    get() {\n      return this.pipes.length;\n    }\x2C\n  }\x2C\n\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null\x2C\n    get() {\n      return (this[kState] & kPaused) !== 0;\n    }\x2C\n    set(value) {\n      this[kState] |= kHasPaused;\n      if (value) {\n        this[kState] |= kPaused;\n      } else {\n        this[kState] &= ~kPaused;\n      }\n    }\x2C\n  }\x2C\n});\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction fromList(n\x2C state) {\n  // nothing buffered.\n  if (state.length === 0)\n    return null;\n\n  let idx = state.bufferIndex;\n  let ret;\n\n  const buf = state.buffer;\n  const len = buf.length;\n\n  if ((state[kState] & kObjectMode) !== 0) {\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if (!n || n >= state.length) {\n    // Read it all\x2C truncate the list.\n    if ((state[kState] & kDecoder) !== 0) {\n      ret = '';\n      while (idx < len) {\n        ret += buf[idx];\n        buf[idx++] = null;\n      }\n    } else if (len - idx === 0) {\n      ret = Buffer.alloc(0);\n    } else if (len - idx === 1) {\n      ret = buf[idx];\n      buf[idx++] = null;\n    } else {\n      ret = Buffer.allocUnsafe(state.length);\n\n      let i = 0;\n      while (idx < len) {\n        TypedArrayPrototypeSet(ret\x2C buf[idx]\x2C i);\n        i += buf[idx].length;\n        buf[idx++] = null;\n      }\n    }\n  } else if (n < buf[idx].length) {\n    // `slice` is the same for buffers and strings.\n    ret = buf[idx].slice(0\x2C n);\n    buf[idx] = buf[idx].slice(n);\n  } else if (n === buf[idx].length) {\n    // First chunk is a perfect match.\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if ((state[kState] & kDecoder) !== 0) {\n    ret = '';\n    while (idx < len) {\n      const str = buf[idx];\n      if (n > str.length) {\n        ret += str;\n        n -= str.length;\n        buf[idx++] = null;\n      } else {\n        if (n === buf.length) {\n          ret += str;\n          buf[idx++] = null;\n        } else {\n          ret += str.slice(0\x2C n);\n          buf[idx] = str.slice(n);\n        }\n        break;\n      }\n    }\n  } else {\n    ret = Buffer.allocUnsafe(n);\n\n    const retLen = n;\n    while (idx < len) {\n      const data = buf[idx];\n      if (n > data.length) {\n        TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n        n -= data.length;\n        buf[idx++] = null;\n      } else {\n        if (n === data.length) {\n          TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n          buf[idx++] = null;\n        } else {\n          TypedArrayPrototypeSet(ret\x2C new FastBuffer(data.buffer\x2C data.byteOffset\x2C n)\x2C retLen - n);\n          buf[idx] = new FastBuffer(data.buffer\x2C data.byteOffset + n\x2C data.length - n);\n        }\n        break;\n      }\n    }\n  }\n\n  if (idx === len) {\n    state.buffer.length = 0;\n    state.bufferIndex = 0;\n  } else if (idx > 1024) {\n    state.buffer.splice(0\x2C idx);\n    state.bufferIndex = 0;\n  } else {\n    state.bufferIndex = idx;\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState;\n\n  debug('endReadable');\n  if ((state[kState] & kEndEmitted) === 0) {\n    state[kState] |= kEnded;\n    process.nextTick(endReadableNT\x2C state\x2C stream);\n  }\n}\n\nfunction endReadableNT(state\x2C stream) {\n  debug('endReadableNT');\n\n  // Check that we didn't get one last unshift.\n  if ((state[kState] & (kErrored | kCloseEmitted | kEndEmitted)) === 0 && state.length === 0) {\n    state[kState] |= kEndEmitted;\n    stream.emit('end');\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT\x2C stream);\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState;\n      const autoDestroy = !wState || (\n        wState.autoDestroy &&\n        // We don't expect the writable to ever 'finish'\n        // if writable is explicitly set to false.\n        (wState.finished || wState.writable === false)\n      );\n\n      if (autoDestroy) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded &&\n    !stream.destroyed;\n  if (writable) {\n    stream.end();\n  }\n}\n\nReadable.from = function(iterable\x2C opts) {\n  return from(Readable\x2C iterable\x2C opts);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nReadable.fromWeb = function(readableStream\x2C options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(\n    readableStream\x2C\n    options);\n};\n\nReadable.toWeb = function(streamReadable\x2C options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\n    streamReadable\x2C\n    options);\n};\n\nReadable.wrap = function(src\x2C options) {\n  return new Readable({\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\n    ...options\x2C\n    destroy(err\x2C callback) {\n      destroyImpl.destroyer(src\x2C err);\n      callback(err);\n    }\x2C\n  }).wrap(src);\n};\n
code-source-info,0xcb902b6526e,91,0,51325,C0O0C4O51325,,
code-creation,JS,10,92122,0xcb902b68586,2570, node:internal/streams/readable:1:1,0xcb902b651e8,~
code-source-info,0xcb902b68586,91,0,51325,C0O0C390O1159C396O1184C402O1203C408O1218C414O1236C419O1262C425O1276C430O1300C436O1311C442O1322C447O1332C452O1354C457O1377C462O1394C468O1436C470O1451C474O1463C479O1486C483O1515C489O1515C494O1570C500O1570C505O1542C511O1550C517O1625C523O1625C528O1614C534O1675C540O1675C545O1655C551O1733C557O1733C561O1733C563O1789C569O1789C574O1822C587O1823C593O1789C595O1890C601O1890C605O1890C607O1986C613O1986C618O1937C624O1957C630O2208C636O2208C641O2031C647O2056C653O2071C659O2088C665O2104C671O2118C677O2132C682O2143C688O2160C694O2172C700O2188C706O2485C712O2485C717O2254C723O2283C728O2289C734O2315C740O2347C746O2369C752O2400C758O2440C764O2469C770O2540C776O2540C781O2521C787O2592C792O2598C795O2592C797O2642C803O2642C808O2624C814O2682C820O2682C824O2682C826O2717C829O2747C837O2765C842O2717C847O2777C853O2777C858O2829C862O2829C864O2867C867O2848C873O2903C876O2903C880O2903C882O2958C885O2958C889O2958C891O3013C894O3013C898O3013C900O3061C903O3061C907O3061C909O3103C913O3103C915O3131C919O3131C921O3157C925O3157C927O3180C931O3180C933O3211C937O3211C939O3245C943O3245C945O3281C951O3281C953O3315C959O3315C961O3349C967O3349C969O3379C975O3379C977O3409C983O3409C985O3447C991O3447C993O3473C999O3473C1001O3500C1007O3500C1009O3529C1015O3529C1017O3555C1023O3555C1025O3583C1031O3583C1033O3608C1039O3608C1041O3640C1047O3640C1049O3956C1052O3993C1065O4020C1076O4064C1087O4108C1098O4154C1109O4383C1120O4696C1131O4851C1142O4907C1153O4968C1164O5029C1175O5160C1186O5210C1197O5259C1208O5336C1216O5439C1227O5578C1238O5634C1249O5739C1260O5790C1268O6079C1273O6129C1281O6223C1295O6416C1300O6466C1308O6572C1322O6821C1327O6871C1335O6965C1349O7151C1354O7201C1362O7297C1376O7485C1381O7535C1389O7644C1403O3956C1408O9921C1411O9935C1419O9945C1423O9961C1427O11119C1430O11128C1438O11160C1446O11146C1454O11169C1457O11178C1465O11213C1473O11199C1481O11224C1484O11233C1493O11252C1501O11289C1504O11298C1509O11311C1522O11335C1530O11378C1533O11387C1538O11397C1542O11417C1550O11878C1553O11887C1562O11902C1570O12240C1573O12249C1582O12267C1590O17456C1593O17465C1602O17484C1610O17672C1613O17681C1622O17703C1630O18324C1636O18324C1638O19352C1641O19361C1650O19376C1658O28856C1661O28865C1670O28881C1678O28952C1681O28961C1690O28976C1698O34171C1701O34180C1710O34197C1718O35002C1721O35011C1730O35024C1738O36037C1741O36046C1749O36079C1754O36089C1762O36068C1770O36094C1773O36103C1782O36128C1790O36839C1793O36848C1801O36873C1806O36883C1814O36862C1822O36900C1825O36909C1834O36938C1842O38455C1845O38464C1854O38481C1862O39482C1865O39491C1874O39507C1882O40133C1885O40142C1894O40157C1902O41183C1905O41192C1910O41202C1914O41223C1922O41280C1925O41289C1934O41308C1942O42918C1945O42950C1958O42975C1966O43002C1978O43397C2000O43554C2008O43609C2030O43700C2038O43755C2060O43996C2068O44051C2090O44143C2098O44198C2120O44307C2128O44362C2140O44433C2162O44568C2170O44618C2192O44702C2200O44752C2222O44868C2230O44918C2252O45022C2260O45072C2282O45174C2290O45201C2312O45306C2320O45356C2332O45449C2354O45763C2362O45813C2384O42918C2394O45914C2397O45951C2410O46015C2418O46042C2440O46140C2448O46167C2460O46231C2482O45914C2492O46442C2497O46461C2505O50437C2512O50451C2520O50529C2521O50529C2523O50753C2530O50770C2538O50909C2545O50924C2553O51063C2560O51077C2569O51324,,
tick,0x7ee81a51b6c0,92178,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b61454,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5d97e,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5c208,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b50dde,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,92521,0xcb902b6dd56,5, node:internal/streams/add-abort-signal:1:1,0xcb902b6db60,~
script-source,92,node:internal/streams/add-abort-signal,'use strict';\n\nconst {\n  SymbolDispose\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  codes\x2C\n} = require('internal/errors');\n\nconst {\n  isNodeStream\x2C\n  isWebStream\x2C\n  kControllerErrorFunction\x2C\n} = require('internal/streams/utils');\n\nconst eos = require('internal/streams/end-of-stream');\nconst { ERR_INVALID_ARG_TYPE } = codes;\nlet addAbortListener;\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal\x2C name) => {\n  if (typeof signal !== 'object' ||\n       !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n};\n\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\n  validateAbortSignal(signal\x2C 'signal');\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\n};\n\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream;\n  }\n  const onAbort = isNodeStream(stream) ?\n    () => {\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\n    } :\n    () => {\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\n    };\n  if (signal.aborted) {\n    onAbort();\n  } else {\n    addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n    const disposable = addAbortListener(signal\x2C onAbort);\n    eos(stream\x2C disposable[SymbolDispose]);\n  }\n  return stream;\n};\n
code-source-info,0xcb902b6dd56,92,0,1728,C0O0C4O1728,,
code-creation,JS,10,92592,0xcb902b6dfc6,158, node:internal/streams/add-abort-signal:1:1,0xcb902b6dcd0,~
code-source-info,0xcb902b6dfc6,92,0,1728,C0O0C40O25C46O93C52O93C57O68C63O82C68O193C74O193C79O132C85O148C91O163C97O241C103O241C107O241C109O292C115O328C116O328C118O557C122O557C124O719C127O726C136O749C140O1065C143O1072C152O1105C157O1727,,
code-creation,Eval,10,92745,0xcb902b6e846,5, node:internal/streams/state:1:1,0xcb902b6e680,~
script-source,93,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\nconst { validateInteger } = require('internal/validators');\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\nlet defaultHighWaterMarkBytes = 16 * 1024;\nlet defaultHighWaterMarkObjectMode = 16;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;\n}\n\nfunction setDefaultHighWaterMark(objectMode\x2C value) {\n  validateInteger(value\x2C 'value'\x2C 0);\n  if (objectMode) {\n    defaultHighWaterMarkObjectMode = value;\n  } else {\n    defaultHighWaterMarkBytes = value;\n  }\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n  setDefaultHighWaterMark\x2C\n};\n
code-source-info,0xcb902b6e846,93,0,1332,C0O0C4O1332,,
code-creation,JS,10,92792,0xcb902b6eace,131, node:internal/streams/state:1:1,0xcb902b6e7c0,~
code-source-info,0xcb902b6eace,93,0,1332,C0O0C45O25C51O38C57O100C60O100C65O80C71O167C74O167C79O193C84O141C90O234C94O234C96O282C98O282C100O1236C107O1257C113O1277C119O1304C125O1251C130O1331,,
code-creation,JS,10,92869,0xcb902b6ef86,5,get node:buffer:281:6,0x305ee1eb2b30,~
code-source-info,0xcb902b6ef86,25,8073,8098,C0O8078C4O8096,,
tick,0x7ee81beacb84,92918,1,0x7ee81a613550,6,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b688a9,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b61454,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5d97e,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5c208,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b50dde,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,93028,0xcb902b6f3de,5, node:string_decoder:1:1,0xcb902b6f168,~
script-source,94,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSubarray\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  kIncompleteCharactersStart\x2C\n  kIncompleteCharactersEnd\x2C\n  kMissingBytes\x2C\n  kBufferedBytes\x2C\n  kEncodingField\x2C\n  kSize\x2C\n  decode\x2C\n  flush\x2C\n} = internalBinding('string_decoder');\nconst {\n  kIsEncodingSymbol\x2C\n  encodingsMap\x2C\n  normalizeEncoding: _normalizeEncoding\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_THIS\x2C\n  ERR_UNKNOWN_ENCODING\x2C\n} = require('internal/errors').codes;\nconst isEncoding = Buffer[kIsEncodingSymbol];\n\nconst kNativeDecoder = Symbol('kNativeDecoder');\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\n/**\n * Normalize encoding notation\n * @param {string} enc\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\n *           | "base64" | "latin1" | "base64url"}\n * @throws {TypeError} Throws an error when encoding is invalid\n */\nfunction normalizeEncoding(enc) {\n  const nenc = _normalizeEncoding(enc);\n  if (nenc === undefined) {\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\n      throw new ERR_UNKNOWN_ENCODING(enc);\n    return enc;\n  }\n  return nenc;\n}\n\n/**\n * StringDecoder provides an interface for efficiently splitting a series of\n * buffers into a series of JS strings without breaking apart multi-byte\n * characters.\n * @param {string} [encoding=utf-8]\n */\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  this[kNativeDecoder] = Buffer.alloc(kSize);\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\n}\n\n/**\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\n * @param {string | Buffer | TypedArray | DataView} buf\n * @returns {string}\n * @throws {TypeError} Throws when buf is not in one of supported types\n */\nStringDecoder.prototype.write = function write(buf) {\n  if (typeof buf === 'string')\n    return buf;\n  if (!ArrayBufferIsView(buf))\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buf);\n  if (!this[kNativeDecoder]) {\n    throw new ERR_INVALID_THIS('StringDecoder');\n  }\n  return decode(this[kNativeDecoder]\x2C buf);\n};\n\n/**\n * Returns any remaining input stored in the internal buffer as a string.\n * After end() is called\x2C the stringDecoder object can be reused for new\n * input.\n * @param {string | Buffer | TypedArray | DataView} [buf]\n * @returns {string}\n */\nStringDecoder.prototype.end = function end(buf) {\n  let ret = '';\n  if (buf !== undefined)\n    ret = this.write(buf);\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\n    ret += flush(this[kNativeDecoder]);\n  return ret;\n};\n\n/* Everything below this line is undocumented legacy stuff. */\n/**\n *\n * @param {string | Buffer | TypedArray | DataView} buf\n * @param {number} offset\n * @returns {string}\n */\nStringDecoder.prototype.text = function text(buf\x2C offset) {\n  this[kNativeDecoder][kMissingBytes] = 0;\n  this[kNativeDecoder][kBufferedBytes] = 0;\n  return this.write(buf.slice(offset));\n};\n\nObjectDefineProperties(StringDecoder.prototype\x2C {\n  lastChar: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\n                                         kIncompleteCharactersStart\x2C\n                                         kIncompleteCharactersEnd);\n    }\x2C\n  }\x2C\n  lastNeed: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n  lastTotal: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kBufferedBytes] +\n             this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n});\n\nexports.StringDecoder = StringDecoder;\n
code-source-info,0xcb902b6f3de,94,0,5141,C0O0C4O5141,,
code-creation,JS,10,93127,0xcb902b6f96e,356, node:string_decoder:1:1,0xcb902b6f358,~
code-source-info,0xcb902b6f96e,94,0,5141,C0O0C70O1159C76O1180C81O1206C86O1216C92O1282C95O1282C100O1271C106O1452C109O1452C114O1311C120O1341C126O1369C132O1386C138O1404C144O1422C150O1431C156O1441C162O1577C165O1577C170O1497C175O1518C181O1553C187O1683C190O1683C195O1709C200O1613C206O1637C212O1657C218O1736C223O1742C226O1736C228O1787C231O1787C235O1787C237O3137C246O3153C250O3801C259O3815C263O4202C272O4217C276O4416C286O4441C291O4514C305O4746C310O4819C324O4902C329O4975C343O4379C348O5102C350O5124C355O5140,,
code-creation,Eval,10,93304,0xcb902b709b6,5, node:internal/streams/from:1:1,0xcb902b70800,~
script-source,95,node:internal/streams/from,'use strict';\n\nconst {\n  PromisePrototypeThen\x2C\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n} = primordials;\nconst { Buffer } = require('buffer');\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n} = require('internal/errors').codes;\n\nfunction from(Readable\x2C iterable\x2C opts) {\n  let iterator;\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true\x2C\n      ...opts\x2C\n      read() {\n        this.push(iterable);\n        this.push(null);\n      }\x2C\n    });\n  }\n\n  let isAsync;\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true;\n    iterator = iterable[SymbolAsyncIterator]();\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false;\n    iterator = iterable[SymbolIterator]();\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\n  }\n\n\n  const readable = new Readable({\n    objectMode: true\x2C\n    highWaterMark: 1\x2C\n    // TODO(ronag): What options should be allowed?\n    ...opts\x2C\n  });\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false;\n  let isAsyncValues = false;\n\n  readable._read = function() {\n    if (!reading) {\n      reading = true;\n\n      if (isAsync) {\n        nextAsync();\n      } else if (isAsyncValues) {\n        nextSyncWithAsyncValues();\n      } else {\n        nextSyncWithSyncValues();\n      }\n    }\n  };\n\n  readable._destroy = function(error\x2C cb) {\n    PromisePrototypeThen(\n      close(error)\x2C\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\n      (e) => process.nextTick(cb\x2C e || error)\x2C\n    );\n  };\n\n  async function close(error) {\n    const hadError = (error !== undefined) && (error !== null);\n    const hasThrow = typeof iterator.throw === 'function';\n    if (hadError && hasThrow) {\n      const { value\x2C done } = await iterator.throw(error);\n      await value;\n      if (done) {\n        return;\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return();\n      await value;\n    }\n  }\n\n  // There are a lot of duplication here\x2C it's done on purpose for performance\n  // reasons - avoid await when not needed.\n\n  function nextSyncWithSyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value &&\n          typeof value.then === 'function') {\n          return changeToAsyncValues(value);\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function changeToAsyncValues(value) {\n    isAsyncValues = true;\n\n    try {\n      const res = await value;\n\n      if (res === null) {\n        reading = false;\n        throw new ERR_STREAM_NULL_VALUES();\n      }\n\n      if (readable.push(res)) {\n        nextSyncWithAsyncValues();\n        return;\n      }\n\n      reading = false;\n    } catch (err) {\n      readable.destroy(err);\n    }\n  }\n\n  async function nextSyncWithAsyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        const res = (value &&\n          typeof value.then === 'function') ?\n          await value :\n          value;\n\n        if (res === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(res)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function nextAsync() {\n    for (;;) {\n      try {\n        const { value\x2C done } = await iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n  return readable;\n}\n\nmodule.exports = from;\n
code-source-info,0xcb902b709b6,95,0,4341,C0O0C4O4341,,
code-creation,JS,10,93380,0xcb902b70b36,97, node:internal/streams/from:1:1,0xcb902b70930,~
code-source-info,0xcb902b70b36,95,0,4341,C0O0C32O25C38O49C44O72C50O124C53O124C58O113C64O206C67O206C72O232C77O154C83O178C89O4318C91O4333C96O4340,,
code-creation,JS,10,93515,0xcb902b71d9e,33,makeBitMapDescriptor node:internal/streams/readable:127:30,0xcb902b652a0,~
code-source-info,0xcb902b71d9e,91,3762,3955,C0O3762C9O3772C14O3808C22O3858C32O3953,,
tick,0x7ee81bee9f68,93984,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b61460,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5d97e,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5c208,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b50dde,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,94271,0xcb902b78616,5, node:internal/streams/writable:1:1,0xcb902b771f0,~
script-source,96,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototypeSymbolHasInstance\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nmodule.exports = Writable;\nWritable.WritableState = WritableState;\n\nconst EE = require('events');\nconst Stream = require('internal/streams/legacy').Stream;\nconst { Buffer } = require('buffer');\nconst destroyImpl = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_MULTIPLE_CALLBACK\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst { errorOrDestroy } = destroyImpl;\n\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Writable\x2C Stream);\n\nfunction nop() {}\n\nconst kOnFinishedValue = Symbol('kOnFinishedValue');\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kWriteCbValue = Symbol('kWriteCbValue');\nconst kAfterWriteTickInfoValue = Symbol('kAfterWriteTickInfoValue');\nconst kBufferedValue = Symbol('kBufferedValue');\n\nconst kSync = 1 << 9;\nconst kFinalCalled = 1 << 10;\nconst kNeedDrain = 1 << 11;\nconst kEnding = 1 << 12;\nconst kFinished = 1 << 13;\nconst kDecodeStrings = 1 << 14;\nconst kWriting = 1 << 15;\nconst kBufferProcessing = 1 << 16;\nconst kPrefinished = 1 << 17;\nconst kAllBuffers = 1 << 18;\nconst kAllNoop = 1 << 19;\nconst kOnFinished = 1 << 20;\nconst kHasWritable = 1 << 21;\nconst kWritable = 1 << 22;\nconst kCorked = 1 << 23;\nconst kDefaultUTF8Encoding = 1 << 24;\nconst kWriteCb = 1 << 25;\nconst kExpectWriteCb = 1 << 26;\nconst kAfterWriteTickInfo = 1 << 27;\nconst kAfterWritePending = 1 << 28;\nconst kBuffered = 1 << 29;\nconst kEnded = 1 << 30;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(WritableState.prototype\x2C {\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n\n  // if _final has been called.\n  finalCalled: makeBitMapDescriptor(kFinalCalled)\x2C\n\n  // drain event flag.\n  needDrain: makeBitMapDescriptor(kNeedDrain)\x2C\n\n  // At the start of calling end()\n  ending: makeBitMapDescriptor(kEnding)\x2C\n\n  // When end() has been called\x2C and returned.\n  ended: makeBitMapDescriptor(kEnded)\x2C\n\n  // When 'finish' is emitted.\n  finished: makeBitMapDescriptor(kFinished)\x2C\n\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  decodeStrings: makeBitMapDescriptor(kDecodeStrings)\x2C\n\n  // A flag to see when we're in the middle of a write.\n  writing: makeBitMapDescriptor(kWriting)\x2C\n\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\n  // or on a later tick.  We set this to true at first\x2C because any\n  // actions that shouldn't happen until "later" should generally also\n  // not happen before the first write call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n\n  // A flag to know if we're processing previously buffered items\x2C which\n  // may call the _write() callback in the same tick\x2C so that we don't\n  // end up in an overlapped onwrite situation.\n  bufferProcessing: makeBitMapDescriptor(kBufferProcessing)\x2C\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  prefinished: makeBitMapDescriptor(kPrefinished)\x2C\n\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n\n  // Should close be emitted on destroy. Defaults to true.\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n\n  allBuffers: makeBitMapDescriptor(kAllBuffers)\x2C\n  allNoop: makeBitMapDescriptor(kAllNoop)\x2C\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  // This is/should be a cold path.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null; }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kHasWritable) !== 0 ? (this[kState] & kWritable) !== 0 : undefined; }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasWritable | kWritable);\n      } else if (value) {\n        this[kState] |= (kHasWritable | kWritable);\n      } else {\n        this[kState] |= kHasWritable;\n        this[kState] &= ~kWritable;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\n  writecb: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kWriteCb) !== 0 ? this[kWriteCbValue] : nop; }\x2C\n    set(value) {\n      this[kWriteCbValue] = value;\n      if (value) {\n        this[kState] |= kWriteCb;\n      } else {\n        this[kState] &= ~kWriteCb;\n      }\n    }\x2C\n  }\x2C\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  afterWriteTickInfo: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kAfterWriteTickInfo) !== 0 ? this[kAfterWriteTickInfoValue] : null; }\x2C\n    set(value) {\n      this[kAfterWriteTickInfoValue] = value;\n      if (value) {\n        this[kState] |= kAfterWriteTickInfo;\n      } else {\n        this[kState] &= ~kAfterWriteTickInfo;\n      }\n    }\x2C\n  }\x2C\n\n  buffered: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kBuffered) !== 0 ? this[kBufferedValue] : []; }\x2C\n    set(value) {\n      this[kBufferedValue] = value;\n      if (value) {\n        this[kState] |= kBuffered;\n      } else {\n        this[kState] &= ~kBuffered;\n      }\n    }\x2C\n  }\x2C\n\n});\n\nfunction WritableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store WritableState more effciently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kSync | kConstructed | kEmitClose | kAutoDestroy;\n\n  if (options && options.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options && options.writableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value\x2C means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  if (!options || options.decodeStrings !== false) this[kState] |= kDecodeStrings;\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options ? options.defaultEncoding : null;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this[kState] &= ~kDefaultUTF8Encoding;\n    this[kDefaultEncodingValue] = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Not an actual buffer we keep track of\x2C but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0;\n\n  // The callback that's passed to _write(chunk\x2C cb).\n  this.onwrite = onwrite.bind(undefined\x2C stream);\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0;\n\n  resetBuffer(this);\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0;\n}\n\nfunction resetBuffer(state) {\n  state[kBufferedValue] = null;\n  state.bufferedIndex = 0;\n  state[kState] |= kAllBuffers | kAllNoop;\n  state[kState] &= ~kBuffered;\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return (this[kState] & kBuffered) === 0 ? [] : ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n};\n\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\n  __proto__: null\x2C\n  get() {\n    return (this[kState] & kBuffered) === 0 ? 0 : this[kBufferedValue].length - this.bufferedIndex;\n  }\x2C\n});\n\nWritableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kWriting) === 0) {\n    clearBuffer(stream\x2C this);\n  }\n\n  if ((this[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C this);\n  }\n};\n\nfunction Writable(options) {\n  if (!(this instanceof Writable))\n    return new Writable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    // Skip uncommon events...\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._writableState = new WritableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value: function(object) {\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\n    if (this !== Writable) return false;\n\n    return object && object._writableState instanceof WritableState;\n  }\x2C\n});\n\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\nWritable.prototype.pipe = function() {\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\n  const state = stream._writableState;\n\n  if (cb == null || typeof cb !== 'function') {\n    cb = nop;\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  }\n\n  if ((state[kState] & kObjectMode) === 0) {\n    if (!encoding) {\n      encoding = (state[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : state.defaultEncoding;\n    } else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) {\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (typeof chunk === 'string') {\n      if ((state[kState] & kDecodeStrings) !== 0) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        encoding = 'buffer';\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer';\n    } else if (Stream._isArrayBufferView(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = 'buffer';\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk);\n    }\n  }\n\n  let err;\n  if ((state[kState] & kEnding) !== 0) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    process.nextTick(cb\x2C err);\n    errorOrDestroy(stream\x2C err\x2C true);\n    return err;\n  }\n\n  state.pendingcb++;\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n}\n\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\n  if (encoding != null && typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n};\n\nWritable.prototype.cork = function() {\n  const state = this._writableState;\n\n  state[kState] |= kCorked;\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  const state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.corked) {\n      state[kState] &= ~kCorked;\n    }\n\n    if ((state[kState] & kWriting) === 0)\n      clearBuffer(this\x2C state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = StringPrototypeToLowerCase(encoding);\n  if (!Buffer.isEncoding(encoding))\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\n// If we're already writing something\x2C then just put this\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\n// If we return false\x2C then we need a drain event\x2C so set that flag.\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n  const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n\n  state.length += len;\n\n  if ((state[kState] & (kWriting | kErrored | kCorked | kConstructed)) !== kConstructed) {\n    if ((state[kState] & kBuffered) === 0) {\n      state[kState] |= kBuffered;\n      state[kBufferedValue] = [];\n    }\n\n    state[kBufferedValue].push({ chunk\x2C encoding\x2C callback });\n    if ((state[kState] & kAllBuffers) !== 0 && encoding !== 'buffer') {\n      state[kState] &= ~kAllBuffers;\n    }\n    if ((state[kState] & kAllNoop) !== 0 && callback !== nop) {\n      state[kState] &= ~kAllNoop;\n    }\n  } else {\n    state.writelen = len;\n    if (callback !== nop) {\n      state.writecb = callback;\n    }\n    state[kState] |= kWriting | kSync | kExpectWriteCb;\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n    state[kState] &= ~kSync;\n  }\n\n  const ret = state.length < state.highWaterMark || state.length === 0;\n\n  if (!ret) {\n    state[kState] |= kNeedDrain;\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && (state[kState] & (kDestroyed | kErrored)) === 0;\n}\n\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n  state.writelen = len;\n  if (cb !== nop) {\n    state.writecb = cb;\n  }\n  state[kState] |= kWriting | kSync | kExpectWriteCb;\n  if ((state[kState] & kDestroyed) !== 0)\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\n  else if (writev)\n    stream._writev(chunk\x2C state.onwrite);\n  else\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n  state[kState] &= ~kSync;\n}\n\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\n  --state.pendingcb;\n\n  cb(er);\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write\x2C not to the buffered\n  // writes.\n  errorBuffer(state);\n  // This can emit error\x2C but error must always follow cb.\n  errorOrDestroy(stream\x2C er);\n}\n\nfunction onwrite(stream\x2C er) {\n  const state = stream._writableState;\n\n  if ((state[kState] & kExpectWriteCb) === 0) {\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n\n  const sync = (state[kState] & kSync) !== 0;\n  const cb = (state[kState] & kWriteCb) !== 0 ? state[kWriteCbValue] : nop;\n\n  state.writecb = null;\n  state[kState] &= ~(kWriting | kExpectWriteCb);\n  state.length -= state.writelen;\n  state.writelen = 0;\n\n  if (er) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack; // eslint-disable-line no-unused-expressions\n\n    if ((state[kState] & kErrored) === 0) {\n      state[kErroredValue] = er;\n      state[kState] |= kErrored;\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er;\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n    } else {\n      onwriteError(stream\x2C state\x2C er\x2C cb);\n    }\n  } else {\n    if ((state[kState] & kBuffered) !== 0) {\n      clearBuffer(stream\x2C state);\n    }\n\n    if (sync) {\n      const needDrain = (state[kState] & kNeedDrain) !== 0 && state.length === 0;\n      const needTick = needDrain || (state[kState] & kDestroyed !== 0) || cb !== nop;\n\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\n      // rather just increase a counter\x2C to improve performance and avoid\n      // memory allocations.\n      if (cb === nop) {\n        if ((state[kState] & kAfterWritePending) === 0 && needTick) {\n          process.nextTick(afterWrite\x2C stream\x2C state\x2C 1\x2C cb);\n          state[kState] |= kAfterWritePending;\n        } else {\n          state.pendingcb--;\n          if ((state[kState] & kEnding) !== 0) {\n            finishMaybe(stream\x2C state\x2C true);\n          }\n        }\n      } else if ((state[kState] & kAfterWriteTickInfo) !== 0 &&\n                 state[kAfterWriteTickInfoValue].cb === cb) {\n        state[kAfterWriteTickInfoValue].count++;\n      } else if (needTick) {\n        state[kAfterWriteTickInfoValue] = { count: 1\x2C cb\x2C stream\x2C state };\n        process.nextTick(afterWriteTick\x2C state[kAfterWriteTickInfoValue]);\n        state[kState] |= (kAfterWritePending | kAfterWriteTickInfo);\n      } else {\n        state.pendingcb--;\n        if ((state[kState] & kEnding) !== 0) {\n          finishMaybe(stream\x2C state\x2C true);\n        }\n      }\n    } else {\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\n    }\n  }\n}\n\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n  state[kState] &= ~kAfterWriteTickInfo;\n  state[kAfterWriteTickInfoValue] = null;\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\n}\n\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\n  state[kState] &= ~kAfterWritePending;\n\n  const needDrain = (state[kState] & (kEnding | kNeedDrain | kDestroyed)) === kNeedDrain && state.length === 0;\n  if (needDrain) {\n    state[kState] &= ~kNeedDrain;\n    stream.emit('drain');\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--;\n    cb(null);\n  }\n\n  if ((state[kState] & kDestroyed) !== 0) {\n    errorBuffer(state);\n  }\n\n  if ((state[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C state\x2C true);\n  }\n}\n\n// If there's something in the buffer waiting\x2C then invoke callbacks.\nfunction errorBuffer(state) {\n  if ((state[kState] & kWriting) !== 0) {\n    return;\n  }\n\n  if ((state[kState] & kBuffered) !== 0) {\n    for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n      const { chunk\x2C callback } = state[kBufferedValue][n];\n      const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n      state.length -= len;\n      callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\n    }\n  }\n\n\n  callFinishedCallbacks(state\x2C state.errored ?? new ERR_STREAM_DESTROYED('end'));\n\n  resetBuffer(state);\n}\n\n// If there's something in the buffer waiting\x2C then process it.\nfunction clearBuffer(stream\x2C state) {\n  if ((state[kState] & (kDestroyed | kBufferProcessing | kCorked | kBuffered | kConstructed)) !==\n      (kBuffered | kConstructed)) {\n    return;\n  }\n\n  const objectMode = (state[kState] & kObjectMode) !== 0;\n  const { [kBufferedValue]: buffered\x2C bufferedIndex } = state;\n  const bufferedLength = buffered.length - bufferedIndex;\n\n  if (!bufferedLength) {\n    return;\n  }\n\n  let i = bufferedIndex;\n\n  state[kState] |= kBufferProcessing;\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1;\n\n    const callback = (state[kState] & kAllNoop) !== 0 ? nop : (err) => {\n      for (let n = i; n < buffered.length; ++n) {\n        buffered[n].callback(err);\n      }\n    };\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\n    // since `doWrite` will mutate the array.\n    const chunks = (state[kState] & kAllNoop) !== 0 && i === 0 ?\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\n    chunks.allBuffers = (state[kState] & kAllBuffers) !== 0;\n\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\n\n    resetBuffer(state);\n  } else {\n    do {\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\n      buffered[i++] = null;\n      const len = objectMode ? 1 : chunk.length;\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n    } while (i < buffered.length && (state[kState] & kWriting) === 0);\n\n    if (i === buffered.length) {\n      resetBuffer(state);\n    } else if (i > 256) {\n      buffered.splice(0\x2C i);\n      state.bufferedIndex = 0;\n    } else {\n      state.bufferedIndex = i;\n    }\n  }\n  state[kState] &= ~kBufferProcessing;\n}\n\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\n  if (this._writev) {\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\n  }\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\n  const state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  let err;\n\n  if (chunk != null) {\n    const ret = _write(this\x2C chunk\x2C encoding);\n    if (ret instanceof Error) {\n      err = ret;\n    }\n  }\n\n  // .end() fully uncorks.\n  if ((state[kState] & kCorked) !== 0) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if ((state[kState] & (kEnding | kErrored)) === 0) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However\x2C usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state[kState] |= kEnding;\n    finishMaybe(this\x2C state\x2C true);\n    state[kState] |= kEnded;\n  } else if ((state[kState] & kFinished) !== 0) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('end');\n  }\n\n  if (typeof cb === 'function') {\n    if (err) {\n      process.nextTick(cb\x2C err);\n    } else if ((state[kState] & kErrored) !== 0) {\n      process.nextTick(cb\x2C state[kErroredValue]);\n    } else if ((state[kState] & kFinished) !== 0) {\n      process.nextTick(cb\x2C null);\n    } else {\n      state[kState] |= kOnFinished;\n      state[kOnFinishedValue] ??= [];\n      state[kOnFinishedValue].push(cb);\n    }\n  }\n\n  return this;\n};\n\nfunction needFinish(state) {\n  return (\n    // State is ended && constructed but not destroyed\x2C finished\x2C writing\x2C errorEmitted or closedEmitted\n    (state[kState] & (\n      kEnding |\n          kDestroyed |\n          kConstructed |\n          kFinished |\n          kWriting |\n          kErrorEmitted |\n          kCloseEmitted |\n          kErrored |\n          kBuffered\n    )) === (kEnding | kConstructed) && state.length === 0);\n}\n\nfunction onFinish(stream\x2C state\x2C err) {\n  if ((state[kState] & kPrefinished) !== 0) {\n    errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n  state.pendingcb--;\n  if (err) {\n    callFinishedCallbacks(state\x2C err);\n    errorOrDestroy(stream\x2C err\x2C (state[kState] & kSync) !== 0);\n  } else if (needFinish(state)) {\n    state[kState] |= kPrefinished;\n    stream.emit('prefinish');\n    // Backwards compat. Don't check state.sync here.\n    // Some streams assume 'finish' will be emitted\n    // asynchronously relative to _final callback.\n    state.pendingcb++;\n    process.nextTick(finish\x2C stream\x2C state);\n  }\n}\n\nfunction prefinish(stream\x2C state) {\n  if ((state[kState] & (kPrefinished | kFinalCalled)) !== 0) {\n    return;\n  }\n\n  if (typeof stream._final === 'function' && (state[kState] & kDestroyed) === 0) {\n    state[kState] |= kFinalCalled | kSync;\n    state.pendingcb++;\n\n    try {\n      stream._final((err) => onFinish(stream\x2C state\x2C err));\n    } catch (err) {\n      onFinish(stream\x2C state\x2C err);\n    }\n\n    state[kState] &= ~kSync;\n  } else {\n    state[kState] |= kFinalCalled | kPrefinished;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream\x2C state\x2C sync) {\n  if (needFinish(state)) {\n    prefinish(stream\x2C state);\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++;\n        process.nextTick((stream\x2C state) => {\n          if (needFinish(state)) {\n            finish(stream\x2C state);\n          } else {\n            state.pendingcb--;\n          }\n        }\x2C stream\x2C state);\n      } else if (needFinish(state)) {\n        state.pendingcb++;\n        finish(stream\x2C state);\n      }\n    }\n  }\n}\n\nfunction finish(stream\x2C state) {\n  state.pendingcb--;\n  state[kState] |= kFinished;\n\n  callFinishedCallbacks(state\x2C null);\n\n  stream.emit('finish');\n\n  if ((state[kState] & kAutoDestroy) !== 0) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState;\n    const autoDestroy = !rState || (\n      rState.autoDestroy &&\n      // We don't expect the readable to ever 'end'\n      // if readable is explicitly set to false.\n      (rState.endEmitted || rState.readable === false)\n    );\n    if (autoDestroy) {\n      stream.destroy();\n    }\n  }\n}\n\nfunction callFinishedCallbacks(state\x2C err) {\n  if ((state[kState] & kOnFinished) === 0) {\n    return;\n  }\n\n  const onfinishCallbacks = state[kOnFinishedValue];\n  state[kOnFinishedValue] = null;\n  state[kState] &= ~kOnFinished;\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i](err);\n  }\n}\n\nObjectDefineProperties(Writable.prototype\x2C {\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kClosed) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kDestroyed) !== 0 : false;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\n      if (!this._writableState) return;\n\n      if (value) this._writableState[kState] |= kDestroyed;\n      else this._writableState[kState] &= ~kDestroyed;\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    get() {\n      const w = this._writableState;\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false &&\n        (w[kState] & (kEnding | kEnded | kDestroyed | kErrored)) === 0;\n    }\x2C\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  writableFinished: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kFinished) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableObjectMode: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kObjectMode) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableBuffer: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state && state.getBuffer();\n    }\x2C\n  }\x2C\n\n  writableEnded: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kEnding) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableNeedDrain: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & (kDestroyed | kEnding | kNeedDrain)) === kNeedDrain : false;\n    }\x2C\n  }\x2C\n\n  writableHighWaterMark: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state && state.highWaterMark;\n    }\x2C\n  }\x2C\n\n  writableCorked: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.corked : 0;\n    }\x2C\n  }\x2C\n\n  writableLength: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state && state.length;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.errored : null;\n    }\x2C\n  }\x2C\n\n  writableAborted: {\n    __proto__: null\x2C\n    get: function() {\n      const state = this._writableState;\n      return (\n        (state[kState] & (kHasWritable | kWritable)) !== kHasWritable &&\n        (state[kState] & (kDestroyed | kErrored)) !== 0 &&\n        (state[kState] & kFinished) === 0\n      );\n    }\x2C\n  }\x2C\n});\n\nconst destroy = destroyImpl.destroy;\nWritable.prototype.destroy = function(err\x2C cb) {\n  const state = this._writableState;\n\n  // Invoke pending callbacks.\n  if ((state[kState] & (kBuffered | kOnFinished)) !== 0 && (state[kState] & kDestroyed) === 0) {\n    process.nextTick(errorBuffer\x2C state);\n  }\n\n  destroy.call(this\x2C err\x2C cb);\n  return this;\n};\n\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nWritable.fromWeb = function(writableStream\x2C options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(\n    writableStream\x2C\n    options);\n};\n\nWritable.toWeb = function(streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\n};\n\nWritable.prototype[SymbolAsyncDispose] = function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.writableFinished ? null : new AbortError();\n    this.destroy(error);\n  }\n  return new Promise((resolve\x2C reject) =>\n    eos(this\x2C (err) => (err && err.name !== 'AbortError' ? reject(err) : resolve(null)))\x2C\n  );\n};\n
code-source-info,0xcb902b78616,96,0,33589,C0O0C4O33589,,
code-creation,JS,10,94822,0xcb902b7ab8e,2187, node:internal/streams/writable:1:1,0xcb902b78590,~
code-source-info,0xcb902b7ab8e
tick,0x7ee81c1dda84,95064,0,0x0,3,0x7ee81c5678d0,0xcb902b7af3c,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b61460,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5d97e,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b5c208,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b50dde,0x7ee79be4b54f,0x7ee79be4ba05,0xcb902b4ed3b,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
new,MemoryChunk,0x3f3f8b680000,262144
code-creation,JS,10,95142,0xcb902b7f01e,33,makeBitMapDescriptor node:internal/streams/writable:126:30,0xcb902b78698,~
code-source-info,0xcb902b7f01e,96,3843,4036,C0O3843C9O3853C14O3889C22O3939C32O4034,,
code-creation,Eval,10,95397,0x3f3f8b68555e,5, node:stream/promises:1:1,0x3f3f8b6853b8,~
script-source,97,node:stream/promises,'use strict';\n\nconst {\n  ArrayPrototypePop\x2C\n  Promise\x2C\n} = primordials;\n\nconst {\n  isIterable\x2C\n  isNodeStream\x2C\n  isWebStream\x2C\n} = require('internal/streams/utils');\n\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\nconst { finished } = require('internal/streams/end-of-stream');\n\nrequire('stream');\n\nfunction pipeline(...streams) {\n  return new Promise((resolve\x2C reject) => {\n    let signal;\n    let end;\n    const lastArg = streams[streams.length - 1];\n    if (lastArg && typeof lastArg === 'object' &&\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\n      const options = ArrayPrototypePop(streams);\n      signal = options.signal;\n      end = options.end;\n    }\n\n    pl(streams\x2C (err\x2C value) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(value);\n      }\n    }\x2C { signal\x2C end });\n  });\n}\n\nmodule.exports = {\n  finished\x2C\n  pipeline\x2C\n};\n
code-source-info,0x3f3f8b68555e,97,0,917,C0O0C4O917,,
code-creation,JS,10,95422,0x3f3f8b6856de,125, node:stream/promises:1:1,0x3f3f8b6854d8,~
code-source-info,0x3f3f8b6856de,97,0,917,C0O0C28O25C34O46C40O130C43O130C48O83C54O97C60O113C66O195C69O195C74O188C80O254C83O254C88O241C93O298C96O298C100O871C107O892C113O904C119O886C124O916,,
code-creation,Eval,10,95651,0x3f3f8b68613e,5, node:internal/streams/transform:1:1,0x3f3f8b685f78,~
script-source,98,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a "filter"\x2C\n// but that's not a great name for it\x2C since that implies a thing where\n// some bits pass through\x2C and others are simply ignored.  (That would\n// be a valid example of a transform\x2C of course.)\n//\n// While the output is causally related to the input\x2C it's not a\n// necessarily symmetric or synchronous transformation.  For example\x2C\n// a zlib stream might take multiple plain-text writes()\x2C and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\n// internally\x2C and returns false if there's a lot of pending writes\n// buffered up.  When you call read()\x2C that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream\x2C the written data is placed in a buffer.  When\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks\x2C then the first\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\n//\n// This way\x2C back-pressure is actually determined by the reading side\x2C\n// since _read has to be called to start processing a new chunk.  However\x2C\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example\x2C imagine a stream where every byte of input is\n// interpreted as an integer from 0-255\x2C and then results in that many\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\n// 1kb of data being output.  In this case\x2C you could write a very small\n// amount of input\x2C and end up with a very large amount of output.  In\n// such a pathological inflating mechanism\x2C there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However\x2C even in such a pathological case\x2C only a single written chunk\n// would be consumed\x2C and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nmodule.exports = Transform;\nconst {\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst Duplex = require('internal/streams/duplex');\nconst { getHighWaterMark } = require('internal/streams/state');\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\nObjectSetPrototypeOf(Transform\x2C Duplex);\n\nconst kCallback = Symbol('kCallback');\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options\x2C\n      highWaterMark: null\x2C\n      readableHighWaterMark\x2C\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\n    };\n  }\n\n  Duplex.call(this\x2C options);\n\n  // We have implemented the _read method\x2C and done the other things\n  // that Readable wants before the first _read call\x2C so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this[kCallback] = null;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  // When the writable side finishes\x2C then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish'\x2C prefinish);\n}\n\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er\x2C data) => {\n      if (er) {\n        if (cb) {\n          cb(er);\n        } else {\n          this.destroy(er);\n        }\n        return;\n      }\n\n      if (data != null) {\n        this.push(data);\n      }\n      this.push(null);\n      if (cb) {\n        cb();\n      }\n    });\n  } else {\n    this.push(null);\n    if (cb) {\n      cb();\n    }\n  }\n}\n\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this);\n  }\n}\n\nTransform.prototype._final = final;\n\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\n};\n\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\n  const rState = this._readableState;\n  const wState = this._writableState;\n  const length = rState.length;\n\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (val != null) {\n      this.push(val);\n    }\n\n    if (rState.ended) {\n      // If user has called this.push(null) we have to\n      // delay the callback to properly progate the new\n      // state.\n      process.nextTick(callback);\n    } else if (\n      wState.ended || // Backwards compat.\n      length === rState.length || // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback();\n    } else {\n      this[kCallback] = callback;\n    }\n  });\n};\n\nTransform.prototype._read = function() {\n  if (this[kCallback]) {\n    const callback = this[kCallback];\n    this[kCallback] = null;\n    callback();\n  }\n};\n
code-source-info,0x3f3f8b68613e,98,0,7121,C0O0C4O7121,,
code-creation,JS,10,95777,0x3f3f8b6864f6,202, node:internal/streams/transform:1:1,0x3f3f8b6860b8,~
code-source-info,0x3f3f8b6864f6,98,0,7121,C0O0C39O3508C44O3532C49O3558C51O3573C55O3628C58O3628C63O3654C68O3596C74O3677C77O3677C81O3677C83O3742C86O3742C91O3721C97O3777C100O3808C108O3826C113O3777C118O3838C124O3838C129O3898C132O3898C136O3898C138O6031C141O6041C148O6058C152O6068C155O6078C164O6099C168O6199C171O6209C180O6226C184O6966C187O6976C196O6992C201O7120,,
code-creation,Eval,10,95886,0x3f3f8b68724e,5, node:internal/streams/passthrough:1:1,0x3f3f8b6870e8,~
script-source,99,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = PassThrough;\n\nconst Transform = require('internal/streams/transform');\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(PassThrough\x2C Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this\x2C options);\n}\n\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  cb(null\x2C chunk);\n};\n
code-source-info,0x3f3f8b68724e,99,0,1762,C0O0C4O1762,,
code-creation,JS,10,95927,0x3f3f8b6873e6,84, node:internal/streams/passthrough:1:1,0x3f3f8b6871c8,~
code-source-info,0x3f3f8b6873e6,99,0,1762,C0O0C14O1288C19O1328C21O1343C25O1377C28O1377C32O1377C34O1416C37O1449C45O1470C50O1416C55O1482C61O1482C66O1673C69O1685C78O1706C83O1761,,
code-creation,Eval,10,96050,0x3f3f8b687c5e,5, node:internal/streams/duplexpair:1:1,0x3f3f8b687a30,~
script-source,100,node:internal/streams/duplexpair,'use strict';\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { Duplex } = require('stream');\nconst assert = require('internal/assert');\n\nconst kCallback = Symbol('Callback');\nconst kInitOtherSide = Symbol('InitOtherSide');\n\nclass DuplexSide extends Duplex {\n  #otherSide = null;\n\n  constructor(options) {\n    super(options);\n    this[kCallback] = null;\n    this.#otherSide = null;\n  }\n\n  [kInitOtherSide](otherSide) {\n    // Ensure this can only be set once\x2C to enforce encapsulation.\n    if (this.#otherSide === null) {\n      this.#otherSide = otherSide;\n    } else {\n      assert(this.#otherSide === null);\n    }\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    assert(this.#otherSide !== null);\n    assert(this.#otherSide[kCallback] === null);\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this.#otherSide.push(chunk);\n      this.#otherSide[kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this.#otherSide.on('end'\x2C callback);\n    this.#otherSide.push(null);\n  }\n}\n\nfunction duplexPair(options) {\n  const side0 = new DuplexSide(options);\n  const side1 = new DuplexSide(options);\n  side0[kInitOtherSide](side1);\n  side1[kInitOtherSide](side0);\n  return [ side0\x2C side1 ];\n}\nmodule.exports = duplexPair;\n
code-source-info,0x3f3f8b687c5e,100,0,1373,C0O0C4O1373,,
code-creation,JS,10,96081,0x3f3f8b688236,155, node:internal/streams/duplexpair:1:1,0x3f3f8b687bd8,~
code-source-info,0x3f3f8b688236,100,0,1373,C0O0C26O24C31O69C34O69C39O58C44O103C47O103C51O103C53O150C56O150C60O150C62O193C65O193C69O193C88O244C96O384C145O219C147O1344C149O1359C154O1372,,
code-creation,JS,10,96087,0x3f3f8b688376,11,<instance_members_initializer> node:internal/streams/duplexpair:12:1,0x3f3f8b687e70,~
code-source-info,0x3f3f8b688376,100,219,1136,C3O268C10O1136,,
tick,0x7ee81c5c82d0,96155,1,0x7ee81a613550,6,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0xcb902b4f07c,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ffcff5,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,96553,0x3f3f8b68d12e,5, node:internal/stream_base_commons:1:1,0x3f3f8b68cde8,~
script-source,101,node:internal/stream_base_commons,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { FastBuffer } = require('internal/buffer');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kBytesWritten\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\nconst {\n  ErrnoException\x2C\n} = require('internal/errors');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kTimeout\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\x2C\n} = require('internal/timers');\nconst { isUint8Array } = require('internal/util/types');\nconst { clearTimeout } = require('timers');\nconst { validateFunction } = require('internal/validators');\n\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\nconst kUpdateTimer = Symbol('kUpdateTimer');\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\nconst kHandle = Symbol('kHandle');\nconst kBoundSession = Symbol('kBoundSession');\nconst kSession = Symbol('kSession');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst kBuffer = Symbol('kBuffer');\nconst kBufferGen = Symbol('kBufferGen');\nconst kBufferCb = Symbol('kBufferCb');\n\nfunction handleWriteReq(req\x2C data\x2C encoding) {\n  const { handle } = req;\n\n  switch (encoding) {\n    case 'buffer':\n    {\n      const ret = handle.writeBuffer(req\x2C data);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = data;\n      return ret;\n    }\n    case 'latin1':\n    case 'binary':\n      return handle.writeLatin1String(req\x2C data);\n    case 'utf8':\n    case 'utf-8':\n      return handle.writeUtf8String(req\x2C data);\n    case 'ascii':\n      return handle.writeAsciiString(req\x2C data);\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return handle.writeUcs2String(req\x2C data);\n    default:\n    {\n      const buffer = Buffer.from(data\x2C encoding);\n      const ret = handle.writeBuffer(req\x2C buffer);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = buffer;\n      return ret;\n    }\n  }\n}\n\nfunction onWriteComplete(status) {\n  debug('onWriteComplete'\x2C status\x2C this.error);\n\n  const stream = this.handle[owner_symbol];\n\n  if (stream.destroyed) {\n    if (typeof this.callback === 'function')\n      this.callback(null);\n    return;\n  }\n\n  // TODO (ronag): This should be moved before if(stream.destroyed)\n  // in order to avoid swallowing error.\n  if (status < 0) {\n    const ex = new ErrnoException(status\x2C 'write'\x2C this.error);\n    if (typeof this.callback === 'function')\n      this.callback(ex);\n    else\n      stream.destroy(ex);\n    return;\n  }\n\n  stream[kUpdateTimer]();\n  stream[kAfterAsyncWrite](this);\n\n  if (typeof this.callback === 'function')\n    this.callback(null);\n}\n\nfunction createWriteWrap(handle\x2C callback) {\n  const req = new WriteWrap();\n\n  req.handle = handle;\n  req.oncomplete = onWriteComplete;\n  req.async = false;\n  req.bytes = 0;\n  req.buffer = null;\n  req.callback = callback;\n\n  return req;\n}\n\nfunction writevGeneric(self\x2C data\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const allBuffers = data.allBuffers;\n  let chunks;\n  if (allBuffers) {\n    chunks = data;\n    for (let i = 0; i < data.length; i++)\n      data[i] = data[i].chunk;\n  } else {\n    chunks = new Array(data.length << 1);\n    for (let i = 0; i < data.length; i++) {\n      const entry = data[i];\n      chunks[i * 2] = entry.chunk;\n      chunks[i * 2 + 1] = entry.encoding;\n    }\n  }\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\n\n  // Retain chunks\n  if (err === 0) req._chunks = chunks;\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const err = handleWriteReq(req\x2C data\x2C encoding);\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\n  req.bytes = streamBaseState[kBytesWritten];\n  req.async = !!streamBaseState[kLastWriteWasAsync];\n\n  if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'write'\x2C req.error));\n\n  if (!req.async && typeof req.callback === 'function') {\n    req.callback();\n  }\n}\n\nfunction onStreamRead(arrayBuffer) {\n  const nread = streamBaseState[kReadBytesOrError];\n\n  const handle = this;\n  const stream = this[owner_symbol];\n\n  stream[kUpdateTimer]();\n\n  if (nread > 0 && !stream.destroyed) {\n    let ret;\n    let result;\n    const userBuf = stream[kBuffer];\n    if (userBuf) {\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\n      const bufGen = stream[kBufferGen];\n      if (bufGen !== null) {\n        const nextBuf = bufGen();\n        if (isUint8Array(nextBuf))\n          stream[kBuffer] = ret = nextBuf;\n      }\n    } else {\n      const offset = streamBaseState[kArrayBufferOffset];\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\n      result = stream.push(buf);\n    }\n    if (!result) {\n      handle.reading = false;\n      if (!stream.destroyed) {\n        const err = handle.readStop();\n        if (err)\n          stream.destroy(new ErrnoException(err\x2C 'read'));\n      }\n    }\n\n    return ret;\n  }\n\n  if (nread === 0) {\n    return;\n  }\n\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\n  // and will not deliver any more read events after this point.\n  // (equivalently\x2C it should have called readStop on itself already).\n  // Some streams may be reset and explicitly started again with a call\n  // to readStart\x2C such as TTY.\n\n  if (nread !== UV_EOF) {\n    // CallJSOnreadMethod expects the return value to be a buffer.\n    // Ref: https://github.com/nodejs/node/pull/34375\n    stream.destroy(new ErrnoException(nread\x2C 'read'));\n    return;\n  }\n\n  // Defer this until we actually emit end\n  if (stream._readableState.endEmitted) {\n    if (stream[kMaybeDestroy])\n      stream[kMaybeDestroy]();\n  } else {\n    if (stream[kMaybeDestroy])\n      stream.on('end'\x2C stream[kMaybeDestroy]);\n\n    // Push a null to signal the end of data.\n    // Do it before `maybeDestroy` for correct order of events:\n    // `end` -> `close`\n    stream.push(null);\n    stream.read(0);\n  }\n}\n\nfunction setStreamTimeout(msecs\x2C callback) {\n  if (this.destroyed)\n    return this;\n\n  this.timeout = msecs;\n\n  // Type checking identical to timers.enroll()\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // Attempt to clear an existing timer in both cases -\n  //  even if it will be rescheduled we don't want to leak an existing timer.\n  clearTimeout(this[kTimeout]);\n\n  if (msecs === 0) {\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.removeListener('timeout'\x2C callback);\n    }\n  } else {\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\n    if (this[kSession]) this[kSession][kUpdateTimer]();\n    if (this[kBoundSession]) this[kBoundSession][kUpdateTimer]();\n\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.once('timeout'\x2C callback);\n    }\n  }\n  return this;\n}\n\nmodule.exports = {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n};\n
code-source-info,0x3f3f8b68d12e,101,0,7170,C0O0C4O7170,,
code-creation,JS,10,96696,0x3f3f8b68d71e,526, node:internal/stream_base_commons:1:1,0x3f3f8b68d0a8,~
code-source-info,0x3f3f8b68d71e,101,0,7170,C0O0C133O25C139O34C144O79C147O79C152O68C158O121C161O121C166O106C172O275C175O275C180O159C186O172C192O193C198O215C204O232C210O254C216O326C219O326C224O315C230O379C233O379C238O359C244O432C247O432C252O463C257O415C263O536C266O536C271O483C277O495C283O514C289O589C292O589C297O572C303O646C306O646C311O629C317O694C320O694C325O673C331O749C334O749C338O749C340O795C343O795C347O795C349O844C352O844C356O844C358O888C361O888C365O888C367O929C370O929C374O929C376O971C379O971C383O971C385O1004C388O1004C393O1037C406O1038C412O1004C414O1101C417O1101C421O1101C423O1139C426O1139C430O1139C432O1179C435O1179C439O1179C441O6965C448O6986C454O7003C460O7019C466O7035C472O7055C478O7072C484O7088C490O7099C496O7111C502O7131C508O7142C514O7155C520O6980C525O7169,,
code-creation,Eval,10,97040,0x3f3f8b68f426,5, node:diagnostics_channel:1:1,0x3f3f8b68efe0,~
script-source,102,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeAt\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  SafeFinalizationRegistry\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  PromiseReject\x2C\n  ReflectApply\x2C\n  SafeMap\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = require('internal/util');\n\n// Can't delete when weakref count reaches 0 as it could increment again.\n// Only GC can be used as a valid time to clean up the channels map.\nclass WeakRefMap extends SafeMap {\n  #finalizers = new SafeFinalizationRegistry((key) => {\n    this.delete(key);\n  });\n\n  set(key\x2C value) {\n    this.#finalizers.register(value\x2C key);\n    return super.set(key\x2C new WeakReference(value));\n  }\n\n  get(key) {\n    return super.get(key)?.get();\n  }\n\n  incRef(key) {\n    return super.get(key)?.incRef();\n  }\n\n  decRef(key) {\n    return super.get(key)?.decRef();\n  }\n}\n\nfunction markActive(channel) {\n  // eslint-disable-next-line no-use-before-define\n  ObjectSetPrototypeOf(channel\x2C ActiveChannel.prototype);\n  channel._subscribers = [];\n  channel._stores = new SafeMap();\n}\n\nfunction maybeMarkInactive(channel) {\n  // When there are no more active subscribers or bound\x2C restore to fast prototype.\n  if (!channel._subscribers.length && !channel._stores.size) {\n    // eslint-disable-next-line no-use-before-define\n    ObjectSetPrototypeOf(channel\x2C Channel.prototype);\n    channel._subscribers = undefined;\n    channel._stores = undefined;\n  }\n}\n\nfunction defaultTransform(data) {\n  return data;\n}\n\nfunction wrapStoreRun(store\x2C data\x2C next\x2C transform = defaultTransform) {\n  return () => {\n    let context;\n    try {\n      context = transform(data);\n    } catch (err) {\n      process.nextTick(() => {\n        triggerUncaughtException(err\x2C false);\n      });\n      return next();\n    }\n\n    return store.run(context\x2C next);\n  };\n}\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n    channels.incRef(this.name);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index === -1) return false;\n\n    ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  bindStore(store\x2C transform) {\n    const replacing = this._stores.has(store);\n    if (!replacing) channels.incRef(this.name);\n    this._stores.set(store\x2C transform);\n  }\n\n  unbindStore(store) {\n    if (!this._stores.has(store)) {\n      return false;\n    }\n\n    this._stores.delete(store);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    for (let i = 0; i < (this._subscribers?.length || 0); i++) {\n      try {\n        const onMessage = this._subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    let run = () => {\n      this.publish(data);\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    };\n\n    for (const entry of this._stores.entries()) {\n      const store = entry[0];\n      const transform = entry[1];\n      run = wrapStoreRun(store\x2C data\x2C run\x2C transform);\n    }\n\n    return run();\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this._stores = undefined;\n    this.name = name;\n\n    channels.set(name\x2C this);\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    markActive(this);\n    this.subscribe(subscription);\n  }\n\n  unsubscribe() {\n    return false;\n  }\n\n  bindStore(store\x2C transform) {\n    markActive(this);\n    this.bindStore(store\x2C transform);\n  }\n\n  unbindStore() {\n    return false;\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    return ReflectApply(fn\x2C thisArg\x2C args);\n  }\n}\n\nconst channels = new WeakRefMap();\n\nfunction channel(name) {\n  const channel = channels.get(name);\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  return new Channel(name);\n}\n\nfunction subscribe(name\x2C subscription) {\n  return channel(name).subscribe(subscription);\n}\n\nfunction unsubscribe(name\x2C subscription) {\n  return channel(name).unsubscribe(subscription);\n}\n\nfunction hasSubscribers(name) {\n  const channel = channels.get(name);\n  if (!channel) return false;\n\n  return channel.hasSubscribers;\n}\n\nconst traceEvents = [\n  'start'\x2C\n  'end'\x2C\n  'asyncStart'\x2C\n  'asyncEnd'\x2C\n  'error'\x2C\n];\n\nfunction assertChannel(value\x2C name) {\n  if (!(value instanceof Channel)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['Channel']\x2C value);\n  }\n}\n\nfunction tracingChannelFrom(nameOrChannels\x2C name) {\n  if (typeof nameOrChannels === 'string') {\n    return channel(`tracing:${nameOrChannels}:${name}`);\n  }\n\n  if (typeof nameOrChannels === 'object' && nameOrChannels !== null) {\n    const channel = nameOrChannels[name];\n    assertChannel(channel\x2C `nameOrChannels.${name}`);\n    return channel;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('nameOrChannels'\x2C\n                                 ['string'\x2C 'object'\x2C 'TracingChannel']\x2C\n                                 nameOrChannels);\n}\n\nclass TracingChannel {\n  constructor(nameOrChannels) {\n    for (const eventName of traceEvents) {\n      ObjectDefineProperty(this\x2C eventName\x2C {\n        __proto__: null\x2C\n        value: tracingChannelFrom(nameOrChannels\x2C eventName)\x2C\n      });\n    }\n  }\n\n  get hasSubscribers() {\n    return this.start.hasSubscribers ||\n      this.end.hasSubscribers ||\n      this.asyncStart.hasSubscribers ||\n      this.asyncEnd.hasSubscribers ||\n      this.error.hasSubscribers;\n  }\n\n  subscribe(handlers) {\n    for (const name of traceEvents) {\n      if (!handlers[name]) continue;\n\n      this[name]?.subscribe(handlers[name]);\n    }\n  }\n\n  unsubscribe(handlers) {\n    let done = true;\n\n    for (const name of traceEvents) {\n      if (!handlers[name]) continue;\n\n      if (!this[name]?.unsubscribe(handlers[name])) {\n        done = false;\n      }\n    }\n\n    return done;\n  }\n\n  traceSync(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C error } = this;\n\n    return start.runStores(context\x2C () => {\n      try {\n        const result = ReflectApply(fn\x2C thisArg\x2C args);\n        context.result = result;\n        return result;\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  tracePromise(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function reject(err) {\n      context.error = err;\n      error.publish(context);\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return PromiseReject(err);\n    }\n\n    function resolve(result) {\n      context.result = result;\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return result;\n    }\n\n    return start.runStores(context\x2C () => {\n      try {\n        let promise = ReflectApply(fn\x2C thisArg\x2C args);\n        // Convert thenables to native promises\n        if (!(promise instanceof Promise)) {\n          promise = PromiseResolve(promise);\n        }\n        return PromisePrototypeThen(promise\x2C resolve\x2C reject);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  traceCallback(fn\x2C position = -1\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function wrappedCallback(err\x2C res) {\n      if (err) {\n        context.error = err;\n        error.publish(context);\n      } else {\n        context.result = res;\n      }\n\n      // Using runStores here enables manual context failure recovery\n      asyncStart.runStores(context\x2C () => {\n        try {\n          return ReflectApply(callback\x2C this\x2C arguments);\n        } finally {\n          asyncEnd.publish(context);\n        }\n      });\n    }\n\n    const callback = ArrayPrototypeAt(args\x2C position);\n    validateFunction(callback\x2C 'callback');\n    ArrayPrototypeSplice(args\x2C position\x2C 1\x2C wrappedCallback);\n\n    return start.runStores(context\x2C () => {\n      try {\n        return ReflectApply(fn\x2C thisArg\x2C args);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n}\n\nfunction tracingChannel(nameOrChannels) {\n  return new TracingChannel(nameOrChannels);\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  subscribe\x2C\n  tracingChannel\x2C\n  unsubscribe\x2C\n  Channel\x2C\n};\n
code-source-info,0x3f3f8b68f426,102,0,9771,C0O0C4O9771,,
code-creation,JS,10,97226,0x3f3f8b690ec6,637, node:diagnostics_channel:1:1,0x3f3f8b68f3a0,~
code-source-info,0x3f3f8b690ec6,102,0,9771,C0O0C140O25C146O45C152O70C158O92C164O116C170O144C176O168C182O192C188O216C194O227C200O251C206O269C212O286C218O302C224O313C229O404C232O404C237O367C242O373C248O464C251O464C256O442C262O534C265O534C270O505C276O588C279O588C284O570C312O783C369O758C424O2184C442O3912C518O3741C520O4540C522O4540C527O4540C529O5172C533O5172C586O5910C588O9663C595O9684C601O9695C607O9713C613O9726C619O9744C625O9759C631O9678C636O9770,,
code-creation,JS,10,97237,0x3f3f8b6912be,40,<instance_members_initializer> node:diagnostics_channel:36:1,0x3f3f8b68f958,~
code-source-info,0x3f3f8b6912be,102,758,1167,C0O758C14O809C28O809C39O1167,,
tick,0x7ee81c21ca82,97248,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517ffd2ec,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,97363,0x3f3f8b6929ce,52,WeakRefMap node:diagnostics_channel:36:1,0x3f3f8b68f7c8,~
code-source-info,0x3f3f8b6929ce,102,758,758,C0O758C5O758C29O758C51O758,,
code-creation,JS,10,97431,0x3f3f8b693c5e,70,channel node:diagnostics_channel:214:17,0x3f3f8b68f598,~
code-source-info,0x3f3f8b693c5e,102,4575,4825,C0O4602C5O4611C10O4611C16O4624C18O4637C20O4652C21O4656C33O4720C51O4726C56O4720C57O4798C64O4805C69O4823,,
code-creation,JS,10,97456,0x3f3f8b693d8e,34,get node:diagnostics_channel:46:6,0x3f3f8b68f868,~
code-source-info,0x3f3f8b693d8e,102,1004,1049,C0O1016C2O1029C13O1029C21O1037C26O1039C33O1045,,
code-creation,JS,10,97479,0x3f3f8b693ede,36,Channel node:diagnostics_channel:169:14,0x3f3f8b68fc38,~
code-source-info,0x3f3f8b693ede,102,3770,3900,C0O3783C1O3801C5O3818C6O3831C10O3848C12O3858C16O3871C23O3880C28O3880C35O3899,,
code-creation,JS,10,97518,0x3f3f8b69415e,51,set node:diagnostics_channel:41:6,0x3f3f8b68f818,~
code-source-info,0x3f3f8b69415e,102,883,997,C0O902C2O907C6O919C11O919C17O945C19O958C28O971C33O967C45O958C50O993,,
code-creation,JS,10,97558,0x3f3f8b6942c6,37,WeakReference node:internal/util:844:14,0x307edb92b670,~
code-source-info,0x3f3f8b6942c6,16,23286,23342,C0O23286C14O23301C21O23318C26O23314C31O23312C36O23341,,
code-creation,JS,10,97603,0x3f3f8b694606,13,tracingChannel node:diagnostics_channel:417:24,0x3f3f8b68f778,~
code-source-info,0x3f3f8b694606,102,9596,9661,C0O9617C7O9624C12O9659,,
code-creation,JS,10,97639,0x3f3f8b694776,152,TracingChannel node:diagnostics_channel:271:14,0x3f3f8b68ff30,~
code-source-info,0x3f3f8b694776,102,5946,6160,C0O5993C22O5980C50O5980C53O6014C58O6041C66O6094C81O6014C86O5969C151O6159,,
code-creation,JS,10,97683,0x3f3f8b6949e6,98,tracingChannelFrom node:diagnostics_channel:254:28,0x3f3f8b68f728,~
code-source-info,0x3f3f8b6949e6,102,5410,5908,C0O5437C6O5483C14O5509C27O5527C32O5490C36O5535C37O5543C47O5632C49O5646C53O5658C61O5699C66O5658C71O5712C73O5727C74O5735C92O5741C97O5735,,
code-creation,Eval,10,98078,0x3f3f8b695fee,5, node:internal/perf/observe:1:1,0x3f3f8b695980,~
script-source,103,node:internal/perf/observe,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  ObjectDefineProperties\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\n  }\x2C\n  installGarbageCollectionTracking\x2C\n  observerCounts\x2C\n  removeGarbageCollectionTracking\x2C\n  setupObservers\x2C\n} = internalBinding('performance');\n\nconst {\n  isPerformanceEntry\x2C\n  createPerformanceNodeEntry\x2C\n} = require('internal/perf/performance_entry');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n  validateInternalField\x2C\n} = require('internal/validators');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  deprecate\x2C\n  lazyDOMException\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  setImmediate\x2C\n} = require('timers');\n\nconst { inspect } = require('util');\n\nconst { now } = require('internal/perf/utils');\n\nconst kBuffer = Symbol('kBuffer');\nconst kDispatch = Symbol('kDispatch');\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\n\nconst kDeprecationMessage =\n  'Custom PerformanceEntry accessors are deprecated. ' +\n  'Please use the detail property.';\n\nconst kTypeSingle = 0;\nconst kTypeMultiple = 1;\n\nlet gcTrackingInstalled = false;\n\nconst kSupportedEntryTypes = ObjectFreeze([\n  'dns'\x2C\n  'function'\x2C\n  'gc'\x2C\n  'http'\x2C\n  'http2'\x2C\n  'mark'\x2C\n  'measure'\x2C\n  'net'\x2C\n  'resource'\x2C\n]);\n\n// Performance timeline entry Buffers\nlet markEntryBuffer = [];\nlet measureEntryBuffer = [];\nlet resourceTimingBuffer = [];\nlet resourceTimingSecondaryBuffer = [];\nconst kPerformanceEntryBufferWarnSize = 1e6;\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\n// Default buffer limit for resource timing entries.\nlet resourceTimingBufferSizeLimit = 250;\nlet dispatchBufferFull;\nlet resourceTimingBufferFullPending = false;\n\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\n  'mark': 'performance.clearMarks'\x2C\n  'measure': 'performance.clearMeasures'\x2C\n});\nconst kWarnedEntryTypes = new SafeMap();\n\nconst kObservers = new SafeSet();\nconst kPending = new SafeSet();\nlet isPending = false;\n\nfunction queuePending() {\n  if (isPending) return;\n  isPending = true;\n  setImmediate(() => {\n    isPending = false;\n    const pendings = ArrayFrom(kPending.values());\n    kPending.clear();\n    for (const pending of pendings)\n      pending[kDispatch]();\n  });\n}\n\nfunction getObserverType(type) {\n  switch (type) {\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\n  }\n}\n\nfunction maybeDecrementObserverCounts(entryTypes) {\n  for (const type of entryTypes) {\n    const observerType = getObserverType(type);\n\n    if (observerType !== undefined) {\n      observerCounts[observerType]--;\n\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\n          observerCounts[observerType] === 0) {\n        removeGarbageCollectionTracking();\n        gcTrackingInstalled = false;\n      }\n    }\n  }\n}\n\nfunction maybeIncrementObserverCount(type) {\n  const observerType = getObserverType(type);\n\n  if (observerType !== undefined) {\n    observerCounts[observerType]++;\n    if (!gcTrackingInstalled &&\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\n      installGarbageCollectionTracking();\n      gcTrackingInstalled = true;\n    }\n  }\n}\n\nconst kSkipThrow = Symbol('kSkipThrow');\nconst performanceObserverSorter = (first\x2C second) => {\n  return first.startTime - second.startTime;\n};\n\nclass PerformanceObserverEntryList {\n  constructor(skipThrowSymbol = undefined\x2C entries = []) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C performanceObserverSorter);\n  }\n\n  getEntries() {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    return ArrayPrototypeSlice(this[kBuffer]);\n  }\n\n  getEntriesByType(type) {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('type');\n    }\n    type = `${type}`;\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.entryType === type);\n  }\n\n  getEntriesByName(name\x2C type = undefined) {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    name = `${name}`;\n    if (type != null /** not nullish */) {\n      return ArrayPrototypeFilter(\n        this[kBuffer]\x2C\n        (entry) => entry.name === name && entry.entryType === type);\n    }\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.name === name);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\n  getEntries: kEnumerableProperty\x2C\n  getEntriesByType: kEnumerableProperty\x2C\n  getEntriesByName: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserverEntryList'\x2C\n  }\x2C\n});\n\nclass PerformanceObserver {\n  #buffer = [];\n  #entryTypes = new SafeSet();\n  #type;\n  #callback;\n\n  constructor(callback) {\n    validateFunction(callback\x2C 'callback');\n    this.#callback = callback;\n  }\n\n  observe(options = kEmptyObject) {\n    validateObject(options\x2C 'options');\n    const {\n      entryTypes\x2C\n      type\x2C\n      buffered\x2C\n    } = { ...options };\n    if (entryTypes === undefined && type === undefined)\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\n    if (entryTypes != null && type != null)\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\n                                      entryTypes\x2C\n                                      'options.entryTypes can not set with ' +\n                                      'options.type together');\n\n    switch (this.#type) {\n      case undefined:\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\n        if (type !== undefined) this.#type = kTypeSingle;\n        break;\n      case kTypeSingle:\n        if (entryTypes !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to multiple observations'\x2C\n            'InvalidModificationError');\n        break;\n      case kTypeMultiple:\n        if (type !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to single observation'\x2C\n            'InvalidModificationError');\n        break;\n    }\n\n    if (this.#type === kTypeMultiple) {\n      if (!ArrayIsArray(entryTypes)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.entryTypes'\x2C\n          'string[]'\x2C\n          entryTypes);\n      }\n      maybeDecrementObserverCounts(this.#entryTypes);\n      this.#entryTypes.clear();\n      for (let n = 0; n < entryTypes.length; n++) {\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\n          this.#entryTypes.add(entryTypes[n]);\n          maybeIncrementObserverCount(entryTypes[n]);\n        }\n      }\n    } else {\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\n        return;\n      this.#entryTypes.add(type);\n      maybeIncrementObserverCount(type);\n      if (buffered) {\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\n        kPending.add(this);\n        if (kPending.size)\n          queuePending();\n      }\n    }\n\n    if (this.#entryTypes.size)\n      kObservers.add(this);\n    else\n      this.disconnect();\n  }\n\n  disconnect() {\n    maybeDecrementObserverCounts(this.#entryTypes);\n    kObservers.delete(this);\n    kPending.delete(this);\n    this.#buffer = [];\n    this.#entryTypes.clear();\n    this.#type = undefined;\n  }\n\n  takeRecords() {\n    const list = this.#buffer;\n    this.#buffer = [];\n    return list;\n  }\n\n  static get supportedEntryTypes() {\n    return kSupportedEntryTypes;\n  }\n\n  [kMaybeBuffer](entry) {\n    if (!this.#entryTypes.has(entry.entryType))\n      return;\n    ArrayPrototypePush(this.#buffer\x2C entry);\n    kPending.add(this);\n    if (kPending.size)\n      queuePending();\n  }\n\n  [kDispatch]() {\n    const entryList = new PerformanceObserverEntryList(kSkipThrow\x2C this.takeRecords());\n\n    this.#callback(entryList\x2C this);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserver ${inspect({\n      connected: kObservers.has(this)\x2C\n      pending: kPending.has(this)\x2C\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\n      buffer: this.#buffer\x2C\n    }\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\n  observe: kEnumerableProperty\x2C\n  disconnect: kEnumerableProperty\x2C\n  takeRecords: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserver'\x2C\n  }\x2C\n});\n\n/**\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\n *\n * Add the performance entry to the interested performance observer's queue.\n */\nfunction enqueue(entry) {\n  if (!isPerformanceEntry(entry))\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\n\n  for (const obs of kObservers) {\n    obs[kMaybeBuffer](entry);\n  }\n}\n\n/**\n * Add the user timing entry to the global buffer.\n */\nfunction bufferUserTiming(entry) {\n  const entryType = entry.entryType;\n  let buffer;\n  if (entryType === 'mark') {\n    buffer = markEntryBuffer;\n  } else if (entryType === 'measure') {\n    buffer = measureEntryBuffer;\n  } else {\n    return;\n  }\n\n  ArrayPrototypePush(buffer\x2C entry);\n  const count = buffer.length;\n\n  if (count > kPerformanceEntryBufferWarnSize &&\n    !kWarnedEntryTypes.has(entryType)) {\n    kWarnedEntryTypes.set(entryType\x2C true);\n    // No error code for this since it is a Warning\n    // eslint-disable-next-line no-restricted-syntax\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\n                        `${count} ${entryType} entries added to the global ` +\n                        'performance entry buffer. Use ' +\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\n                        'clear the buffer.');\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\n    w.entryType = entryType;\n    w.count = count;\n    process.emitWarning(w);\n  }\n}\n\n/**\n * Add the resource timing entry to the global buffer if the buffer size is not\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\n * performance object.\n *\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\n */\nfunction bufferResourceTiming(entry) {\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\n    return;\n  }\n\n  if (!resourceTimingBufferFullPending) {\n    resourceTimingBufferFullPending = true;\n    setImmediate(() => {\n      while (resourceTimingSecondaryBuffer.length > 0) {\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\n        dispatchBufferFull('resourcetimingbufferfull');\n\n        // Calculate the number of items to be pushed to the global buffer.\n        const numbersToPreserve = MathMax(\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\n          0\x2C\n        );\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\n        }\n\n        if (excessNumberBefore <= excessNumberAfter) {\n          resourceTimingSecondaryBuffer = [];\n        }\n      }\n      resourceTimingBufferFullPending = false;\n    });\n  }\n\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\n}\n\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\nfunction setResourceTimingBufferSize(maxSize) {\n  // If the maxSize parameter is less than resource timing buffer current\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\n  // performance entry buffer.\n  resourceTimingBufferSizeLimit = maxSize;\n}\n\nfunction setDispatchBufferFull(fn) {\n  dispatchBufferFull = fn;\n}\n\nfunction clearEntriesFromBuffer(type\x2C name) {\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\n    return;\n  }\n\n  if (type === 'mark') {\n    markEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\n  } else if (type === 'measure') {\n    measureEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\n  } else {\n    resourceTimingBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\n  }\n}\n\nfunction filterBufferMapByNameAndType(name\x2C type) {\n  let bufferList;\n  if (type === 'mark') {\n    bufferList = markEntryBuffer;\n  } else if (type === 'measure') {\n    bufferList = measureEntryBuffer;\n  } else if (type === 'resource') {\n    bufferList = resourceTimingBuffer;\n  } else if (type !== undefined) {\n    // Unrecognized type;\n    return [];\n  } else {\n    bufferList = [];\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\n  }\n  if (name !== undefined) {\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\n  } else if (type !== undefined) {\n    bufferList = ArrayPrototypeSlice(bufferList);\n  }\n\n  return ArrayPrototypeSort(bufferList\x2C performanceObserverSorter);\n}\n\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\n  const entry =\n    createPerformanceNodeEntry(\n      name\x2C\n      type\x2C\n      startTime\x2C\n      duration\x2C\n      details);\n\n  if (details !== undefined) {\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\n    // properties directly off the entry. Those have been\n    // moved into the details property. The existing accessors\n    // are still included but are deprecated.\n    entry[kDeprecatedFields] = new SafeMap();\n\n    const detailKeys = ObjectKeys(details);\n    const props = {};\n    for (let n = 0; n < detailKeys.length; n++) {\n      const key = detailKeys[n];\n      entry[kDeprecatedFields].set(key\x2C details[key]);\n      props[key] = {\n        configurable: true\x2C\n        enumerable: true\x2C\n        get: deprecate(() => {\n          return entry[kDeprecatedFields].get(key);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n        set: deprecate((value) => {\n          entry[kDeprecatedFields].set(key\x2C value);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n      };\n    }\n    ObjectDefineProperties(entry\x2C props);\n  }\n\n  enqueue(entry);\n}\n\nsetupObservers(observerCallback);\n\nfunction hasObserver(type) {\n  const observerType = getObserverType(type);\n  return observerCounts[observerType] > 0;\n}\n\n\nfunction startPerf(target\x2C key\x2C context = {}) {\n  target[key] = {\n    ...context\x2C\n    startTime: now()\x2C\n  };\n}\n\nfunction stopPerf(target\x2C key\x2C context = {}) {\n  const ctx = target[key];\n  if (!ctx) {\n    return;\n  }\n  const startTime = ctx.startTime;\n  const entry = createPerformanceNodeEntry(\n    ctx.name\x2C\n    ctx.type\x2C\n    startTime\x2C\n    now() - startTime\x2C\n    { ...ctx.detail\x2C ...context.detail }\x2C\n  );\n  enqueue(entry);\n}\n\nmodule.exports = {\n  PerformanceObserver\x2C\n  PerformanceObserverEntryList\x2C\n  enqueue\x2C\n  hasObserver\x2C\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n  startPerf\x2C\n  stopPerf\x2C\n\n  bufferUserTiming\x2C\n  bufferResourceTiming\x2C\n  setResourceTimingBufferSize\x2C\n  setDispatchBufferFull\x2C\n};\n
code-source-info,0x3f3f8b695fee,103,0,16722,C0O0C4O16722,,
code-creation,JS,10,98361,0x3f3f8b6976fe,1209, node:internal/perf/observe:1:1,0x3f3f8b695f68,~
code-source-info,0x3f3f8b6976fe,103,0,16722,C0O0C279O25C285O38C291O54C297O78C303O104C309O126C315O153C321O176C327O198C333O207C339O218C345O229C351O255C356O271C362O285C368O296C374O307C379O317C384O680C388O680C394O375C400O381C406O417C412O456C418O494C424O531C430O571C436O607C442O625C448O660C453O777C457O777C463O723C469O745C475O954C479O954C485O839C491O845C497O874C503O901C509O927C515O1058C519O1058C525O993C531O1013C537O1031C543O1208C547O1208C553O1122C558O1134C564O1147C570O1167C576O1183C581O1263C585O1263C591O1245C597O1303C601O1303C607O1291C613O1337C617O1337C623O1329C629O1386C633O1386C637O1386C639O1423C643O1423C647O1423C649O1465C653O1465C657O1465C659O1515C663O1515C667O1515C669O1575C675O1628C678O1575C680O1688C681O1688C683O1713C685O1713C687O1743C688O1743C690O1780C696O1780C700O1780C702O1958C704O1958C706O1987C708O1987C710O2018C712O2018C714O2058C716O2058C718O2102C724O2102C726O2258C730O2258C732O2267C733O2267C735O2325C736O2325C738O2371C744O2371C748O2371C750O2494C754O2494C759O2494C761O2529C765O2529C770O2529C772O2561C776O2561C781O2561C783O2592C784O2592C786O3991C790O3991C794O3991C796O4047C800O4047C831O5337C853O4117C855O5587C863O5639C877O5666C883O5707C889O5748C895O5772C897O5792C906O5587C1012O8794C1024O9001C1034O9150C1067O9534C1071O9577C1085O9601C1091O9636C1097O9672C1103O9696C1105O9716C1114O9534C1119O15849C1123O16435C1131O16456C1137O16479C1143O16511C1149O16522C1155O16537C1161O16563C1167O16595C1173O16608C1179O16621C1185O16641C1191O16665C1197O16696C1203O16450C1208O16721,,
code-creation,JS,10,98385,0x3f3f8b697e2e,50,<instance_members_initializer> node:internal/perf/observe:243:1,0x3f3f8b696958,~
code-source-info,0x3f3f8b697e2e,103,5936,9533,C3O5976C13O5996C20O5996C34O6013C43O6022C49O9533,,
tick,0x7ee819a999c1,98394,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517ffd32c,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517ff35fc,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,98609,0x3f3f8b699aa6,5, node:internal/perf/performance_entry:1:1,0x3f3f8b6998b0,~
script-source,104,node:internal/perf/performance_entry,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { validateInternalField } = require('internal/validators');\n\nconst { inspect } = require('util');\n\nconst kName = Symbol('PerformanceEntry.Name');\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\nconst kDuration = Symbol('PerformanceEntry.Duration');\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\nconst kSkipThrow = Symbol('kSkipThrow');\n\nfunction isPerformanceEntry(obj) {\n  return obj?.[kName] !== undefined;\n}\n\nclass PerformanceEntry {\n  constructor(\n    skipThrowSymbol = undefined\x2C\n    name = undefined\x2C\n    type = undefined\x2C\n    start = undefined\x2C\n    duration = undefined\x2C\n  ) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kName] = name;\n    this[kEntryType] = type;\n    this[kStartTime] = start;\n    this[kDuration] = duration;\n  }\n\n  get name() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return this[kName];\n  }\n\n  get entryType() {\n    validateInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\n    return this[kEntryType];\n  }\n\n  get startTime() {\n    validateInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\n    return this[kStartTime];\n  }\n\n  get duration() {\n    validateInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\n    return this[kDuration];\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n    };\n  }\n}\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  entryType: kEnumerableProperty\x2C\n  startTime: kEnumerableProperty\x2C\n  duration: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\n  return new PerformanceEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n}\n\n/**\n * Node.js specific extension to PerformanceEntry.\n */\nclass PerformanceNodeEntry extends PerformanceEntry {\n  get detail() {\n    validateInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\n    return this[kDetail];\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n      detail: this[kDetail]\x2C\n    };\n  }\n}\n\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\n  const entry = new PerformanceNodeEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n\n  entry[kDetail] = detail;\n\n  return entry;\n}\n\nmodule.exports = {\n  createPerformanceEntry\x2C\n  PerformanceEntry\x2C\n  isPerformanceEntry\x2C\n  PerformanceNodeEntry\x2C\n  createPerformanceNodeEntry\x2C\n  kSkipThrow\x2C\n};\n
code-source-info,0x3f3f8b699aa6,104,0,3272,C0O0C4O3272,,
code-creation,JS,10,98690,0x3f3f8b69a776,370, node:internal/perf/performance_entry:1:1,0x3f3f8b699a20,~
code-source-info,0x3f3f8b69a776,104,0,3272,C0O0C53O25C58O51C63O134C66O134C71O94C76O100C82O231C85O231C90O194C95O206C100O291C103O291C108O265C114O344C117O344C122O332C128O376C131O376C135O376C137O428C140O428C144O428C146O485C149O485C153O485C155O541C158O541C162O541C164O594C167O594C171O594C173O652C176O652C180O652C211O1595C238O750C240O2067C243O2107C255O2128C261O2162C267O2196C273O2229C279O2260C283O2067C291O2518C319O2483C321O3114C328O3135C334O3161C340O3181C346O3203C352O3227C358O3257C364O3129C369O3271,,
code-creation,JS,10,98954,0x3f3f8b69c79e,34,protoGetter node:net:868:21,0x8b517ff9b80,~
code-source-info,0x3f3f8b69c79e,80,22891,23053,C0O22912C8O22940C13O22951C20O23036C27O22912C33O23052,,
tick,0x7ee81c4c163a,99415,1,0x7ee81a613550,2,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517ff3608,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,99765,0x3f3f8b6a355e,5, node:dgram:1:1,0x3f3f8b6a2fa8,~
script-source,105,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n} = require('internal/dgram');\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_MISSING_ARGS\x2C\n  ERR_SOCKET_ALREADY_BOUND\x2C\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\n  ERR_SOCKET_BUFFER_SIZE\x2C\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\n  ERR_INVALID_FD_TYPE\x2C\n} = errors.codes;\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateString\x2C\n  validateNumber\x2C\n  validatePort\x2C\n} = require('internal/validators');\nconst { Buffer } = require('buffer');\nconst { deprecate\x2C guessHandleType\x2C promisify } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\n} = require('internal/async_hooks');\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\n\nconst {\n  constants: { UV_UDP_IPV6ONLY }\x2C\n  UDP\x2C\n  SendWrap\x2C\n} = internalBinding('udp_wrap');\n\nconst dc = require('diagnostics_channel');\nconst udpSocketChannel = dc.channel('udp.socket');\n\nconst BIND_STATE_UNBOUND = 0;\nconst BIND_STATE_BINDING = 1;\nconst BIND_STATE_BOUND = 2;\n\nconst CONNECT_STATE_DISCONNECTED = 0;\nconst CONNECT_STATE_CONNECTING = 1;\nconst CONNECT_STATE_CONNECTED = 2;\n\nconst RECV_BUFFER = true;\nconst SEND_BUFFER = false;\n\n// Lazily loaded\nlet _cluster = null;\nfunction lazyLoadCluster() {\n  if (!_cluster) _cluster = require('cluster');\n  return _cluster;\n}\n\nconst {\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n} = errors;\n\nfunction Socket(type\x2C listener) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n  let lookup;\n  let recvBufferSize;\n  let sendBufferSize;\n\n  let options;\n  if (type !== null && typeof type === 'object') {\n    options = type;\n    type = options.type;\n    lookup = options.lookup;\n    recvBufferSize = options.recvBufferSize;\n    sendBufferSize = options.sendBufferSize;\n  }\n\n  const handle = newHandle(type\x2C lookup);\n  handle[owner_symbol] = this;\n\n  this[async_id_symbol] = handle.getAsyncId();\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message'\x2C listener);\n\n  this[kStateSymbol] = {\n    handle\x2C\n    receiving: false\x2C\n    bindState: BIND_STATE_UNBOUND\x2C\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\n    queue: undefined\x2C\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\n    ipv6Only: options && options.ipv6Only\x2C\n    recvBufferSize\x2C\n    sendBufferSize\x2C\n  };\n\n  if (options?.signal !== undefined) {\n    const { signal } = options;\n    validateAbortSignal(signal\x2C 'options.signal');\n    const onAborted = () => {\n      if (this[kStateSymbol].handle) this.close();\n    };\n    if (signal.aborted) {\n      onAborted();\n    } else {\n      const disposable = addAbortListener(signal\x2C onAborted);\n      this.once('close'\x2C disposable[SymbolDispose]);\n    }\n  }\n  if (udpSocketChannel.hasSubscribers) {\n    udpSocketChannel.publish({\n      socket: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\n\n\nfunction createSocket(type\x2C listener) {\n  return new Socket(type\x2C listener);\n}\n\n\nfunction startListening(socket) {\n  const state = socket[kStateSymbol];\n\n  state.handle.onmessage = onMessage;\n  state.handle.onerror = onError;\n  state.handle.recvStart();\n  state.receiving = true;\n  state.bindState = BIND_STATE_BOUND;\n\n  if (state.recvBufferSize)\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\n\n  if (state.sendBufferSize)\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\n\n  socket.emit('listening');\n}\n\nfunction replaceHandle(self\x2C newHandle) {\n  const state = self[kStateSymbol];\n  const oldHandle = state.handle;\n  // Sync the old handle state to new handle\n  if (!oldHandle.hasRef() && typeof newHandle.unref === 'function') {\n    newHandle.unref();\n  }\n  // Set up the handle that we got from primary.\n  newHandle.lookup = oldHandle.lookup;\n  newHandle.bind = oldHandle.bind;\n  newHandle.send = oldHandle.send;\n  newHandle[owner_symbol] = self;\n\n  // Replace the existing handle by the handle we got from primary.\n  oldHandle.close();\n  state.handle = newHandle;\n}\n\nfunction bufferSize(self\x2C size\x2C buffer) {\n  if (size >>> 0 !== size)\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\n\n  const ctx = {};\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\n  if (ret === undefined) {\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\n  }\n  return ret;\n}\n\n// Query primary process to get the server handle and utilize it.\nfunction bindServerHandle(self\x2C options\x2C errCb) {\n  const cluster = lazyLoadCluster();\n\n  const state = self[kStateSymbol];\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\n    if (err) {\n      // Do not call callback if socket is closed\n      if (state.handle) {\n        errCb(err);\n      }\n      return;\n    }\n\n    if (!state.handle) {\n      // Handle has been closed in the mean time.\n      return handle.close();\n    }\n\n    replaceHandle(self\x2C handle);\n    startListening(self);\n  });\n}\n\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\n  let port = port_;\n\n  healthCheck(this);\n  const state = this[kStateSymbol];\n\n  if (state.bindState !== BIND_STATE_UNBOUND)\n    throw new ERR_SOCKET_ALREADY_BOUND();\n\n  state.bindState = BIND_STATE_BINDING;\n\n  const cb = arguments.length && arguments[arguments.length - 1];\n  if (typeof cb === 'function') {\n    function removeListeners() {\n      this.removeListener('error'\x2C removeListeners);\n      this.removeListener('listening'\x2C onListening);\n    }\n\n    function onListening() {\n      FunctionPrototypeCall(removeListeners\x2C this);\n      FunctionPrototypeCall(cb\x2C this);\n    }\n\n    this.on('error'\x2C removeListeners);\n    this.on('listening'\x2C onListening);\n  }\n\n  if (port !== null &&\n      typeof port === 'object' &&\n      typeof port.recvStart === 'function') {\n    replaceHandle(this\x2C port);\n    startListening(this);\n    return this;\n  }\n\n  // Open an existing fd instead of creating a new one.\n  if (port !== null && typeof port === 'object' &&\n      isInt32(port.fd) && port.fd > 0) {\n    const fd = port.fd;\n    const exclusive = !!port.exclusive;\n    const state = this[kStateSymbol];\n\n    const cluster = lazyLoadCluster();\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: null\x2C\n        port: null\x2C\n        addressType: this.type\x2C\n        fd\x2C\n        flags: null\x2C\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = new ErrnoException(err\x2C 'open');\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n      return this;\n    }\n\n    const type = guessHandleType(fd);\n    if (type !== 'UDP')\n      throw new ERR_INVALID_FD_TYPE(type);\n    const err = state.handle.open(fd);\n\n    if (err)\n      throw new ErrnoException(err\x2C 'open');\n\n    startListening(this);\n    return this;\n  }\n\n  let address;\n  let exclusive;\n\n  if (port !== null && typeof port === 'object') {\n    address = port.address || '';\n    exclusive = !!port.exclusive;\n    port = port.port;\n  } else {\n    address = typeof address_ === 'function' ? '' : address_;\n    exclusive = false;\n  }\n\n  // Defaulting address for bind to all interfaces\n  if (!address) {\n    if (this.type === 'udp4')\n      address = '0.0.0.0';\n    else\n      address = '::';\n  }\n\n  // Resolve address first\n  state.handle.lookup(address\x2C (err\x2C ip) => {\n    if (!state.handle)\n      return; // Handle has been closed in the mean time\n\n    if (err) {\n      state.bindState = BIND_STATE_UNBOUND;\n      this.emit('error'\x2C err);\n      return;\n    }\n\n    const cluster = lazyLoadCluster();\n\n    let flags = 0;\n    if (state.reuseAddr)\n      flags |= UV_UDP_REUSEADDR;\n    if (state.ipv6Only)\n      flags |= UV_UDP_IPV6ONLY;\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: ip\x2C\n        port: port\x2C\n        addressType: this.type\x2C\n        fd: -1\x2C\n        flags: flags\x2C\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n    } else {\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\n      if (err) {\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n        // Todo: close?\n        return;\n      }\n\n      startListening(this);\n    }\n  });\n\n  return this;\n};\n\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\n  port = validatePort(port\x2C 'Port'\x2C false);\n  if (typeof address === 'function') {\n    callback = address;\n    address = '';\n  } else if (address === undefined) {\n    address = '';\n  }\n\n  validateString(address\x2C 'address');\n\n  const state = this[kStateSymbol];\n\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n\n  state.connectState = CONNECT_STATE_CONNECTING;\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\n                                        port\x2C address\x2C callback));\n    return;\n  }\n\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\n};\n\n\nfunction _connect(port\x2C address\x2C callback) {\n  const state = this[kStateSymbol];\n  if (callback)\n    this.once('connect'\x2C callback);\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doConnect\x2C\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x2C\n    );\n  };\n\n  state.handle.lookup(address\x2C afterDns);\n}\n\n\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n  if (!state.handle)\n    return;\n\n  if (!ex) {\n    const err = state.handle.connect(ip\x2C port);\n    if (err) {\n      ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\n    }\n  }\n\n  if (ex) {\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n    return process.nextTick(() => {\n      if (callback) {\n        self.removeListener('connect'\x2C callback);\n        callback(ex);\n      } else {\n        self.emit('error'\x2C ex);\n      }\n    });\n  }\n\n  state.connectState = CONNECT_STATE_CONNECTED;\n  process.nextTick(() => self.emit('connect'));\n}\n\n\nSocket.prototype.disconnect = function() {\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const err = state.handle.disconnect();\n  if (err)\n    throw new ErrnoException(err\x2C 'connect');\n  else\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n};\n\n\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\nSocket.prototype.sendto = function(buffer\x2C\n                                   offset\x2C\n                                   length\x2C\n                                   port\x2C\n                                   address\x2C\n                                   callback) {\n  validateNumber(offset\x2C 'offset');\n  validateNumber(length\x2C 'length');\n  validateNumber(port\x2C 'port');\n  validateString(address\x2C 'address');\n\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\n};\n\n\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  offset = offset >>> 0;\n  length = length >>> 0;\n  if (offset > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n  }\n\n  if (offset + length > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n  }\n\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\n}\n\n\nfunction fixBufferList(list) {\n  const newlist = new Array(list.length);\n\n  for (let i = 0\x2C l = list.length; i < l; i++) {\n    const buf = list[i];\n    if (typeof buf === 'string')\n      newlist[i] = Buffer.from(buf);\n    else if (!isArrayBufferView(buf))\n      return null;\n    else\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n  }\n\n  return newlist;\n}\n\n\nfunction enqueue(self\x2C toEnqueue) {\n  const state = self[kStateSymbol];\n\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\n  // event handler that flushes the send queue after binding is done.\n  if (state.queue === undefined) {\n    state.queue = [];\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\n    self.once('listening'\x2C onListenSuccess);\n  }\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\n}\n\n\nfunction onListenSuccess() {\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\n  FunctionPrototypeCall(clearQueue\x2C this);\n}\n\n\nfunction onListenError(err) {\n  this.removeListener('listening'\x2C onListenSuccess);\n  this[kStateSymbol].queue = undefined;\n}\n\n\nfunction clearQueue() {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n  state.queue = undefined;\n\n  // Flush the send queue.\n  for (const queueEntry of queue)\n    queueEntry();\n}\n\n// valid combinations\n// For connectionless sockets\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port)\n// send(bufferOrList\x2C port\x2C address\x2C callback)\n// send(bufferOrList\x2C port\x2C address)\n// send(bufferOrList\x2C port\x2C callback)\n// send(bufferOrList\x2C port)\n// For connected sockets\n// send(buffer\x2C offset\x2C length\x2C callback)\n// send(buffer\x2C offset\x2C length)\n// send(bufferOrList\x2C callback)\n// send(bufferOrList)\nSocket.prototype.send = function(buffer\x2C\n                                 offset\x2C\n                                 length\x2C\n                                 port\x2C\n                                 address\x2C\n                                 callback) {\n\n  let list;\n  const state = this[kStateSymbol];\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\n  if (!connected) {\n    if (address || (port && typeof port !== 'function')) {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n    } else {\n      callback = port;\n      port = offset;\n      address = length;\n    }\n  } else {\n    if (typeof length === 'number') {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n      if (typeof port === 'function') {\n        callback = port;\n        port = null;\n      }\n    } else {\n      callback = offset;\n    }\n\n    if (port || address)\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n  }\n\n  if (!ArrayIsArray(buffer)) {\n    if (typeof buffer === 'string') {\n      list = [ Buffer.from(buffer) ];\n    } else if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                     ['Buffer'\x2C\n                                      'TypedArray'\x2C\n                                      'DataView'\x2C\n                                      'string']\x2C\n                                     buffer);\n    } else {\n      list = [ buffer ];\n    }\n  } else if (!(list = fixBufferList(buffer))) {\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  if (!connected)\n    port = validatePort(port\x2C 'Port'\x2C false);\n\n  // Normalize callback so it's either a function or undefined but not anything\n  // else.\n  if (typeof callback !== 'function')\n    callback = undefined;\n\n  if (typeof address === 'function') {\n    callback = address;\n    address = undefined;\n  } else if (address != null) {\n    validateString(address\x2C 'address');\n  }\n\n  healthCheck(this);\n\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (list.length === 0)\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\n\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\n  // send queue and send after binding is complete.\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\n                                        list\x2C port\x2C address\x2C callback));\n    return;\n  }\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doSend\x2C\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x2C\n    );\n  };\n\n  if (!connected) {\n    state.handle.lookup(address\x2C afterDns);\n  } else {\n    afterDns(null\x2C null);\n  }\n};\n\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n\n  if (ex) {\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n      return;\n    }\n\n    process.nextTick(() => self.emit('error'\x2C ex));\n    return;\n  } else if (!state.handle) {\n    return;\n  }\n\n  const req = new SendWrap();\n  req.list = list;  // Keep reference alive.\n  req.address = address;\n  req.port = port;\n  if (callback) {\n    req.callback = callback;\n    req.oncomplete = afterSend;\n  }\n\n  let err;\n  if (port)\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\n  else\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\n\n  if (err >= 1) {\n    // Synchronous finish. The return code is msg_length + 1 so that we can\n    // distinguish between synchronous success and asynchronous success.\n    if (callback)\n      process.nextTick(callback\x2C null\x2C err - 1);\n    return;\n  }\n\n  if (err && callback) {\n    // Don't emit as error\x2C dgram_legacy.js compatibility\n    const ex = new ExceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\n    process.nextTick(callback\x2C ex);\n  }\n}\n\nfunction afterSend(err\x2C sent) {\n  if (err) {\n    err = new ExceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\n  } else {\n    err = null;\n  }\n\n  this.callback(err\x2C sent);\n}\n\nSocket.prototype.close = function(callback) {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n\n  if (typeof callback === 'function')\n    this.on('close'\x2C callback);\n\n  if (queue !== undefined) {\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\n    return this;\n  }\n\n  healthCheck(this);\n  stopReceiving(this);\n  state.handle.close();\n  state.handle = null;\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             socketCloseNT\x2C\n                             this);\n\n  return this;\n};\n\nSocket.prototype[SymbolAsyncDispose] = async function() {\n  if (!this[kStateSymbol].handle) {\n    return;\n  }\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\n};\n\n\nfunction socketCloseNT(self) {\n  self.emit('close');\n}\n\n\nSocket.prototype.address = function() {\n  healthCheck(this);\n\n  const out = {};\n  const err = this[kStateSymbol].handle.getsockname(out);\n  if (err) {\n    throw new ErrnoException(err\x2C 'getsockname');\n  }\n\n  return out;\n};\n\nSocket.prototype.remoteAddress = function() {\n  healthCheck(this);\n\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const out = {};\n  const err = state.handle.getpeername(out);\n  if (err)\n    throw new ErrnoException(err\x2C 'getpeername');\n\n  return out;\n};\n\n\nSocket.prototype.setBroadcast = function(arg) {\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setBroadcast');\n  }\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setTTL(ttl);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastLoopback');\n  }\n\n  return arg; // 0.4 compatibility\n};\n\n\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\n  healthCheck(this);\n  validateString(interfaceAddress\x2C 'interfaceAddress');\n\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastInterface');\n  }\n};\n\nSocket.prototype.addMembership = function(multicastAddress\x2C\n                                          interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'addMembership');\n  }\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress\x2C\n                                           interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'dropMembership');\n  }\n};\n\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\n                                                        groupAddress\x2C\n                                                        interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\n                                                          groupAddress\x2C\n                                                          interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'addSourceSpecificMembership');\n  }\n};\n\n\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\n                                                         groupAddress\x2C\n                                                         interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\n                                                           groupAddress\x2C\n                                                           interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'dropSourceSpecificMembership');\n  }\n};\n\n\nfunction healthCheck(socket) {\n  if (!socket[kStateSymbol].handle) {\n    // Error message from dgram_legacy.js.\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\n  }\n}\n\n\nfunction stopReceiving(socket) {\n  const state = socket[kStateSymbol];\n\n  if (!state.receiving)\n    return;\n\n  state.handle.recvStop();\n  state.receiving = false;\n}\n\n\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\n  const self = handle[owner_symbol];\n  if (nread < 0) {\n    return self.emit('error'\x2C new ErrnoException(nread\x2C 'recvmsg'));\n  }\n  rinfo.size = buf.length; // compatibility\n  self.emit('message'\x2C buf\x2C rinfo);\n}\n\n\nfunction onError(nread\x2C handle\x2C error) {\n  const self = handle[owner_symbol];\n  return self.emit('error'\x2C error);\n}\n\n\nSocket.prototype.ref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.ref();\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.unref();\n\n  return this;\n};\n\n\nSocket.prototype.setRecvBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.setSendBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\n};\n\n\nSocket.prototype.getRecvBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.getSendBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\n};\n\nSocket.prototype.getSendQueueSize = function() {\n  return this[kStateSymbol].handle.getSendQueueSize();\n};\n\nSocket.prototype.getSendQueueCount = function() {\n  return this[kStateSymbol].handle.getSendQueueCount();\n};\n\n// Deprecated private APIs.\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].handle;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].handle = val;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].receiving;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].receiving = val;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].bindState;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].bindState = val;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].queue;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].queue = val;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].reuseAddr;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].reuseAddr = val;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nSocket.prototype._healthCheck = deprecate(function() {\n  healthCheck(this);\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\n\n\nSocket.prototype._stopReceiving = deprecate(function() {\n  stopReceiving(this);\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\n\nmodule.exports = {\n  _createSocketHandle: deprecate(\n    _createSocketHandle\x2C\n    'dgram._createSocketHandle() is deprecated'\x2C\n    'DEP0112'\x2C\n  )\x2C\n  createSocket\x2C\n  Socket\x2C\n};\n
code-source-info,0x3f3f8b6a355e,105,0,28430,C0O0C4O28430,,
code-creation,JS,10,100496,0x3f3f8b6a56d6,1655, node:dgram:1:1,0x3f3f8b6a34d8,~
code-source-info,0x3f3f8b6a56d
tick,0x7ee81c21c8d2,100564,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x8b517ff3608,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517febadd,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,100808,0x3f3f8b6a8d96,5, node:internal/dgram:1:1,0x3f3f8b6a8b90,~
script-source,106,node:internal/dgram,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { codes } = require('internal/errors');\nconst { UDP } = internalBinding('udp_wrap');\nconst { guessHandleType } = require('internal/util');\nconst {\n  isInt32\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { UV_EINVAL } = internalBinding('uv');\nconst {\n  ERR_SOCKET_BAD_TYPE\x2C\n} = codes;\nconst kStateSymbol = Symbol('state symbol');\nlet dns;  // Lazy load for startup performance.\n\n\nfunction lookup4(lookup\x2C address\x2C callback) {\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\n}\n\n\nfunction lookup6(lookup\x2C address\x2C callback) {\n  return lookup(address || '::1'\x2C 6\x2C callback);\n}\n\nfunction newHandle(type\x2C lookup) {\n  if (lookup === undefined) {\n    if (dns === undefined) {\n      dns = require('dns');\n    }\n\n    lookup = dns.lookup;\n  } else {\n    validateFunction(lookup\x2C 'lookup');\n  }\n\n  if (type === 'udp4') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\n    return handle;\n  }\n\n  if (type === 'udp6') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\n    handle.bind = handle.bind6;\n    handle.connect = handle.connect6;\n    handle.send = handle.send6;\n    return handle;\n  }\n\n  throw new ERR_SOCKET_BAD_TYPE();\n}\n\n\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  const handle = newHandle(addressType);\n  let err;\n\n  if (isInt32(fd) && fd > 0) {\n    const type = guessHandleType(fd);\n    if (type !== 'UDP') {\n      err = UV_EINVAL;\n    } else {\n      err = handle.open(fd);\n    }\n  } else if (port || address) {\n    err = handle.bind(address\x2C port || 0\x2C flags);\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\n\nmodule.exports = {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n};\n
code-source-info,0x3f3f8b6a8d96,106,0,1851,C0O0C4O1851,,
code-creation,JS,10,100857,0x3f3f8b6a905e,199, node:internal/dgram:1:1,0x3f3f8b6a8d10,~
code-source-info,0x3f3f8b6a905e,106,0,1851,C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C103O195C108O175C114O264C120O264C125O231C131O242C137O318C140O318C145O304C151O351C157O404C160O404C165O432C166O432C168O1777C175O1798C181O1814C187O1837C193O1792C198O1850,,
code-creation,Eval,10,101229,0x3f3f8b6ae286,5, node:internal/socket_list:1:1,0x3f3f8b6ae130,~
script-source,107,node:internal/socket_list,'use strict';\n\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\n\nconst EventEmitter = require('events');\n\n// This object keeps track of the sockets that are sent\nclass SocketListSend extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n    this.key = key;\n    this.child = child;\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\n  }\n\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\n    const self = this;\n\n    if (!this.child.connected) return onclose();\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\n\n    function onclose() {\n      self.child.removeListener('internalMessage'\x2C onreply);\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\n    }\n\n    function onreply(msg) {\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\n      self.child.removeListener('disconnect'\x2C onclose);\n      self.child.removeListener('internalMessage'\x2C onreply);\n\n      callback(null\x2C msg);\n    }\n\n    this.child.once('disconnect'\x2C onclose);\n    this.child.on('internalMessage'\x2C onreply);\n  }\n\n  close(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\n      key: this.key\x2C\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\n  }\n\n  getConnections(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\n      key: this.key\x2C\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\n      if (err) return callback(err);\n      callback(null\x2C msg.count);\n    });\n  }\n}\n\n\n// This object keeps track of the sockets that are received\nclass SocketListReceive extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n\n    this.connections = 0;\n    this.key = key;\n    this.child = child;\n\n    function onempty(self) {\n      if (!self.child.connected) return;\n\n      self.child._send({\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\n        key: self.key\x2C\n      }\x2C undefined\x2C true);\n    }\n\n    this.child.on('internalMessage'\x2C (msg) => {\n      if (msg.key !== this.key) return;\n\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\n        // Already empty\n        if (this.connections === 0) return onempty(this);\n\n        // Wait for sockets to get closed\n        this.once('empty'\x2C onempty);\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\n        if (!this.child.connected) return;\n        this.child._send({\n          cmd: 'NODE_SOCKET_COUNT'\x2C\n          key: this.key\x2C\n          count: this.connections\x2C\n        });\n      }\n    });\n  }\n\n  add(obj) {\n    this.connections++;\n\n    // Notify the previous owner of the socket about its state change\n    obj.socket.once('close'\x2C () => {\n      this.connections--;\n\n      if (this.connections === 0) this.emit('empty'\x2C this);\n    });\n  }\n}\n\nmodule.exports = { SocketListSend\x2C SocketListReceive };\n
code-source-info,0x3f3f8b6ae286,107,0,2709,C0O0C4O2709,,
code-creation,JS,10,101326,0x3f3f8b6ae8c6,124, node:internal/socket_list:1:1,0x3f3f8b6ae200,~
code-source-info,0x3f3f8b6ae8c6,107,0,2709,C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C72O1527C99O2653C106O2672C112O2688C118O2668C123O2708,,
tick,0x7ee81c4e2f10,101532,0,0x0,2,0x7ee81c5678d0,0x8b517febb27,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe8d28,0x7ee79be4b54f,0x7ee79be4ba05,0x8b517fe776b,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x8b517fe6091,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,101602,0x3f3f8b6b02be,14,customPromiseExecFunction node:child_process:239:35,0x8b517feb348,~
code-source-info,0x3f3f8b6b02be,78,6932,7296,C0O6932C9O6946C13O7294,,
code-creation,Eval,10,101769,0x3f3f8b6b2a0e,5, node:internal/cluster/round_robin_handle:1:1,0x3f3f8b6b2808,~
script-source,108,node:internal/cluster/round_robin_handle,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst net = require('net');\nconst { sendHelper } = require('internal/cluster/utils');\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\nconst { constants } = internalBinding('tcp_wrap');\n\nmodule.exports = RoundRobinHandle;\n\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\n  this.key = key;\n  this.all = new SafeMap();\n  this.free = new SafeMap();\n  this.handles = init({ __proto__: null });\n  this.handle = null;\n  this.server = net.createServer(assert.fail);\n\n  if (fd >= 0)\n    this.server.listen({ fd\x2C backlog });\n  else if (port >= 0) {\n    this.server.listen({\n      port\x2C\n      host: address\x2C\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\n      backlog\x2C\n    });\n  } else\n    this.server.listen({\n      path: address\x2C\n      backlog\x2C\n      readableAll\x2C\n      writableAll\x2C\n    });  // UNIX socket path.\n  this.server.once('listening'\x2C () => {\n    this.handle = this.server._handle;\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\n    this.server._handle = null;\n    this.server = null;\n  });\n}\n\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\n  assert(this.all.has(worker.id) === false);\n  this.all.set(worker.id\x2C worker);\n\n  const done = () => {\n    if (this.handle.getsockname) {\n      const out = {};\n      this.handle.getsockname(out);\n      // TODO(bnoordhuis) Check err.\n      send(null\x2C { sockname: out }\x2C null);\n    } else {\n      send(null\x2C null\x2C null);  // UNIX socket.\n    }\n\n    this.handoff(worker);  // In case there are connections pending.\n  };\n\n  if (this.server === null)\n    return done();\n\n  // Still busy binding.\n  this.server.once('listening'\x2C done);\n  this.server.once('error'\x2C (err) => {\n    send(err.errno\x2C null);\n  });\n};\n\nRoundRobinHandle.prototype.remove = function(worker) {\n  const existed = this.all.delete(worker.id);\n\n  if (!existed)\n    return false;\n\n  this.free.delete(worker.id);\n\n  if (this.all.size !== 0)\n    return false;\n\n  while (!isEmpty(this.handles)) {\n    const handle = peek(this.handles);\n    handle.close();\n    remove(handle);\n  }\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\n  // If `accept` fails just skip it (handle is undefined)\n  if (err) {\n    return;\n  }\n  append(this.handles\x2C handle);\n  // eslint-disable-next-line node-core/no-array-destructuring\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\n\n  if (ArrayIsArray(workerEntry)) {\n    const { 0: workerId\x2C 1: worker } = workerEntry;\n    this.free.delete(workerId);\n    this.handoff(worker);\n  }\n};\n\nRoundRobinHandle.prototype.handoff = function(worker) {\n  if (!this.all.has(worker.id)) {\n    return;  // Worker is closing (or has closed) the server.\n  }\n\n  const handle = peek(this.handles);\n\n  if (handle === null) {\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\n    return;\n  }\n\n  remove(handle);\n\n  const message = { act: 'newconn'\x2C key: this.key };\n\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\n    if (reply.accepted)\n      handle.close();\n    else\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\n\n    this.handoff(worker);\n  });\n};\n
code-source-info,0x3f3f8b6b2a0e,108,0,3453,C0O0C4O3453,,
code-creation,JS,10,101849,0x3f3f8b6b2dce,208, node:internal/cluster/round_robin_handle:1:1,0x3f3f8b6b2988,~
code-source-info,0x3f3f8b6b2dce,108,0,3453,C0O0C46O25C52O41C58O52C64O94C67O94C71O94C73O134C76O134C80O134C82O173C85O173C90O158C96O256C99O256C104O216C110O224C116O230C122O239C128O245C134O310C137O310C142O296C148O340C150O355C154O1336C163O1350C167O2001C176O2018C180O2399C189O2420C193O2862C202O2880C207O3452,,
code-creation,Eval,10,101965,0x3f3f8b6b3746,5, node:internal/cluster/utils:1:1,0x3f3f8b6b35d0,~
script-source,109,node:internal/cluster/utils,'use strict';\n\nconst {\n  ReflectApply\x2C\n  SafeMap\x2C\n} = primordials;\n\nmodule.exports = {\n  sendHelper\x2C\n  internal\x2C\n};\n\nconst callbacks = new SafeMap();\nlet seq = 0;\n\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\n  if (!proc.connected)\n    return false;\n\n  // Mark message as internal. See INTERNAL_PREFIX\n  // in lib/internal/child_process.js\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\n\n  if (typeof cb === 'function')\n    callbacks.set(seq\x2C cb);\n\n  seq += 1;\n  return proc.send(message\x2C handle);\n}\n\n// Returns an internalMessage listener that hands off normal messages\n// to the callback but intercepts and redirects ACK messages.\nfunction internal(worker\x2C cb) {\n  return function onInternalMessage(message\x2C handle) {\n    if (message.cmd !== 'NODE_CLUSTER')\n      return;\n\n    let fn = cb;\n\n    if (message.ack !== undefined) {\n      const callback = callbacks.get(message.ack);\n\n      if (callback !== undefined) {\n        fn = callback;\n        callbacks.delete(message.ack);\n      }\n    }\n\n    ReflectApply(fn\x2C worker\x2C arguments);\n  };\n}\n
code-source-info,0x3f3f8b6b3746,109,0,1054,C0O0C4O1054,,
code-creation,JS,10,101999,0x3f3f8b6b3906,72, node:internal/cluster/utils:1:1,0x3f3f8b6b36c0,~
code-source-info,0x3f3f8b6b3906,109,0,1054,C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O135C60O135C65O135C67O160C68O160C71O1053,,
code-creation,Eval,10,102114,0x3f3f8b6b3ffe,5, node:internal/cluster/shared_handle:1:1,0x3f3f8b6b3e78,~
script-source,110,node:internal/cluster/shared_handle,'use strict';\nconst { SafeMap } = primordials;\nconst assert = require('internal/assert');\nconst dgram = require('internal/dgram');\nconst net = require('net');\n\nmodule.exports = SharedHandle;\n\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\n  this.key = key;\n  this.workers = new SafeMap();\n  this.handle = null;\n  this.errno = 0;\n\n  let rval;\n  if (addressType === 'udp4' || addressType === 'udp6')\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n  else\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n  if (typeof rval === 'number')\n    this.errno = rval;\n  else\n    this.handle = rval;\n}\n\nSharedHandle.prototype.add = function(worker\x2C send) {\n  assert(!this.workers.has(worker.id));\n  this.workers.set(worker.id\x2C worker);\n  send(this.errno\x2C null\x2C this.handle);\n};\n\nSharedHandle.prototype.remove = function(worker) {\n  if (!this.workers.has(worker.id))\n    return false;\n\n  this.workers.delete(worker.id);\n\n  if (this.workers.size !== 0)\n    return false;\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n
code-source-info,0x3f3f8b6b3ffe,110,0,1102,C0O0C4O1102,,
code-creation,JS,10,102144,0x3f3f8b6b4236,89, node:internal/cluster/shared_handle:1:1,0x3f3f8b6b3f78,~
code-source-info,0x3f3f8b6b4236,110,0,1102,C0O0C22O22C28O62C31O62C35O62C37O104C40O104C44O104C46O143C49O143C53O143C55O160C57O175C61O685C70O699C74O861C83O878C88O1101,,
code-creation,Eval,10,102243,0x3f3f8b6b4886,5, node:internal/cluster/worker:1:1,0x3f3f8b6b4700,~
script-source,111,node:internal/cluster/worker,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\n\nconst { kEmptyObject } = require('internal/util');\n\nmodule.exports = Worker;\n\n// Common Worker implementation shared between the cluster primary and workers.\nfunction Worker(options) {\n  if (!(this instanceof Worker))\n    return new Worker(options);\n\n  ReflectApply(EventEmitter\x2C this\x2C []);\n\n  if (options === null || typeof options !== 'object')\n    options = kEmptyObject;\n\n  this.exitedAfterDisconnect = undefined;\n\n  this.state = options.state || 'none';\n  this.id = options.id | 0;\n\n  if (options.process) {\n    this.process = options.process;\n    this.process.on('error'\x2C (code\x2C signal) =>\n      this.emit('error'\x2C code\x2C signal)\x2C\n    );\n    this.process.on('message'\x2C (message\x2C handle) =>\n      this.emit('message'\x2C message\x2C handle)\x2C\n    );\n  }\n}\n\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\n\nWorker.prototype.kill = function() {\n  ReflectApply(this.destroy\x2C this\x2C arguments);\n};\n\nWorker.prototype.send = function() {\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\n};\n\nWorker.prototype.isDead = function() {\n  return this.process.exitCode != null || this.process.signalCode != null;\n};\n\nWorker.prototype.isConnected = function() {\n  return this.process.connected;\n};\n
code-source-info,0x3f3f8b6b4886,111,0,1379,C0O0C4O1379,,
code-creation,JS,10,102278,0x3f3f8b6b4bfe,158, node:internal/cluster/worker:1:1,0x3f3f8b6b4800,~
code-source-info,0x3f3f8b6b4bfe,111,0,1379,C0O0C20O25C25O49C31O102C34O102C38O102C40O147C43O147C48O130C54O174C56O189C60O876C63O904C71O928C76O876C81O940C87O940C92O985C95O992C104O1007C108O1073C111O1080C120O1095C124O1181C127O1188C136O1205C140O1299C143O1306C152O1328C157O1378,,
tick,0x7ee81bd462e1,102633,0,0x0,0,0x7ee79be4fbed,0x8b517fd7b82,0x8b517fd7911,0x8b517fd77d3,0x8b517fd765d,0x8b517fd6e55,0x8b517fd4683,0x8b517fd2f7a,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,11,102695,0x7ee79be50480,324,isFileType node:fs:204:20,0x2563a95a4b88,^
code-source-info,0x7ee79be50480,45,5195,5436,,,
code-creation,JS,11,102714,0x7ee79be50600,300,makeBitMapDescriptor node:internal/streams/readable:127:30,0xcb902b652a0,^
code-source-info,0x7ee79be50600,91,3762,3955,,,
code-creation,JS,11,102723,0x7ee79be50740,300,makeBitMapDescriptor node:internal/streams/writable:126:30,0xcb902b78698,^
code-source-info,0x7ee79be50740,96,3843,4036,,,
code-creation,JS,11,102736,0x7ee79be50880,972,debuglog node:internal/util/debuglog:76:18,0x305ee1ea05b8,^
code-source-info,0x7ee79be50880,22,2328,3337,,,
code-creation,JS,11,102750,0x7ee79be50c80,276,protoGetter node:net:868:21,0x8b517ff9b80,^
code-source-info,0x7ee79be50c80,80,22891,23053,,,
code-creation,JS,11,102770,0x7ee79be50dc0,1068,deprecate node:internal/util:147:19,0x307edb92a818,^
code-source-info,0x7ee79be50dc0,16,3817,4853,,,
code-creation,JS,11,102779,0x7ee79be51200,168,<instance_members_initializer> node:internal/util:840:1,0x307edb92b7b0,^
code-source-info,0x7ee79be51200,16,23200,23744,,,
code-creation,JS,11,102790,0x7ee79be512c0,328,SafeWeakRef node:internal/per_context/primordials:447:16,0x168b8b4961a8,^
code-source-info,0x7ee79be512c0,6,12965,12992,,,
code-creation,JS,11,102798,0x7ee79be51440,276,WeakReference node:internal/util:844:14,0x307edb92b670,^
code-source-info,0x7ee79be51440,16,23286,23342,,,
code-creation,JS,11,102806,0x7ee79be51580,328,set node:diagnostics_channel:41:6,0x3f3f8b68f818,^
code-source-info,0x7ee79be51580,102,883,997,,,
code-creation,JS,11,102813,0x7ee79be51700,272,Channel node:diagnostics_channel:169:14,0x3f3f8b68fc38,^
code-source-info,0x7ee79be51700,102,3770,3900,,,
code-creation,JS,11,102820,0x7ee79be51840,200,readPackage node:internal/modules/package_json_reader:140:21,0x365dd3de3d20,^
code-source-info,0x7ee79be51840,66,3950,4020,,,
code-creation,JS,11,102827,0x7ee79be51940,176,nextPart node:fs:2641:31,0x2563a95a6e38,^
code-source-info,0x7ee79be51940,45,70277,70335,,,
code-creation,Eval,10,103027,0x3f3f8b6b668e,5, /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x3f3f8b6b64e8,~
script-source,112,/home/user/rustdoc-js-profile/node_modules/0x/lib/preload/redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x3f3f8b6b668e,112,0,494,C0O0C4O494,,
code-creation,JS,10,103047,0x3f3f8b6b6936,157, /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x3f3f8b6b6608,~
code-source-info,0x3f3f8b6b6936,112,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,Eval,10,103177,0x3f3f8b6b7016,5, node:worker_threads:1:1,0x3f3f8b6b6ed0,~
script-source,113,node:worker_threads,'use strict';\n\nconst {\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  threadId\x2C\n  Worker\x2C\n} = require('internal/worker');\n\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  BroadcastChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  markAsUntransferable\x2C\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  resourceLimits\x2C\n  threadId\x2C\n  SHARE_ENV\x2C\n  Worker\x2C\n  parentPort: null\x2C\n  workerData: null\x2C\n  BroadcastChannel\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n};\n
code-source-info,0x3f3f8b6b7016,113,0,687,C0O0C4O687,,
code-creation,JS,10,103202,0x3f3f8b6b7226,180, node:worker_threads:1:1,0x3f3f8b6b6f90,~
code-source-info,0x3f3f8b6b7226,113,0,687,C0O140C3O140C8O25C13O41C18O54C23O72C28O94C33O116C38O128C43O286C46O286C51O179C56O194C61O212C66O240C71O264C76O354C79O354C84O328C89O383C96O404C102O420C108O435C114O453C120O477C126O505C132O529C138O547C144O559C150O572C156O622C162O642C168O664C174O398C179O686,,
code-creation,Eval,10,103630,0x3f3f8b6b8a86,5, node:internal/worker:1:1,0x3f3f8b6b7e78,~
script-source,114,node:internal/worker,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  JSONStringify\x2C\n  MathMax\x2C\n  ObjectEntries\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeTrim\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst assert = require('internal/assert');\nconst path = require('path');\nconst {\n  internalEventLoopUtilization\x2C\n} = require('internal/perf/event_loop_utilization');\n\nconst errorCodes = require('internal/errors').codes;\nconst {\n  ERR_WORKER_NOT_RUNNING\x2C\n  ERR_WORKER_PATH\x2C\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = errorCodes;\nconst { getOptionValue } = require('internal/options');\n\nconst workerIo = require('internal/worker/io');\nconst {\n  drainMessagePort\x2C\n  receiveMessageOnPort\x2C\n  MessageChannel\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\x2C\n} = workerIo;\nconst { deserializeError } = require('internal/error_serdes');\nconst { fileURLToPath\x2C isURL\x2C pathToFileURL } = require('internal/url');\nconst { kEmptyObject } = require('internal/util');\nconst { validateArray\x2C validateString } = require('internal/validators');\nconst {\n  throwIfBuildingSnapshot\x2C\n} = require('internal/v8/startup_snapshot');\nconst {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  resourceLimits: resourceLimitsRaw\x2C\n  threadId\x2C\n  Worker: WorkerImpl\x2C\n  kMaxYoungGenerationSizeMb\x2C\n  kMaxOldGenerationSizeMb\x2C\n  kCodeRangeSizeMb\x2C\n  kStackSizeMb\x2C\n  kTotalResourceLimitCount\x2C\n} = internalBinding('worker');\n\nconst kHandle = Symbol('kHandle');\nconst kPublicPort = Symbol('kPublicPort');\nconst kDispose = Symbol('kDispose');\nconst kOnExit = Symbol('kOnExit');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\nconst kParentSideStdio = Symbol('kParentSideStdio');\nconst kLoopStartTime = Symbol('kLoopStartTime');\nconst kIsInternal = Symbol('kIsInternal');\nconst kIsOnline = Symbol('kIsOnline');\n\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\n  debug = fn;\n});\n\nconst dc = require('diagnostics_channel');\nconst workerThreadsChannel = dc.channel('worker_threads');\n\nlet cwdCounter;\n\nconst environmentData = new SafeMap();\n\n// SharedArrayBuffers can be disabled with --no-harmony-sharedarraybuffer.\n// Atomics can be disabled with --no-harmony-atomics.\nif (isMainThread && SharedArrayBuffer !== undefined && Atomics !== undefined) {\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\n  const originalChdir = process.chdir;\n  process.chdir = function(path) {\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\n    originalChdir(path);\n  };\n}\n\nfunction setEnvironmentData(key\x2C value) {\n  if (value === undefined)\n    environmentData.delete(key);\n  else\n    environmentData.set(key\x2C value);\n}\n\nfunction getEnvironmentData(key) {\n  return environmentData.get(key);\n}\n\nfunction assignEnvironmentData(data) {\n  if (data === undefined) return;\n  data.forEach((value\x2C key) => {\n    environmentData.set(key\x2C value);\n  });\n}\n\nclass Worker extends EventEmitter {\n  constructor(filename\x2C options = kEmptyObject) {\n    throwIfBuildingSnapshot('Creating workers');\n    super();\n    const isInternal = arguments[2] === kIsInternal;\n    debug(\n      `[${threadId}] create new worker`\x2C\n      filename\x2C\n      options\x2C\n      `isInternal: ${isInternal}`\x2C\n    );\n    if (options.execArgv)\n      validateArray(options.execArgv\x2C 'options.execArgv');\n\n    let argv;\n    if (options.argv) {\n      validateArray(options.argv\x2C 'options.argv');\n      argv = ArrayPrototypeMap(options.argv\x2C String);\n    }\n\n    let url\x2C doEval;\n    if (isInternal) {\n      doEval = 'internal';\n      url = `node:${filename}`;\n    } else if (options.eval) {\n      if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.eval'\x2C\n          options.eval\x2C\n          'must be false when \\'filename\\' is not a string'\x2C\n        );\n      }\n      url = null;\n      doEval = 'classic';\n    } else if (isURL(filename) && filename.protocol === 'data:') {\n      url = null;\n      doEval = 'module';\n      filename = `import ${JSONStringify(`${filename}`)}`;\n    } else {\n      doEval = false;\n      if (isURL(filename)) {\n        url = filename;\n        filename = fileURLToPath(filename);\n      } else if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_TYPE(\n          'filename'\x2C\n          ['string'\x2C 'URL']\x2C\n          filename\x2C\n        );\n      } else if (path.isAbsolute(filename) ||\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\n        filename = path.resolve(filename);\n        url = pathToFileURL(filename);\n      } else {\n        throw new ERR_WORKER_PATH(filename);\n      }\n    }\n\n    let env;\n    if (typeof options.env === 'object' && options.env !== null) {\n      env = { __proto__: null };\n      ArrayPrototypeForEach(\n        ObjectEntries(options.env)\x2C\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x2C\n      );\n    } else if (options.env == null) {\n      env = process.env;\n    } else if (options.env !== SHARE_ENV) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.env'\x2C\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\n        options.env);\n    }\n\n    let name = '';\n    if (options.name) {\n      validateString(options.name\x2C 'options.name');\n      name = StringPrototypeTrim(options.name);\n    }\n\n    debug('instantiating Worker.'\x2C `url: ${url}`\x2C `doEval: ${doEval}`);\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\n    this[kHandle] = new WorkerImpl(url\x2C\n                                   env === process.env ? null : env\x2C\n                                   options.execArgv\x2C\n                                   parseResourceLimits(options.resourceLimits)\x2C\n                                   !!(options.trackUnmanagedFds ?? true)\x2C\n                                   isInternal\x2C\n                                   name);\n    if (this[kHandle].invalidExecArgv) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\n    }\n    if (this[kHandle].invalidNodeOptions) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\n    }\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\n    };\n    this[kPort] = this[kHandle].messagePort;\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\n    this[kPort].start();\n    this[kPort].unref();\n    this[kPort][kWaitingStreams] = 0;\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\n\n    let stdin = null;\n    if (options.stdin)\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\n    if (!options.stdout) {\n      stdout[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stdout\x2C process.stdout);\n    }\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\n    if (!options.stderr) {\n      stderr[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stderr\x2C process.stderr);\n    }\n\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\n\n    const { port1\x2C port2 } = new MessageChannel();\n    const transferList = [port2];\n    // If transferList is provided.\n    if (options.transferList)\n      ArrayPrototypePush(transferList\x2C\n                         ...new SafeArrayIterator(options.transferList));\n\n    this[kPublicPort] = port1;\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\n    });\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\n    this[kPort].postMessage({\n      argv\x2C\n      type: messageTypes.LOAD_SCRIPT\x2C\n      filename\x2C\n      doEval\x2C\n      isInternal\x2C\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\n      workerData: options.workerData\x2C\n      environmentData\x2C\n      publicPort: port2\x2C\n      manifestURL: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').url :\n        null\x2C\n      manifestSrc: getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').src :\n        null\x2C\n      hasStdin: !!options.stdin\x2C\n    }\x2C transferList);\n    // Use this to cache the Worker's loopStart value once available.\n    this[kLoopStartTime] = -1;\n    this[kIsOnline] = false;\n    this.performance = {\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\n    };\n    // Actually start the new thread now that everything is in place.\n    this[kHandle].startThread();\n\n    process.nextTick(() => process.emit('worker'\x2C this));\n    if (workerThreadsChannel.hasSubscribers) {\n      workerThreadsChannel.publish({\n        worker: this\x2C\n      });\n    }\n  }\n\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\n    drainMessagePort(this[kPublicPort]);\n    drainMessagePort(this[kPort]);\n    this.removeAllListeners('message');\n    this.removeAllListeners('messageerrors');\n    this[kPublicPort].unref();\n    this[kPort].unref();\n    this[kDispose]();\n    if (customErr) {\n      debug(`[${threadId}] failing with custom error ${customErr} \\\n        and with reason ${customErrReason}`);\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\n    }\n    this.emit('exit'\x2C code);\n    this.removeAllListeners();\n  }\n\n  [kOnCouldNotSerializeErr]() {\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\n  }\n\n  [kOnErrorMessage](serialized) {\n    // This is what is called for uncaught exceptions.\n    const error = deserializeError(serialized);\n    this.emit('error'\x2C error);\n  }\n\n  [kOnMessage](message) {\n    switch (message.type) {\n      case messageTypes.UP_AND_RUNNING:\n        this[kIsOnline] = true;\n        return this.emit('online');\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\n        return this[kOnCouldNotSerializeErr]();\n      case messageTypes.ERROR_MESSAGE:\n        return this[kOnErrorMessage](message.error);\n      case messageTypes.STDIO_PAYLOAD:\n      {\n        const { stream\x2C chunks } = message;\n        const readable = this[kParentSideStdio][stream];\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\n          readable.push(chunk\x2C encoding);\n        });\n        return;\n      }\n      case messageTypes.STDIO_WANTS_MORE_DATA:\n      {\n        const { stream } = message;\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\n      }\n    }\n\n    assert.fail(`Unknown worker message type ${message.type}`);\n  }\n\n  [kDispose]() {\n    this[kHandle].onexit = null;\n    this[kHandle] = null;\n    this[kPort] = null;\n    this[kPublicPort] = null;\n\n    const { stdout\x2C stderr } = this[kParentSideStdio];\n\n    if (!stdout.readableEnded) {\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\n      stdout.push(null);\n    }\n    if (!stderr.readableEnded) {\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\n      stderr.push(null);\n    }\n  }\n\n  postMessage(...args) {\n    if (this[kPublicPort] === null) return;\n\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\n  }\n\n  terminate(callback) {\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\n\n    this.ref();\n\n    if (typeof callback === 'function') {\n      process.emitWarning(\n        'Passing a callback to worker.terminate() is deprecated. ' +\n        'It returns a Promise instead.'\x2C\n        'DeprecationWarning'\x2C 'DEP0132');\n      if (this[kHandle] === null) return PromiseResolve();\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\n    }\n\n    if (this[kHandle] === null) return PromiseResolve();\n\n    this[kHandle].stopThread();\n\n    // Do not use events.once() here\x2C because the 'exit' event will always be\n    // emitted regardless of any errors\x2C and the point is to only resolve\n    // once the thread has actually stopped.\n    return new Promise((resolve) => {\n      this.once('exit'\x2C resolve);\n    });\n  }\n\n  ref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].ref();\n    this[kPublicPort].ref();\n  }\n\n  unref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].unref();\n    this[kPublicPort].unref();\n  }\n\n  get threadId() {\n    if (this[kHandle] === null) return -1;\n\n    return this[kHandle].threadId;\n  }\n\n  get stdin() {\n    return this[kParentSideStdio].stdin;\n  }\n\n  get stdout() {\n    return this[kParentSideStdio].stdout;\n  }\n\n  get stderr() {\n    return this[kParentSideStdio].stderr;\n  }\n\n  get resourceLimits() {\n    if (this[kHandle] === null) return {};\n\n    return makeResourceLimits(this[kHandle].getResourceLimits());\n  }\n\n  getHeapSnapshot(options) {\n    const {\n      HeapSnapshotStream\x2C\n      getHeapSnapshotOptions\x2C\n    } = require('internal/heap_utils');\n    const optionsArray = getHeapSnapshotOptions(options);\n    const heapSnapshotTaker = this[kHandle]?.takeHeapSnapshot(optionsArray);\n    return new Promise((resolve\x2C reject) => {\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\n      heapSnapshotTaker.ondone = (handle) => {\n        resolve(new HeapSnapshotStream(handle));\n      };\n    });\n  }\n}\n\n/**\n * A worker which has an internal module for entry point (e.g. internal/module/esm/worker).\n * Internal workers bypass the permission model.\n */\nclass InternalWorker extends Worker {\n  constructor(filename\x2C options) {\n    super(filename\x2C options\x2C kIsInternal);\n  }\n\n  receiveMessageSync() {\n    return receiveMessageOnPort(this[kPublicPort]);\n  }\n}\n\nfunction pipeWithoutWarning(source\x2C dest) {\n  const sourceMaxListeners = source._maxListeners;\n  const destMaxListeners = dest._maxListeners;\n  source.setMaxListeners(Infinity);\n  dest.setMaxListeners(Infinity);\n\n  source.pipe(dest);\n\n  source._maxListeners = sourceMaxListeners;\n  dest._maxListeners = destMaxListeners;\n}\n\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\nfunction parseResourceLimits(obj) {\n  const ret = resourceLimitsArray;\n  TypedArrayPrototypeFill(ret\x2C -1);\n  if (typeof obj !== 'object' || obj === null) return ret;\n\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\n  if (typeof obj.codeRangeSizeMb === 'number')\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\n  if (typeof obj.stackSizeMb === 'number')\n    ret[kStackSizeMb] = obj.stackSizeMb;\n  return ret;\n}\n\nfunction makeResourceLimits(float64arr) {\n  return {\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\n    stackSizeMb: float64arr[kStackSizeMb]\x2C\n  };\n}\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\n  // has had a chance to turn. So it will be impossible to read the ELU of\n  // a worker thread immediately after it's been created.\n  if (!this[kIsOnline] || !this[kHandle]) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  // Cache loopStart\x2C since it's only written to once.\n  if (this[kLoopStartTime] === -1) {\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\n    if (this[kLoopStartTime] === -1)\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  return internalEventLoopUtilization(\n    this[kLoopStartTime]\x2C\n    this[kHandle].loopIdleTime()\x2C\n    util1\x2C\n    util2\x2C\n  );\n}\n\nmodule.exports = {\n  ownsProcessState\x2C\n  kIsOnline\x2C\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits:\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  assignEnvironmentData\x2C\n  threadId\x2C\n  InternalWorker\x2C\n  Worker\x2C\n};\n
code-source-info,0x3f3f8b6b8a86,114,0,16395,C0O0C4O16395,,
code-creation,JS,10,103933,0x3f3f8b6ba05e,1343, node:internal/worker:1:1,0x3f3f8b6b8a00,~
code-source-info,0x3f3f8b6ba05e,114,0,16395,C0O0C262O25C268O50C274O71C280O93C285O109C291O134C297O151C303O162C309O179C315O190C321O208C327O224C333O247C339O268C344O279C350O289C356O312C361O322C366O335C372O362C377O389C383O391C389O400C394O460C402O460C407O494C415O494C419O494C421O535C429O535C433O535C435O596C443O596C449O562C455O665C463O665C469O691C473O665C475O872C479O709C485O735C491O754C497O789C503O821C509O845C515O911C523O911C529O892C535O958C543O958C547O958C549O1230C553O999C559O1019C565O1043C571O1061C577O1077C583O1086C589O1108C595O1127C601O1158C607O1182C613O1205C619O1269C627O1269C633O1248C639O1351C647O1351C653O1311C659O1326C665O1333C671O1401C679O1401C685O1384C691O1469C699O1469C705O1435C711O1450C717O1540C725O1540C731O1511C737O1820C741O1820C747O1591C752O1611C757O1643C762O1664C768O1684C774O1698C780O1727C786O1754C792O1774C798O1790C803O1864C807O1864C811O1864C813O1903C817O1903C821O1903C823O1943C827O1943C831O1943C833O1979C837O1979C841O1979C843O2017C847O2017C851O2017C853O2071C857O2071C861O2071C863O2130C867O2130C871O2130C873O2182C877O2182C881O2182C883O2233C887O2233C891O2233C893O2279C897O2279C901O2279C903O2320C907O2320C911O2320C913O2360C917O2360C921O2360C923O2418C931O2418C937O2451C953O2452C959O2418C961O2511C969O2511C974O2575C984O2575C989O2572C991O2607C992O2607C994O2644C996O2644C1001O2644C1003O2789C1015O2852C1022O2871C1028O2900C1037O2884C1042O2882C1046O2951C1052O2959C1056O2951C1058O2968C1068O2982C1074O3464C1084O9226C1094O9862C1104O9962C1114O10135C1124O11032C1208O13838C1238O14366C1240O14366C1245O14366C1247O16120C1255O16141C1261O16161C1267O16174C1273O16190C1282O16224C1288O16239C1301O16285C1307O16307C1313O16329C1319O16354C1325O16366C1331O16384C1337O16135C1342O16394,,
tick,0x7ee8191499a5,103965,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x3f3f8b6b7229,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x3f3f8b6b6946,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,Eval,10,104139,0x3f3f8b6bbfe6,5, node:internal/perf/event_loop_utilization:1:1,0x3f3f8b6bbe50,~
script-source,115,node:internal/perf/event_loop_utilization,'use strict';\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\n  }\x2C\n  loopIdleTime\x2C\n  milestones\x2C\n} = internalBinding('performance');\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // Get the original milestone timestamps that calculated from the beginning\n  // of the process.\n  return internalEventLoopUtilization(\n    milestones[NODE_PERFORMANCE_MILESTONE_LOOP_START] / 1e6\x2C\n    loopIdleTime()\x2C\n    util1\x2C\n    util2\x2C\n  );\n}\n\nfunction internalEventLoopUtilization(loopStart\x2C loopIdleTime\x2C util1\x2C util2) {\n  if (loopStart <= 0) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  if (util2) {\n    const idle = util1.idle - util2.idle;\n    const active = util1.active - util2.active;\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  // Using process.hrtime() to get the time from the beginning of the process\x2C\n  // and offset it by the loopStart time (which is also calculated from the\n  // beginning of the process).\n  const now = process.hrtime();\n  const active = now[0] * 1e3 + now[1] / 1e6 - loopStart - loopIdleTime;\n\n  if (!util1) {\n    return {\n      idle: loopIdleTime\x2C\n      active\x2C\n      utilization: active / (loopIdleTime + active)\x2C\n    };\n  }\n\n  const idleDelta = loopIdleTime - util1.idle;\n  const activeDelta = active - util1.active;\n  const utilization = activeDelta / (idleDelta + activeDelta);\n  return {\n    idle: idleDelta\x2C\n    active: activeDelta\x2C\n    utilization\x2C\n  };\n}\n\nmodule.exports = {\n  internalEventLoopUtilization\x2C\n  eventLoopUtilization\x2C\n};\n
code-source-info,0x3f3f8b6bbfe6,115,0,1527,C0O0C4O1527,,
code-creation,JS,10,104172,0x3f3f8b6bc196,85, node:internal/perf/event_loop_utilization:1:1,0x3f3f8b6bbf60,~
code-source-info,0x3f3f8b6bc196,115,0,1527,C0O0C29O120C32O120C37O36C42O42C48O88C54O104C60O1449C67O1470C73O1502C79O1464C84O1526,,
code-creation,Eval,10,104626,0x3f3f8b6bd0e6,5, node:internal/worker/io:1:1,0x3f3f8b6bcc60,~
script-source,116,node:internal/worker/io,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n} = require('internal/util');\n\nconst {\n  handle_onclose: handleOnCloseSymbol\x2C\n  oninit: onInitSymbol\x2C\n  no_message_symbol: noMessageSymbol\x2C\n} = internalBinding('symbols');\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  broadcastChannel\x2C\n  drainMessagePort\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort: receiveMessageOnPort_\x2C\n  stopMessagePort\x2C\n  checkMessagePort\x2C\n  DOMException\x2C\n} = internalBinding('messaging');\nconst {\n  getEnvMessagePort\x2C\n} = internalBinding('worker');\n\nconst { Readable\x2C Writable } = require('stream');\nconst {\n  Event\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kRemoveListener\x2C\n} = require('internal/event_target');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst kData = Symbol('kData');\nconst kHandle = Symbol('kHandle');\nconst kIncrementsPortRef = Symbol('kIncrementsPortRef');\nconst kLastEventId = Symbol('kLastEventId');\nconst kName = Symbol('kName');\nconst kOrigin = Symbol('kOrigin');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnMessageError = Symbol('kOnMessageError');\nconst kPort = Symbol('kPort');\nconst kPorts = Symbol('kPorts');\nconst kWaitingStreams = Symbol('kWaitingStreams');\nconst kWritableCallbacks = Symbol('kWritableCallbacks');\nconst kSource = Symbol('kSource');\nconst kStartedReading = Symbol('kStartedReading');\nconst kStdioWantsMoreDataCallback = Symbol('kStdioWantsMoreDataCallback');\nconst kCurrentlyReceivingPorts =\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\nconst kType = Symbol('kType');\n\nconst messageTypes = {\n  UP_AND_RUNNING: 'upAndRunning'\x2C\n  COULD_NOT_SERIALIZE_ERROR: 'couldNotSerializeError'\x2C\n  ERROR_MESSAGE: 'errorMessage'\x2C\n  STDIO_PAYLOAD: 'stdioPayload'\x2C\n  STDIO_WANTS_MORE_DATA: 'stdioWantsMoreData'\x2C\n  LOAD_SCRIPT: 'loadScript'\x2C\n};\n\n// We have to mess with the MessagePort prototype a bit\x2C so that a) we can make\n// it inherit from NodeEventTarget\x2C even though it is a C++ class\x2C and b) we do\n// not provide methods that are not present in the Browser and not documented\n// on our side (e.g. stopMessagePort).\nconst messagePortPrototypePropertyDescriptors = ObjectGetOwnPropertyDescriptors(MessagePort.prototype);\nconst propertiesValues = ObjectValues(messagePortPrototypePropertyDescriptors);\nfor (let i = 0; i < propertiesValues.length; i++) {\n  // We want to use null-prototype objects to not rely on globally mutable\n  // %Object.prototype%.\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n}\n// Save a copy of the original set of methods as a shallow clone.\nconst MessagePortPrototype = ObjectCreate(\n  ObjectGetPrototypeOf(MessagePort.prototype)\x2C\n  messagePortPrototypePropertyDescriptors);\n// Set up the new inheritance chain.\nObjectSetPrototypeOf(MessagePort\x2C NodeEventTarget);\nObjectSetPrototypeOf(MessagePort.prototype\x2C NodeEventTarget.prototype);\n// Copy methods that are inherited from HandleWrap\x2C because\n// changing the prototype of MessagePort.prototype implicitly removed them.\nMessagePort.prototype.ref = MessagePortPrototype.ref;\nMessagePort.prototype.unref = MessagePortPrototype.unref;\nMessagePort.prototype.hasRef = function() {\n  return !!FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\n};\n\nfunction validateMessagePort(port\x2C name) {\n  if (!checkMessagePort(port))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'MessagePort'\x2C port);\n}\n\nfunction isMessageEvent(value) {\n  return value != null && kData in value;\n}\n\nclass MessageEvent extends Event {\n  constructor(type\x2C {\n    data = null\x2C\n    origin = ''\x2C\n    lastEventId = ''\x2C\n    source = null\x2C\n    ports = []\x2C\n  } = kEmptyObject) {\n    super(type);\n    this[kData] = data;\n    this[kOrigin] = `${origin}`;\n    this[kLastEventId] = `${lastEventId}`;\n    this[kSource] = source;\n    this[kPorts] = [...ports];\n\n    if (this[kSource] !== null)\n      validateMessagePort(this[kSource]\x2C 'init.source');\n    for (let i = 0; i < this[kPorts].length; i++)\n      validateMessagePort(this[kPorts][i]\x2C `init.ports[${i}]`);\n  }\n}\n\nObjectDefineProperties(MessageEvent.prototype\x2C {\n  data: {\n    __proto__: null\x2C\n    get() {\n      if (!isMessageEvent(this))\n        throw new ERR_INVALID_THIS('MessageEvent');\n      return this[kData];\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    set: undefined\x2C\n  }\x2C\n  origin: {\n    __proto__: null\x2C\n    get() {\n      if (!isMessageEvent(this))\n        throw new ERR_INVALID_THIS('MessageEvent');\n      return this[kOrigin];\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    set: undefined\x2C\n  }\x2C\n  lastEventId: {\n    __proto__: null\x2C\n    get() {\n      if (!isMessageEvent(this))\n        throw new ERR_INVALID_THIS('MessageEvent');\n      return this[kLastEventId];\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    set: undefined\x2C\n  }\x2C\n  source: {\n    __proto__: null\x2C\n    get() {\n      if (!isMessageEvent(this))\n        throw new ERR_INVALID_THIS('MessageEvent');\n      return this[kSource];\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    set: undefined\x2C\n  }\x2C\n  ports: {\n    __proto__: null\x2C\n    get() {\n      if (!isMessageEvent(this))\n        throw new ERR_INVALID_THIS('MessageEvent');\n      return this[kPorts];\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    set: undefined\x2C\n  }\x2C\n});\n\nconst originalCreateEvent = EventTarget.prototype[kCreateEvent];\nObjectDefineProperty(\n  MessagePort.prototype\x2C\n  kCreateEvent\x2C\n  {\n    __proto__: null\x2C\n    value: function(data\x2C type) {\n      if (type !== 'message' && type !== 'messageerror') {\n        return ReflectApply(originalCreateEvent\x2C this\x2C arguments);\n      }\n      const ports = this[kCurrentlyReceivingPorts];\n      this[kCurrentlyReceivingPorts] = undefined;\n      return new MessageEvent(type\x2C { data\x2C ports });\n    }\x2C\n    configurable: false\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n  });\n\n// This is called from inside the `MessagePort` constructor.\nfunction oninit() {\n  initNodeEventTarget(this);\n  setupPortReferencing(this\x2C this\x2C 'message');\n  this[kCurrentlyReceivingPorts] = undefined;\n}\n\ndefineEventHandler(MessagePort.prototype\x2C 'message');\ndefineEventHandler(MessagePort.prototype\x2C 'messageerror');\n\nObjectDefineProperty(MessagePort.prototype\x2C onInitSymbol\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  value: oninit\x2C\n});\n\nclass MessagePortCloseEvent extends Event {\n  constructor() {\n    super('close');\n  }\n}\n\n// This is called after the underlying `uv_async_t` has been closed.\nfunction onclose() {\n  this.dispatchEvent(new MessagePortCloseEvent());\n}\n\nObjectDefineProperty(MessagePort.prototype\x2C handleOnCloseSymbol\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  writable: false\x2C\n  value: onclose\x2C\n});\n\nMessagePort.prototype.close = function(cb) {\n  if (typeof cb === 'function')\n    this.once('close'\x2C cb);\n  FunctionPrototypeCall(MessagePortPrototype.close\x2C this);\n};\n\nObjectDefineProperty(MessagePort.prototype\x2C inspect.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  writable: false\x2C\n  value: function inspect() {  // eslint-disable-line func-name-matching\n    let ref;\n    try {\n      // This may throw when `this` does not refer to a native object\x2C\n      // e.g. when accessing the prototype directly.\n      ref = FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\n    } catch { return this; }\n    return ObjectAssign({ __proto__: MessagePort.prototype }\x2C\n                        ref === undefined ? {\n                          active: false\x2C\n                        } : {\n                          active: true\x2C\n                          refed: ref\x2C\n                        }\x2C\n                        this);\n  }\x2C\n});\n\nfunction setupPortReferencing(port\x2C eventEmitter\x2C eventName) {\n  // Keep track of whether there are any workerMessage listeners:\n  // If there are some\x2C ref() the channel so it keeps the event loop alive.\n  // If there are none or all are removed\x2C unref() the channel so the worker\n  // can shutdown gracefully.\n  port.unref();\n  eventEmitter.on('newListener'\x2C function(name) {\n    if (name === eventName) newListener(eventEmitter.listenerCount(name));\n  });\n  eventEmitter.on('removeListener'\x2C function(name) {\n    if (name === eventName) removeListener(eventEmitter.listenerCount(name));\n  });\n  const origNewListener = eventEmitter[kNewListener];\n  setOwnProperty(eventEmitter\x2C kNewListener\x2C function(size\x2C type\x2C ...args) {\n    if (type === eventName) newListener(size - 1);\n    return ReflectApply(origNewListener\x2C this\x2C arguments);\n  });\n  const origRemoveListener = eventEmitter[kRemoveListener];\n  setOwnProperty(eventEmitter\x2C kRemoveListener\x2C function(size\x2C type\x2C ...args) {\n    if (type === eventName) removeListener(size);\n    return ReflectApply(origRemoveListener\x2C this\x2C arguments);\n  });\n\n  function newListener(size) {\n    if (size === 0) {\n      port.ref();\n      FunctionPrototypeCall(MessagePortPrototype.start\x2C port);\n    }\n  }\n\n  function removeListener(size) {\n    if (size === 0) {\n      stopMessagePort(port);\n      port.unref();\n    }\n  }\n}\n\n\nclass ReadableWorkerStdio extends Readable {\n  constructor(port\x2C name) {\n    super();\n    this[kPort] = port;\n    this[kName] = name;\n    this[kIncrementsPortRef] = true;\n    this[kStartedReading] = false;\n    this.on('end'\x2C () => {\n      if (this[kStartedReading] && this[kIncrementsPortRef]) {\n        if (--this[kPort][kWaitingStreams] === 0)\n          this[kPort].unref();\n      }\n    });\n  }\n\n  _read() {\n    if (!this[kStartedReading] && this[kIncrementsPortRef]) {\n      this[kStartedReading] = true;\n      if (this[kPort][kWaitingStreams]++ === 0)\n        this[kPort].ref();\n    }\n\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_WANTS_MORE_DATA\x2C\n      stream: this[kName]\x2C\n    });\n  }\n}\n\nclass WritableWorkerStdio extends Writable {\n  constructor(port\x2C name) {\n    super({ decodeStrings: false });\n    this[kPort] = port;\n    this[kName] = name;\n    this[kWritableCallbacks] = [];\n  }\n\n  _writev(chunks\x2C cb) {\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_PAYLOAD\x2C\n      stream: this[kName]\x2C\n      chunks: ArrayPrototypeMap(chunks\x2C\n                                ({ chunk\x2C encoding }) => ({ chunk\x2C encoding }))\x2C\n    });\n    ArrayPrototypePush(this[kWritableCallbacks]\x2C cb);\n    if (this[kPort][kWaitingStreams]++ === 0)\n      this[kPort].ref();\n  }\n\n  _final(cb) {\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_PAYLOAD\x2C\n      stream: this[kName]\x2C\n      chunks: [ { chunk: null\x2C encoding: '' } ]\x2C\n    });\n    cb();\n  }\n\n  [kStdioWantsMoreDataCallback]() {\n    const cbs = this[kWritableCallbacks];\n    this[kWritableCallbacks] = [];\n    ArrayPrototypeForEach(cbs\x2C (cb) => cb());\n    if ((this[kPort][kWaitingStreams] -= cbs.length) === 0)\n      this[kPort].unref();\n  }\n}\n\nfunction createWorkerStdio() {\n  const port = getEnvMessagePort();\n  port[kWaitingStreams] = 0;\n  return {\n    stdin: new ReadableWorkerStdio(port\x2C 'stdin')\x2C\n    stdout: new WritableWorkerStdio(port\x2C 'stdout')\x2C\n    stderr: new WritableWorkerStdio(port\x2C 'stderr')\x2C\n  };\n}\n\nfunction receiveMessageOnPort(port) {\n  const message = receiveMessageOnPort_(port?.[kHandle] ?? port);\n  if (message === noMessageSymbol) return undefined;\n  return { message };\n}\n\nfunction onMessageEvent(type\x2C data) {\n  this.dispatchEvent(new MessageEvent(type\x2C { data }));\n}\n\nfunction isBroadcastChannel(value) {\n  return value?.[kType] === 'BroadcastChannel';\n}\n\nclass BroadcastChannel extends EventTarget {\n  /**\n   * @param {string} name\n   */\n  constructor(name) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('name');\n    super();\n    this[kType] = 'BroadcastChannel';\n    this[kName] = `${name}`;\n    this[kHandle] = broadcastChannel(this[kName]);\n    this[kOnMessage] = FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'message');\n    this[kOnMessageError] =\n      FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'messageerror');\n    this[kHandle].on('message'\x2C this[kOnMessage]);\n    this[kHandle].on('messageerror'\x2C this[kOnMessageError]);\n  }\n\n  [inspect.custom](depth\x2C options) {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (depth < 0)\n      return 'BroadcastChannel';\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `BroadcastChannel ${inspect({\n      name: this[kName]\x2C\n      active: this[kHandle] !== undefined\x2C\n    }\x2C opts)}`;\n  }\n\n  /**\n   * @type {string}\n   */\n  get name() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    return this[kName];\n  }\n\n  /**\n   * @returns {void}\n   */\n  close() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle] === undefined)\n      return;\n    this[kHandle].off('message'\x2C this[kOnMessage]);\n    this[kHandle].off('messageerror'\x2C this[kOnMessageError]);\n    this[kOnMessage] = undefined;\n    this[kOnMessageError] = undefined;\n    this[kHandle].close();\n    this[kHandle] = undefined;\n  }\n\n  /**\n   *\n   * @param {any} message\n   * @returns {void}\n   */\n  postMessage(message) {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('message');\n    if (this[kHandle] === undefined)\n      throw new DOMException('BroadcastChannel is closed.');\n    if (this[kHandle].postMessage(message) === undefined)\n      throw new DOMException('Message could not be posted.');\n  }\n\n  // The ref() method is Node.js specific and not part of the standard\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\n  // Platform APIs with Node.js specific methods but ref and unref\n  // are a bit special.\n  /**\n   * @returns {BroadcastChannel}\n   */\n  ref() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle])\n      this[kHandle].ref();\n    return this;\n  }\n\n  // The unref() method is Node.js specific and not part of the standard\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\n  // Platform APIs with Node.js specific methods but ref and unref\n  // are a bit special.\n  /**\n   * @returns {BroadcastChannel}\n   */\n  unref() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle])\n      this[kHandle].unref();\n    return this;\n  }\n}\n\nObjectDefineProperties(BroadcastChannel.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  close: kEnumerableProperty\x2C\n  postMessage: kEnumerableProperty\x2C\n});\n\ndefineEventHandler(BroadcastChannel.prototype\x2C 'message');\ndefineEventHandler(BroadcastChannel.prototype\x2C 'messageerror');\n\nmodule.exports = {\n  drainMessagePort\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  moveMessagePortToContext\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  MessageEvent\x2C\n  receiveMessageOnPort\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\x2C\n  createWorkerStdio\x2C\n  BroadcastChannel\x2C\n};\n
code-source-info,0x3f3f8b6bd0e6,116,0,15479,C0O0C4O15479,,
code-creation,JS,10,104918,0x3f3f8b6bf08e,1709, node:internal/worker/io:1:1,0x3f3f8b6bd060,~
code-source-info,0x3f3f8b6bf08e
tick,0x7ee819a99915,104961,1,0x7ee81a613550,3,0x7ee81bf0da80,0x7ee79be4b484,0x7ee79be4ba05,0x3f3f8b6ba27d,0x7ee79be4b54f,0x7ee79be4ba05,0x3f3f8b6b7229,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x3f3f8b6b6946,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
new,MemoryChunk,0x7b3c7180000,262144
code-creation,Eval,10,105518,0x3f3f8b6bfe7e,5, node:internal/error_serdes:1:1,0x3f3f8b6bfae8,~
script-source,117,node:internal/error_serdes,'use strict';\n\nconst Buffer = require('buffer').Buffer;\nconst {\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  EvalError\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  RangeError\x2C\n  ReferenceError\x2C\n  SafeSet\x2C\n  StringFromCharCode\x2C\n  StringPrototypeSubstring\x2C\n  SymbolToStringTag\x2C\n  SyntaxError\x2C\n  SymbolFor\x2C\n  TypeError\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  URIError\x2C\n} = primordials;\nconst { inspect: { custom: customInspectSymbol } } = require('util');\n\nconst kSerializedError = 0;\nconst kSerializedObject = 1;\nconst kInspectedError = 2;\nconst kInspectedSymbol = 3;\nconst kCustomInspectedObject = 4;\n\nconst kSymbolStringLength = 'Symbol('.length;\n\nconst errors = {\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x2C\n};\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\n\nfunction TryGetAllProperties(object\x2C target = object) {\n  const all = { __proto__: null };\n  if (object === null)\n    return all;\n  ObjectAssign(all\x2C\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\n  const keys = ObjectGetOwnPropertyNames(object);\n  ArrayPrototypeForEach(keys\x2C (key) => {\n    let descriptor;\n    try {\n      // TODO: create a null-prototype descriptor with needed properties only\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\n    } catch { return; }\n    const getter = descriptor.get;\n    if (getter && key !== '__proto__') {\n      try {\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\n        delete descriptor.get;\n        delete descriptor.set;\n      } catch {\n        // Continue regardless of error.\n      }\n    }\n    if (key === 'cause') {\n      descriptor.value = serializeError(descriptor.value);\n      all[key] = descriptor;\n    } else if ('value' in descriptor &&\n            typeof descriptor.value !== 'function' && typeof descriptor.value !== 'symbol') {\n      all[key] = descriptor;\n    }\n  });\n  return all;\n}\n\nfunction GetConstructors(object) {\n  const constructors = [];\n\n  for (let current = object;\n    current !== null;\n    current = ObjectGetPrototypeOf(current)) {\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\n    if (desc && desc.value) {\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\n        __proto__: null\x2C\n        value: desc.value\x2C enumerable: true\x2C\n      });\n    }\n  }\n\n  return constructors;\n}\n\nfunction GetName(object) {\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\n  return desc && desc.value;\n}\n\nlet internalUtilInspect;\nfunction inspect(...args) {\n  if (!internalUtilInspect) {\n    internalUtilInspect = require('internal/util/inspect');\n  }\n  return internalUtilInspect.inspect(...args);\n}\n\nlet serialize;\nfunction serializeError(error) {\n  if (!serialize) serialize = require('v8').serialize;\n  if (typeof error === 'symbol') {\n    return Buffer.from(StringFromCharCode(kInspectedSymbol) + inspect(error)\x2C 'utf8');\n  }\n  try {\n    if (typeof error === 'object' &&\n        ObjectPrototypeToString(error) === '[object Error]') {\n      const constructors = GetConstructors(error);\n      for (let i = 0; i < constructors.length; i++) {\n        const name = GetName(constructors[i]);\n        if (errorConstructorNames.has(name)) {\n          const serialized = serialize({\n            constructor: name\x2C\n            properties: TryGetAllProperties(error)\x2C\n          });\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\n        }\n      }\n    }\n  } catch {\n    // Continue regardless of error.\n  }\n  try {\n    if (error != null && customInspectSymbol in error) {\n      return Buffer.from(StringFromCharCode(kCustomInspectedObject) + inspect(error)\x2C 'utf8');\n    }\n  } catch {\n    // Continue regardless of error.\n  }\n  try {\n    const serialized = serialize(error);\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\n  } catch {\n    // Continue regardless of error.\n  }\n  return Buffer.from(StringFromCharCode(kInspectedError) + inspect(error)\x2C 'utf8');\n}\n\nfunction fromBuffer(error) {\n  return Buffer.from(TypedArrayPrototypeGetBuffer(error)\x2C\n                     TypedArrayPrototypeGetByteOffset(error) + 1\x2C\n                     TypedArrayPrototypeGetByteLength(error) - 1);\n}\n\nlet deserialize;\nfunction deserializeError(error) {\n  if (!deserialize) deserialize = require('v8').deserialize;\n  switch (error[0]) {\n    case kSerializedError: {\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\n      const ctor = errors[constructor];\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\n        __proto__: null\x2C\n        value: { __proto__: null\x2C value: 'Error'\x2C configurable: true }\x2C\n        enumerable: true\x2C\n      });\n      if ('cause' in properties && 'value' in properties.cause) {\n        properties.cause.value = deserializeError(properties.cause.value);\n      }\n      return ObjectCreate(ctor.prototype\x2C properties);\n    }\n    case kSerializedObject:\n      return deserialize(error.subarray(1));\n    case kInspectedError:\n      return fromBuffer(error).toString('utf8');\n    case kInspectedSymbol: {\n      const buf = fromBuffer(error);\n      return SymbolFor(StringPrototypeSubstring(buf.toString('utf8')\x2C kSymbolStringLength\x2C buf.length - 1));\n    }\n    case kCustomInspectedObject:\n      return {\n        __proto__: null\x2C\n        [customInspectSymbol]: () => fromBuffer(error).toString('utf8')\x2C\n      };\n  }\n  require('assert').fail('This should not happen');\n}\n\nmodule.exports = { serializeError\x2C deserializeError };\n
code-source-info,0x3f3f8b6bfe7e,117,0,5723,C0O0C4O5723,,
code-creation,JS,10,105684,0x7b3c71812f6,448, node:internal/error_serdes:1:1,0x3f3f8b6bfdf8,~
code-source-info,0x7b3c71812f6,117,0,5723,C0O0C138O30C144O30C149O47C153O30C155O66C161O91C166O100C171O113C177O138C183O154C189O170C195O194C201O228C207O257C213O281C218O295C224O322C229O336C234O354C239O365C245O387C251O415C257O436C262O451C268O464C273O477C279O509C285O545C291O581C296O661C302O661C307O625C312O635C318O704C319O704C321O733C323O733C325O760C327O760C329O788C331O788C333O822C335O822C337O854C340O864C344O854C346O888C353O892C359O899C365O910C371O922C377O932C383O945C389O961C395O888C397O1005C400O1017C407O1005C412O1005C414O2716C415O2716C417O2913C418O2913C420O4448C421O4448C423O5668C430O5687C436O5703C442O5683C447O5722,,
tick,0x7ee81c0a721d,105933,0,0x0,0,0x7ee81c564450,0x3f3f8b6ba52c,0x7ee79be4b54f,0x7ee79be4ba05,0x3f3f8b6b7229,0x7ee79be4b54f,0x8b517fe736a,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x3f3f8b6b6946,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,106143,0x7b3c718354e,942,Socket node:net:355:16,0x8b517ff99f0,~
code-source-info,0x7b3c718354e
code-creation,JS,10,106264,0x7b3c7183eb6,504,Duplex node:internal/streams/duplex:65:16,0xcb902b60d70,~
code-source-info,0x7b3c7183eb
code-creation,JS,10,106332,0x7b3c7184aae,254,Readable node:internal/streams/readable:318:18,0xcb902b65368,~
code-source-info,0x7b3c7184aae,91,10100,11117,C0O10100C9O10114C16O10125C21O10151C28O10158C33O10180C34O10184C51O10214C56O10236C61O10257C66O10277C71O10302C77O10197C81O10539C99O10561C104O10559C108O10605C112O10643C120O10670C123O10691C127O10681C131O10721C139O10751C142O10775C146O10765C150O10808C158O10840C161O10866C165O10856C169O10894C175O10908C182O10931C190O10908C195O10953C202O10960C210O10960C216O10984C219O10993C226O11019C233O11031C246O11031C253O11116,,
code-creation,JS,10,106372,0x7b3c7184d36,18,Stream node:internal/streams/legacy:11:16,0xcb902b622d8,~
code-source-info,0x7b3c7184d36,90,145,178,C0O156C5O159C10O159C17O177,,
code-creation,JS,10,106522,0x7b3c7185e16,379,ReadableState node:internal/streams/readable:260:23,0xcb902b65318,~
code-source-info,0x7b3c7185e16,91,7946,9919,C0O8094C2O8099C7O8109C12O8122C14O8120C20O8137C22O8135C28O8152C30O8150C33O8107C37O8284C41O8307C47O8323C49O8328C58O8339C63O8336C67O8355C73O8371C75O8390C81O8414C83O8419C92O8430C97O8427C101O8588C106O8609C110O8623C125O8623C134O8696C139O8696C143O8607C147O8731C149O8743C153O8751C154O8768C158O8775C159O8787C163O8794C165O8805C169O8873C173O8896C183O8917C185O8922C194O8934C196O8933C201O8930C205O9022C209O9045C219O9068C221O9073C230O9085C232O9084C237O9081C241O9321C248O9328C256O9349C261O9396C268O9426C273O9445C275O9450C284O9461C289O9458C295O9492C300O9503C305O9503C312O9538C314O9559C320O9593C327O9599C332O9593C333O9751C334O9774C338O9785C342O9808C348O9824C350O9843C353O9865C360O9839C365O9837C369O9904C373O9894C378O9918,,
code-creation,JS,10,106619,0x7b3c718626e,98,getHighWaterMark node:internal/streams/state:32:26,0xcb902b6e968,~
code-source-info,0x7b3c718626e,93,826,1234,C0O880C12O880C18O931C21O954C26O959C33O987C38O1013C47O1035C56O1080C69O1086C74O1080C75O1134C80O1141C84O1156C85O1183C88O1220C93O1190C97O1232,,
code-creation,JS,10,106645,0x7b3c7186576,26,highWaterMarkFrom node:internal/streams/state:14:27,0xcb902b6e878,~
code-source-info,0x7b3c7186576,93,313,454,C0O363C7O395C15O415C19O433C25O452,,
code-creation,JS,10,106673,0x7b3c7186666,22,get node:internal/streams/readable:130:8,0xcb902b71c40,~
code-source-info,0x7b3c7186666,91,3811,3852,C0O3816C4O3829C6O3828C12O3837C17O3844C21O3850,,
code-creation,JS,10,106691,0x7b3c718675e,15,getDefaultHighWaterMark node:internal/streams/state:19:33,0xcb902b6e8c8,~
code-source-info,0x7b3c718675e,93,488,586,C0O505C6O525C12O558C14O584,,
code-creation,JS,10,106780,0x7b3c7186bb6,418,WritableState node:internal/streams/writable:302:23,0xcb902b78710,~
code-source-info,0x7b3c7186bb
code-creation,JS,10,106829,0x7b3c7186ff6,22,get node:internal/streams/writable:129:8,0xcb902b7eec0,~
code-source-info,0x7b3c7186ff6,96,3892,3933,C0O3897C4O3910C6O3909C12O3918C17O3925C21O3931,,
code-creation,JS,10,106873,0x7b3c71872ce,67,resetBuffer node:internal/streams/writable:362:21,0xcb902b78760,~
code-source-info,0x7b3c71872ce,96,11647,11791,C0O11659C2O11665C6O11681C10O11691C11O11711C15O11718C17O11724C26O11735C31O11749C33O11747C39O11732C43O11761C45O11767C54O11779C56O11778C61O11775C66O11790,,
code-creation,JS,10,106908,0x7b3c71875be,50,set node:internal/streams/readable:131:8,0xcb902b71c90,~
code-source-info,0x7b3c71875be,91,3861,3947,C0O3877C4O3888C8O3893C17O3904C20O3901C26O3920C30O3925C39O3936C44O3933C49O3946,,
code-creation,JS,10,106957,0x7b3c71877f6,131,createHandle node:net:167:22,0x8b517ff9630,~
code-source-info,0x7b3c71877f6,80,4763,5125,C0O4783C13O4783C18O4826C23O4826C28O4849C30O4858C35O4876C42O4899C46O4911C49O4925C57O4934C60O4948C67O4883C72O4962C73O4970C75O4979C80O4996C87O5018C91O5030C94O5043C102O5052C105O5065C112O5003C117O5079C118O5087C125O5093C130O5087,,
tick,0x7ee81914a8be,106992,0,0x0,3,0x7ee81c5678d0,0x7b3c7183700,0x3f3f8b6b6977,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,107031,0x7b3c71879be,155, node:internal/validators:114:3,0x307edb925cb8,~
code-source-info,0x7b3c71879be,15,3045,3508,C36O3186C42O3225C58O3231C63O3225C64O3290C69O3295C75O3327C91O3333C96O3327C97O3392C99O3402C106O3417C111O3432C121O3471C134O3484C147O3438C152O3432C154O3507,,
code-creation,JS,10,107065,0x7b3c7187b5e,21,guessHandleType node:internal/util:835:25,0x307edb92b580,~
code-source-info,0x7b3c7187b5e,16,23125,23198,C0O23147C5O23147C10O23171C17O23189C20O23196,,
code-creation,JS,10,107126,0x7b3c7187c4e,14,set node:net:2368:6,0x8b517ffbd00,~
code-source-info,0x7b3c7187c4e,80,66096,66129,C0O66102C2O66114C7O66123C13O66127,,
code-creation,JS,10,107147,0x7b3c7187d36,8,get node:net:2367:6,0x8b517ffbcb0,~
code-source-info,0x7b3c7187d36,80,66061,66089,C0O66066C2O66078C4O66077C7O66087,,
code-creation,JS,10,107233,0x7b3c7187fb6,329,Readable.on node:internal/streams/readable:1125:33,0xcb902b66700,~
code-source-info,0x7b3c7187fb
code-creation,JS,10,107300,0x7b3c7188346,135,initSocketHandle node:net:311:26,0x8b517ff9950,~
code-source-info,0x7b3c7188346,80,8087,8665,C0O8103C5O8103C9O8119C10O8134C14O8220C20O8240C27O8248C32O8262C36O8279C43O8296C45O8294C49O8314C51O8319C57O8357C62O8338C66O8336C70O8386C72O8391C74O8390C78O8405C80O8441C82O8446C84O8445C88O8465C90O8506C94O8524C99O8529C105O8562C106O8569C107O8578C109O8583C114O8592C118O8622C123O8630C128O8630C134O8664,,
code-creation,JS,10,107367,0x7b3c718857e,155,undestroy node:internal/streams/destroy:172:19,0xcb902b5f338,~
code-source-info,0x7b3c718857e,88,3191,3863,C0O3213C5O3246C10O3265C14O3278C15O3292C19O3304C20O3313C24O3326C25O3341C29O3354C30O3366C34O3379C35O3389C39O3401C40O3416C44O3429C45O3439C49O3464C57O3460C61O3505C69O3501C73O3532C77O3545C78O3559C82O3571C83O3583C87O3596C88O3605C92O3618C93O3633C97O3646C98O3656C102O3668C103O3683C107O3696C108O3710C112O3723C113O3737C117O3762C125O3758C129O3799C137O3795C141O3838C149O3834C154O3862,,
code-creation,JS,10,107405,0x7b3c71892ce,61,set node:internal/streams/readable:184:8,0xcb902b65d70,~
code-source-info,0x7b3c71892ce,91,6226,6389,C0O6242C4O6263C6O6268C11O6283C15O6300C17O6305C26O6316C31O6313C37O6349C39O6354C48O6366C50O6365C55O6362C60O6388,,
code-creation,JS,10,107437,0x7b3c7189406,50,set node:internal/streams/writable:130:8,0xcb902b7ef10,~
code-source-info,0x7b3c7189406,96,3942,4028,C0O3958C4O3969C8O3974C17O3985C20O3982C26O4001C30O4006C39O4017C44O4014C49O4027,,
code-creation,JS,10,107461,0x7b3c7189526,61,set node:internal/streams/writable:215:8,0xcb902b78d50,~
code-source-info,0x7b3c7189526,96,7087,7250,C0O7103C4O7124C6O7129C11O7144C15O7161C17O7166C26O7177C31O7174C37O7210C39O7215C48O7227C50O7226C55O7223C60O7249,,
code-creation,JS,10,107485,0x7b3c718966e,47,get node:internal/streams/writable:228:8,0xcb902b78da0,~
code-source-info,0x7b3c718966e,96,7323,7420,C0O7328C2O7341C4O7340C10O7351C12O7349C17O7365C24O7379C26O7378C32O7389C34O7387C39O7400C46O7418,,
code-creation,JS,10,107541,0x7b3c71899f6,32,getNewAsyncId node:net:186:23,0x8b517ff9680,~
code-source-info,0x7b3c71899f6,80,5150,5266,C0O5163C4O5196C14O5229C17O5229C22O5251C27O5251C31O5264,,
code-creation,JS,10,107604,0x7b3c7189ca6,5,get node:internal/bootstrap/node:379:8,0x305ee1ea4130,~
code-source-info,0x7b3c7189ca6,12,13085,13118,C0O13096C4O13112,,
code-creation,JS,10,107634,0x7b3c7189e56,5,get /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/redir-stdout.js:19:10,0x3f3f8b6b66c0,~
code-source-info,0x7b3c7189e56,112,392,404,C0O398C4O404,,
code-creation,Eval,10,108049,0x7b3c718a38e,5, /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/soft-exit.js:1:1,0x7b3c718a248,~
script-source,118,/home/user/rustdoc-js-profile/node_modules/0x/lib/preload/soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x7b3c718a38e,118,0,85,C0O0C4O85,,
code-creation,JS,10,108064,0x7b3c718a42e,56, /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/soft-exit.js:1:1,0x7b3c718a308,~
code-source-info,0x7b3c718a42e,118,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
tick,0x7ee81c35367b,108156,1,0x7ee81a60d350,5,0x7ee81bf0da80,0x7ee79be4ae63,0x265bfecbc79c,0x2563a958a3ef,0x2563a9588854,0x2563a9588444,0x7b3c718a443,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fd2bd2,0x8b517fd18f1,0x8b517fd16ad,0x8b517fcb25a,0x365dd3df813d,0x365dd3df659e,0x365dd3df629c
code-creation,JS,10,108224,0x7b3c718acf6,42,initializeFrozenIntrinsics node:internal/process/pre_execution:710:36,0x365dd3de92d0,~
code-source-info,0x7b3c718acf6,68,22588,22740,C0O22595C8O22599C14O22644C22O22644C26O22694C32O22694C37O22731C41O22739,,
code-creation,JS,10,108247,0x7b3c718ae06,22,markBootstrapComplete node:internal/process/pre_execution:734:31,0x365dd3de93c0,~
code-source-info,0x7b3c718ae06,68,23227,23291,C0O23234C6O23234C11O23264C16O23265C21O23290,,
code-creation,JS,10,108351,0x7b3c718afb6,128,executeUserEntryPoint node:internal/modules/run_main:159:31,0x365dd3ded850,~
code-source-info,0x7b3c718afb6,70,5694,6392,C7O5710C14O5714C22O5744C25O5744C30O5790C33O5790C38O5826C47O5867C54O5909C61O5909C66O5932C70O5909C72O5944C82O5944C90O6311C96O6311C101O6300C106O6362C121O6362C127O6391,,
code-creation,JS,10,108414,0x7b3c718b816,248,resolveMainPath node:internal/modules/run_main:24:25,0x365dd3ded6c0,~
code-source-info,0x7b3c718b816,70,657,1792,C0O688C8O688C13O765C15O777C17O793C22O813C30O817C36O863C37O870C38O877C43O893C48O893C56O1078C62O1078C67O1067C72O1140C79O1150C82O1155C87O1155C100O1140C106O1189C110O1206C111O1213C112O1248C120O1248C125O1294C127O1350C133O1350C138O1335C146O1414C154O1412C164O1462C166O1478C176O1497C186O1504C191O1571C199O1571C204O1536C209O1642C217O1642C222O1628C227O1676C230O1722C237O1676C242O1750C244O1750C245O1774C247O1790,,
code-creation,JS,10,108562,0x7b3c718bb36,199,shouldUseESMLoader node:internal/modules/run_main:61:28,0x365dd3ded710,~
code-source-info,0x7b3c718bb36,70,1980,3406,C0O1995C8O1999C15O2045C20O2061C21O2073C22O2249C30O2249C35O2465C43O2465C48O2511C54O2518C59O2537C65O2544C70O2551C71O2563C72O2622C78O2638C84O2638C91O2683C92O2695C93O2700C99O2717C105O2717C112O2762C113O2775C114O2810C120O2810C125O2789C130O2873C135O2983C142O2987C166O3022C167O3034C168O3062C169O3075C170O3136C178O3140C184O3317C191O3324C196O3366C197O3381C198O3394,,
code-creation,Eval,10,108940,0x7b3c718c976,5, /home/user/rustdoc-js-profile/src/tester.js:1:1,0x7b3c718c6f0,~
script-source,119,/home/user/rustdoc-js-profile/src/tester.js,const fs = require("fs");\nconst path = require("path");\n\nfunction arrayToCode(array) {\n    return array.map((value\x2C index) => {\n        value = value.split("&nbsp;").join(" ");\n        return (index % 2 === 1) ? ("`" + value + "`") : value;\n    }).join("");\n}\n\nfunction loadContent(content) {\n    const Module = module.constructor;\n    const m = new Module();\n    m._compile(content\x2C "tmp.js");\n    m.exports.ignore_order = content.indexOf("\\n// ignore-order\\n") !== -1 ||\n        content.startsWith("// ignore-order\\n");\n    m.exports.exact_check = content.indexOf("\\n// exact-check\\n") !== -1 ||\n        content.startsWith("// exact-check\\n");\n    m.exports.should_fail = content.indexOf("\\n// should-fail\\n") !== -1 ||\n        content.startsWith("// should-fail\\n");\n    return m.exports;\n}\n\nfunction shouldIgnoreField(fieldName) {\n    return fieldName === "query" || fieldName === "correction" ||\n        fieldName === "proposeCorrectionFrom" ||\n        fieldName === "proposeCorrectionTo";\n}\n\nfunction lookForEntry(entry\x2C data) {\n    return data.findIndex(data_entry => {\n        let allGood = true;\n        for (const key in entry) {\n            if (!Object.prototype.hasOwnProperty.call(entry\x2C key)) {\n                continue;\n            }\n            let value = data_entry[key];\n            // To make our life easier\x2C if there is a "parent" type\x2C we add it to the path.\n            if (key === "path" && data_entry["parent"] !== undefined) {\n                if (value.length > 0) {\n                    value += "::" + data_entry["parent"]["name"];\n                } else {\n                    value = data_entry["parent"]["name"];\n                }\n            }\n            if (value !== entry[key]) {\n                allGood = false;\n                break;\n            }\n        }\n        return allGood === true;\n    });\n}\n\n// This function checks if `expected` has all the required fields needed for the checks.\nfunction checkNeededFields(fullPath\x2C expected\x2C error_text\x2C queryName\x2C position) {\n    let fieldsToCheck;\n    if (fullPath.length === 0) {\n        fieldsToCheck = [\n            "foundElems"\x2C\n            "original"\x2C\n            "returned"\x2C\n            "userQuery"\x2C\n            "error"\x2C\n        ];\n    } else if (fullPath.endsWith("elems") || fullPath.endsWith("returned")) {\n        fieldsToCheck = [\n            "name"\x2C\n            "fullPath"\x2C\n            "pathWithoutLast"\x2C\n            "pathLast"\x2C\n            "generics"\x2C\n        ];\n    } else if (fullPath.endsWith("generics")) {\n        fieldsToCheck = [\n            "name"\x2C\n            "fullPath"\x2C\n            "pathWithoutLast"\x2C\n            "pathLast"\x2C\n            "generics"\x2C\n        ];\n    } else {\n        fieldsToCheck = [];\n    }\n    for (const field of fieldsToCheck) {\n        if (!Object.prototype.hasOwnProperty.call(expected\x2C field)) {\n            let text = `${queryName}==> Mandatory key \\`${field}\\` is not present`;\n            if (fullPath.length > 0) {\n                text += ` in field \\`${fullPath}\\``;\n                if (position !== null) {\n                    text += ` (position ${position})`;\n                }\n            }\n            error_text.push(text);\n        }\n    }\n}\n\nfunction valueCheck(fullPath\x2C expected\x2C result\x2C error_text\x2C queryName) {\n    if (Array.isArray(expected)) {\n        let i;\n        for (i = 0; i < expected.length; ++i) {\n            checkNeededFields(fullPath\x2C expected[i]\x2C error_text\x2C queryName\x2C i);\n            if (i >= result.length) {\n                error_text.push(`${queryName}==> EXPECTED has extra value in array from field ` +\n                    `\\`${fullPath}\\` (position ${i}): \\`${JSON.stringify(expected[i])}\\``);\n            } else {\n                valueCheck(fullPath + "[" + i + "]"\x2C expected[i]\x2C result[i]\x2C error_text\x2C queryName);\n            }\n        }\n        for (; i < result.length; ++i) {\n            error_text.push(`${queryName}==> RESULT has extra value in array from field ` +\n                `\\`${fullPath}\\` (position ${i}): \\`${JSON.stringify(result[i])}\\` ` +\n                "compared to EXPECTED");\n        }\n    } else if (expected !== null && typeof expected !== "undefined" &&\n               expected.constructor == Object) { // eslint-disable-line eqeqeq\n        for (const key in expected) {\n            if (shouldIgnoreField(key)) {\n                continue;\n            }\n            if (!Object.prototype.hasOwnProperty.call(expected\x2C key)) {\n                continue;\n            }\n            if (!Object.prototype.hasOwnProperty.call(result\x2C key)) {\n                error_text.push("==> Unknown key \\"" + key + "\\"");\n                break;\n            }\n            let result_v = result[key];\n            if (result_v !== null && key === "error") {\n                if (!result_v.forEach) {\n                    throw result_v;\n                }\n                result_v = arrayToCode(result_v);\n            }\n            const obj_path = fullPath + (fullPath.length > 0 ? "." : "") + key;\n            valueCheck(obj_path\x2C expected[key]\x2C result_v\x2C error_text\x2C queryName);\n        }\n    } else {\n        const expectedValue = JSON.stringify(expected);\n        const resultValue = JSON.stringify(result);\n        if (expectedValue !== resultValue) {\n            error_text.push(`${queryName}==> Different values for field \\`${fullPath}\\`:\\n` +\n                `EXPECTED: \\`${expectedValue}\\`\\nRESULT:   \\`${resultValue}\\``);\n        }\n    }\n}\n\n/**\n * Load searchNNN.js and search-indexNNN.js.\n *\n * @param {string} doc_folder      - Path to a folder generated by running rustdoc\n * @param {string} resource_suffix - Version number between filename and .js\x2C e.g. "1.59.0"\n * @returns {Object}               - Object containing keys: `doSearch`\x2C which runs a search\n *   with the loaded index and returns a table of results; `parseQuery`\x2C which is the\n *   `parseQuery` function exported from the search module; and `getCorrections`\x2C which runs\n *   a search but returns type name corrections instead of results.\n */\nfunction loadSearchJS(doc_folder\x2C resource_suffix) {\n    const searchIndexJs = path.join(doc_folder\x2C "search-index" + resource_suffix + ".js");\n    const searchIndex = require(searchIndexJs);\n\n    globalThis.searchState = {\n        descShards: new Map()\x2C\n        loadDesc: async function({descShard\x2C descIndex}) {\n            if (descShard.promise === null) {\n                descShard.promise = new Promise((resolve\x2C reject) => {\n                    descShard.resolve = resolve;\n                    const ds = descShard;\n                    const fname = `${ds.crate}-desc-${ds.shard}-${resource_suffix}.js`;\n                    fs.readFile(\n                        `${doc_folder}/search.desc/${descShard.crate}/${fname}`\x2C\n                        (err\x2C data) => {\n                            if (err) {\n                                reject(err);\n                            } else {\n                                eval(data.toString("utf8"));\n                            }\n                        }\x2C\n                    );\n                });\n            }\n            const list = await descShard.promise;\n            return list[descIndex];\n        }\x2C\n        loadedDescShard: function(crate\x2C shard\x2C data) {\n            //console.log(this.descShards);\n            this.descShards.get(crate)[shard].resolve(data.split("\\n"));\n        }\x2C\n        paramNameShards: new Map()\x2C\n        paramNameResolvers: new Map()\x2C\n        loadParamNames: async function(crate) {\n            if (this.paramNameShards.has(crate)) {\n                return this.paramNameShards.get(crate);\n            } else {\n                const promise = new Promise((resolve\x2C reject) => {\n                    this.paramNameResolvers.set(crate\x2C resolve);\n                    const fname = `${crate}-param-names${resource_suffix}.js`;\n                    fs.readFile(\n                        `${doc_folder}/search.desc/${crate}/${fname}`\x2C\n                        (err\x2C data) => {\n                            if (err) {\n                                reject(err);\n                            } else {\n                                eval(data.toString("utf8"));\n                            }\n                        }\x2C\n                    );\n                });\n                this.paramNameShards.set(crate\x2C promise);\n                return promise;\n            }\n        }\x2C\n        loadedParamNames: function(crate\x2C data) {\n            this.paramNameResolvers.get(crate)(JSON.parse(data));\n        }\x2C\n    };\n\n\n    const staticFiles = path.join(doc_folder\x2C "static.files");\n    const searchJs = fs.readdirSync(staticFiles).find(f => f.match(/search.*\\.js$/));\n    const searchModule = require(path.join(staticFiles\x2C searchJs));\n    searchModule.initSearch(searchIndex.searchIndex);\n    const docSearch = searchModule.docSearch;\n\n    return {\n        doSearch: async function(queryStr\x2C filterCrate\x2C currentCrate) {\n            const result = await docSearch.execQuery(searchModule.parseQuery(queryStr)\x2C\n                filterCrate\x2C currentCrate);\n            for (const tab in result) {\n                if (!Object.prototype.hasOwnProperty.call(result\x2C tab)) {\n                    continue;\n                }\n                if (!(result[tab] instanceof Array)) {\n                    continue;\n                }\n                for (const entry of result[tab]) {\n                    for (const key in entry) {\n                        if (!Object.prototype.hasOwnProperty.call(entry\x2C key)) {\n                            continue;\n                        }\n                        if (key === "displayTypeSignature") {\n                            const {type\x2C mappedNames\x2C whereClause} =\n                                await entry.displayTypeSignature;\n                            entry.displayType = arrayToCode(type);\n                            entry.displayMappedNames = [...mappedNames.entries()]\n                                .map(([name\x2C qname]) => {\n                                    return `${name} = ${qname}`;\n                                }).join("\x2C ");\n                            entry.displayWhereClause = [...whereClause.entries()]\n                                .flatMap(([name\x2C value]) => {\n                                    if (value.length === 0) {\n                                        return [];\n                                    }\n                                    return [`${name}: ${arrayToCode(value)}`];\n                                }).join("\x2C ");\n                        }\n                    }\n                }\n            }\n            return result;\n        }\x2C\n        getCorrections: function(queryStr\x2C filterCrate\x2C currentCrate) {\n            const parsedQuery = searchModule.parseQuery(queryStr);\n            docSearch.execQuery(parsedQuery\x2C filterCrate\x2C currentCrate);\n            return parsedQuery.correction;\n        }\x2C\n        parseQuery: searchModule.parseQuery\x2C\n    };\n}\n\nfunction showHelp() {\n    console.log("rustdoc-js options:");\n    console.log("  --doc-folder [PATH]        : location of the generated doc folder");\n    console.log("  --help                     : show this message then quit");\n    console.log("  --crate-name [STRING]      : crate name to be used");\n    console.log("  --query [QUERY]            : searches to run");\n}\n\nfunction parseOptions(args) {\n    const opts = {\n        "crate_name": ""\x2C\n        "doc_folder": ""\x2C\n        "resource_suffix": ""\x2C\n        "queries": []\x2C\n    };\n    const correspondences = {\n        "--doc-folder": "doc_folder"\x2C\n        "--query": "queries"\x2C\n        "--crate-name": "crate_name"\x2C\n    };\n\n    for (let i = 0; i < args.length; ++i) {\n        const arg = args[i];\n        if (Object.prototype.hasOwnProperty.call(correspondences\x2C arg)) {\n            i += 1;\n            if (i >= args.length) {\n                console.log("Missing argument after `" + arg + "` option.");\n                return null;\n            }\n            const arg_value = args[i];\n            if (arg !== "--query") {\n                opts[correspondences[arg]] = arg_value;\n            } else {\n                opts[correspondences[arg]].push(arg_value);\n            }\n        } else if (arg === "--help") {\n            showHelp();\n            process.exit(0);\n        } else {\n            console.log("Unknown option `" + arg + "`.");\n            console.log("Use `--help` to see the list of options");\n            return null;\n        }\n    }\n    if (opts["doc_folder"].length < 1) {\n        console.log("Missing `--doc-folder` option.");\n    } else if (opts["crate_name"].length < 1) {\n        console.log("Missing `--crate-name` option.");\n    } else if (opts["queries"].length < 1) {\n        console.log("At least one `--query` option is required.");\n    } else {\n        return opts;\n    }\n    return null;\n}\n\nasync function main(argv) {\n    const opts = parseOptions(argv.slice(2));\n    if (opts === null) {\n        return 1;\n    }\n\n    const parseAndSearch = loadSearchJS(\n        opts["doc_folder"]\x2C\n        opts["resource_suffix"]\n    );\n\n    if (opts["queries"].length !== 0) {\n        for (const query of opts["queries"]) {\n            process.stdout.write(`Testing ${query} ... `);\n            const start = new Date();\n            const result = await parseAndSearch.doSearch(query\x2C null\x2C opts["crate_name"]);\n            const end = new Date();\n            process.stdout.write(`in_args = ${result.in_args.length}\x2C returned = ${result.returned.length}\x2C others = ${result.others.length}`);\n            process.stdout.write("\\n");\n            process.stdout.write(`wall time = ${end.valueOf() - start.valueOf()}`)\n            process.stdout.write("\\n\\n");\n        }\n    }\n    return 0;\n}\n\nmain(process.argv).catch(e => {\n    console.log(e);\n    process.exit(1);\n}).then(x => process.exit(x));\n\nprocess.on("beforeExit"\x2C () => {\n    console.log("process did not complete");\n    process.exit(1);\n});\n\n
code-source-info,0x7b3c718c976,119,0,13867,C0O0C4O13867,,
code-creation,JS,10,109151,0x7b3c718cef6,199, /home/user/rustdoc-js-profile/src/tester.js:1:1,0x7b3c718c8f0,~
code-source-info,0x7b3c718cef6,119,0,13867,C0O0C102O11C108O11C112O11C114O39C120O39C124O39C126O13658C129O13663C133O13671C138O13658C143O13676C153O13682C159O13733C169O13734C174O13763C178O13771C191O13771C198O13866,,
tick,0x7ee81c3dc7b1,109226,0,0x0,0,0x7ee81c57adf0,0x7ee81bd4d38b,0x8b517fe73a0,0x8b517fe6fd8,0x8b517fd2fed,0x8b517fe6dca,0x8b517fe6c3e,0x7b3c718cf62,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,109329,0x7b3c718e37e,569,main /home/user/rustdoc-js-profile/src/tester.js:328:20,0x7b3c718ccc0,~
code-source-info,0x7b3c718e37e
code-creation,JS,10,109413,0x7b3c718ea6e,349,parseOptions /home/user/rustdoc-js-profile/src/tester.js:280:22,0x7b3c718cc70,~
code-source-info,0x7b3c718ea6e
code-creation,JS,10,109519,0x7b3c718f9b6,345,loadSearchJS /home/user/rustdoc-js-profile/src/tester.js:159:22,0x7b3c718cb88,~
code-source-info,0x7b3c718f9b6,119,6017,10895,C0O6017C42O6075C49O6080C62O6112C68O6130C72O6080C78O6075C80O6164C88O6164C92O6164C94O6193C103O6244C107O6240C116O6269C124O7179C132O7367C136O7363C145O7406C149O7402C158O7437C166O8368C176O6216C180O8502C187O8507C198O8507C204O8502C206O8562C213O8565C221O8565C227O8589C237O8590C242O8562C244O8652C253O8660C256O8665C267O8665C274O8652C278O8652C280O8699C283O8712C291O8735C296O8712C301O8771C304O8784C308O8771C310O8800C315O8827C323O10600C334O10875C344O10893,,
code-creation,JS,10,109613,0x7b3c718fd9e,119,join node:path:1197:7,0x1537ab9b1858,~
code-source-info,0x7b3c718fd9e,33,36539,36949,C0O36539C3O36564C9O36571C14O36584C16O36595C17O36604C19O36629C21O36641C25O36634C30O36674C32O36678C36O36689C44O36689C49O36732C55O36739C60O36754C64O36790C71O36827C76O36841C87O36651C92O36616C96O36866C100O36898C102O36909C103O36914C108O36927C113O36927C118O36945,,
code-creation,JS,10,109668,0x7b3c718ff66,159,normalize node:path:1158:12,0x1537ab9b17b8,~
code-source-info,0x7b3c718ff66,33,35639,36243,C0O35652C8O35652C13O35696C19O35703C24O35716C26O35727C27O35758C34O35758C42O35797C44O35793C48O35853C53O35890C57O35897C61O35853C69O35906C71O35902C75O35957C80O35987C91O35964C98O36041C104O36048C109O36063C113O36087C115O36098C116O36105C126O36143C127O36154C131O36183C141O36201C150O36225C158O36239,,
code-creation,JS,11,109844,0x7ee79be51a00,7312,realpathSync node:fs:2652:22,0x2563a95a6940,^
code-source-info,0x7ee79be51a00,45,70530,74328,,,
code-creation,JS,11,109856,0x7ee79be536c0,48,noop node:internal/util/debuglog:46:14,0x305ee1ea0638,^
code-source-info,0x7ee79be536c0,22,1404,1412,,,
code-creation,JS,11,109864,0x7ee79be53700,164,canBeRequiredWithoutScheme node:internal/bootstrap/realm:297:36,0x168b8b4a9350,^
code-source-info,0x7ee79be53700,9,9588,9656,,,
code-creation,JS,11,109881,0x7ee79be537c0,1636,readPackageScope node:internal/modules/package_json_reader:149:26,0x365dd3de3d70,^
code-source-info,0x7ee79be537c0,66,4262,5057,,,
code-creation,JS,11,109889,0x7ee79be53e40,164,checkListener node:events:275:23,0x305ee1ea6fa8,^
code-source-info,0x7ee79be53e40,23,8119,8175,,,
code-creation,JS,11,109895,0x7ee79be53f00,132,addListener node:events:610:58,0x305ee1ea7ae8,^
code-source-info,0x7ee79be53f00,23,17858,17930,,,
code-creation,JS,11,109905,0x7ee79be53fc0,232,setOwnProperty node:internal/util:732:24,0x307edb92b288,^
code-source-info,0x7ee79be53fc0,16,19826,19993,,,
code-creation,JS,11,109911,0x7ee79be540c0,164,isUint8Array node:internal/util/types:13:22,0x307edb93e9b0,^
code-source-info,0x7ee79be540c0,18,257,342,,,
code-creation,JS,11,109922,0x7ee79be54180,508, node:internal/util:803:18,0x1537ab9b5ae8,^
code-source-info,0x7ee79be54180,16,22103,22223,,,
code-creation,JS,11,109928,0x7ee79be543c0,164,canBeRequiredByUsers node:internal/bootstrap/realm:293:30,0x168b8b4a9300,^
code-source-info,0x7ee79be543c0,9,9496,9551,,,
tick,0x7ffd28bfcae1,110291,1,0x7ee81a634430,3,0x7ee81bf0da80,0x8b517fe5c0d,0x8b517fe5674,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fe6dca,0x8b517fe6c3e,0x7b3c718fa0e,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,Eval,10,110303,0x7b3c7199866,5, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/search-index.js:1:1,0x7b3c7199720,~
script-source,120,/home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/search-index.js,var searchIndex = new Map(JSON.parse('[["bitfield"\x2C{"t":"KKMMQQQQMM"\x2C"n":["Bit"\x2C"BitRange"\x2C"bit"\x2C"bit_range"\x2C"bitfield"\x2C"bitfield_bitrange"\x2C"bitfield_debug"\x2C"bitfield_fields"\x2C"set_bit"\x2C"set_bit_range"]\x2C"q":[[0\x2C"bitfield"]]\x2C"i":"``bj````10"\x2C"f":"``{{{d{b}}f}h}{{{d{j}}ff}c{}}````{{{d{lb}}fh}n}{{{d{lj}}ffc}n{}}"\x2C"D":"Af"\x2C"p":[[10\x2C"Bit"\x2C0]\x2C[1\x2C"reference"\x2Cnull\x2Cnull\x2C1]\x2C[1\x2C"usize"]\x2C[1\x2C"bool"]\x2C[10\x2C"BitRange"\x2C0]\x2C[0\x2C"mut"]\x2C[1\x2C"unit"]]\x2C"r":[]\x2C"b":[]\x2C"c":"OjAAAAAAAAA="\x2C"e":"OjAAAAAAAAA="\x2C"P":[[3\x2C"T"]\x2C[8\x2C""]\x2C[9\x2C"T"]]}]\x2C["cortex_m"\x2C{"t":"ECCCQQCCCQHHHHFNNNNNNNNNNNNNNNNNNNNKMFNNNNNNNHHHHFOFOFOFOFOFOFOFOFOFOTTTTTTTTTTTTTFFOFOFOFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNCNNCNNNNNNNNNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNOOOOOOOONOONNNNGPPFOONNNNOONNOOONNNNNNOOONNNNNNFNNOOOONNNNNGPPPFFGPFPFPGGFPPPPPFPPOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOONOOOOONNNNNNONNNNNNONNNNNNNNNNONNNNNNNNNNOOOOOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNOONNOOONNNFNNOOONNONNNFONNNONNNNPPPPPPPPPPGFGFFPFGNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNONNNNNNNONNNNNNNNOOONNOOOOONNNNNNNNNNNNNNNNNNNNNNNNFONNONNOOOOOOOOONNNFNNNOOONOOOONNNPPPPGPPPPPPPPFPPPPPPGPPPGOOONNNNNNNNOONNNNNNOONNNNNNNNNNNOONNNNNOOOONNNNNNNNNNNNOOPPFGNNNNONNOONNNNNNONNNNNNPPFPFFFGFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNOOOOOONNNNNNOONNNNNNNNNNNNNNNNNNNCCCCCCCCCCFNNNNNNNNNNNNNNNNPFGPPGPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPNNNNNNNNNNNNNPPGNNNNNNNNNNNNN"\x2C"n":["Peripherals"\x2C"asm"\x2C"delay"\x2C"interrupt"\x2C"iprint"\x2C"iprintln"\x2C"itm"\x2C"peripheral"\x2C"register"\x2C"singleton"\x2C"dmb"\x2C"dsb"\x2C"isb"\x2C"nop"\x2C"Delay"\x2C"borrow"\x2C"borrow_mut"\x2C"delay_ms"\x2C""\x2C""\x2C""\x2C""\x2C"delay_us"\x2C""\x2C""\x2C""\x2C""\x2C"free"\x2C"from"\x2C"into"\x2C"new"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"with_source"\x2C"InterruptNumber"\x2C"number"\x2C"Aligned"\x2C"borrow"\x2C"borrow_mut"\x2C"from"\x2C"into"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"write_aligned"\x2C"write_all"\x2C"write_fmt"\x2C"write_str"\x2C"CBP"\x2C""\x2C"CPUID"\x2C""\x2C"DCB"\x2C""\x2C"DWT"\x2C""\x2C"FPB"\x2C""\x2C"FPU"\x2C""\x2C"ICB"\x2C""\x2C"ITM"\x2C""\x2C"MPU"\x2C""\x2C"NVIC"\x2C""\x2C"PTR"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"Peripherals"\x2C"SAU"\x2C""\x2C"SCB"\x2C""\x2C"SYST"\x2C""\x2C"TPIU"\x2C""\x2C"borrow"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"bpiall"\x2C"cache_dminline"\x2C"cache_iminline"\x2C"cache_num_sets_ways"\x2C"cbp"\x2C"clean_dcache"\x2C"clean_dcache_by_address"\x2C"clean_dcache_by_ref"\x2C"clean_dcache_by_slice"\x2C"clean_invalidate_dcache"\x2C"clean_invalidate_dcache_by_address"\x2C"clear_current"\x2C"clear_pendst"\x2C"clear_pendsv"\x2C"clear_sleepdeep"\x2C"clear_sleeponexit"\x2C"configure"\x2C"cpi_count"\x2C"cpuid"\x2C"cycle_count"\x2C"cycle_counter_enabled"\x2C"dcache_enabled"\x2C"dcb"\x2C"dccimvac"\x2C"dccisw"\x2C"dccmvac"\x2C"dccmvau"\x2C"dccsw"\x2C"dcimvac"\x2C"dcisw"\x2C"deref"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"deref_mut"\x2C""\x2C"disable"\x2C"disable_counter"\x2C"disable_cycle_counter"\x2C"disable_dcache"\x2C"disable_debug_monitor"\x2C"disable_exception_tracing"\x2C"disable_icache"\x2C"disable_interrupt"\x2C"disable_trace"\x2C"dwt"\x2C"enable"\x2C"enable_continuous_formatting"\x2C"enable_counter"\x2C"enable_cycle_counter"\x2C"enable_dcache"\x2C"enable_debug_monitor"\x2C"enable_exception_tracing"\x2C"enable_icache"\x2C"enable_interrupt"\x2C"enable_pc_samples"\x2C"enable_trace"\x2C"exception_count"\x2C"fold_count"\x2C"fpb"\x2C"fpu"\x2C"from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"get_clock_source"\x2C"get_current"\x2C"get_cycle_count"\x2C"get_priority"\x2C""\x2C"get_reload"\x2C"get_ticks_per_10ms"\x2C"has_cycle_counter"\x2C"has_exception_trace"\x2C"has_external_match"\x2C"has_profiling_counter"\x2C"has_reference_clock"\x2C"has_wrapped"\x2C"icache_enabled"\x2C"icb"\x2C"iciallu"\x2C"icimvau"\x2C"into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"invalidate_dcache_by_address"\x2C"invalidate_dcache_by_ref"\x2C"invalidate_dcache_by_slice"\x2C"invalidate_icache"\x2C"is_active"\x2C"is_counter_enabled"\x2C"is_debugger_attached"\x2C"is_enabled"\x2C""\x2C"is_interrupt_enabled"\x2C"is_pending"\x2C"is_pendst_pending"\x2C"is_pendsv_pending"\x2C"is_precise"\x2C"itm"\x2C"lsu_count"\x2C"mask"\x2C"mpu"\x2C"num_comp"\x2C"nvic"\x2C"pend"\x2C"request"\x2C"scb"\x2C"select_cache"\x2C"set_clock_source"\x2C"set_cpi_count"\x2C"set_cycle_count"\x2C"set_exception_count"\x2C"set_fold_count"\x2C"set_lsu_count"\x2C"set_pendst"\x2C"set_pendsv"\x2C"set_priority"\x2C""\x2C"set_reload"\x2C"set_sleep_count"\x2C"set_sleepdeep"\x2C"set_sleeponexit"\x2C"set_swo_baud_rate"\x2C"set_trace_output_protocol"\x2C"sleep_count"\x2C"steal"\x2C"swo_supports"\x2C"sys_reset"\x2C"syst"\x2C"take"\x2C"tpiu"\x2C"trace_output_protocol"\x2C"try_from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"unlock"\x2C""\x2C"unmask"\x2C"unpend"\x2C"vect_active"\x2C"RegisterBlock"\x2C"borrow"\x2C"borrow_mut"\x2C"bpiall"\x2C"dccimvac"\x2C"dccisw"\x2C"dccmvac"\x2C"dccmvau"\x2C"dccsw"\x2C"dcimvac"\x2C"dcisw"\x2C"from"\x2C"iciallu"\x2C"icimvau"\x2C"into"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"CsselrCacheType"\x2C"DataOrUnified"\x2C"Instruction"\x2C"RegisterBlock"\x2C"afr"\x2C"base"\x2C"borrow"\x2C""\x2C"borrow_mut"\x2C""\x2C"ccsidr"\x2C"clidr"\x2C"clone"\x2C"clone_to_uninit"\x2C"csselr"\x2C"ctr"\x2C"dfr"\x2C"eq"\x2C"fmt"\x2C"from"\x2C""\x2C"into"\x2C""\x2C"isar"\x2C"mmfr"\x2C"pfr"\x2C"try_from"\x2C""\x2C"try_into"\x2C""\x2C"type_id"\x2C""\x2C"RegisterBlock"\x2C"borrow"\x2C"borrow_mut"\x2C"dcrdr"\x2C"dcrsr"\x2C"demcr"\x2C"dhcsr"\x2C"from"\x2C"into"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"AccessType"\x2C"Address"\x2C""\x2C"AddressData"\x2C"Comparator"\x2C"ComparatorAddressSettings"\x2C"ComparatorFunction"\x2C"CompareMatchEvent"\x2C"Ctrl"\x2C"CycleCount"\x2C"CycleCountSettings"\x2C"Data"\x2C"DwtError"\x2C"EmitOption"\x2C"Function"\x2C"InvalidFunction"\x2C"PC"\x2C"PCData"\x2C"ReadOnly"\x2C"ReadWrite"\x2C"RegisterBlock"\x2C"WatchpointDebugEvent"\x2C"WriteOnly"\x2C"access_type"\x2C"address"\x2C"bit"\x2C""\x2C"bit_range"\x2C""\x2C"borrow"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"c"\x2C"clone"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"clone_to_uninit"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"comp"\x2C"compare"\x2C"configure"\x2C"cpicnt"\x2C"ctrl"\x2C"cyccnt"\x2C"emit"\x2C""\x2C"eq"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"exccnt"\x2C"fmt"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"foldcnt"\x2C"from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"function"\x2C"into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"lar"\x2C"lsr"\x2C"lsucnt"\x2C"mask"\x2C""\x2C"pcsr"\x2C"set_bit"\x2C""\x2C"set_bit_range"\x2C""\x2C"sleepcnt"\x2C"try_from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"RegisterBlock"\x2C"borrow"\x2C"borrow_mut"\x2C"comp"\x2C"ctrl"\x2C"from"\x2C"into"\x2C"lar"\x2C"lsr"\x2C"remap"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"RegisterBlock"\x2C"borrow"\x2C"borrow_mut"\x2C"fpcar"\x2C"fpccr"\x2C"fpdscr"\x2C"from"\x2C"into"\x2C"mvfr"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"RegisterBlock"\x2C"actlr"\x2C"borrow"\x2C"borrow_mut"\x2C"from"\x2C"ictr"\x2C"into"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"AsyncTPIU"\x2C"Disabled"\x2C""\x2C"Enabled"\x2C"EnabledDiv16"\x2C"EnabledDiv4"\x2C"EnabledDiv64"\x2C"Every128Cycles"\x2C"Every8192Cycles"\x2C"EveryPacket"\x2C"GlobalTimestampOptions"\x2C"ITMSettings"\x2C"LocalTimestampOptions"\x2C"RegisterBlock"\x2C"Stim"\x2C"SystemClock"\x2C"Tcr"\x2C"TimestampClkSrc"\x2C"bit"\x2C"bit_range"\x2C"borrow"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"bus_id"\x2C"clone"\x2C""\x2C""\x2C""\x2C""\x2C"clone_to_uninit"\x2C""\x2C""\x2C""\x2C""\x2C"enable"\x2C"eq"\x2C""\x2C""\x2C""\x2C"fmt"\x2C""\x2C""\x2C""\x2C"forward_dwt"\x2C"from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"global_timestamps"\x2C"into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"is_fifo_ready"\x2C"lar"\x2C"local_timestamps"\x2C"lsr"\x2C"set_bit"\x2C"set_bit_range"\x2C"stim"\x2C"tcr"\x2C"ter"\x2C"timestamp_clk_src"\x2C"tpr"\x2C"try_from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"write_u16"\x2C"write_u32"\x2C"write_u8"\x2C"RegisterBlock"\x2C"_type"\x2C"borrow"\x2C"borrow_mut"\x2C"ctrl"\x2C"from"\x2C"into"\x2C"rasr"\x2C"rasr_a1"\x2C"rasr_a2"\x2C"rasr_a3"\x2C"rbar"\x2C"rbar_a1"\x2C"rbar_a2"\x2C"rbar_a3"\x2C"rnr"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"RegisterBlock"\x2C"borrow"\x2C"borrow_mut"\x2C"from"\x2C"iabr"\x2C"icer"\x2C"icpr"\x2C"into"\x2C"ipr"\x2C"iser"\x2C"ispr"\x2C"stir"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"BusFault"\x2C""\x2C"DebugMonitor"\x2C""\x2C"Exception"\x2C""\x2C"HardFault"\x2C"Interrupt"\x2C"MemoryManagement"\x2C""\x2C"NonMaskableInt"\x2C"PendSV"\x2C""\x2C"RegisterBlock"\x2C"SVCall"\x2C""\x2C"SecureFault"\x2C""\x2C"SysTick"\x2C""\x2C"SystemHandler"\x2C"ThreadMode"\x2C"UsageFault"\x2C""\x2C"VectActive"\x2C"afsr"\x2C"aircr"\x2C"bfar"\x2C"borrow"\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C""\x2C"ccr"\x2C"cfsr"\x2C"clone"\x2C""\x2C""\x2C"clone_to_uninit"\x2C""\x2C""\x2C"cpacr"\x2C"dfsr"\x2C"eq"\x2C""\x2C""\x2C"fmt"\x2C""\x2C""\x2C"from"\x2C""\x2C""\x2C""\x2C""\x2C"hfsr"\x2C"icsr"\x2C"into"\x2C""\x2C""\x2C""\x2C"irqn"\x2C"mmfar"\x2C"scr"\x2C"shcsr"\x2C"shpr"\x2C"try_from"\x2C""\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C""\x2C"vtor"\x2C"irqn"\x2C"Core"\x2C"External"\x2C"RegisterBlock"\x2C"SystClkSource"\x2C"borrow"\x2C""\x2C"borrow_mut"\x2C""\x2C"calib"\x2C"clone"\x2C"clone_to_uninit"\x2C"csr"\x2C"cvr"\x2C"eq"\x2C"fmt"\x2C"from"\x2C""\x2C"into"\x2C""\x2C"rvr"\x2C"try_from"\x2C""\x2C"try_into"\x2C""\x2C"type_id"\x2C""\x2C"AsyncSWOManchester"\x2C"AsyncSWONRZ"\x2C"Ffcr"\x2C"Parallel"\x2C"RegisterBlock"\x2C"SWOSupports"\x2C"Sppr"\x2C"TraceProtocol"\x2C"Type"\x2C"_type"\x2C"acpr"\x2C"bit"\x2C""\x2C""\x2C"bit_range"\x2C""\x2C""\x2C"borrow"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"clone"\x2C""\x2C""\x2C""\x2C""\x2C"clone_to_uninit"\x2C""\x2C""\x2C""\x2C""\x2C"cspsr"\x2C"eq"\x2C""\x2C"ffcr"\x2C"fmt"\x2C""\x2C"from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"lar"\x2C"lsr"\x2C"manchester_encoding"\x2C"min_queue_size"\x2C"nrz_encoding"\x2C"parallel_operation"\x2C"set_bit"\x2C""\x2C""\x2C"set_bit_range"\x2C""\x2C""\x2C"sppr"\x2C"sspsr"\x2C"try_from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"apsr"\x2C"basepri"\x2C"basepri_max"\x2C"control"\x2C"faultmask"\x2C"lr"\x2C"msp"\x2C"pc"\x2C"primask"\x2C"psp"\x2C"Apsr"\x2C"bits"\x2C"borrow"\x2C"borrow_mut"\x2C"c"\x2C"clone"\x2C"clone_to_uninit"\x2C"fmt"\x2C"from"\x2C"into"\x2C"n"\x2C"q"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"v"\x2C"z"\x2C"Active"\x2C"Control"\x2C"Fpca"\x2C"Msp"\x2C"NotActive"\x2C"Npriv"\x2C"Privileged"\x2C"Psp"\x2C"Spsel"\x2C"Unprivileged"\x2C"bits"\x2C"borrow"\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C""\x2C"clone"\x2C""\x2C""\x2C""\x2C"clone_to_uninit"\x2C""\x2C""\x2C""\x2C"eq"\x2C""\x2C""\x2C"fmt"\x2C""\x2C""\x2C""\x2C"fpca"\x2C"from"\x2C""\x2C""\x2C""\x2C"from_bits"\x2C"into"\x2C""\x2C""\x2C""\x2C"is_active"\x2C"is_msp"\x2C"is_not_active"\x2C"is_privileged"\x2C"is_psp"\x2C"is_unprivileged"\x2C"npriv"\x2C"set_fpca"\x2C"set_npriv"\x2C"set_spsel"\x2C"spsel"\x2C"try_from"\x2C""\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C""\x2C"Active"\x2C"Faultmask"\x2C"Inactive"\x2C"borrow"\x2C"borrow_mut"\x2C"clone"\x2C"clone_to_uninit"\x2C"eq"\x2C"fmt"\x2C"from"\x2C"into"\x2C"is_active"\x2C"is_inactive"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"Active"\x2C"Inactive"\x2C"Primask"\x2C"borrow"\x2C"borrow_mut"\x2C"clone"\x2C"clone_to_uninit"\x2C"eq"\x2C"fmt"\x2C"from"\x2C"into"\x2C"is_active"\x2C"is_inactive"\x2C"try_from"\x2C"try_into"\x2C"type_id"]\x2C"q":[[0\x2C"cortex_m"]\x2C[10\x2C"cortex_m::asm"]\x2C[14\x2C"cortex_m::delay"]\x2C[35\x2C"cortex_m::interrupt"]\x2C[37\x2C"cortex_m::itm"]\x2C[49\x2C"cortex_m::peripheral"]\x2C[336\x2C"cortex_m::peripheral::cbp"]\x2C[354\x2C"cortex_m::peripheral::cpuid"]\x2C[386\x2C"cortex_m::peripheral::dcb"]\x2C[398\x2C"cortex_m::peripheral::dwt"]\x2C[548\x2C"cortex_m::peripheral::fpb"]\x2C[561\x2C"cortex_m::peripheral::fpu"]\x2C[573\x2C"cortex_m::peripheral::icb"]\x2C[583\x2C"cortex_m::peripheral::itm"]\x2C[688\x2C"cortex_m::peripheral::mpu"]\x2C[707\x2C"cortex_m::peripheral::nvic"]\x2C[722\x2C"cortex_m::peripheral::scb"]\x2C[803\x2C"cortex_m::peripheral::scb::VectActive"]\x2C[804\x2C"cortex_m::peripheral::syst"]\x2C[830\x2C"cortex_m::peripheral::tpiu"]\x2C[920\x2C"cortex_m::register"]\x2C[930\x2C"cortex_m::register::apsr"]\x2C[947\x2C"cortex_m::register::control"]\x2C[1014\x2C"cortex_m::register::faultmask"]\x2C[1030\x2C"cortex_m::register::primask"]\x2C[1046\x2C"core::result"]\x2C[1047\x2C"core::any"]\x2C[1048\x2C"core::fmt"]\x2C[1049\x2C"core::option"]]\x2C"i":"```````````````h0000000000000000000`Aj`B`000000`````Dn`0`0`0`0`0`0`0`0`0BfBhCjCfClCnD`CbDbDdBnAbDf``=`=`=`==<;:9876543Hl321>=<;:9876540321=<<<`333333233336:`::3`========<;:9876543217632:3;:32;`312:3;:32:;::``>=<;:987654032122:4322::::223`==>=<;:9876540321333342;4324332`:4`:`44`<2:::::33432:3311:>13`>`1>=<;:9876540321>=<;:9876540321>=<;:9876540321:6443`Hn0000000000000000`Bj0`I`001010011000110101000010101`Ib0000000000`FbFh1```1`0`1```Fj22F`0`30Fd0ElEn10IdFl32584Ff87214369508724369508743695087101222506950872695087221436950871214369508722215243432214369508721436950872143695087`If00000000000`Ih0000000000`Ij00000000GdG`Gb1111000`````2``Fn0IlAl2435Cd213546003546035460054605460021354600213546012023322202213546021354602135460111`In00000000000000000`J`0000000000000DhDj10`Ef2021221`212121`021`Jb0003120312003123120031231203112000312300000312031203120JdAh0``Jf101011001101010010101Dl0`0`````Jh0GhGjGl21032104E`4321503215032150450450432150432150440000321321444321550432150432150```````````Gn000000000000000Hf``Hd1`Hb1`0H`01230123012301231230123001230012332312100000012301230123Hh`00000000000000Hj0`0000000000000"\x2C"f":"``````````{{}b}000`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{fh}}j}b}{{{d{fh}}l}b}0{{{d{fh}}n}b}{{{d{fh}}A`}b}23012{hAb}{cc{}}{{}c{}}{{Abl}h}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dAf}{{AblAh}h}`{AjA`}`>=76432{{{d{fAl}}{d{{B`{{An{j}}}}}}}b}{{{d{fAl}}{d{{An{j}}}}}b}{{{d{fAl}}Bb}b}{{{d{fAl}}{d{Bd}}}b}``````````````````````````````````````````{d{{d{c}}}{}}00000000000000{{{d{f}}}{{d{fc}}}{}}00000000000000{{{d{fBf}}}b}{{}l}0{{{d{fBh}}jBj}{{Bl{A`A`}}}}`{{{d{fBn}}{d{fBh}}}b}{{{d{fBn}}C`C`}b}{{{d{fBn}}{d{c}}}b{}}{{{d{fBn}}{d{{An{c}}}}}b{}}32{{{d{fAb}}}b}{{}b}0{{{d{fBn}}}b}0{{{d{fCb}}Cd}b}{{}j}`:{{{d{Cf}}}Ch}{{}Ch}`{{{d{fBf}}l}b}{{{d{fBf}}A`A`}b}11010{{{d{Bf}}}{{d{c}}}{}}{{{d{Bh}}}{{d{c}}}{}}{{{d{Cj}}}{{d{c}}}{}}{{{d{Cf}}}{{d{c}}}{}}{{{d{Cl}}}{{d{c}}}{}}{{{d{Cn}}}{{d{c}}}{}}{{{d{D`}}}{{d{c}}}{}}{{{d{Cb}}}{{d{c}}}{}}{{{d{Db}}}{{d{c}}}{}}{{{d{Dd}}}{{d{c}}}{}}{{{d{Bn}}}{{d{c}}}{}}{{{d{Ab}}}{{d{c}}}{}}{{{d{Df}}}{{d{c}}}{}}{{{d{fD`}}}{{d{fc}}}{}}{{{d{fCb}}}{{d{fc}}}{}}{{{d{fBn}}Dh}b}{{{d{fAb}}}b}{{{d{fCf}}}b}{{{d{fBn}}{d{fBh}}}b}{{{d{fCj}}}b}2{{{d{fBn}}}b}41`5{{{d{fDf}}Ch}b}5432415{{{d{fCf}}Ch}b}3{{}j}0``{cc{}}00000000000000{{{d{fAb}}}Ah}{{}l}0{cjAj}{Djj}22{{{d{Cf}}}Ch}000{{}Ch}{{{d{fAb}}}Ch}1`{{{d{fBf}}}b}{{{d{fBf}}l}b}{{}c{}}00000000000000{{{d{fBn}}C`C`}b}{{{d{fBn}}{d{fc}}}b{}}{{{d{fBn}}{d{f{An{c}}}}}b{}}{{{d{fBn}}}b}{cChAj}890{{{d{Bn}}Dh}Ch}91:::`{{}j}{cbAj}`{{{d{Cf}}}j}`11`{{{d{fBh}}jBj}b}{{{d{fAb}}Ah}b}{{{d{fCf}}j}b}{{{d{fCf}}l}b}111{{}b}0{{{d{fDd}}cj}bAj}{{{d{fBn}}Djj}b}{{{d{fAb}}l}b}5=={{{d{fDf}}ll}b}{{{d{fDf}}Dl}b}<{{}Dn}{{}E`}{{}Eb}`{{}{{Ed{Dn}}}}`{{{d{Df}}}{{Ed{Dl}}}}{c{{Ad{e}}}{}{}}00000000000000{{}{{Ad{c}}}{}}00000000000000{dAf}00000000000000={{{d{fCb}}}b}{cbAj}0{{}Ef}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}````````{cc{}}``{{}c{}}987``````3322``{{{d{Bj}}}Bj}{db}```{{{d{Bj}}{d{Bj}}}Ch}{{{d{Bj}}{d{fEh}}}Ej}5544```==<<;;`76````54=<;`````````````````````````{{dC`}Ch}0{{{d{El}}C`C`}c{}}{{{d{En}}C`C`}c{}}::::::::::9999999999`{{{d{El}}}El}{{{d{En}}}En}{{{d{F`}}}F`}{{{d{Fb}}}Fb}{{{d{Fd}}}Fd}{{{d{Ff}}}Ff}{{{d{Fh}}}Fh}{{{d{Fj}}}Fj}========``{{{d{Fl}}Fh}{{Ad{bFj}}}}`````{{{d{F`}}{d{F`}}}Ch}{{{d{Fb}}{d{Fb}}}Ch}{{{d{Fd}}{d{Fd}}}Ch}{{{d{Ff}}{d{Ff}}}Ch}{{{d{Fh}}{d{Fh}}}Ch}{{{d{Fj}}{d{Fj}}}Ch}`{{{d{F`}}{d{fEh}}}Ej}{{{d{Fb}}{d{fEh}}}Ej}{{{d{Fd}}{d{fEh}}}Ej}{{{d{Ff}}{d{fEh}}}Ej}{{{d{Fh}}{d{fEh}}}Ej}{{{d{Fj}}{d{fEh}}}Ej}`{cc{}}000000000`{{}c{}}000000000``````{{{d{f}}C`Ch}b}0{{{d{fEl}}C`C`c}b{}}{{{d{fEn}}C`C`c}b{}}`{c{{Ad{e}}}{}{}}000000000{{}{{Ad{c}}}{}}000000000{dAf}000000000`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}``98```432`10```98`432``109`8432``````````````````{{dC`}Ch}{{{d{Fn}}C`C`}c{}}33333332222222`{{{d{Fn}}}Fn}{{{d{G`}}}G`}{{{d{Gb}}}Gb}{{{d{Gd}}}Gd}{{{d{Cd}}}Cd}{db}0000`{{{d{G`}}{d{G`}}}Ch}{{{d{Gb}}{d{Gb}}}Ch}{{{d{Gd}}{d{Gd}}}Ch}{{{d{Cd}}{d{Cd}}}Ch}{{{d{G`}}{d{fEh}}}Ej}{{{d{Gb}}{d{fEh}}}Ej}{{{d{Gd}}{d{fEh}}}Ej}{{{d{Cd}}{d{fEh}}}Ej}`{cc{}}000000`{{}c{}}000000{{{d{Al}}}Ch}```{{{d{f}}C`Ch}b}{{{d{fFn}}C`C`c}b{}}`````{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{dAf}000000{{{d{fAl}}A`}b}{{{d{fAl}}l}b}{{{d{fAl}}j}b}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}`<;`````````765`10<```;````765````````````````````````````11110000``{{{d{Dh}}}Dh}{{{d{Ef}}}Ef}{{{d{Dj}}}Dj}{db}00``{{{d{Dh}}{d{Dh}}}Ch}{{{d{Ef}}{d{Ef}}}Ch}{{{d{Dj}}{d{Dj}}}Ch}{{{d{Dh}}{d{fEh}}}Ej}{{{d{Ef}}{d{fEh}}}Ej}{{{d{Dj}}{d{fEh}}}Ej}{cc{}}0{A`{{Ed{Ef}}}}11``{{}c{}}000{DhGf}````{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{dAf}000``````{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0`{{{d{Ah}}}Ah}{db}``{{{d{Ah}}{d{Ah}}}Ch}{{{d{Ah}}{d{fEh}}}Ej}<<::`887766```````````{{dC`}Ch}00{{{d{Gh}}C`C`}c{}}{{{d{Gj}}C`C`}c{}}{{{d{Gl}}C`C`}c{}}999999888888{{{d{Gh}}}Gh}{{{d{Gj}}}Gj}{{{d{Gl}}}Gl}{{{d{Dl}}}Dl}{{{d{E`}}}E`};;;;;`{{{d{Dl}}{d{Dl}}}Ch}{{{d{E`}}{d{E`}}}Ch}`{{{d{Dl}}{d{fEh}}}Ej}{{{d{E`}}{d{fEh}}}Ej}{cc{}}00000{{}c{}}00000``````{{{d{f}}C`Ch}b}00{{{d{fGh}}C`C`c}b{}}{{{d{fGj}}C`C`c}b{}}{{{d{fGl}}C`C`c}b{}}``{c{{Ad{e}}}{}{}}000{j{{Ad{Dlc}}}{}}11{{}{{Ad{c}}}{}}00000{dAf}00000```````````{Gnl}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{GnCh}{{{d{Gn}}}Gn}{db}{{{d{Gn}}{d{fEh}}}Ej}{cc{}}{{}c{}}55<:955``````````{H`l}88887777{{{d{H`}}}H`}{{{d{Hb}}}Hb}{{{d{Hd}}}Hd}{{{d{Hf}}}Hf}8888{{{d{Hb}}{d{Hb}}}Ch}{{{d{Hd}}{d{Hd}}}Ch}{{{d{Hf}}{d{Hf}}}Ch}{{{d{H`}}{d{fEh}}}Ej}{{{d{Hb}}{d{fEh}}}Ej}{{{d{Hd}}{d{fEh}}}Ej}{{{d{Hf}}{d{fEh}}}Ej}{H`Hf}>>>>{lH`}>>>>{HfCh}{HdCh}1{HbCh}10{H`Hb}{{{d{fH`}}Hf}b}{{{d{fH`}}Hb}b}{{{d{fH`}}Hd}b}{H`Hd}{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{dAf}000```{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Hh}}}Hh}{db}{{{d{Hh}}{d{Hh}}}Ch}{{{d{Hh}}{d{fEh}}}Ej}{cc{}}{{}c{}}{HhCh}0;:9```87{{{d{Hj}}}Hj}6{{{d{Hj}}{d{Hj}}}Ch}{{{d{Hj}}{d{fEh}}}Ej}54{HjCh}0?>="\x2C"D":"DHn"\x2C"p":[[1\x2C"unit"]\x2C[1\x2C"reference"\x2Cnull\x2Cnull\x2C1]\x2C[0\x2C"mut"]\x2C[5\x2C"Delay"\x2C14]\x2C[1\x2C"u8"]\x2C[1\x2C"u32"]\x2C[1\x2C"i32"]\x2C[1\x2C"u16"]\x2C[5\x2C"SYST"\x2C49]\x2C[6\x2C"Result"\x2C1046\x2Cnull\x2C1]\x2C[5\x2C"TypeId"\x2C1047]\x2C[6\x2C"SystClkSource"\x2C804]\x2C[10\x2C"InterruptNumber"\x2C35]\x2C[5\x2C"Stim"\x2C583]\x2C[1\x2C"slice"]\x2C[5\x2C"Aligned"\x2C37]\x2C[5\x2C"Arguments"\x2C1048]\x2C[1\x2C"str"]\x2C[5\x2C"CBP"\x2C49]\x2C[5\x2C"CPUID"\x2C49]\x2C[6\x2C"CsselrCacheType"\x2C354]\x2C[1\x2C"tuple"\x2Cnull\x2Cnull\x2C1]\x2C[5\x2C"SCB"\x2C49]\x2C[1\x2C"usize"]\x2C[5\x2C"ITM"\x2C49]\x2C[5\x2C"ITMSettings"\x2C583]\x2C[5\x2C"DWT"\x2C49]\x2C[1\x2C"bool"]\x2C[5\x2C"DCB"\x2C49]\x2C[5\x2C"FPB"\x2C49]\x2C[5\x2C"FPU"\x2C49]\x2C[5\x2C"ICB"\x2C49]\x2C[5\x2C"MPU"\x2C49]\x2C[5\x2C"NVIC"\x2C49]\x2C[5\x2C"TPIU"\x2C49]\x2C[6\x2C"Exception"\x2C722]\x2C[6\x2C"SystemHandler"\x2C722]\x2C[6\x2C"TraceProtocol"\x2C830]\x2C[5\x2C"Peripherals"\x2C49]\x2C[5\x2C"SWOSupports"\x2C830]\x2C[1\x2C"never"]\x2C[6\x2C"Option"\x2C1049\x2Cnull\x2C1]\x2C[6\x2C"VectActive"\x2C722]\x2C[5\x2C"Formatter"\x2C1048]\x2C[8\x2C"Result"\x2C1048]\x2C[5\x2C"Ctrl"\x2C398]\x2C[5\x2C"Function"\x2C398]\x2C[6\x2C"AccessType"\x2C398]\x2C[6\x2C"EmitOption"\x2C398]\x2C[5\x2C"ComparatorAddressSettings"\x2C398]\x2C[5\x2C"CycleCountSettings"\x2C398]\x2C[6\x2C"ComparatorFunction"\x2C398]\x2C[6\x2C"DwtError"\x2C398]\x2C[5\x2C"Comparator"\x2C398]\x2C[5\x2C"Tcr"\x2C583]\x2C[6\x2C"LocalTimestampOptions"\x2C583]\x2C[6\x2C"GlobalTimestampOptions"\x2C583]\x2C[6\x2C"TimestampClkSrc"\x2C583]\x2C[1\x2C"i8"]\x2C[5\x2C"Ffcr"\x2C830]\x2C[5\x2C"Type"\x2C830]\x2C[5\x2C"Sppr"\x2C830]\x2C[5\x2C"Apsr"\x2C930]\x2C[5\x2C"Control"\x2C947]\x2C[6\x2C"Npriv"\x2C947]\x2C[6\x2C"Spsel"\x2C947]\x2C[6\x2C"Fpca"\x2C947]\x2C[6\x2C"Faultmask"\x2C1014]\x2C[6\x2C"Primask"\x2C1030]\x2C[5\x2C"SAU"\x2C49]\x2C[5\x2C"RegisterBlock"\x2C336]\x2C[5\x2C"RegisterBlock"\x2C354]\x2C[5\x2C"RegisterBlock"\x2C386]\x2C[5\x2C"RegisterBlock"\x2C398]\x2C[5\x2C"RegisterBlock"\x2C548]\x2C[5\x2C"RegisterBlock"\x2C561]\x2C[5\x2C"RegisterBlock"\x2C573]\x2C[5\x2C"RegisterBlock"\x2C583]\x2C[5\x2C"RegisterBlock"\x2C688]\x2C[5\x2C"RegisterBlock"\x2C707]\x2C[5\x2C"RegisterBlock"\x2C722]\x2C[15\x2C"Interrupt"\x2C803]\x2C[5\x2C"RegisterBlock"\x2C804]\x2C[5\x2C"RegisterBlock"\x2C830]]\x2C"r":[[0\x2C49]]\x2C"b":[[17\x2C"impl-_embedded_hal_blocking_delay_DelayMs%3Cu8%3E-for-Delay"]\x2C[18\x2C"impl-_embedded_hal_blocking_delay_DelayMs%3Cu32%3E-for-Delay"]\x2C[19\x2C"impl-Delay"]\x2C[20\x2C"impl-_embedded_hal_blocking_delay_DelayMs%3Ci32%3E-for-Delay"]\x2C[21\x2C"impl-_embedded_hal_blocking_delay_DelayMs%3Cu16%3E-for-Delay"]\x2C[22\x2C"impl-_embedded_hal_blocking_delay_DelayUs%3Cu32%3E-for-Delay"]\x2C[23\x2C"impl-_embedded_hal_blocking_delay_DelayUs%3Cu8%3E-for-Delay"]\x2C[24\x2C"impl-_embedded_hal_blocking_delay_DelayUs%3Cu16%3E-for-Delay"]\x2C[25\x2C"impl-_embedded_hal_blocking_delay_DelayUs%3Ci32%3E-for-Delay"]\x2C[26\x2C"impl-Delay"]]\x2C"c":"OjAAAAEAAAAAAAAAEAAAANEA"\x2C"e":"OzAAAAEAAM8BPQABAAAAEAADABUABQAgAAIAJwABACsAAgBcAB0AmAAOAB8BLABSAQEAYAECAGkBAwBvAQEAdAEBAH0BBQCEAQEAjAECAKgBFwDBAQ8A2QEFAOABBQACAgMABwIdACYCAQAvAgIAMwIBADsCAgBAAgEARQICAFoCDwBrAgkAdgIHAJICAQCZAhQAswIBAMECAgDFAgEA0AICAO8CBwD5AgUAAQMFABcDCwApAwMALgMBADIDAQA5AwUASgMbAGcDAQBqAwEAfgMFAIYDAwCLAw0ApQMBAKgDAgCvAwIAvwMWAOsDCwD6AwUABAQCAAoEBQAUBAIA"\x2C"P":[[15\x2C"T"]\x2C[17\x2C""]\x2C[28\x2C"T"]\x2C[29\x2C"U"]\x2C[30\x2C""]\x2C[31\x2C"U\x2CT"]\x2C[32\x2C"U"]\x2C[33\x2C""]\x2C[38\x2C"T"]\x2C[41\x2C"U"]\x2C[42\x2C"U\x2CT"]\x2C[43\x2C"U"]\x2C[44\x2C""]\x2C[91\x2C"T"]\x2C[121\x2C""]\x2C[128\x2C"T"]\x2C[130\x2C""]\x2C[151\x2C"Deref::Target"]\x2C[166\x2C""]\x2C[191\x2C"T"]\x2C[206\x2C""]\x2C[209\x2C"I"]\x2C[210\x2C""]\x2C[223\x2C"U"]\x2C[238\x2C""]\x2C[239\x2C"T"]\x2C[241\x2C""]\x2C[242\x2C"I"]\x2C[243\x2C""]\x2C[245\x2C"I"]\x2C[246\x2C""]\x2C[248\x2C"I"]\x2C[249\x2C""]\x2C[254\x2C"I"]\x2C[256\x2C""]\x2C[258\x2C"I"]\x2C[261\x2C""]\x2C[270\x2C"I"]\x2C[271\x2C""]\x2C[286\x2C"U\x2CT"]\x2C[301\x2C"U"]\x2C[316\x2C""]\x2C[333\x2C"I"]\x2C[335\x2C""]\x2C[337\x2C"T"]\x2C[350\x2C"U"]\x2C[351\x2C"U\x2CT"]\x2C[352\x2C"U"]\x2C[353\x2C""]\x2C[360\x2C"T"]\x2C[366\x2C""]\x2C[373\x2C"T"]\x2C[375\x2C"U"]\x2C[380\x2C"U\x2CT"]\x2C[382\x2C"U"]\x2C[384\x2C""]\x2C[387\x2C"T"]\x2C[394\x2C"U"]\x2C[395\x2C"U\x2CT"]\x2C[396\x2C"U"]\x2C[397\x2C""]\x2C[425\x2C"T"]\x2C[448\x2C""]\x2C[486\x2C"T"]\x2C[497\x2C"U"]\x2C[513\x2C""]\x2C[515\x2C"T"]\x2C[518\x2C"U\x2CT"]\x2C[528\x2C"U"]\x2C[538\x2C""]\x2C[549\x2C"T"]\x2C[554\x2C"U"]\x2C[558\x2C"U\x2CT"]\x2C[559\x2C"U"]\x2C[560\x2C""]\x2C[562\x2C"T"]\x2C[568\x2C"U"]\x2C[570\x2C"U\x2CT"]\x2C[571\x2C"U"]\x2C[572\x2C""]\x2C[575\x2C"T"]\x2C[579\x2C"U"]\x2C[580\x2C"U\x2CT"]\x2C[581\x2C"U"]\x2C[582\x2C""]\x2C[602\x2C"T"]\x2C[618\x2C""]\x2C[638\x2C"T"]\x2C[646\x2C"U"]\x2C[653\x2C""]\x2C[658\x2C"T"]\x2C[664\x2C"U\x2CT"]\x2C[671\x2C"U"]\x2C[678\x2C""]\x2C[690\x2C"T"]\x2C[694\x2C"U"]\x2C[704\x2C"U\x2CT"]\x2C[705\x2C"U"]\x2C[706\x2C""]\x2C[708\x2C"T"]\x2C[714\x2C"U"]\x2C[719\x2C"U\x2CT"]\x2C[720\x2C"U"]\x2C[721\x2C""]\x2C[750\x2C"T"]\x2C[760\x2C""]\x2C[774\x2C"T"]\x2C[776\x2C""]\x2C[777\x2C"T"]\x2C[781\x2C"U"]\x2C[785\x2C""]\x2C[790\x2C"U\x2CT"]\x2C[794\x2C"U"]\x2C[798\x2C""]\x2C[808\x2C"T"]\x2C[813\x2C""]\x2C[819\x2C"T"]\x2C[821\x2C"U"]\x2C[824\x2C"U\x2CT"]\x2C[826\x2C"U"]\x2C[828\x2C""]\x2C[844\x2C"T"]\x2C[859\x2C""]\x2C[875\x2C"T"]\x2C[881\x2C"U"]\x2C[893\x2C""]\x2C[896\x2C"T"]\x2C[901\x2C"U\x2CT"]\x2C[905\x2C"TryFrom::Error"]\x2C[906\x2C"U\x2CT"]\x2C[908\x2C"U"]\x2C[914\x2C""]\x2C[932\x2C"T"]\x2C[934\x2C""]\x2C[938\x2C"T"]\x2C[939\x2C"U"]\x2C[940\x2C""]\x2C[942\x2C"U\x2CT"]\x2C[943\x2C"U"]\x2C[944\x2C""]\x2C[958\x2C"T"]\x2C[966\x2C""]\x2C[982\x2C"T"]\x2C[986\x2C""]\x2C[987\x2C"U"]\x2C[991\x2C""]\x2C[1002\x2C"U\x2CT"]\x2C[1006\x2C"U"]\x2C[1010\x2C""]\x2C[1017\x2C"T"]\x2C[1019\x2C""]\x2C[1023\x2C"T"]\x2C[1024\x2C"U"]\x2C[1025\x2C""]\x2C[1027\x2C"U\x2CT"]\x2C[1028\x2C"U"]\x2C[1029\x2C""]\x2C[1033\x2C"T"]\x2C[1035\x2C""]\x2C[1039\x2C"T"]\x2C[1040\x2C"U"]\x2C[1041\x2C""]\x2C[1043\x2C"U\x2CT"]\x2C[1044\x2C"U"]\x2C[1045\x2C""]]}]\x2C["critical_section"\x2C{"t":"FKFIFHMNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNQNNNNNNNNNNH"\x2C"n":["CriticalSection"\x2C"Impl"\x2C"Mutex"\x2C"RawRestoreState"\x2C"RestoreState"\x2C"acquire"\x2C""\x2C"borrow"\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C"borrow_ref"\x2C"borrow_ref_mut"\x2C"clone"\x2C""\x2C"clone_to_uninit"\x2C""\x2C"fmt"\x2C""\x2C""\x2C"from"\x2C""\x2C""\x2C"get_mut"\x2C"into"\x2C""\x2C""\x2C"into_inner"\x2C"invalid"\x2C"new"\x2C""\x2C"release"\x2C""\x2C"replace"\x2C"replace_with"\x2C"set_impl"\x2C"take"\x2C"try_from"\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C"with"]\x2C"q":[[0\x2C"critical_section"]\x2C[50\x2C"critical_section::mutex"]\x2C[51\x2C"core::cell"]\x2C[52\x2C"core::fmt"]\x2C[53\x2C"core::ops::function"]\x2C[54\x2C"core::default"]\x2C[55\x2C"core::result"]\x2C[56\x2C"core::any"]]\x2C"i":"``````Bfh0jb21022101021021022102021`322`2210210210`"\x2C"f":"`````{{}b}{{}d}{f{{f{c}}}{}}{{{f{{h{c}}}}j}{{f{c}}}{}}11{{{f{l}}}{{f{lc}}}{}}00{{{f{{h{{n{c}}}}}}j}{{A`{c}}}{}}{{{f{{h{{n{c}}}}}}j}{{Ab{c}}}{}}{{{f{j}}}j}{{{f{b}}}b}{fAd}0{{{f{{h{c}}}}{f{lAf}}}AhAj}{{{f{j}}{f{lAf}}}Ah}{{{f{b}}{f{lAf}}}Ah}{cc{}}00{{{f{l{h{c}}}}}{{f{lc}}}{}}{{}c{}}00{{{h{c}}}c{}}{{}b}{c{{h{c}}}{}}{{}j}{bAd}{dAd}{{{f{{h{{n{c}}}}}}jc}c{}}{{{f{{h{{n{c}}}}}}je}c{}{{An{{f{lc}}}{{Al{c}}}}}}`{{{f{{h{{n{c}}}}}}j}cB`}{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{fBd}00{ec{}{{An{j}{{Al{c}}}}}}"\x2C"D":"Cj"\x2C"p":[[5\x2C"RestoreState"\x2C0]\x2C[8\x2C"RawRestoreState"\x2C0]\x2C[1\x2C"reference"\x2Cnull\x2Cnull\x2C1]\x2C[5\x2C"Mutex"\x2C0\x2C50]\x2C[5\x2C"CriticalSection"\x2C0]\x2C[0\x2C"mut"]\x2C[5\x2C"RefCell"\x2C51]\x2C[5\x2C"Ref"\x2C51]\x2C[5\x2C"RefMut"\x2C51]\x2C[1\x2C"unit"]\x2C[5\x2C"Formatter"\x2C52]\x2C[8\x2C"Result"\x2C52]\x2C[10\x2C"Debug"\x2C52]\x2C[17\x2C"Output"]\x2C[10\x2C"FnOnce"\x2C53]\x2C[10\x2C"Default"\x2C54]\x2C[6\x2C"Result"\x2C55\x2Cnull\x2C1]\x2C[5\x2C"TypeId"\x2C56]\x2C[10\x2C"Impl"\x2C0]]\x2C"r":[[2\x2C50]]\x2C"b":[]\x2C"c":"OjAAAAAAAAA="\x2C"e":"OzAAAAEAABUABAAIAAAACgAEABEABgApAAgA"\x2C"P":[[7\x2C"T"]\x2C[16\x2C""]\x2C[20\x2C"T"]\x2C[21\x2C""]\x2C[23\x2C"T"]\x2C[27\x2C"U"]\x2C[30\x2C"T"]\x2C[31\x2C""]\x2C[32\x2C"T"]\x2C[33\x2C""]\x2C[36\x2C"T"]\x2C[37\x2C"T\x2CF"]\x2C[39\x2C"T"]\x2C[40\x2C"U\x2CT"]\x2C[43\x2C"U"]\x2C[46\x2C""]\x2C[49\x2C"R\x2C"]]}]\x2C["embedded_hal"\x2C{"t":"RKCCCCMMCMMCCMCCCCCCCCCKRRMMKKMMKRRRRRRRGKPIIKKKPKKKNNNMMNNNMNNNMMMMRKMMCKRRRGKKPKPNNNMNNNCMNNNCMKKPPPKGPFPKGTTPPPFPTTNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNMNNNNNMMNMNCMNNMNNNNNNNNNNNNNNNNKRRMMCCCCKMMFNNNNNNNNNNNNNRPPKGNNNNNNNNNNMMNNNNEEEEEEEEEEEEEERRKKMMMNPPRKPPSSSSFGGNNNNNNNNNNNNNNNNNNNNNOOMMNNNNNNNNNKKRKRMMM"\x2C"n":["Duty"\x2C"PwmPin"\x2C"adc"\x2C"blocking"\x2C"can"\x2C"digital"\x2C"disable"\x2C"enable"\x2C"fmt"\x2C"get_duty"\x2C"get_max_duty"\x2C"prelude"\x2C"serial"\x2C"set_duty"\x2C"spi"\x2C"timer"\x2C"watchdog"\x2C"can"\x2C"delay"\x2C"i2c"\x2C"rng"\x2C"serial"\x2C"spi"\x2C"Can"\x2C"Error"\x2C"Frame"\x2C"receive"\x2C"transmit"\x2C"DelayMs"\x2C"DelayUs"\x2C"delay_ms"\x2C"delay_us"\x2C"AddressMode"\x2C"Error"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"Operation"\x2C"Read"\x2C""\x2C"SevenBitAddress"\x2C"TenBitAddress"\x2C"Transactional"\x2C"TransactionalIter"\x2C"Write"\x2C""\x2C"WriteIter"\x2C"WriteIterRead"\x2C"WriteRead"\x2C"borrow"\x2C"borrow_mut"\x2C"eq"\x2C"exec"\x2C"exec_iter"\x2C"fmt"\x2C"from"\x2C"into"\x2C"read"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"write"\x2C""\x2C"write_iter_read"\x2C"write_read"\x2C"Error"\x2C"Write"\x2C"bflush"\x2C"bwrite_all"\x2C"write"\x2C"Default"\x2C"Error"\x2C""\x2C""\x2C"Operation"\x2C"Transactional"\x2C"Transfer"\x2C""\x2C"Write"\x2C""\x2C"borrow"\x2C"borrow_mut"\x2C"eq"\x2C"exec"\x2C"fmt"\x2C"from"\x2C"into"\x2C"transfer"\x2C""\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"write"\x2C""\x2C"Default"\x2C""\x2C"Acknowledge"\x2C"Bit"\x2C"Crc"\x2C"Error"\x2C"ErrorKind"\x2C"Extended"\x2C"ExtendedId"\x2C"Form"\x2C"Frame"\x2C"Id"\x2C"MAX"\x2C""\x2C"Other"\x2C"Overrun"\x2C"Standard"\x2C"StandardId"\x2C"Stuff"\x2C"ZERO"\x2C""\x2C"as_raw"\x2C""\x2C"borrow"\x2C""\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C""\x2C"clone"\x2C""\x2C""\x2C""\x2C"clone_to_uninit"\x2C""\x2C""\x2C""\x2C"cmp"\x2C"data"\x2C"dlc"\x2C"eq"\x2C""\x2C""\x2C""\x2C"fmt"\x2C""\x2C""\x2C""\x2C""\x2C"from"\x2C""\x2C""\x2C""\x2C""\x2C""\x2C"hash"\x2C"id"\x2C"into"\x2C""\x2C""\x2C""\x2C"is_data_frame"\x2C"is_extended"\x2C"is_remote_frame"\x2C"is_standard"\x2C"kind"\x2C""\x2C"nb"\x2C"new"\x2C""\x2C""\x2C"new_remote"\x2C"new_unchecked"\x2C""\x2C"partial_cmp"\x2C"standard_id"\x2C"try_from"\x2C""\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C""\x2C"Can"\x2C"Error"\x2C"Frame"\x2C"receive"\x2C"transmit"\x2C"v1"\x2C"v1_compat"\x2C"v2"\x2C"v2_compat"\x2C"OutputPin"\x2C"set_high"\x2C"set_low"\x2C"OldOutputPin"\x2C"borrow"\x2C"borrow_mut"\x2C"from"\x2C""\x2C"into"\x2C"new"\x2C"set_high"\x2C""\x2C"set_low"\x2C""\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"Error"\x2C"High"\x2C"Low"\x2C"OutputPin"\x2C"PinState"\x2C"borrow"\x2C"borrow_mut"\x2C"clone"\x2C"clone_to_uninit"\x2C"eq"\x2C"fmt"\x2C"from"\x2C""\x2C"into"\x2C"not"\x2C"set_high"\x2C"set_low"\x2C"set_state"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"_embedded_hal_PwmPin"\x2C"_embedded_hal_blocking_delay_DelayMs"\x2C"_embedded_hal_blocking_delay_DelayUs"\x2C"_embedded_hal_blocking_i2c_Read"\x2C"_embedded_hal_blocking_i2c_Write"\x2C"_embedded_hal_blocking_i2c_WriteRead"\x2C"_embedded_hal_blocking_serial_Write"\x2C"_embedded_hal_blocking_spi_Transfer"\x2C"_embedded_hal_blocking_spi_Write"\x2C"_embedded_hal_digital_OutputPin"\x2C"_embedded_hal_serial_Read"\x2C"_embedded_hal_serial_Write"\x2C"_embedded_hal_spi_FullDuplex"\x2C"_embedded_hal_timer_CountDown"\x2C"Error"\x2C""\x2C"Read"\x2C"Write"\x2C"flush"\x2C"read"\x2C"write"\x2C"write_str"\x2C"CaptureOnFirstTransition"\x2C"CaptureOnSecondTransition"\x2C"Error"\x2C"FullDuplex"\x2C"IdleHigh"\x2C"IdleLow"\x2C"MODE_0"\x2C"MODE_1"\x2C"MODE_2"\x2C"MODE_3"\x2C"Mode"\x2C"Phase"\x2C"Polarity"\x2C"borrow"\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C"clone"\x2C""\x2C""\x2C"clone_to_uninit"\x2C""\x2C""\x2C"eq"\x2C""\x2C""\x2C"from"\x2C""\x2C""\x2C"into"\x2C""\x2C""\x2C"phase"\x2C"polarity"\x2C"read"\x2C"send"\x2C"try_from"\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C"Cancel"\x2C"CountDown"\x2C"Error"\x2C"Periodic"\x2C"Time"\x2C"cancel"\x2C"start"\x2C"wait"]\x2C"q":[[0\x2C"embedded_hal"]\x2C[17\x2C"embedded_hal::blocking"]\x2C[23\x2C"embedded_hal::blocking::can"]\x2C[28\x2C"embedded_hal::blocking::delay"]\x2C[32\x2C"embedded_hal::blocking::i2c"]\x2C[68\x2C"embedded_hal::blocking::serial"]\x2C[73\x2C"embedded_hal::blocking::serial::write"]\x2C[74\x2C"embedded_hal::blocking::spi"]\x2C[97\x2C"embedded_hal::blocking::spi::transfer"]\x2C[98\x2C"embedded_hal::blocking::spi::write"]\x2C[99\x2C"embedded_hal::can"]\x2C[187\x2C"embedded_hal::can::nb"]\x2C[192\x2C"embedded_hal::digital"]\x2C[196\x2C"embedded_hal::digital::v1"]\x2C[199\x2C"embedded_hal::digital::v1_compat"]\x2C[213\x2C"embedded_hal::digital::v2"]\x2C[234\x2C"embedded_hal::prelude"]\x2C[248\x2C"embedded_hal::serial"]\x2C[256\x2C"embedded_hal::spi"]\x2C[303\x2C"embedded_hal::timer"]\x2C[311\x2C"core::result"]\x2C[312\x2C"core::iter::traits::collect"]\x2C[313\x2C"core::fmt"]\x2C[314\x2C"core::any"]\x2C[315\x2C"core::cmp"]\x2C[316\x2C"embedded_hal::can::id"]\x2C[317\x2C"core::hash"]\x2C[318\x2C"core::option"]\x2C[319\x2C"core::convert"]\x2C[320\x2C"nb"]\x2C[321\x2C"void"]]\x2C"i":"f`````00`00``0``````````A`000``AhAj`C`CfChClCjB`Bf``Al`````0```0002100070006534Cn`00``DhDjDd```D``00001000`3000`2``Ef00``Ed`1``DlE`332`3101010231023102310233Ad02134213442133344021340000Af5`13213252324532453245`Fb000`````Ff0`Fh000000000000FjFl0``0000000000111000``````````````G`Fn``0100Gf0Gj`Gd0```````02Gh1301301301301301300022130130130``Gl`H`100"\x2C"f":"``````{{{h{b{f{}{{d{c}}}}}}}j{}}0`{{{h{{f{}{{d{c}}}}}}}c{}}0``{{{h{b{f{}{{d{c}}}}}}c}j{}}````````````{{{h{b{A`{}{{l{c}}{n{e}}}}}}}{{Ab{ce}}}AdAf}{{{h{b{A`{}{{l{c}}{n{e}}}}}}{h{c}}}{{Ab{je}}}AdAf}``{{{h{bAh}}c}j{}}{{{h{bAj}}c}j{}}````````````````````{h{{h{c}}}{}}{{{h{b}}}{{h{bc}}}{}}{{{h{Al}}{h{Al}}}An}{{{h{b{B`{}{{n{c}}}}}}e{h{b{Bb{Al}}}}}{{Ab{jc}}}{}Bd}{{{h{b{Bf{}{{n{c}}}}}}eg}{{Ab{jc}}}{}Bd{{Bj{}{{Bh{Al}}}}}}{{{h{Al}}{h{bBl}}}Bn}{cc{}}{{}c{}}{{{h{b{C`{}{{n{c}}}}}}e{h{b{Bb{Cb}}}}}{{Ab{jc}}}{}Bd}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{hCd}{{{h{b{Cf{}{{n{c}}}}}}e{h{{Bb{Cb}}}}}{{Ab{jc}}}{}Bd}{{{h{b{Ch{}{{n{c}}}}}}eg}{{Ab{jc}}}{}Bd{{Bj{}{{Bh{Cb}}}}}}{{{h{b{Cj{}{{n{c}}}}}}eg{h{b{Bb{Cb}}}}}{{Ab{jc}}}{}Bd{{Bj{}{{Bh{Cb}}}}}}{{{h{b{Cl{}{{n{c}}}}}}e{h{{Bb{Cb}}}}{h{b{Bb{Cb}}}}}{{Ab{jc}}}{}Bd}``{{{h{b{Cn{}{{n{c}}}}}}}{{Ab{jc}}}{}}{{{h{b{Cn{}{{n{c}}}}}}{h{{Bb{e}}}}}{{Ab{jc}}}{}{}}```````````{h{{h{c}}}{}}{{{h{b}}}{{h{bc}}}{}}{{{h{{D`{c}}}}{h{{D`{c}}}}}AnDb}{{{h{b{Dd{}{{n{c}}}}}}{h{b{Bb{{D`{e}}}}}}}{{Ab{jc}}}{}{}}{{{h{{D`{c}}}}{h{bBl}}}BnDf}{cc{}}{{}c{}}`{{{h{b{Dh{}{{n{c}}}}}}{h{b{Bb{e}}}}}{{Ab{{h{{Bb{e}}}}c}}}{}{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{hCd}`{{{h{b{Dj{}{{n{c}}}}}}{h{{Bb{e}}}}}{{Ab{jc}}}{}{}}`````````````````````{{{h{Dl}}}Dn}{{{h{E`}}}Eb}====<<<<{{{h{Dl}}}Dl}{{{h{E`}}}E`}{{{h{Ed}}}Ed}{{{h{Ef}}}Ef}{hj}000{{{h{Ef}}{h{Ef}}}Eh}{{{h{Ad}}}{{h{{Bb{Cb}}}}}}{{{h{Ad}}}Ej}{{{h{Dl}}{h{Dl}}}An}{{{h{E`}}{h{E`}}}An}{{{h{Ed}}{h{Ed}}}An}{{{h{Ef}}{h{Ef}}}An}{{{h{Dl}}{h{bBl}}}Bn}{{{h{E`}}{h{bBl}}}Bn}{{{h{Ed}}{h{bBl}}}Bn}{{{h{Ef}}{h{bBl}}}Bn}0{cc{}}0{E`Ed}{DlEd}22{{{h{Ef}}{h{bc}}}jEl}{{{h{Ad}}}Ed}{{}c{}}000{{{h{Ad}}}An}000{{{h{Af}}}Ef}{{{h{Ef}}}Ef}`{{c{h{{Bb{Cb}}}}}{{En{Ad}}}{{F`{Ed}}}}{Dn{{En{Dl}}}}{Eb{{En{E`}}}}{{cEj}{{En{Ad}}}{{F`{Ed}}}}{DnDl}{EbE`}{{{h{Ef}}{h{Ef}}}{{En{Eh}}}}{{{h{E`}}}Dl}{c{{Ab{e}}}{}{}}000{{}{{Ab{c}}}{}}000{hCd}000```{{{h{b{Fb{}{{l{c}}{n{e}}}}}}}{{Fd{ce}}}AdAf}{{{h{b{Fb{}{{l{c}}{n{e}}}}}}{h{c}}}{{Fd{{En{c}}e}}}AdAf}`````{{{h{bFf}}}j}0`{h{{h{c}}}{}}{{{h{b}}}{{h{bc}}}{}}{e{{Fh{e}}}Df{{Fj{}{{n{c}}}}}}{cc{}}{{}c{}}2{{{h{b}}}{{Ab{j}}}}{{{h{b{Fh{e}}}}}jDf{{Fj{}{{n{c}}}}}}10<;:`````65{{{h{Fl}}}Fl}{hj}{{{h{Fl}}{h{Fl}}}An}{{{h{Fl}}{h{bBl}}}Bn}{AnFl}87{Flc{}}{{{h{b{Fj{}{{n{c}}}}}}}{{Ab{jc}}}{}}0{{{h{b{Fj{}{{n{c}}}}}}Fl}{{Ab{jc}}}{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{hCd}``````````````````{{{h{b{Fn{}{{n{c}}}}}}}{{Fd{jc}}}{}}{{{h{b{G`{}{{n{c}}}}}}}{{Fd{ec}}}{}{}}{{{h{b{Fn{}{{n{c}}}}}}e}{{Fd{jc}}}{}{}}{{{h{bFn}}{h{Gb}}}Bn}`````````````{h{{h{c}}}{}}00{{{h{b}}}{{h{bc}}}{}}00{{{h{Gd}}}Gd}{{{h{Gf}}}Gf}{{{h{Gh}}}Gh}{hj}00{{{h{Gd}}{h{Gd}}}An}{{{h{Gf}}{h{Gf}}}An}{{{h{Gh}}{h{Gh}}}An}{cc{}}00{{}c{}}00``{{{h{b{Gj{}{{n{c}}}}}}}{{Fd{ec}}}{}{}}{{{h{b{Gj{}{{n{c}}}}}}e}{{Fd{jc}}}{}{}}{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{hCd}00`````{{{h{b{Gl{}{{n{c}}}}}}}{{Ab{jc}}}{}}{{{h{b{H`{}{{Gn{c}}}}}}e}j{}{{F`{c}}}}{{{h{b{H`{}{{Gn{c}}}}}}}{{Fd{jHb}}}{}}"\x2C"D":"AHf"\x2C"p":[[0\x2C"mut"]\x2C[17\x2C"Duty"]\x2C[10\x2C"PwmPin"\x2C0]\x2C[1\x2C"reference"\x2Cnull\x2Cnull\x2C1]\x2C[1\x2C"unit"]\x2C[17\x2C"Frame"]\x2C[17\x2C"Error"]\x2C[10\x2C"Can"\x2C23]\x2C[6\x2C"Result"\x2C311\x2Cnull\x2C1]\x2C[10\x2C"Frame"\x2C99]\x2C[10\x2C"Error"\x2C99]\x2C[10\x2C"DelayMs"\x2C28]\x2C[10\x2C"DelayUs"\x2C28]\x2C[6\x2C"Operation"\x2C32]\x2C[1\x2C"bool"]\x2C[10\x2C"Transactional"\x2C32]\x2C[1\x2C"slice"]\x2C[10\x2C"AddressMode"\x2C32]\x2C[10\x2C"TransactionalIter"\x2C32]\x2C[17\x2C"Item"]\x2C[10\x2C"IntoIterator"\x2C312]\x2C[5\x2C"Formatter"\x2C313]\x2C[8\x2C"Result"\x2C313]\x2C[10\x2C"Read"\x2C32]\x2C[1\x2C"u8"]\x2C[5\x2C"TypeId"\x2C314]\x2C[10\x2C"Write"\x2C32]\x2C[10\x2C"WriteIter"\x2C32]\x2C[10\x2C"WriteIterRead"\x2C32]\x2C[10\x2C"WriteRead"\x2C32]\x2C[10\x2C"Write"\x2C68]\x2C[6\x2C"Operation"\x2C74]\x2C[10\x2C"PartialEq"\x2C315]\x2C[10\x2C"Transactional"\x2C74]\x2C[10\x2C"Debug"\x2C313]\x2C[10\x2C"Transfer"\x2C74]\x2C[10\x2C"Write"\x2C74]\x2C[5\x2C"StandardId"\x2C99\x2C316]\x2C[1\x2C"u16"]\x2C[5\x2C"ExtendedId"\x2C99\x2C316]\x2C[1\x2C"u32"]\x2C[6\x2C"Id"\x2C99\x2C316]\x2C[6\x2C"ErrorKind"\x2C99]\x2C[6\x2C"Ordering"\x2C315]\x2C[1\x2C"usize"]\x2C[10\x2C"Hasher"\x2C317]\x2C[6\x2C"Option"\x2C318\x2Cnull\x2C1]\x2C[10\x2C"Into"\x2C319]\x2C[10\x2C"Can"\x2C187]\x2C[8\x2C"Result"\x2C320]\x2C[10\x2C"OutputPin"\x2C196]\x2C[5\x2C"OldOutputPin"\x2C199]\x2C[10\x2C"OutputPin"\x2C213]\x2C[6\x2C"PinState"\x2C213]\x2C[10\x2C"Write"\x2C248]\x2C[10\x2C"Read"\x2C248]\x2C[1\x2C"str"]\x2C[6\x2C"Polarity"\x2C256]\x2C[6\x2C"Phase"\x2C256]\x2C[5\x2C"Mode"\x2C256]\x2C[10\x2C"FullDuplex"\x2C256]\x2C[10\x2C"Cancel"\x2C303]\x2C[17\x2C"Time"]\x2C[10\x2C"CountDown"\x2C303]\x2C[6\x2C"Void"\x2C321]]\x2C"r":[[105\x2C316]\x2C[108\x2C316]\x2C[114\x2C316]]\x2C"b":[[146\x2C"impl-Display-for-ErrorKind"]\x2C[147\x2C"impl-Debug-for-ErrorKind"]\x2C[150\x2C"impl-From%3CExtendedId%3E-for-Id"]\x2C[151\x2C"impl-From%3CStandardId%3E-for-Id"]]\x2C"c":"OjAAAAEAAAAAAAMAEAAAAMEAxQDGAMcA"\x2C"e":"OzAAAAEAAHQAFQA1AAIAOgAAAD4AAgBUAAIAWAAAAF0AAgB5ABAAjAAIAJcAAQCbAAAApgAAAK4AAACwAAsAyQACAM8ABgDbAAYA5AAAAOgAEAAAAQAADgEOACcBCAA="\x2C"P":[[6\x2C"PwmPin::Duty"]\x2C[26\x2C"Can::Frame\x2CCan::Error"]\x2C[30\x2C"UXX"]\x2C[52\x2C"T"]\x2C[54\x2C""]\x2C[55\x2C"Transactional::Error\x2CA"]\x2C[56\x2C"TransactionalIter::Error\x2CA\x2CO"]\x2C[57\x2C""]\x2C[58\x2C"T"]\x2C[59\x2C"U"]\x2C[60\x2C"Read::Error\x2CA"]\x2C[61\x2C"U\x2CT"]\x2C[62\x2C"U"]\x2C[63\x2C""]\x2C[64\x2C"Write::Error\x2CA"]\x2C[65\x2C"WriteIter::Error\x2CA\x2CB"]\x2C[66\x2C"WriteIterRead::Error\x2CA\x2CB"]\x2C[67\x2C"WriteRead::Error\x2CA"]\x2C[70\x2C"Write::Error"]\x2C[71\x2C"Write::Error\x2CWord"]\x2C[83\x2C"T"]\x2C[85\x2C"W"]\x2C[86\x2C"Transactional::Error\x2CW"]\x2C[87\x2C"W"]\x2C[88\x2C"T"]\x2C[89\x2C"U"]\x2C[91\x2C"Transfer::Error\x2CW"]\x2C[92\x2C"U\x2CT"]\x2C[93\x2C"U"]\x2C[94\x2C""]\x2C[96\x2C"Write::Error\x2CW"]\x2C[118\x2C""]\x2C[120\x2C"T"]\x2C[128\x2C""]\x2C[148\x2C"T"]\x2C[150\x2C""]\x2C[152\x2C"T"]\x2C[154\x2C"__H"]\x2C[155\x2C""]\x2C[156\x2C"U"]\x2C[160\x2C""]\x2C[167\x2C""]\x2C[168\x2C""]\x2C[170\x2C""]\x2C[171\x2C""]\x2C[175\x2C"U\x2CT"]\x2C[179\x2C"U"]\x2C[183\x2C""]\x2C[190\x2C"Can::Frame\x2CCan::Error"]\x2C[197\x2C""]\x2C[200\x2C"T"]\x2C[202\x2C"E\x2CT"]\x2C[203\x2C"T"]\x2C[204\x2C"U"]\x2C[205\x2C"E\x2CT"]\x2C[206\x2C""]\x2C[207\x2C"E\x2CT"]\x2C[208\x2C""]\x2C[209\x2C"E\x2CT"]\x2C[210\x2C"U\x2CT"]\x2C[211\x2C"U"]\x2C[212\x2C""]\x2C[218\x2C"T"]\x2C[220\x2C""]\x2C[225\x2C"T"]\x2C[226\x2C"U"]\x2C[227\x2C"Not::Output"]\x2C[228\x2C"OutputPin::Error"]\x2C[231\x2C"U\x2CT"]\x2C[232\x2C"U"]\x2C[233\x2C""]\x2C[252\x2C"Write::Error"]\x2C[253\x2C"Read::Error\x2CWord"]\x2C[254\x2C"Write::Error\x2CWord"]\x2C[255\x2C""]\x2C[269\x2C"T"]\x2C[275\x2C""]\x2C[284\x2C"T"]\x2C[287\x2C"U"]\x2C[292\x2C"FullDuplex::Error\x2CWord"]\x2C[294\x2C"U\x2CT"]\x2C[297\x2C"U"]\x2C[300\x2C""]\x2C[308\x2C"Cancel::Error"]\x2C[309\x2C"CountDown::Time\x2CT"]\x2C[310\x2C"CountDown::Time"]]}]\x2C["vcell"\x2C{"t":"FNNNNNNNNNNN"\x2C"n":["VolatileCell"\x2C"as_ptr"\x2C"borrow"\x2C"borrow_mut"\x2C"from"\x2C"get"\x2C"into"\x2C"new"\x2C"set"\x2C"try_from"\x2C"try_into"\x2C"type_id"]\x2C"q":[[0\x2C"vcell"]\x2C[12\x2C"core::marker"]\x2C[13\x2C"core::result"]\x2C[14\x2C"core::any"]]\x2C"i":"`b0000000000"\x2C"f":"`{{{d{{b{c}}}}}{}{}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{cc{}}{{{d{{b{c}}}}}ch}{{}c{}}{c{{b{c}}}{}}{{{d{{b{c}}}}c}jh}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dn}"\x2C"D":"A`"\x2C"p":[[5\x2C"VolatileCell"\x2C0]\x2C[1\x2C"reference"\x2Cnull\x2Cnull\x2C1]\x2C[0\x2C"mut"]\x2C[10\x2C"Copy"\x2C12]\x2C[1\x2C"unit"]\x2C[6\x2C"Result"\x2C13\x2Cnull\x2C1]\x2C[5\x2C"TypeId"\x2C14]]\x2C"r":[]\x2C"b":[]\x2C"c":"OjAAAAAAAAA="\x2C"e":"OjAAAAEAAAAAAAQAEAAAAAMABAAKAAsADAA="\x2C"P":[[1\x2C"T"]\x2C[6\x2C"U"]\x2C[7\x2C"T"]\x2C[9\x2C"U\x2CT"]\x2C[10\x2C"U"]\x2C[11\x2C""]]}]\x2C["void"\x2C{"t":"KKGNNNNNNNNNNNNNHMM"\x2C"n":["ResultVoidErrExt"\x2C"ResultVoidExt"\x2C"Void"\x2C"borrow"\x2C"borrow_mut"\x2C"clone"\x2C"clone_to_uninit"\x2C"eq"\x2C"fmt"\x2C""\x2C"from"\x2C"into"\x2C"partial_cmp"\x2C"try_from"\x2C"try_into"\x2C"type_id"\x2C"unreachable"\x2C"void_unwrap"\x2C"void_unwrap_err"]\x2C"q":[[0\x2C"void"]\x2C[19\x2C"core::fmt"]\x2C[20\x2C"core::cmp"]\x2C[21\x2C"core::option"]\x2C[22\x2C"core::result"]\x2C[23\x2C"core::any"]]\x2C"i":"```f000000000000`AjAl"\x2C"f":"```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{bh}{{{b{f}}{b{c}}}j{}}{{{b{f}}{b{dl}}}n}0{cc{}}{{}c{}}{{{b{f}}{b{c}}}{{Ab{A`}}}{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{fAh}{Ajc{}}{Alc{}}"\x2C"D":"Ab"\x2C"p":[[1\x2C"reference"\x2Cnull\x2Cnull\x2C1]\x2C[0\x2C"mut"]\x2C[6\x2C"Void"\x2C0]\x2C[1\x2C"unit"]\x2C[1\x2C"bool"]\x2C[5\x2C"Formatter"\x2C19]\x2C[8\x2C"Result"\x2C19]\x2C[6\x2C"Ordering"\x2C20]\x2C[6\x2C"Option"\x2C21\x2Cnull\x2C1]\x2C[6\x2C"Result"\x2C22\x2Cnull\x2C1]\x2C[5\x2C"TypeId"\x2C23]\x2C[1\x2C"never"]\x2C[10\x2C"ResultVoidExt"\x2C0]\x2C[10\x2C"ResultVoidErrExt"\x2C0]]\x2C"r":[]\x2C"b":[[8\x2C"impl-Debug-for-Void"]\x2C[9\x2C"impl-Display-for-Void"]]\x2C"c":"OjAAAAAAAAA="\x2C"e":"OzAAAAEAAAoAAgAEAAYADQADAA=="\x2C"P":[[3\x2C"T"]\x2C[5\x2C""]\x2C[7\x2C"T"]\x2C[8\x2C""]\x2C[10\x2C"T"]\x2C[11\x2C"U"]\x2C[12\x2C"T"]\x2C[13\x2C"U\x2CT"]\x2C[14\x2C"U"]\x2C[15\x2C""]\x2C[17\x2C"T"]\x2C[18\x2C"E"]]}]\x2C["volatile_register"\x2C{"t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNN"\x2C"n":["RO"\x2C"RW"\x2C"WO"\x2C"borrow"\x2C""\x2C""\x2C"borrow_mut"\x2C""\x2C""\x2C"from"\x2C""\x2C""\x2C"into"\x2C""\x2C""\x2C"modify"\x2C"read"\x2C""\x2C"try_from"\x2C""\x2C""\x2C"try_into"\x2C""\x2C""\x2C"type_id"\x2C""\x2C""\x2C"write"\x2C""]\x2C"q":[[0\x2C"volatile_register"]\x2C[29\x2C"core::marker"]\x2C[30\x2C"core::ops::function"]\x2C[31\x2C"core::result"]\x2C[32\x2C"core::any"]]\x2C"i":"```A`fAf21021021012121021021010"\x2C"f":"```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{cc{}}00{{}c{}}00{{{b{{f{c}}}}e}hj{{n{c}{{l{c}}}}}}{{{b{{A`{c}}}}}cj}{{{b{{f{c}}}}}cj}{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bAd}00{{{b{{f{c}}}}c}hj}{{{b{{Af{c}}}}c}hj}"\x2C"D":"An"\x2C"p":[[1\x2C"reference"\x2Cnull\x2Cnull\x2C1]\x2C[0\x2C"mut"]\x2C[5\x2C"RW"\x2C0]\x2C[1\x2C"unit"]\x2C[10\x2C"Copy"\x2C29]\x2C[17\x2C"Output"]\x2C[10\x2C"FnOnce"\x2C30]\x2C[5\x2C"RO"\x2C0]\x2C[6\x2C"Result"\x2C31\x2Cnull\x2C1]\x2C[5\x2C"TypeId"\x2C32]\x2C[5\x2C"WO"\x2C0]]\x2C"r":[]\x2C"b":[]\x2C"c":"OjAAAAAAAAA="\x2C"e":"OzAAAAEAAA4AAgAEAAUAEwAIAA=="\x2C"P":[[3\x2C"T"]\x2C[12\x2C"U"]\x2C[15\x2C"T\x2CF"]\x2C[16\x2C"T"]\x2C[18\x2C"U\x2CT"]\x2C[21\x2C"U"]\x2C[24\x2C""]\x2C[27\x2C"T"]]}]]'));\nif (typeof exports !== 'undefined') exports.searchIndex = searchIndex;\nelse if (window.initSearch) window.initSearch(searchIndex);\n//{"start":39\x2C"fragment_lengths":[472\x2C20048\x2C1784\x2C10000\x2C668\x2C1076\x2C916]}
code-source-info,0x7b3c7199866,120,0,35209,C0O0C4O35209,,
code-creation,JS,10,110825,0x7b3c7199916,70, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/search-index.js:1:1,0x7b3c71997e0,~
code-source-info,0x7b3c7199916,120,0,35209,C0O18C4O26C8O31C16O31C24O18C30O35009C36O35045C38O35065C44O35085C48O35096C54O35108C58O35115C63O35115C69O35208,,
code-creation,JS,10,111193,0x7b3c719ca5e,129,readdirSync node:fs:1496:21,0x2563a95a5b80,~
code-source-info,0x7b3c719ca5e,45,38544,39032,C0O38564C5O38574C11O38597C16O38604C22O38642C29O38667C34O38691C42O38667C47O38743C53O38760C56O38767C61O38803C62O38826C67O38834C74O38847C77O38858C82O38858C88O38894C93O38918C100O38834C106O38941C108O38980C116O38996C119O38996C128O39030,,
code-creation,JS,10,111281,0x7b3c719cbf6,17, /home/user/rustdoc-js-profile/src/tester.js:221:55,0x7b3c718f6a0,~
code-source-info,0x7b3c719cbf6,119,8595,8624,C0O8602C11O8602C16O8624,,
tick,0x7ee81c8a8593,111367,0,0x0,0,0x7ee81c585e60,0x7ee81bde7400,0x7b3c719cc01,0x7ee81bd8465c,0x7b3c718faa3,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,RegExp,3,111375,0x7ee79be54480,1004,search.*\\.js$
tick,0x7ee81c4ca994,112443,1,0x7ee81a634430,2,0x7ee81bf0da80,0x8b517fe5c0d,0x8b517fe5674,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fe6dca,0x8b517fe6c3e,0x7b3c718fac8,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee81bedcace,113506,1,0x7ee81a634430,2,0x7ee81bf0da80,0x8b517fe5c0d,0x8b517fe5674,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fe6dca,0x8b517fe6c3e,0x7b3c718fac8,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,Eval,10,113770,0x7b3c71a1316,5, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:1,0x7b3c71a0dc8,~
script-source,121,/home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js,"use strict";if(!Array.prototype.toSpliced){Array.prototype.toSpliced=function(){const me=this.slice();Array.prototype.splice.apply(me\x2Carguments);return me}}function onEachBtwn(arr\x2Cfunc\x2CfuncBtwn){let skipped=true;for(const value of arr){if(!skipped){funcBtwn(value)}skipped=func(value)}}const itemTypes=["keyword"\x2C"primitive"\x2C"mod"\x2C"externcrate"\x2C"import"\x2C"struct"\x2C"enum"\x2C"fn"\x2C"type"\x2C"static"\x2C"trait"\x2C"impl"\x2C"tymethod"\x2C"method"\x2C"structfield"\x2C"variant"\x2C"macro"\x2C"associatedtype"\x2C"constant"\x2C"associatedconstant"\x2C"union"\x2C"foreigntype"\x2C"existential"\x2C"attr"\x2C"derive"\x2C"traitalias"\x2C"generic"\x2C];const TY_PRIMITIVE=itemTypes.indexOf("primitive");const TY_GENERIC=itemTypes.indexOf("generic");const TY_IMPORT=itemTypes.indexOf("import");const TY_TRAIT=itemTypes.indexOf("trait");const ROOT_PATH=typeof window!=="undefined"?window.rootPath:"../";const UNBOXING_LIMIT=5;const REGEX_IDENT=/\\p{ID_Start}\\p{ID_Continue}*|_\\p{ID_Continue}+/uy;const REGEX_INVALID_TYPE_FILTER=/[^a-z]/ui;const MAX_RESULTS=200;const NO_TYPE_FILTER=-1;const editDistanceState={current:[]\x2Cprev:[]\x2CprevPrev:[]\x2Ccalculate:function calculate(a\x2Cb\x2Climit){if(a.length<b.length){const aTmp=a;a=b;b=aTmp}const minDist=a.length-b.length;if(minDist>limit){return limit+1}while(b.length>0&&b[0]===a[0]){a=a.substring(1);b=b.substring(1)}while(b.length>0&&b[b.length-1]===a[a.length-1]){a=a.substring(0\x2Ca.length-1);b=b.substring(0\x2Cb.length-1)}if(b.length===0){return minDist}const aLength=a.length;const bLength=b.length;for(let i=0;i<=bLength;++i){this.current[i]=0;this.prev[i]=i;this.prevPrev[i]=Number.MAX_VALUE}for(let i=1;i<=aLength;++i){this.current[0]=i;const aIdx=i-1;for(let j=1;j<=bLength;++j){const bIdx=j-1;const substitutionCost=a[aIdx]===b[bIdx]?0:1;this.current[j]=Math.min(this.prev[j]+1\x2Cthis.current[j-1]+1\x2Cthis.prev[j-1]+substitutionCost\x2C);if((i>1)&&(j>1)&&(a[aIdx]===b[bIdx-1])&&(a[aIdx-1]===b[bIdx])){this.current[j]=Math.min(this.current[j]\x2Cthis.prevPrev[j-2]+1\x2C)}}const prevPrevTmp=this.prevPrev;this.prevPrev=this.prev;this.prev=this.current;this.current=prevPrevTmp}const distance=this.prev[bLength];return distance<=limit?distance:(limit+1)}\x2C};function editDistance(a\x2Cb\x2Climit){return editDistanceState.calculate(a\x2Cb\x2Climit)}function isEndCharacter(c){return"=\x2C>-])".indexOf(c)!==-1}function isSeparatorCharacter(c){return c==="\x2C"||c==="="}function isReturnArrow(parserState){return parserState.userQuery.slice(parserState.pos\x2CparserState.pos+2)==="->"}function skipWhitespace(parserState){while(parserState.pos<parserState.userQuery.length){const c=parserState.userQuery[parserState.pos];if(c!==" "){break}parserState.pos+=1}}function prevIs(parserState\x2ClookingFor){let pos=parserState.pos;while(pos>0){const c=parserState.userQuery[pos-1];if(c===lookingFor){return true}else if(c!==" "){break}pos-=1}return false}function isLastElemGeneric(elems\x2CparserState){return(elems.length>0&&elems[elems.length-1].generics.length>0)||prevIs(parserState\x2C">")}function getFilteredNextElem(query\x2CparserState\x2Celems\x2CisInGenerics){const start=parserState.pos;if(parserState.userQuery[parserState.pos]===":"&&!isPathStart(parserState)){throw["Expected type filter before "\x2C":"]}getNextElem(query\x2CparserState\x2Celems\x2CisInGenerics);if(parserState.userQuery[parserState.pos]===":"&&!isPathStart(parserState)){if(parserState.typeFilter!==null){throw["Unexpected "\x2C":"\x2C" (expected path after type filter "\x2CparserState.typeFilter+":"\x2C")"\x2C]}if(elems.length===0){throw["Expected type filter before "\x2C":"]}else if(query.literalSearch){throw["Cannot use quotes on type filter"]}const typeFilterElem=elems.pop();checkExtraTypeFilterCharacters(start\x2CparserState);parserState.typeFilter=typeFilterElem.normalizedPathLast;parserState.pos+=1;parserState.totalElems-=1;query.literalSearch=false;getNextElem(query\x2CparserState\x2Celems\x2CisInGenerics)}}function getItemsBefore(query\x2CparserState\x2Celems\x2CendChar){let foundStopChar=true;let foundSeparator=false;const oldTypeFilter=parserState.typeFilter;parserState.typeFilter=null;const oldIsInBinding=parserState.isInBinding;parserState.isInBinding=null;let hofParameters=null;let extra="";if(endChar===">"){extra="<"}else if(endChar==="]"){extra="["}else if(endChar===")"){extra="("}else if(endChar===""){extra="->"}else{extra=endChar}while(parserState.pos<parserState.length){const c=parserState.userQuery[parserState.pos];if(c===endChar){if(parserState.isInBinding){throw["Unexpected "\x2CendChar\x2C" after "\x2C"="]}break}else if(endChar!==""&&isReturnArrow(parserState)){if(parserState.isInBinding){throw["Unexpected "\x2C"->"\x2C" after "\x2C"="]}hofParameters=[...elems];elems.length=0;parserState.pos+=2;foundStopChar=true;foundSeparator=false;continue}else if(c===" "){parserState.pos+=1;continue}else if(isSeparatorCharacter(c)){parserState.pos+=1;foundStopChar=true;foundSeparator=true;continue}else if(c===":"&&isPathStart(parserState)){throw["Unexpected "\x2C"::"\x2C": paths cannot start with "\x2C"::"]}else if(isEndCharacter(c)){throw["Unexpected "\x2Cc\x2C" after "\x2Cextra]}if(!foundStopChar){let extra=[];if(isLastElemGeneric(query.elems\x2CparserState)){extra=[" after "\x2C">"]}else if(prevIs(parserState\x2C"\\"")){throw["Cannot have more than one element if you use quotes"]}if(endChar!==""){throw["Expected "\x2C"\x2C"\x2C"\x2C "\x2C"="\x2C"\x2C or "\x2CendChar\x2C...extra\x2C"\x2C found "\x2Cc\x2C]}throw["Expected "\x2C"\x2C"\x2C" or "\x2C"="\x2C...extra\x2C"\x2C found "\x2Cc\x2C]}const posBefore=parserState.pos;getFilteredNextElem(query\x2CparserState\x2Celems\x2CendChar!=="");if(endChar!==""&&parserState.pos>=parserState.length){throw["Unclosed "\x2Cextra]}if(posBefore===parserState.pos){parserState.pos+=1}foundStopChar=false}if(parserState.pos>=parserState.length&&endChar!==""){throw["Unclosed "\x2Cextra]}parserState.pos+=1;if(hofParameters){foundSeparator=false;if([...elems\x2C...hofParameters].some(x=>x.bindingName)||parserState.isInBinding){throw["Unexpected "\x2C"="\x2C" within "\x2C"->"]}const hofElem=makePrimitiveElement("->"\x2C{generics:hofParameters\x2Cbindings:new Map([["output"\x2C[...elems]]])\x2CtypeFilter:null\x2C});elems.length=0;elems[0]=hofElem}parserState.typeFilter=oldTypeFilter;parserState.isInBinding=oldIsInBinding;return{foundSeparator}}function getNextElem(query\x2CparserState\x2Celems\x2CisInGenerics){const generics=[];skipWhitespace(parserState);let start=parserState.pos;let end;if("[(".indexOf(parserState.userQuery[parserState.pos])!==-1){let endChar=")";let name="()";let friendlyName="tuple";if(parserState.userQuery[parserState.pos]==="["){endChar="]";name="[]";friendlyName="slice"}parserState.pos+=1;const{foundSeparator}=getItemsBefore(query\x2CparserState\x2Cgenerics\x2CendChar);const typeFilter=parserState.typeFilter;const bindingName=parserState.isInBinding;parserState.typeFilter=null;parserState.isInBinding=null;for(const gen of generics){if(gen.bindingName!==null){throw["Type parameter "\x2C"="\x2C` cannot be within ${friendlyName} `\x2Cname]}}if(name==="()"&&!foundSeparator&&generics.length===1&&typeFilter===null){elems.push(generics[0])}else if(name==="()"&&generics.length===1&&generics[0].name==="->"){generics[0].typeFilter=typeFilter;elems.push(generics[0])}else{if(typeFilter!==null&&typeFilter!=="primitive"){throw["Invalid search type: primitive "\x2Cname\x2C" and "\x2CtypeFilter\x2C" both specified"\x2C]}parserState.totalElems+=1;if(isInGenerics){parserState.genericsElems+=1}elems.push(makePrimitiveElement(name\x2C{bindingName\x2Cgenerics}))}}else if(parserState.userQuery[parserState.pos]==="&"){if(parserState.typeFilter!==null&&parserState.typeFilter!=="primitive"){throw["Invalid search type: primitive "\x2C"&"\x2C" and "\x2CparserState.typeFilter\x2C" both specified"\x2C]}parserState.typeFilter=null;parserState.pos+=1;let c=parserState.userQuery[parserState.pos];while(c===" "&&parserState.pos<parserState.length){parserState.pos+=1;c=parserState.userQuery[parserState.pos]}const generics=[];if(parserState.userQuery.slice(parserState.pos\x2CparserState.pos+3)==="mut"){generics.push(makePrimitiveElement("mut"\x2C{typeFilter:"keyword"}));parserState.pos+=3;c=parserState.userQuery[parserState.pos]}while(c===" "&&parserState.pos<parserState.length){parserState.pos+=1;c=parserState.userQuery[parserState.pos]}if(!isEndCharacter(c)&&parserState.pos<parserState.length){getFilteredNextElem(query\x2CparserState\x2Cgenerics\x2CisInGenerics)}elems.push(makePrimitiveElement("reference"\x2C{generics}))}else{const isStringElem=parserState.userQuery[start]==="\\"";if(isStringElem){start+=1;getStringElem(query\x2CparserState\x2CisInGenerics);end=parserState.pos-1}else{end=getIdentEndPosition(parserState)}if(parserState.pos<parserState.length&&parserState.userQuery[parserState.pos]==="<"){if(start>=end){throw["Found generics without a path"]}parserState.pos+=1;getItemsBefore(query\x2CparserState\x2Cgenerics\x2C">")}else if(parserState.pos<parserState.length&&parserState.userQuery[parserState.pos]==="("){if(start>=end){throw["Found generics without a path"]}if(parserState.isInBinding){throw["Unexpected "\x2C"("\x2C" after "\x2C"="]}parserState.pos+=1;const typeFilter=parserState.typeFilter;parserState.typeFilter=null;getItemsBefore(query\x2CparserState\x2Cgenerics\x2C")");skipWhitespace(parserState);if(isReturnArrow(parserState)){parserState.pos+=2;skipWhitespace(parserState);getFilteredNextElem(query\x2CparserState\x2Cgenerics\x2CisInGenerics);generics[generics.length-1].bindingName=makePrimitiveElement("output")}else{generics.push(makePrimitiveElement(null\x2C{bindingName:makePrimitiveElement("output")\x2CtypeFilter:null\x2C}))}parserState.typeFilter=typeFilter}if(isStringElem){skipWhitespace(parserState)}if(start>=end&&generics.length===0){return}if(parserState.userQuery[parserState.pos]==="="){if(parserState.isInBinding){throw["Cannot write "\x2C"="\x2C" twice in a binding"]}if(!isInGenerics){throw["Type parameter "\x2C"="\x2C" must be within generics list"]}const name=parserState.userQuery.slice(start\x2Cend).trim();if(name==="!"){throw["Type parameter "\x2C"="\x2C" key cannot be "\x2C"!"\x2C" never type"]}if(name.includes("!")){throw["Type parameter "\x2C"="\x2C" key cannot be "\x2C"!"\x2C" macro"]}if(name.includes("::")){throw["Type parameter "\x2C"="\x2C" key cannot contain "\x2C"::"\x2C" path"]}if(name.includes(":")){throw["Type parameter "\x2C"="\x2C" key cannot contain "\x2C":"\x2C" type"]}parserState.isInBinding={name\x2Cgenerics}}else{elems.push(createQueryElement(query\x2CparserState\x2CparserState.userQuery.slice(start\x2Cend)\x2Cgenerics\x2CisInGenerics\x2C)\x2C)}}}function checkExtraTypeFilterCharacters(start\x2CparserState){const query=parserState.userQuery.slice(start\x2CparserState.pos).trim();const match=query.match(REGEX_INVALID_TYPE_FILTER);if(match){throw["Unexpected "\x2Cmatch[0]\x2C" in type filter (before "\x2C":"\x2C")"\x2C]}}function createQueryElement(query\x2CparserState\x2Cname\x2Cgenerics\x2CisInGenerics){const path=name.trim();if(path.length===0&&generics.length===0){throw["Unexpected "\x2CparserState.userQuery[parserState.pos]]}if(query.literalSearch&&parserState.totalElems-parserState.genericsElems>0){throw["Cannot have more than one element if you use quotes"]}const typeFilter=parserState.typeFilter;parserState.typeFilter=null;if(name.trim()==="!"){if(typeFilter!==null&&typeFilter!=="primitive"){throw["Invalid search type: primitive never type "\x2C"!"\x2C" and "\x2CtypeFilter\x2C" both specified"\x2C]}if(generics.length!==0){throw["Never type "\x2C"!"\x2C" does not accept generic parameters"\x2C]}const bindingName=parserState.isInBinding;parserState.isInBinding=null;return makePrimitiveElement("never"\x2C{bindingName})}const quadcolon=/::\\s*::/.exec(path);if(path.startsWith("::")){throw["Paths cannot start with "\x2C"::"]}else if(path.endsWith("::")){throw["Paths cannot end with "\x2C"::"]}else if(quadcolon!==null){throw["Unexpected "\x2Cquadcolon[0]]}const pathSegments=path.split(/(?:::\\s*)|(?:\\s+(?:::\\s*)?)/).map(x=>x.toLowerCase());if(pathSegments.length===0||(pathSegments.length===1&&pathSegments[0]==="")){if(generics.length>0||prevIs(parserState\x2C">")){throw["Found generics without a path"]}else{throw["Unexpected "\x2CparserState.userQuery[parserState.pos]]}}for(const[i\x2CpathSegment]of pathSegments.entries()){if(pathSegment==="!"){if(i!==0){throw["Never type "\x2C"!"\x2C" is not associated item"]}pathSegments[i]="never"}}parserState.totalElems+=1;if(isInGenerics){parserState.genericsElems+=1}const bindingName=parserState.isInBinding;parserState.isInBinding=null;const bindings=new Map();const pathLast=pathSegments[pathSegments.length-1];return{name:name.trim()\x2Cid:null\x2CfullPath:pathSegments\x2CpathWithoutLast:pathSegments.slice(0\x2CpathSegments.length-1)\x2CpathLast\x2CnormalizedPathLast:pathLast.replace(/_/g\x2C"")\x2Cgenerics:generics.filter(gen=>{if(gen.bindingName!==null){if(gen.name!==null){gen.bindingName.generics.unshift(gen)}bindings.set(gen.bindingName.name.toLowerCase().replace(/_/g\x2C"")\x2Cgen.bindingName.generics\x2C);return false}return true})\x2Cbindings\x2CtypeFilter\x2CbindingName\x2C}}function makePrimitiveElement(name\x2Cextra){return Object.assign({name\x2Cid:null\x2CfullPath:[name]\x2CpathWithoutLast:[]\x2CpathLast:name\x2CnormalizedPathLast:name\x2Cgenerics:[]\x2Cbindings:new Map()\x2CtypeFilter:"primitive"\x2CbindingName:null\x2C}\x2Cextra)}function getStringElem(query\x2CparserState\x2CisInGenerics){if(isInGenerics){throw["Unexpected "\x2C"\\""\x2C" in generics"]}else if(query.literalSearch){throw["Cannot have more than one literal search element"]}else if(parserState.totalElems-parserState.genericsElems>0){throw["Cannot use literal search when there is more than one element"]}parserState.pos+=1;const start=parserState.pos;const end=getIdentEndPosition(parserState);if(parserState.pos>=parserState.length){throw["Unclosed "\x2C"\\""]}else if(parserState.userQuery[end]!=="\\""){throw["Unexpected "\x2CparserState.userQuery[end]\x2C" in a string element"]}else if(start===end){throw["Cannot have empty string element"]}parserState.pos+=1;query.literalSearch=true}function getIdentEndPosition(parserState){let afterIdent=consumeIdent(parserState);let end=parserState.pos;let macroExclamation=-1;while(parserState.pos<parserState.length){const c=parserState.userQuery[parserState.pos];if(c==="!"){if(macroExclamation!==-1){throw["Cannot have more than one "\x2C"!"\x2C" in an ident"]}else if(parserState.pos+1<parserState.length){const pos=parserState.pos;parserState.pos++;const beforeIdent=consumeIdent(parserState);parserState.pos=pos;if(beforeIdent){throw["Unexpected "\x2C"!"\x2C": it can only be at the end of an ident"]}}if(afterIdent)macroExclamation=parserState.pos}else if(isPathSeparator(c)){if(c===":"){if(!isPathStart(parserState)){break}parserState.pos+=1}else{while(parserState.pos+1<parserState.length){const next_c=parserState.userQuery[parserState.pos+1];if(next_c!==" "){break}parserState.pos+=1}}if(macroExclamation!==-1){throw["Cannot have associated items in macros"]}}else if(c==="["||c==="("||isEndCharacter(c)||isSpecialStartCharacter(c)||isSeparatorCharacter(c)){break}else if(parserState.pos>0){throw["Unexpected "\x2Cc\x2C" after "\x2CparserState.userQuery[parserState.pos-1]\x2C" (not a valid identifier)"]}else{throw["Unexpected "\x2Cc\x2C" (not a valid identifier)"]}parserState.pos+=1;afterIdent=consumeIdent(parserState);end=parserState.pos}if(macroExclamation!==-1){if(parserState.typeFilter===null){parserState.typeFilter="macro"}else if(parserState.typeFilter!=="macro"){throw["Invalid search type: macro "\x2C"!"\x2C" and "\x2CparserState.typeFilter\x2C" both specified"\x2C]}end=macroExclamation}return end}function isSpecialStartCharacter(c){return"<\\"".indexOf(c)!==-1}function isPathStart(parserState){return parserState.userQuery.slice(parserState.pos\x2CparserState.pos+2)==="::"}function consumeIdent(parserState){REGEX_IDENT.lastIndex=parserState.pos;const match=parserState.userQuery.match(REGEX_IDENT);if(match){parserState.pos+=match[0].length;return true}return false}function isPathSeparator(c){return c===":"||c===" "}class VlqHexDecoder{constructor(string\x2Ccons){this.string=string;this.cons=cons;this.offset=0;this.backrefQueue=[]}decodeList(){let c=this.string.charCodeAt(this.offset);const ret=[];while(c!==125){ret.push(this.decode());c=this.string.charCodeAt(this.offset)}this.offset+=1;return ret}decode(){let n=0;let c=this.string.charCodeAt(this.offset);if(c===123){this.offset+=1;return this.decodeList()}while(c<96){n=(n<<4)|(c&0xF);this.offset+=1;c=this.string.charCodeAt(this.offset)}n=(n<<4)|(c&0xF);const[sign\x2Cvalue]=[n&1\x2Cn>>1];this.offset+=1;return sign?-value:value}next(){const c=this.string.charCodeAt(this.offset);if(c>=48&&c<64){this.offset+=1;return this.backrefQueue[c-48]}if(c===96){this.offset+=1;return this.cons(0)}const result=this.cons(this.decode());this.backrefQueue.unshift(result);if(this.backrefQueue.length>16){this.backrefQueue.pop()}return result}}class RoaringBitmap{constructor(str){const strdecoded=atob(str);const u8array=new Uint8Array(strdecoded.length);for(let j=0;j<strdecoded.length;++j){u8array[j]=strdecoded.charCodeAt(j)}const has_runs=u8array[0]===0x3b;const size=has_runs?((u8array[2]|(u8array[3]<<8))+1):((u8array[4]|(u8array[5]<<8)|(u8array[6]<<16)|(u8array[7]<<24)));let i=has_runs?4:8;let is_run;if(has_runs){const is_run_len=Math.floor((size+7)/8);is_run=u8array.slice(i\x2Ci+is_run_len);i+=is_run_len}else{is_run=new Uint8Array()}this.keys=[];this.cardinalities=[];for(let j=0;j<size;++j){this.keys.push(u8array[i]|(u8array[i+1]<<8));i+=2;this.cardinalities.push((u8array[i]|(u8array[i+1]<<8))+1);i+=2}this.containers=[];let offsets=null;if(!has_runs||this.keys.length>=4){offsets=[];for(let j=0;j<size;++j){offsets.push(u8array[i]|(u8array[i+1]<<8)|(u8array[i+2]<<16)|(u8array[i+3]<<24));i+=4}}for(let j=0;j<size;++j){if(offsets&&offsets[j]!==i){console.log(this.containers);throw new Error(`corrupt bitmap ${j}: ${i} / ${offsets[j]}`)}if(is_run[j>>3]&(1<<(j&0x7))){const runcount=(u8array[i]|(u8array[i+1]<<8));i+=2;this.containers.push(new RoaringBitmapRun(runcount\x2Cu8array.slice(i\x2Ci+(runcount*4))\x2C));i+=runcount*4}else if(this.cardinalities[j]>=4096){this.containers.push(new RoaringBitmapBits(u8array.slice(i\x2Ci+8192)));i+=8192}else{const end=this.cardinalities[j]*2;this.containers.push(new RoaringBitmapArray(this.cardinalities[j]\x2Cu8array.slice(i\x2Ci+end)\x2C));i+=end}}}contains(keyvalue){const key=keyvalue>>16;const value=keyvalue&0xFFFF;for(let i=0;i<this.keys.length;++i){if(this.keys[i]===key){return this.containers[i].contains(value)}}return false}}class RoaringBitmapRun{constructor(runcount\x2Carray){this.runcount=runcount;this.array=array}contains(value){const l=this.runcount*4;for(let i=0;i<l;i+=4){const start=this.array[i]|(this.array[i+1]<<8);const lenm1=this.array[i+2]|(this.array[i+3]<<8);if(value>=start&&value<=(start+lenm1)){return true}}return false}}class RoaringBitmapArray{constructor(cardinality\x2Carray){this.cardinality=cardinality;this.array=array}contains(value){const l=this.cardinality*2;for(let i=0;i<l;i+=2){const start=this.array[i]|(this.array[i+1]<<8);if(value===start){return true}}return false}}class RoaringBitmapBits{constructor(array){this.array=array}contains(value){return!!(this.array[value>>3]&(1<<(value&7)))}}class NameTrie{constructor(){this.children=[];this.matches=[]}insert(name\x2Cid\x2CtailTable){this.insertSubstring(name\x2C0\x2Cid\x2CtailTable)}insertSubstring(name\x2Csubstart\x2Cid\x2CtailTable){const l=name.length;if(substart===l){this.matches.push(id)}else{const sb=name.charCodeAt(substart);let child;if(this.children[sb]!==undefined){child=this.children[sb]}else{child=new NameTrie();this.children[sb]=child;let sste;if(substart>=2){const tail=name.substring(substart-2\x2Csubstart+1);if(tailTable.has(tail)){sste=tailTable.get(tail)}else{sste=[];tailTable.set(tail\x2Csste)}sste.push(child)}}child.insertSubstring(name\x2Csubstart+1\x2Cid\x2CtailTable)}}search(name\x2CtailTable){const results=new Set();this.searchSubstringPrefix(name\x2C0\x2Cresults);if(results.size<MAX_RESULTS&&name.length>=3){const levParams=name.length>=6?new Lev2TParametricDescription(name.length):new Lev1TParametricDescription(name.length);this.searchLev(name\x2C0\x2ClevParams\x2Cresults);const tail=name.substring(0\x2C3);if(tailTable.has(tail)){for(const entry of tailTable.get(tail)){entry.searchSubstringPrefix(name\x2C3\x2Cresults)}}else{console.log(tailTable);console.log(tail)}}return[...results]}searchSubstringPrefix(name\x2Csubstart\x2Cresults){const l=name.length;if(substart===l){for(const match of this.matches){results.add(match)}let unprocessedChildren=[];for(const child of this.children){if(child){unprocessedChildren.push(child)}}let nextSet=[];while(unprocessedChildren.length!==0){const next=unprocessedChildren.pop();for(const child of next.children){if(child){nextSet.push(child)}}for(const match of next.matches){results.add(match)}if(unprocessedChildren.length===0){const tmp=unprocessedChildren;unprocessedChildren=nextSet;nextSet=tmp}}}else{const sb=name.charCodeAt(substart);if(this.children[sb]!==undefined){this.children[sb].searchSubstringPrefix(name\x2Csubstart+1\x2Cresults)}}}searchLev(name\x2Csubstart\x2ClevParams\x2Cresults){const stack=[[this\x2C0]];const n=levParams.n;while(stack.length!==0){const[trie\x2ClevState]=stack.pop();for(const[charCode\x2Cchild]of trie.children.entries()){if(!child){continue}const levPos=levParams.getPosition(levState);const vector=levParams.getVector(name\x2CcharCode\x2ClevPos\x2CMath.min(name.length\x2ClevPos+(2*n)+1)\x2C);const newLevState=levParams.transition(levState\x2ClevPos\x2Cvector\x2C);if(newLevState>=0){stack.push([child\x2CnewLevState]);if(levParams.isAccept(newLevState)){for(const match of child.matches){results.add(match)}}}}}}}class DocSearch{constructor(rawSearchIndex\x2CrootPath\x2CsearchState){this.searchIndexDeprecated=new Map();this.searchIndexEmptyDesc=new Map();this.functionTypeFingerprint=null;this.typeNameIdMap=new Map();this.assocTypeIdNameMap=new Map();this.ALIASES=new Map();this.rootPath=rootPath;this.searchState=searchState;this.typeNameIdOfArray=this.buildTypeMapIndex("array");this.typeNameIdOfSlice=this.buildTypeMapIndex("slice");this.typeNameIdOfArrayOrSlice=this.buildTypeMapIndex("[]");this.typeNameIdOfTuple=this.buildTypeMapIndex("tuple");this.typeNameIdOfUnit=this.buildTypeMapIndex("unit");this.typeNameIdOfTupleOrUnit=this.buildTypeMapIndex("()");this.typeNameIdOfFn=this.buildTypeMapIndex("fn");this.typeNameIdOfFnMut=this.buildTypeMapIndex("fnmut");this.typeNameIdOfFnOnce=this.buildTypeMapIndex("fnonce");this.typeNameIdOfHof=this.buildTypeMapIndex("->");this.typeNameIdOfOutput=this.buildTypeMapIndex("output"\x2Ctrue);this.typeNameIdOfReference=this.buildTypeMapIndex("reference");this.EMPTY_BINDINGS_MAP=new Map();this.EMPTY_GENERICS_ARRAY=[];this.TYPES_POOL=new Map();this.nameTrie=new NameTrie();this.tailTable=new Map();this.searchIndex=this.buildIndex(rawSearchIndex)}buildTypeMapIndex(name\x2CisAssocType){if(name===""||name===null){return null}if(this.typeNameIdMap.has(name)){const obj=this.typeNameIdMap.get(name);obj.assocOnly=isAssocType&&obj.assocOnly;return obj.id}else{const id=this.typeNameIdMap.size;this.typeNameIdMap.set(name\x2C{id\x2CassocOnly:isAssocType});return id}}buildItemSearchTypeAll(types\x2Cpaths\x2ClowercasePaths){return types.length>0?types.map(type=>this.buildItemSearchType(type\x2Cpaths\x2ClowercasePaths)):this.EMPTY_GENERICS_ARRAY}buildItemSearchType(type\x2Cpaths\x2ClowercasePaths\x2CisAssocType){const PATH_INDEX_DATA=0;const GENERICS_DATA=1;const BINDINGS_DATA=2;let pathIndex\x2Cgenerics\x2Cbindings;if(typeof type==="number"){pathIndex=type;generics=this.EMPTY_GENERICS_ARRAY;bindings=this.EMPTY_BINDINGS_MAP}else{pathIndex=type[PATH_INDEX_DATA];generics=this.buildItemSearchTypeAll(type[GENERICS_DATA]\x2Cpaths\x2ClowercasePaths\x2C);if(type.length>BINDINGS_DATA&&type[BINDINGS_DATA].length>0){bindings=new Map(type[BINDINGS_DATA].map(binding=>{const[assocType\x2Cconstraints]=binding;return[this.buildItemSearchType(assocType\x2Cpaths\x2ClowercasePaths\x2Ctrue).id\x2Cthis.buildItemSearchTypeAll(constraints\x2Cpaths\x2ClowercasePaths)\x2C]}))}else{bindings=this.EMPTY_BINDINGS_MAP}}let result;if(pathIndex<0){result={id:pathIndex\x2Cname:""\x2Cty:TY_GENERIC\x2Cpath:null\x2CexactPath:null\x2Cgenerics\x2Cbindings\x2CunboxFlag:true\x2C}}else if(pathIndex===0){result={id:null\x2Cname:""\x2Cty:null\x2Cpath:null\x2CexactPath:null\x2Cgenerics\x2Cbindings\x2CunboxFlag:true\x2C}}else{const item=lowercasePaths[pathIndex-1];const id=this.buildTypeMapIndex(item.name\x2CisAssocType);if(isAssocType){this.assocTypeIdNameMap.set(id\x2Cpaths[pathIndex-1].name)}result={id\x2Cname:paths[pathIndex-1].name\x2Cty:item.ty\x2Cpath:item.path\x2CexactPath:item.exactPath\x2Cgenerics\x2Cbindings\x2CunboxFlag:item.unboxFlag\x2C}}const cr=this.TYPES_POOL.get(result.id);if(cr){if(cr.generics.length===result.generics.length&&cr.generics!==result.generics&&cr.generics.every((x\x2Ci)=>result.generics[i]===x)){result.generics=cr.generics}if(cr.bindings.size===result.bindings.size&&cr.bindings!==result.bindings){let ok=true;for(const[k\x2Cv]of cr.bindings.entries()){const v2=result.bindings.get(v);if(!v2){ok=false;break}if(v!==v2&&v.length===v2.length&&v.every((x\x2Ci)=>v2[i]===x)){result.bindings.set(k\x2Cv)}else if(v!==v2){ok=false;break}}if(ok){result.bindings=cr.bindings}}if(cr.ty===result.ty&&cr.path===result.path&&cr.bindings===result.bindings&&cr.generics===result.generics&&cr.ty===result.ty&&cr.name===result.name&&cr.unboxFlag===result.unboxFlag){return cr}}this.TYPES_POOL.set(result.id\x2Cresult);return result}buildFunctionTypeFingerprint(type\x2Coutput){let input=type.id;if(input===this.typeNameIdOfArray||input===this.typeNameIdOfSlice){input=this.typeNameIdOfArrayOrSlice}if(input===this.typeNameIdOfTuple||input===this.typeNameIdOfUnit){input=this.typeNameIdOfTupleOrUnit}if(input===this.typeNameIdOfFn||input===this.typeNameIdOfFnMut||input===this.typeNameIdOfFnOnce){input=this.typeNameIdOfHof}const hashint1=k=>{k=(~~k+0x7ed55d16)+(k<<12);k=(k ^ 0xc761c23c)^(k>>>19);k=(~~k+0x165667b1)+(k<<5);k=(~~k+0xd3a2646c)^(k<<9);k=(~~k+0xfd7046c5)+(k<<3);return(k ^ 0xb55a4f09)^(k>>>16)};const hashint2=k=>{k=~k+(k<<15);k ^=k>>>12;k+=k<<2;k ^=k>>>4;k=Math.imul(k\x2C2057);return k ^(k>>16)};if(input!==null){const h0a=hashint1(input);const h0b=hashint2(input);const h1a=~~(h0a+Math.imul(h0b\x2C2));const h1b=~~(h0a+Math.imul(h0b\x2C3));const h2a=~~(h0a+Math.imul(h0b\x2C4));const h2b=~~(h0a+Math.imul(h0b\x2C5));output[0]|=(1<<(h0a%32))|(1<<(h1b%32));output[1]|=(1<<(h1a%32))|(1<<(h2b%32));output[2]|=(1<<(h2a%32))|(1<<(h0b%32));output[3]+=1}for(const g of type.generics){this.buildFunctionTypeFingerprint(g\x2Coutput)}const fb={id:null\x2Cty:0\x2Cgenerics:this.EMPTY_GENERICS_ARRAY\x2Cbindings:this.EMPTY_BINDINGS_MAP\x2C};for(const[k\x2Cv]of type.bindings.entries()){fb.id=k;fb.generics=v;this.buildFunctionTypeFingerprint(fb\x2Coutput)}}buildIndex(rawSearchIndex){const buildFunctionSearchTypeCallback=(paths\x2ClowercasePaths)=>{return functionSearchType=>{if(functionSearchType===0){return null}const INPUTS_DATA=0;const OUTPUT_DATA=1;let inputs\x2Coutput;if(typeof functionSearchType[INPUTS_DATA]==="number"){inputs=[this.buildItemSearchType(functionSearchType[INPUTS_DATA]\x2Cpaths\x2ClowercasePaths\x2C)\x2C]}else{inputs=this.buildItemSearchTypeAll(functionSearchType[INPUTS_DATA]\x2Cpaths\x2ClowercasePaths\x2C)}if(functionSearchType.length>1){if(typeof functionSearchType[OUTPUT_DATA]==="number"){output=[this.buildItemSearchType(functionSearchType[OUTPUT_DATA]\x2Cpaths\x2ClowercasePaths\x2C)\x2C]}else{output=this.buildItemSearchTypeAll(functionSearchType[OUTPUT_DATA]\x2Cpaths\x2ClowercasePaths\x2C)}}else{output=[]}const where_clause=[];const l=functionSearchType.length;for(let i=2;i<l;++i){where_clause.push(typeof functionSearchType[i]==="number"?[this.buildItemSearchType(functionSearchType[i]\x2Cpaths\x2ClowercasePaths)]:this.buildItemSearchTypeAll(functionSearchType[i]\x2Cpaths\x2ClowercasePaths\x2C))}return{inputs\x2Coutput\x2Cwhere_clause\x2C}}};const searchIndex=[];let currentIndex=0;let id=0;for(const crate of rawSearchIndex.values()){id+=crate.t.length+1}this.functionTypeFingerprint=new Uint32Array((id+1)*4);id=0;for(const[crate\x2CcrateCorpus]of rawSearchIndex){const itemDescShardDecoder=new VlqHexDecoder(crateCorpus.D\x2Cnoop=>noop);let descShard={crate\x2Cshard:0\x2Cstart:0\x2Clen:itemDescShardDecoder.next()\x2Cpromise:null\x2Cresolve:null\x2C};const descShardList=[descShard];this.searchIndexDeprecated.set(crate\x2Cnew RoaringBitmap(crateCorpus.c));this.searchIndexEmptyDesc.set(crate\x2Cnew RoaringBitmap(crateCorpus.e));let descIndex=0;let lastParamNames=[];let normalizedName=crate.indexOf("_")===-1?crate:crate.replace(/_/g\x2C"");const crateRow={crate\x2Cty:3\x2Cname:crate\x2Cpath:""\x2CdescShard\x2CdescIndex\x2CexactPath:""\x2Cdesc:crateCorpus.doc\x2Cparent:undefined\x2Ctype:null\x2CparamNames:lastParamNames\x2Cid\x2Cword:crate\x2CnormalizedName\x2CbitIndex:0\x2CimplDisambiguator:null\x2C};this.nameTrie.insert(normalizedName\x2Cid\x2Cthis.tailTable);id+=1;searchIndex.push(crateRow);currentIndex+=1;if(!this.searchIndexEmptyDesc.get(crate).contains(0)){descIndex+=1}const itemTypes=crateCorpus.t;const itemNames=crateCorpus.n;const itemPaths=new Map(crateCorpus.q);const itemReexports=new Map(crateCorpus.r);const itemParentIdxDecoder=new VlqHexDecoder(crateCorpus.i\x2Cnoop=>noop);const implDisambiguator=new Map(crateCorpus.b);const paths=crateCorpus.p;const aliases=crateCorpus.a;const itemParamNames=new Map(crateCorpus.P);const lowercasePaths=[];const itemFunctionDecoder=new VlqHexDecoder(crateCorpus.f\x2CbuildFunctionSearchTypeCallback(paths\x2ClowercasePaths)\x2C);let len=paths.length;let lastPath=itemPaths.get(0);for(let i=0;i<len;++i){const elem=paths[i];const ty=elem[0];const name=elem[1];let path=null;if(elem.length>2&&elem[2]!==null){path=itemPaths.has(elem[2])?itemPaths.get(elem[2]):lastPath;lastPath=path}const exactPath=elem.length>3&&elem[3]!==null?itemPaths.get(elem[3]):path;const unboxFlag=elem.length>4&&!!elem[4];lowercasePaths.push({ty\x2Cname:name.toLowerCase()\x2Cpath\x2CexactPath\x2CunboxFlag});paths[i]={ty\x2Cname\x2Cpath\x2CexactPath\x2CunboxFlag}}lastPath="";len=itemTypes.length;let lastName="";let lastWord="";for(let i=0;i<len;++i){const bitIndex=i+1;if(descIndex>=descShard.len&&!this.searchIndexEmptyDesc.get(crate).contains(bitIndex)){descShard={crate\x2Cshard:descShard.shard+1\x2Cstart:descShard.start+descShard.len\x2Clen:itemDescShardDecoder.next()\x2Cpromise:null\x2Cresolve:null\x2C};descIndex=0;descShardList.push(descShard)}const name=itemNames[i]===""?lastName:itemNames[i];const word=itemNames[i]===""?lastWord:itemNames[i].toLowerCase();const path=itemPaths.has(i)?itemPaths.get(i):lastPath;const paramNames=itemParamNames.has(i)?itemParamNames.get(i).split("\x2C"):lastParamNames;const type=itemFunctionDecoder.next();if(type!==null){if(type){const fp=this.functionTypeFingerprint.subarray(id*4\x2C(id+1)*4);for(const t of type.inputs){this.buildFunctionTypeFingerprint(t\x2Cfp)}for(const t of type.output){this.buildFunctionTypeFingerprint(t\x2Cfp)}for(const w of type.where_clause){for(const t of w){this.buildFunctionTypeFingerprint(t\x2Cfp)}}}}const itemParentIdx=itemParentIdxDecoder.next();normalizedName=word.indexOf("_")===-1?word:word.replace(/_/g\x2C"");const row={crate\x2Cty:itemTypes.charCodeAt(i)-65\x2Cname\x2Cpath\x2CdescShard\x2CdescIndex\x2CexactPath:itemReexports.has(i)?itemPaths.get(itemReexports.get(i)):path\x2Cparent:itemParentIdx>0?paths[itemParentIdx-1]:undefined\x2Ctype\x2CparamNames\x2Cid\x2Cword\x2CnormalizedName\x2CbitIndex\x2CimplDisambiguator:implDisambiguator.has(i)?implDisambiguator.get(i):null\x2C};this.nameTrie.insert(normalizedName\x2Cid\x2Cthis.tailTable);id+=1;searchIndex.push(row);lastPath=row.path;lastParamNames=row.paramNames;if(!this.searchIndexEmptyDesc.get(crate).contains(bitIndex)){descIndex+=1}lastName=name;lastWord=word}if(aliases){const currentCrateAliases=new Map();this.ALIASES.set(crate\x2CcurrentCrateAliases);for(const alias_name in aliases){if(!Object.prototype.hasOwnProperty.call(aliases\x2Calias_name)){continue}let currentNameAliases;if(currentCrateAliases.has(alias_name)){currentNameAliases=currentCrateAliases.get(alias_name)}else{currentNameAliases=[];currentCrateAliases.set(alias_name\x2CcurrentNameAliases)}for(const local_alias of aliases[alias_name]){currentNameAliases.push(local_alias+currentIndex)}}}currentIndex+=itemTypes.length;this.searchState.descShards.set(crate\x2CdescShardList)}this.TYPES_POOL=new Map();return searchIndex}static parseQuery(userQuery){function itemTypeFromName(typename){const index=itemTypes.findIndex(i=>i===typename);if(index<0){throw["Unknown type filter "\x2Ctypename]}return index}function convertTypeFilterOnElem(elem){if(elem.typeFilter!==null){let typeFilter=elem.typeFilter;if(typeFilter==="const"){typeFilter="constant"}elem.typeFilter=itemTypeFromName(typeFilter)}else{elem.typeFilter=NO_TYPE_FILTER}for(const elem2 of elem.generics){convertTypeFilterOnElem(elem2)}for(const constraints of elem.bindings.values()){for(const constraint of constraints){convertTypeFilterOnElem(constraint)}}}function newParsedQuery(userQuery){return{userQuery\x2Celems:[]\x2Creturned:[]\x2CfoundElems:0\x2CtotalElems:0\x2CliteralSearch:false\x2ChasReturnArrow:false\x2Cerror:null\x2Ccorrection:null\x2CproposeCorrectionFrom:null\x2CproposeCorrectionTo:null\x2CtypeFingerprint:new Uint32Array(4)\x2C}}function parseInput(query\x2CparserState){let foundStopChar=true;while(parserState.pos<parserState.length){const c=parserState.userQuery[parserState.pos];if(isEndCharacter(c)){foundStopChar=true;if(isSeparatorCharacter(c)){parserState.pos+=1;continue}else if(c==="-"||c===">"){if(isReturnArrow(parserState)){query.hasReturnArrow=true;break}throw["Unexpected "\x2Cc\x2C" (did you mean "\x2C"->"\x2C"?)"]}else if(parserState.pos>0){throw["Unexpected "\x2Cc\x2C" after "\x2CparserState.userQuery[parserState.pos-1]]}throw["Unexpected "\x2Cc]}else if(c===" "){skipWhitespace(parserState);continue}if(!foundStopChar){let extra="";if(isLastElemGeneric(query.elems\x2CparserState)){extra=[" after "\x2C">"]}else if(prevIs(parserState\x2C"\\"")){throw["Cannot have more than one element if you use quotes"]}if(parserState.typeFilter!==null){throw["Expected "\x2C"\x2C"\x2C" or "\x2C"->"\x2C...extra\x2C"\x2C found "\x2Cc\x2C]}throw["Expected "\x2C"\x2C"\x2C"\x2C "\x2C":"\x2C" or "\x2C"->"\x2C...extra\x2C"\x2C found "\x2Cc\x2C]}const before=query.elems.length;getFilteredNextElem(query\x2CparserState\x2Cquery.elems\x2Cfalse);if(query.elems.length===before){parserState.pos+=1}foundStopChar=false}if(parserState.typeFilter!==null){throw["Unexpected "\x2C":"\x2C" (expected path after type filter "\x2CparserState.typeFilter+":"\x2C")"\x2C]}while(parserState.pos<parserState.length){if(isReturnArrow(parserState)){parserState.pos+=2;skipWhitespace(parserState);getItemsBefore(query\x2CparserState\x2Cquery.returned\x2C"");query.hasReturnArrow=true;break}else{parserState.pos+=1}}}userQuery=userQuery.trim().replace(/\\r|\\n|\\t/g\x2C" ");const parserState={length:userQuery.length\x2Cpos:0\x2CtotalElems:0\x2CgenericsElems:0\x2CtypeFilter:null\x2CisInBinding:null\x2CuserQuery\x2C};let query=newParsedQuery(userQuery);try{parseInput(query\x2CparserState);for(const elem of query.elems){convertTypeFilterOnElem(elem)}for(const elem of query.returned){convertTypeFilterOnElem(elem)}}catch(err){query=newParsedQuery(userQuery);query.error=err;return query}if(!query.literalSearch){query.literalSearch=parserState.totalElems>1}query.foundElems=query.elems.length+query.returned.length;query.totalElems=parserState.totalElems;return query}async execQuery(parsedQuery\x2CfilterCrates\x2CcurrentCrate){const results_others=new Map()\x2Cresults_in_args=new Map()\x2Cresults_returned=new Map();function createQueryResults(results_in_args\x2Cresults_returned\x2Cresults_others\x2CparsedQuery){return{"in_args":results_in_args\x2C"returned":results_returned\x2C"others":results_others\x2C"query":parsedQuery\x2C}}const buildHrefAndPath=item=>{let displayPath;let href;const type=itemTypes[item.ty];const name=item.name;let path=item.path;let exactPath=item.exactPath;if(type==="mod"){displayPath=path+"::";href=this.rootPath+path.replace(/::/g\x2C"/")+"/"+name+"/index.html"}else if(type==="import"){displayPath=item.path+"::";href=this.rootPath+item.path.replace(/::/g\x2C"/")+"/index.html#reexport."+name}else if(type==="primitive"||type==="keyword"){displayPath="";exactPath="";href=this.rootPath+path.replace(/::/g\x2C"/")+"/"+type+"."+name+".html"}else if(type==="externcrate"){displayPath="";href=this.rootPath+name+"/index.html"}else if(item.parent!==undefined){const myparent=item.parent;let anchor=type+"."+name;const parentType=itemTypes[myparent.ty];let pageType=parentType;let pageName=myparent.name;exactPath=`${myparent.exactPath}::${myparent.name}`;if(parentType==="primitive"){displayPath=myparent.name+"::";exactPath=myparent.name}else if(type==="structfield"&&parentType==="variant"){const enumNameIdx=item.path.lastIndexOf("::");const enumName=item.path.substr(enumNameIdx+2);path=item.path.substr(0\x2CenumNameIdx);displayPath=path+"::"+enumName+"::"+myparent.name+"::";anchor="variant."+myparent.name+".field."+name;pageType="enum";pageName=enumName}else{displayPath=path+"::"+myparent.name+"::"}if(item.implDisambiguator!==null){anchor=item.implDisambiguator+"/"+anchor}href=this.rootPath+path.replace(/::/g\x2C"/")+"/"+pageType+"."+pageName+".html#"+anchor}else{displayPath=item.path+"::";href=this.rootPath+item.path.replace(/::/g\x2C"/")+"/"+type+"."+name+".html"}return[displayPath\x2Chref\x2C`${exactPath}::${name}`]};function pathSplitter(path){const tmp="<span>"+path.replace(/::/g\x2C"::</span><span>");if(tmp.endsWith("<span>")){return tmp.slice(0\x2Ctmp.length-6)}return tmp}const transformResults=(results\x2CtypeInfo)=>{const duplicates=new Set();const out=[];for(const result of results){if(result.id!==-1){const res=buildHrefAndPath(this.searchIndex[result.id]);const obj=Object.assign({dist:result.dist\x2CdisplayPath:pathSplitter(res[0])\x2C}\x2Cthis.searchIndex[result.id]);obj.fullPath=res[2]+"|"+obj.ty;if(duplicates.has(obj.fullPath)){continue}if(obj.ty===TY_IMPORT&&duplicates.has(res[2])){continue}if(duplicates.has(res[2]+"|"+TY_IMPORT)){continue}duplicates.add(obj.fullPath);duplicates.add(res[2]);if(typeInfo!==null){obj.displayTypeSignature=this.formatDisplayTypeSignature(obj\x2CtypeInfo)}obj.href=res[1];out.push(obj);if(out.length>=MAX_RESULTS){break}}}return out};this.formatDisplayTypeSignature=async(obj\x2CtypeInfo)=>{let fnInputs=null;let fnOutput=null;let mgens=null;if(typeInfo!=="elems"&&typeInfo!=="returned"){fnInputs=unifyFunctionTypes(obj.type.inputs\x2CparsedQuery.elems\x2Cobj.type.where_clause\x2Cnull\x2CmgensScratch=>{fnOutput=unifyFunctionTypes(obj.type.output\x2CparsedQuery.returned\x2Cobj.type.where_clause\x2CmgensScratch\x2CmgensOut=>{mgens=mgensOut;return true}\x2C0\x2C);return!!fnOutput}\x2C0\x2C)}else{const arr=typeInfo==="elems"?obj.type.inputs:obj.type.output;const highlighted=unifyFunctionTypes(arr\x2CparsedQuery.elems\x2Cobj.type.where_clause\x2Cnull\x2CmgensOut=>{mgens=mgensOut;return true}\x2C0\x2C);if(typeInfo==="elems"){fnInputs=highlighted}else{fnOutput=highlighted}}if(!fnInputs){fnInputs=obj.type.inputs}if(!fnOutput){fnOutput=obj.type.output}const mappedNames=new Map();const whereClause=new Map();const fnParamNames=obj.paramNames;const queryParamNames=[];const remapQuery=queryElem=>{if(queryElem.id<0){queryParamNames[-1-queryElem.id]=queryElem.name}if(queryElem.generics.length>0){queryElem.generics.forEach(remapQuery)}if(queryElem.bindings.size>0){[...queryElem.bindings.values()].flat().forEach(remapQuery)}};parsedQuery.elems.forEach(remapQuery);parsedQuery.returned.forEach(remapQuery);const pushText=(fnType\x2Cresult)=>{if(!!(result.length%2)===!!fnType.highlighted){result.push("")}else if(result.length===0&&!!fnType.highlighted){result.push("");result.push("")}result[result.length-1]+=fnType.name};const writeHof=(fnType\x2Cresult)=>{const hofOutput=fnType.bindings.get(this.typeNameIdOfOutput)||[];const hofInputs=fnType.generics;pushText(fnType\x2Cresult);pushText({name:" ("\x2Chighlighted:false}\x2Cresult);let needsComma=false;for(const fnType of hofInputs){if(needsComma){pushText({name:"\x2C "\x2Chighlighted:false}\x2Cresult)}needsComma=true;writeFn(fnType\x2Cresult)}pushText({name:hofOutput.length===0?")":") -> "\x2Chighlighted:false\x2C}\x2Cresult);if(hofOutput.length>1){pushText({name:"("\x2Chighlighted:false}\x2Cresult)}needsComma=false;for(const fnType of hofOutput){if(needsComma){pushText({name:"\x2C "\x2Chighlighted:false}\x2Cresult)}needsComma=true;writeFn(fnType\x2Cresult)}if(hofOutput.length>1){pushText({name:")"\x2Chighlighted:false}\x2Cresult)}};const writeSpecialPrimitive=(fnType\x2Cresult)=>{if(fnType.id===this.typeNameIdOfArray||fnType.id===this.typeNameIdOfSlice||fnType.id===this.typeNameIdOfTuple||fnType.id===this.typeNameIdOfUnit){const[ob\x2Csb]=fnType.id===this.typeNameIdOfArray||fnType.id===this.typeNameIdOfSlice?["["\x2C"]"]:["("\x2C")"];pushText({name:ob\x2Chighlighted:fnType.highlighted}\x2Cresult);onEachBtwn(fnType.generics\x2Cnested=>writeFn(nested\x2Cresult)\x2C()=>pushText({name:"\x2C "\x2Chighlighted:false}\x2Cresult)\x2C);pushText({name:sb\x2Chighlighted:fnType.highlighted}\x2Cresult);return true}else if(fnType.id===this.typeNameIdOfReference){pushText({name:"&"\x2Chighlighted:fnType.highlighted}\x2Cresult);let prevHighlighted=false;onEachBtwn(fnType.generics\x2Cvalue=>{prevHighlighted=value.highlighted;writeFn(value\x2Cresult)}\x2Cvalue=>pushText({name:" "\x2Chighlighted:prevHighlighted&&value.highlighted\x2C}\x2Cresult)\x2C);return true}else if(fnType.id===this.typeNameIdOfFn){writeHof(fnType\x2Cresult);return true}return false};const writeFn=(fnType\x2Cresult)=>{if(fnType.id<0){if(fnParamNames[-1-fnType.id]===""){for(const nested of fnType.generics){writeFn(nested\x2Cresult)}return}else if(mgens){for(const[queryId\x2CfnId]of mgens){if(fnId===fnType.id){mappedNames.set(queryParamNames[-1-queryId]\x2CfnParamNames[-1-fnType.id]\x2C)}}}pushText({name:fnParamNames[-1-fnType.id]\x2Chighlighted:!!fnType.highlighted\x2C}\x2Cresult);const where=[];onEachBtwn(fnType.generics\x2Cnested=>writeFn(nested\x2Cwhere)\x2C()=>pushText({name:" + "\x2Chighlighted:false}\x2Cwhere)\x2C);if(where.length>0){whereClause.set(fnParamNames[-1-fnType.id]\x2Cwhere)}}else{if(fnType.ty===TY_PRIMITIVE){if(writeSpecialPrimitive(fnType\x2Cresult)){return}}else if(fnType.ty===TY_TRAIT&&(fnType.id===this.typeNameIdOfFn||fnType.id===this.typeNameIdOfFnMut||fnType.id===this.typeNameIdOfFnOnce)){writeHof(fnType\x2Cresult);return}pushText(fnType\x2Cresult);let hasBindings=false;if(fnType.bindings.size>0){onEachBtwn(fnType.bindings\x2C([key\x2Cvalues])=>{const name=this.assocTypeIdNameMap.get(key);if(values.length===1&&values[0].id<0&&`${fnType.name}::${name}`===fnParamNames[-1-values[0].id]){for(const value of values){writeFn(value\x2C[])}return true}if(!hasBindings){hasBindings=true;pushText({name:"<"\x2Chighlighted:false}\x2Cresult)}pushText({name\x2Chighlighted:false}\x2Cresult);pushText({name:values.length!==1?"=(":"="\x2Chighlighted:false\x2C}\x2Cresult);onEachBtwn(values||[]\x2Cvalue=>writeFn(value\x2Cresult)\x2C()=>pushText({name:" + "\x2Chighlighted:false}\x2Cresult)\x2C);if(values.length!==1){pushText({name:")"\x2Chighlighted:false}\x2Cresult)}}\x2C()=>pushText({name:"\x2C "\x2Chighlighted:false}\x2Cresult)\x2C)}if(fnType.generics.length>0){pushText({name:hasBindings?"\x2C ":"<"\x2Chighlighted:false}\x2Cresult)}onEachBtwn(fnType.generics\x2Cvalue=>writeFn(value\x2Cresult)\x2C()=>pushText({name:"\x2C "\x2Chighlighted:false}\x2Cresult)\x2C);if(hasBindings||fnType.generics.length>0){pushText({name:">"\x2Chighlighted:false}\x2Cresult)}}};const type=[];onEachBtwn(fnInputs\x2CfnType=>writeFn(fnType\x2Ctype)\x2C()=>pushText({name:"\x2C "\x2Chighlighted:false}\x2Ctype)\x2C);pushText({name:" -> "\x2Chighlighted:false}\x2Ctype);onEachBtwn(fnOutput\x2CfnType=>writeFn(fnType\x2Ctype)\x2C()=>pushText({name:"\x2C "\x2Chighlighted:false}\x2Ctype)\x2C);return{type\x2CmappedNames\x2CwhereClause}};const sortResults=async(results\x2CtypeInfo\x2CpreferredCrate)=>{const userQuery=parsedQuery.userQuery;const normalizedUserQuery=parsedQuery.userQuery.toLowerCase();const result_list=[];for(const result of results.values()){result.item=this.searchIndex[result.id];result.word=this.searchIndex[result.id].word;result_list.push(result)}result_list.sort((aaa\x2Cbbb)=>{let a\x2Cb;a=(aaa.item.name!==userQuery);b=(bbb.item.name!==userQuery);if(a!==b){return a-b}a=(aaa.word!==normalizedUserQuery);b=(bbb.word!==normalizedUserQuery);if(a!==b){return a-b}a=(aaa.index<0);b=(bbb.index<0);if(a!==b){return a-b}a=aaa.path_dist;b=bbb.path_dist;if(a!==b){return a-b}a=aaa.index;b=bbb.index;if(a!==b){return a-b}a=(aaa.dist);b=(bbb.dist);if(a!==b){return a-b}a=this.searchIndexDeprecated.get(aaa.item.crate).contains(aaa.item.bitIndex);b=this.searchIndexDeprecated.get(bbb.item.crate).contains(bbb.item.bitIndex);if(a!==b){return a-b}a=(aaa.item.crate!==preferredCrate);b=(bbb.item.crate!==preferredCrate);if(a!==b){return a-b}a=aaa.word.length;b=bbb.word.length;if(a!==b){return a-b}a=aaa.word;b=bbb.word;if(a!==b){return(a>b?+1:-1)}a=this.searchIndexEmptyDesc.get(aaa.item.crate).contains(aaa.item.bitIndex);b=this.searchIndexEmptyDesc.get(bbb.item.crate).contains(bbb.item.bitIndex);if(a!==b){return a-b}a=aaa.item.ty;b=bbb.item.ty;if(a!==b){return a-b}a=aaa.item.path;b=bbb.item.path;if(a!==b){return(a>b?+1:-1)}return 0});return transformResults(result_list\x2CtypeInfo)};function unifyFunctionTypes(fnTypesIn\x2CqueryElems\x2CwhereClause\x2CmgensIn\x2CsolutionCb\x2CunboxingDepth\x2C){if(unboxingDepth>=UNBOXING_LIMIT){return null}const mgens=mgensIn===null?null:new Map(mgensIn);if(queryElems.length===0){return solutionCb(mgens)?fnTypesIn:null}if(!fnTypesIn||fnTypesIn.length===0){return null}const ql=queryElems.length;const fl=fnTypesIn.length;if(ql===1&&queryElems[0].generics.length===0&&queryElems[0].bindings.size===0){const queryElem=queryElems[0];for(const[i\x2CfnType]of fnTypesIn.entries()){if(!unifyFunctionTypeIsMatchCandidate(fnType\x2CqueryElem\x2Cmgens)){continue}if(fnType.id<0&&queryElem.id<0){if(mgens&&mgens.has(queryElem.id)&&mgens.get(queryElem.id)!==fnType.id){continue}const mgensScratch=new Map(mgens);mgensScratch.set(queryElem.id\x2CfnType.id);if(!solutionCb||solutionCb(mgensScratch)){const highlighted=[...fnTypesIn];highlighted[i]=Object.assign({highlighted:true\x2C}\x2CfnType\x2C{generics:whereClause[-1-fnType.id]\x2C});return highlighted}}else if(solutionCb(mgens?new Map(mgens):null)){const highlighted=[...fnTypesIn];highlighted[i]=Object.assign({highlighted:true\x2C}\x2CfnType\x2C{generics:unifyGenericTypes(fnType.generics\x2CqueryElem.generics\x2CwhereClause\x2Cmgens?new Map(mgens):null\x2CsolutionCb\x2CunboxingDepth\x2C)||fnType.generics\x2C});return highlighted}}for(const[i\x2CfnType]of fnTypesIn.entries()){if(!unifyFunctionTypeIsUnboxCandidate(fnType\x2CqueryElem\x2CwhereClause\x2Cmgens\x2CunboxingDepth+1\x2C)){continue}if(fnType.id<0){const highlightedGenerics=unifyFunctionTypes(whereClause[(-fnType.id)-1]\x2CqueryElems\x2CwhereClause\x2Cmgens\x2CsolutionCb\x2CunboxingDepth+1\x2C);if(highlightedGenerics){const highlighted=[...fnTypesIn];highlighted[i]=Object.assign({highlighted:true\x2C}\x2CfnType\x2C{generics:highlightedGenerics\x2C});return highlighted}}else{const highlightedGenerics=unifyFunctionTypes([...Array.from(fnType.bindings.values()).flat()\x2C...fnType.generics]\x2CqueryElems\x2CwhereClause\x2Cmgens?new Map(mgens):null\x2CsolutionCb\x2CunboxingDepth+1\x2C);if(highlightedGenerics){const highlighted=[...fnTypesIn];highlighted[i]=Object.assign({}\x2CfnType\x2C{generics:highlightedGenerics\x2Cbindings:new Map([...fnType.bindings.entries()].map(([k\x2Cv])=>{return[k\x2ChighlightedGenerics.splice(0\x2Cv.length)]}))\x2C});return highlighted}}}return false}const fnTypes=fnTypesIn.slice();const flast=fl-1;const qlast=ql-1;const queryElem=queryElems[qlast];let queryElemsTmp=null;for(let i=flast;i>=0;i-=1){const fnType=fnTypes[i];if(!unifyFunctionTypeIsMatchCandidate(fnType\x2CqueryElem\x2Cmgens)){continue}let mgensScratch;if(fnType.id<0){mgensScratch=new Map(mgens);if(mgensScratch.has(queryElem.id)&&mgensScratch.get(queryElem.id)!==fnType.id){continue}mgensScratch.set(queryElem.id\x2CfnType.id)}else{mgensScratch=mgens}fnTypes[i]=fnTypes[flast];fnTypes.length=flast;if(!queryElemsTmp){queryElemsTmp=queryElems.slice(0\x2Cqlast)}let unifiedGenerics=[];let unifiedGenericsMgens=null;const passesUnification=unifyFunctionTypes(fnTypes\x2CqueryElemsTmp\x2CwhereClause\x2CmgensScratch\x2CmgensScratch=>{if(fnType.generics.length===0&&queryElem.generics.length===0&&fnType.bindings.size===0&&queryElem.bindings.size===0){return solutionCb(mgensScratch)}const solution=unifyFunctionTypeCheckBindings(fnType\x2CqueryElem\x2CwhereClause\x2CmgensScratch\x2CunboxingDepth\x2C);if(!solution){return false}const simplifiedGenerics=solution.simplifiedGenerics;for(const simplifiedMgens of solution.mgens){unifiedGenerics=unifyGenericTypes(simplifiedGenerics\x2CqueryElem.generics\x2CwhereClause\x2CsimplifiedMgens\x2CsolutionCb\x2CunboxingDepth\x2C);if(unifiedGenerics!==null){unifiedGenericsMgens=simplifiedMgens;return true}}return false}\x2CunboxingDepth\x2C);if(passesUnification){passesUnification.length=fl;passesUnification[flast]=passesUnification[i];passesUnification[i]=Object.assign({}\x2CfnType\x2C{highlighted:true\x2Cgenerics:unifiedGenerics\x2Cbindings:new Map([...fnType.bindings.entries()].map(([k\x2Cv])=>{return[k\x2CqueryElem.bindings.has(k)?unifyFunctionTypes(v\x2CqueryElem.bindings.get(k)\x2CwhereClause\x2CunifiedGenericsMgens\x2CsolutionCb\x2CunboxingDepth\x2C):unifiedGenerics.splice(0\x2Cv.length)]}))\x2C});return passesUnification}fnTypes[flast]=fnTypes[i];fnTypes[i]=fnType;fnTypes.length=fl}for(let i=flast;i>=0;i-=1){const fnType=fnTypes[i];if(!unifyFunctionTypeIsUnboxCandidate(fnType\x2CqueryElem\x2CwhereClause\x2Cmgens\x2CunboxingDepth+1\x2C)){continue}const generics=fnType.id<0?whereClause[(-fnType.id)-1]:fnType.generics;const bindings=fnType.bindings?Array.from(fnType.bindings.values()).flat():[];const passesUnification=unifyFunctionTypes(fnTypes.toSpliced(i\x2C1\x2C...bindings\x2C...generics)\x2CqueryElems\x2CwhereClause\x2Cmgens\x2CsolutionCb\x2CunboxingDepth+1\x2C);if(passesUnification){const highlightedGenerics=passesUnification.slice(i\x2Ci+generics.length+bindings.length\x2C);const highlightedFnType=Object.assign({}\x2CfnType\x2C{generics:highlightedGenerics\x2Cbindings:new Map([...fnType.bindings.entries()].map(([k\x2Cv])=>{return[k\x2ChighlightedGenerics.splice(0\x2Cv.length)]}))\x2C});return passesUnification.toSpliced(i\x2Cgenerics.length+bindings.length\x2ChighlightedFnType\x2C)}}return null}function unifyGenericTypes(fnTypesIn\x2CqueryElems\x2CwhereClause\x2CmgensIn\x2CsolutionCb\x2CunboxingDepth\x2C){if(unboxingDepth>=UNBOXING_LIMIT){return null}const mgens=mgensIn===null?null:new Map(mgensIn);if(queryElems.length===0){return solutionCb(mgens)?fnTypesIn:null}if(!fnTypesIn||fnTypesIn.length===0){return null}const fnType=fnTypesIn[0];const queryElem=queryElems[0];if(unifyFunctionTypeIsMatchCandidate(fnType\x2CqueryElem\x2Cmgens)){if(fnType.id<0&&queryElem.id<0){if(!mgens||!mgens.has(queryElem.id)||mgens.get(queryElem.id)===fnType.id){const mgensScratch=new Map(mgens);mgensScratch.set(queryElem.id\x2CfnType.id);const fnTypesRemaining=unifyGenericTypes(fnTypesIn.slice(1)\x2CqueryElems.slice(1)\x2CwhereClause\x2CmgensScratch\x2CsolutionCb\x2CunboxingDepth\x2C);if(fnTypesRemaining){const highlighted=[fnType\x2C...fnTypesRemaining];highlighted[0]=Object.assign({highlighted:true\x2C}\x2CfnType\x2C{generics:whereClause[-1-fnType.id]\x2C});return highlighted}}}else{let unifiedGenerics;const fnTypesRemaining=unifyGenericTypes(fnTypesIn.slice(1)\x2CqueryElems.slice(1)\x2CwhereClause\x2Cmgens\x2CmgensScratch=>{const solution=unifyFunctionTypeCheckBindings(fnType\x2CqueryElem\x2CwhereClause\x2CmgensScratch\x2CunboxingDepth\x2C);if(!solution){return false}const simplifiedGenerics=solution.simplifiedGenerics;for(const simplifiedMgens of solution.mgens){unifiedGenerics=unifyGenericTypes(simplifiedGenerics\x2CqueryElem.generics\x2CwhereClause\x2CsimplifiedMgens\x2CsolutionCb\x2CunboxingDepth\x2C);if(unifiedGenerics!==null){return true}}}\x2CunboxingDepth\x2C);if(fnTypesRemaining){const highlighted=[fnType\x2C...fnTypesRemaining];highlighted[0]=Object.assign({highlighted:true\x2C}\x2CfnType\x2C{generics:unifiedGenerics||fnType.generics\x2C});return highlighted}}}if(unifyFunctionTypeIsUnboxCandidate(fnType\x2CqueryElem\x2CwhereClause\x2Cmgens\x2CunboxingDepth+1\x2C)){let highlightedRemaining;if(fnType.id<0){const highlightedGenerics=unifyFunctionTypes(whereClause[(-fnType.id)-1]\x2C[queryElem]\x2CwhereClause\x2Cmgens\x2CmgensScratch=>{const hl=unifyGenericTypes(fnTypesIn.slice(1)\x2CqueryElems.slice(1)\x2CwhereClause\x2CmgensScratch\x2CsolutionCb\x2CunboxingDepth\x2C);if(hl){highlightedRemaining=hl}return hl}\x2CunboxingDepth+1\x2C);if(highlightedGenerics){return[Object.assign({highlighted:true\x2C}\x2CfnType\x2C{generics:highlightedGenerics\x2C})\x2C...highlightedRemaining]}}else{const highlightedGenerics=unifyGenericTypes([...Array.from(fnType.bindings.values()).flat()\x2C...fnType.generics\x2C]\x2C[queryElem]\x2CwhereClause\x2Cmgens\x2CmgensScratch=>{const hl=unifyGenericTypes(fnTypesIn.slice(1)\x2CqueryElems.slice(1)\x2CwhereClause\x2CmgensScratch\x2CsolutionCb\x2CunboxingDepth\x2C);if(hl){highlightedRemaining=hl}return hl}\x2CunboxingDepth+1\x2C);if(highlightedGenerics){return[Object.assign({}\x2CfnType\x2C{generics:highlightedGenerics\x2Cbindings:new Map([...fnType.bindings.entries()].map(([k\x2Cv])=>{return[k\x2ChighlightedGenerics.splice(0\x2Cv.length)]}))\x2C})\x2C...highlightedRemaining]}}}return null}const unifyFunctionTypeIsMatchCandidate=(fnType\x2CqueryElem\x2CmgensIn)=>{if(!typePassesFilter(queryElem.typeFilter\x2CfnType.ty)){return false}if(fnType.id<0&&queryElem.id<0){if(mgensIn&&mgensIn.has(queryElem.id)&&mgensIn.get(queryElem.id)!==fnType.id){return false}return true}else{if(queryElem.id===this.typeNameIdOfArrayOrSlice&&(fnType.id===this.typeNameIdOfSlice||fnType.id===this.typeNameIdOfArray)){}else if(queryElem.id===this.typeNameIdOfTupleOrUnit&&(fnType.id===this.typeNameIdOfTuple||fnType.id===this.typeNameIdOfUnit)){}else if(queryElem.id===this.typeNameIdOfHof&&(fnType.id===this.typeNameIdOfFn||fnType.id===this.typeNameIdOfFnMut||fnType.id===this.typeNameIdOfFnOnce)){}else if(fnType.id!==queryElem.id||queryElem.id===null){return false}if((fnType.generics.length+fnType.bindings.size)===0&&queryElem.generics.length!==0){return false}if(fnType.bindings.size<queryElem.bindings.size){return false}const queryElemPathLength=queryElem.pathWithoutLast.length;if(queryElemPathLength>0){const fnTypePath=fnType.path!==undefined&&fnType.path!==null?fnType.path.split("::"):[];if(queryElemPathLength>fnTypePath.length){return false}let i=0;for(const path of fnTypePath){if(path===queryElem.pathWithoutLast[i]){i+=1;if(i>=queryElemPathLength){break}}}if(i<queryElemPathLength){return false}}return true}};function unifyFunctionTypeCheckBindings(fnType\x2CqueryElem\x2CwhereClause\x2CmgensIn\x2CunboxingDepth\x2C){if(fnType.bindings.size<queryElem.bindings.size){return false}let simplifiedGenerics=fnType.generics||[];if(fnType.bindings.size>0){let mgensSolutionSet=[mgensIn];for(const[name\x2Cconstraints]of queryElem.bindings.entries()){if(mgensSolutionSet.length===0){return false}if(!fnType.bindings.has(name)){return false}const fnTypeBindings=fnType.bindings.get(name);mgensSolutionSet=mgensSolutionSet.flatMap(mgens=>{const newSolutions=[];unifyFunctionTypes(fnTypeBindings\x2Cconstraints\x2CwhereClause\x2Cmgens\x2CnewMgens=>{newSolutions.push(newMgens);return false}\x2CunboxingDepth\x2C);return newSolutions})}if(mgensSolutionSet.length===0){return false}const binds=Array.from(fnType.bindings.entries()).flatMap(entry=>{const[name\x2Cconstraints]=entry;if(queryElem.bindings.has(name)){return[]}else{return constraints}});if(simplifiedGenerics.length>0){simplifiedGenerics=[...binds\x2C...simplifiedGenerics]}else{simplifiedGenerics=binds}return{simplifiedGenerics\x2Cmgens:mgensSolutionSet}}return{simplifiedGenerics\x2Cmgens:[mgensIn]}}function unifyFunctionTypeIsUnboxCandidate(fnType\x2CqueryElem\x2CwhereClause\x2Cmgens\x2CunboxingDepth\x2C){if(unboxingDepth>=UNBOXING_LIMIT){return false}if(fnType.id<0){if(!whereClause){return false}return checkIfInList(whereClause[(-fnType.id)-1]\x2CqueryElem\x2CwhereClause\x2Cmgens\x2CunboxingDepth\x2C)}else if(fnType.unboxFlag&&(fnType.generics.length>0||fnType.bindings.size>0)){const simplifiedGenerics=[...fnType.generics\x2C...Array.from(fnType.bindings.values()).flat()\x2C];return checkIfInList(simplifiedGenerics\x2CqueryElem\x2CwhereClause\x2Cmgens\x2CunboxingDepth\x2C)}return false}function checkIfInList(list\x2Celem\x2CwhereClause\x2Cmgens\x2CunboxingDepth){for(const entry of list){if(checkType(entry\x2Celem\x2CwhereClause\x2Cmgens\x2CunboxingDepth)){return true}}return false}const checkType=(row\x2Celem\x2CwhereClause\x2Cmgens\x2CunboxingDepth)=>{if(unboxingDepth>=UNBOXING_LIMIT){return false}if(row.id>0&&elem.id>0&&elem.pathWithoutLast.length===0&&row.generics.length===0&&elem.generics.length===0&&row.bindings.size===0&&elem.bindings.size===0&&elem.id!==this.typeNameIdOfArrayOrSlice&&elem.id!==this.typeNameIdOfHof&&elem.id!==this.typeNameIdOfTupleOrUnit){return row.id===elem.id&&typePassesFilter(elem.typeFilter\x2Crow.ty)}else{return unifyFunctionTypes([row]\x2C[elem]\x2CwhereClause\x2Cmgens\x2C()=>true\x2CunboxingDepth\x2C)}};const checkTypeMgensForConflict=mgens=>{if(!mgens){return true}const fnTypes=new Set();for(const[_qid\x2Cfid]of mgens){if(fnTypes.has(fid)){return false}fnTypes.add(fid)}return true};function checkPath(contains\x2Cty){if(contains.length===0){return 0}const maxPathEditDistance=Math.floor(contains.reduce((acc\x2Cnext)=>acc+next.length\x2C0)/3\x2C);let ret_dist=maxPathEditDistance+1;const path=ty.path.split("::");if(ty.parent&&ty.parent.name){path.push(ty.parent.name.toLowerCase())}const length=path.length;const clength=contains.length;pathiter:for(let i=length-clength;i>=0;i-=1){let dist_total=0;for(let x=0;x<clength;++x){const[p\x2Cc]=[path[i+x]\x2Ccontains[x]];if(Math.floor((p.length-c.length)/3)<=maxPathEditDistance&&p.indexOf(c)!==-1){dist_total+=Math.floor((p.length-c.length)/3)}else{const dist=editDistance(p\x2Cc\x2CmaxPathEditDistance);if(dist>maxPathEditDistance){continue pathiter}dist_total+=dist}}ret_dist=Math.min(ret_dist\x2CMath.round(dist_total/clength))}return ret_dist>maxPathEditDistance?null:ret_dist}function typePassesFilter(filter\x2Ctype){if(filter<=NO_TYPE_FILTER||filter===type)return true;const name=itemTypes[type];switch(itemTypes[filter]){case"constant":return name==="associatedconstant";case"fn":return name==="method"||name==="tymethod";case"type":return name==="primitive"||name==="associatedtype";case"trait":return name==="traitalias"}return false}function createAliasFromItem(item){return{crate:item.crate\x2Cname:item.name\x2Cpath:item.path\x2CdescShard:item.descShard\x2CdescIndex:item.descIndex\x2CexactPath:item.exactPath\x2Cty:item.ty\x2Cparent:item.parent\x2Ctype:item.type\x2Cis_alias:true\x2CbitIndex:item.bitIndex\x2CimplDisambiguator:item.implDisambiguator\x2C}}const handleAliases=async(ret\x2Cquery\x2CfilterCrates\x2CcurrentCrate)=>{const lowerQuery=query.toLowerCase();const aliases=[];const crateAliases=[];if(filterCrates!==null){if(this.ALIASES.has(filterCrates)&&this.ALIASES.get(filterCrates).has(lowerQuery)){const query_aliases=this.ALIASES.get(filterCrates).get(lowerQuery);for(const alias of query_aliases){aliases.push(createAliasFromItem(this.searchIndex[alias]))}}}else{for(const[crate\x2CcrateAliasesIndex]of this.ALIASES){if(crateAliasesIndex.has(lowerQuery)){const pushTo=crate===currentCrate?crateAliases:aliases;const query_aliases=crateAliasesIndex.get(lowerQuery);for(const alias of query_aliases){pushTo.push(createAliasFromItem(this.searchIndex[alias]))}}}}const sortFunc=(aaa\x2Cbbb)=>{if(aaa.path<bbb.path){return 1}else if(aaa.path===bbb.path){return 0}return-1};crateAliases.sort(sortFunc);aliases.sort(sortFunc);const fetchDesc=alias=>{return this.searchIndexEmptyDesc.get(alias.crate).contains(alias.bitIndex)?"":this.searchState.loadDesc(alias)};const[crateDescs\x2Cdescs]=await Promise.all([Promise.all(crateAliases.map(fetchDesc))\x2CPromise.all(aliases.map(fetchDesc))\x2C]);const pushFunc=alias=>{alias.alias=query;const res=buildHrefAndPath(alias);alias.displayPath=pathSplitter(res[0]);alias.fullPath=alias.displayPath+alias.name;alias.href=res[1];ret.others.unshift(alias);if(ret.others.length>MAX_RESULTS){ret.others.pop()}};aliases.forEach((alias\x2Ci)=>{alias.desc=descs[i]});aliases.forEach(pushFunc);crateAliases.forEach((alias\x2Ci)=>{alias.desc=crateDescs[i]});crateAliases.forEach(pushFunc)};function addIntoResults(results\x2CfullId\x2Cid\x2Cindex\x2Cdist\x2Cpath_dist\x2CmaxEditDistance){if(dist<=maxEditDistance||index!==-1){if(results.has(fullId)){const result=results.get(fullId);if(result.dontValidate||result.dist<=dist){return}}results.set(fullId\x2C{id:id\x2Cindex:index\x2CdontValidate:parsedQuery.literalSearch\x2Cdist:dist\x2Cpath_dist:path_dist\x2C})}}function handleArgs(row\x2Cpos\x2Cresults){if(!row||(filterCrates!==null&&row.crate!==filterCrates)||!row.type){return}const tfpDist=compareTypeFingerprints(row.id\x2CparsedQuery.typeFingerprint\x2C);if(tfpDist===null){return}if(results.size>=MAX_RESULTS&&tfpDist>results.max_dist){return}if(!unifyFunctionTypes(row.type.inputs\x2CparsedQuery.elems\x2Crow.type.where_clause\x2Cnull\x2Cmgens=>{return unifyFunctionTypes(row.type.output\x2CparsedQuery.returned\x2Crow.type.where_clause\x2Cmgens\x2CcheckTypeMgensForConflict\x2C0\x2C)}\x2C0\x2C)){return}results.max_dist=Math.max(results.max_dist||0\x2CtfpDist);addIntoResults(results\x2Crow.id\x2Cpos\x2C0\x2CtfpDist\x2C0\x2CNumber.MAX_VALUE)}const compareTypeFingerprints=(fullId\x2CqueryFingerprint)=>{const fh0=this.functionTypeFingerprint[fullId*4];const fh1=this.functionTypeFingerprint[(fullId*4)+1];const fh2=this.functionTypeFingerprint[(fullId*4)+2];const[qh0\x2Cqh1\x2Cqh2]=queryFingerprint;const[in0\x2Cin1\x2Cin2]=[fh0&qh0\x2Cfh1&qh1\x2Cfh2&qh2];if((in0 ^ qh0)||(in1 ^ qh1)||(in2 ^ qh2)){return null}return this.functionTypeFingerprint[(fullId*4)+3]};const innerRunQuery=()=>{const queryLen=parsedQuery.elems.reduce((acc\x2Cnext)=>acc+next.pathLast.length\x2C0)+parsedQuery.returned.reduce((acc\x2Cnext)=>acc+next.pathLast.length\x2C0);const maxEditDistance=Math.floor(queryLen/3);const genericSymbols=new Map();const convertNameToId=(elem\x2CisAssocType)=>{const loweredName=elem.pathLast.toLowerCase();if(this.typeNameIdMap.has(loweredName)&&(isAssocType||!this.typeNameIdMap.get(loweredName).assocOnly)){elem.id=this.typeNameIdMap.get(loweredName).id}else if(!parsedQuery.literalSearch){let match=null;let matchDist=maxEditDistance+1;let matchName="";for(const[name\x2C{id\x2CassocOnly}]of this.typeNameIdMap){const dist=Math.min(editDistance(name\x2CloweredName\x2CmaxEditDistance)\x2CeditDistance(name\x2Celem.normalizedPathLast\x2CmaxEditDistance)\x2C);if(dist<=matchDist&&dist<=maxEditDistance&&(isAssocType||!assocOnly)){if(dist===matchDist&&matchName>name){continue}match=id;matchDist=dist;matchName=name}}if(match!==null){parsedQuery.correction=matchName}elem.id=match}if((elem.id===null&&parsedQuery.totalElems>1&&elem.typeFilter===-1&&elem.generics.length===0&&elem.bindings.size===0)||elem.typeFilter===TY_GENERIC){if(genericSymbols.has(elem.normalizedPathLast)){elem.id=genericSymbols.get(elem.normalizedPathLast)}else{elem.id=-(genericSymbols.size+1);genericSymbols.set(elem.normalizedPathLast\x2Celem.id)}if(elem.typeFilter===-1&&elem.normalizedPathLast.length>=3){const maxPartDistance=Math.floor(elem.normalizedPathLast.length/3);let matchDist=maxPartDistance+1;let matchName="";for(const name of this.typeNameIdMap.keys()){const dist=editDistance(name\x2Celem.normalizedPathLast\x2CmaxPartDistance\x2C);if(dist<=matchDist&&dist<=maxPartDistance){if(dist===matchDist&&matchName>name){continue}matchDist=dist;matchName=name}}if(matchName!==""){parsedQuery.proposeCorrectionFrom=elem.name;parsedQuery.proposeCorrectionTo=matchName}}elem.typeFilter=TY_GENERIC}if(elem.generics.length>0&&elem.typeFilter===TY_GENERIC){parsedQuery.error=["Generic type parameter "\x2Celem.name\x2C" does not accept generic parameters"\x2C]}for(const elem2 of elem.generics){convertNameToId(elem2)}elem.bindings=new Map(Array.from(elem.bindings.entries()).map(entry=>{const[name\x2Cconstraints]=entry;if(!this.typeNameIdMap.has(name)){parsedQuery.error=["Type parameter "\x2Cname\x2C" does not exist"\x2C];return[null\x2C[]]}for(const elem2 of constraints){convertNameToId(elem2)}return[this.typeNameIdMap.get(name).id\x2Cconstraints]})\x2C)};for(const elem of parsedQuery.elems){convertNameToId(elem);this.buildFunctionTypeFingerprint(elem\x2CparsedQuery.typeFingerprint)}for(const elem of parsedQuery.returned){convertNameToId(elem);this.buildFunctionTypeFingerprint(elem\x2CparsedQuery.typeFingerprint)}if(parsedQuery.foundElems===1&&!parsedQuery.hasReturnArrow){const elem=parsedQuery.elems[0];for(const id of this.nameTrie.search(elem.normalizedPathLast\x2Cthis.tailTable)){const row=this.searchIndex[id];if(!typePassesFilter(elem.typeFilter\x2Crow.ty)||(filterCrates!==null&&row.crate!==filterCrates)){continue}let pathDist=0;if(elem.fullPath.length>1){pathDist=checkPath(elem.pathWithoutLast\x2Crow);if(pathDist===null){continue}}if(parsedQuery.literalSearch){if(row.word===elem.pathLast){addIntoResults(results_others\x2Crow.id\x2Cid\x2C0\x2C0\x2CpathDist)}}else{addIntoResults(results_others\x2Crow.id\x2Cid\x2Crow.normalizedName.indexOf(elem.normalizedPathLast)\x2CeditDistance(row.normalizedName\x2Celem.normalizedPathLast\x2CmaxEditDistance\x2C)\x2CpathDist\x2CmaxEditDistance\x2C)}}const length=this.searchIndex.length;for(let i=0\x2CnSearchIndex=length;i<nSearchIndex;++i){const row=this.searchIndex[i];if(filterCrates!==null&&row.crate!==filterCrates){continue}const tfpDist=compareTypeFingerprints(row.id\x2CparsedQuery.typeFingerprint\x2C);if(tfpDist!==null){const in_args=row.type&&row.type.inputs&&checkIfInList(row.type.inputs\x2Celem\x2Crow.type.where_clause\x2Cnull\x2C0);const returned=row.type&&row.type.output&&checkIfInList(row.type.output\x2Celem\x2Crow.type.where_clause\x2Cnull\x2C0);if(in_args){results_in_args.max_dist=Math.max(results_in_args.max_dist||0\x2CtfpDist\x2C);const maxDist=results_in_args.size<MAX_RESULTS?(tfpDist+1):results_in_args.max_dist;addIntoResults(results_in_args\x2Crow.id\x2Ci\x2C-1\x2CtfpDist\x2C0\x2CmaxDist)}if(returned){results_returned.max_dist=Math.max(results_returned.max_dist||0\x2CtfpDist\x2C);const maxDist=results_returned.size<MAX_RESULTS?(tfpDist+1):results_returned.max_dist;addIntoResults(results_returned\x2Crow.id\x2Ci\x2C-1\x2CtfpDist\x2C0\x2CmaxDist)}}}}else if(parsedQuery.foundElems>0){const sortQ=(a\x2Cb)=>{const ag=a.generics.length===0&&a.bindings.size===0;const bg=b.generics.length===0&&b.bindings.size===0;if(ag!==bg){return ag-bg}const ai=a.id>0;const bi=b.id>0;return ai-bi};parsedQuery.elems.sort(sortQ);parsedQuery.returned.sort(sortQ);for(let i=0\x2CnSearchIndex=this.searchIndex.length;i<nSearchIndex;++i){handleArgs(this.searchIndex[i]\x2Ci\x2Cresults_others)}}};if(parsedQuery.error===null){innerRunQuery()}const isType=parsedQuery.foundElems!==1||parsedQuery.hasReturnArrow;const[sorted_in_args\x2Csorted_returned\x2Csorted_others]=await Promise.all([sortResults(results_in_args\x2C"elems"\x2CcurrentCrate)\x2CsortResults(results_returned\x2C"returned"\x2CcurrentCrate)\x2CsortResults(results_others\x2C(isType?"query":null)\x2CcurrentCrate)\x2C]);const ret=createQueryResults(sorted_in_args\x2Csorted_returned\x2Csorted_others\x2CparsedQuery);await handleAliases(ret\x2CparsedQuery.userQuery.replace(/"/g\x2C"")\x2CfilterCrates\x2CcurrentCrate);await Promise.all([ret.others\x2Cret.returned\x2Cret.in_args].map(async list=>{const descs=await Promise.all(list.map(result=>{return this.searchIndexEmptyDesc.get(result.crate).contains(result.bitIndex)?"":this.searchState.loadDesc(result)}));for(const[i\x2Cresult]of list.entries()){result.desc=descs[i]}}));if(parsedQuery.error!==null&&ret.others.length!==0){ret.query.error=null}return ret}}let rawSearchIndex;let docSearch;const longItemTypes=["keyword"\x2C"primitive type"\x2C"module"\x2C"extern crate"\x2C"re-export"\x2C"struct"\x2C"enum"\x2C"function"\x2C"type alias"\x2C"static"\x2C"trait"\x2C""\x2C"trait method"\x2C"method"\x2C"struct field"\x2C"enum variant"\x2C"macro"\x2C"assoc type"\x2C"constant"\x2C"assoc const"\x2C"union"\x2C"foreign type"\x2C"existential type"\x2C"attribute macro"\x2C"derive macro"\x2C"trait alias"\x2C];let currentResults;function printTab(nb){let iter=0;let foundCurrentTab=false;let foundCurrentResultSet=false;onEachLazy(document.getElementById("search-tabs").childNodes\x2Celem=>{if(nb===iter){addClass(elem\x2C"selected");foundCurrentTab=true}else{removeClass(elem\x2C"selected")}iter+=1});const isTypeSearch=(nb>0||iter===1);iter=0;onEachLazy(document.getElementById("results").childNodes\x2Celem=>{if(nb===iter){addClass(elem\x2C"active");foundCurrentResultSet=true}else{removeClass(elem\x2C"active")}iter+=1});if(foundCurrentTab&&foundCurrentResultSet){searchState.currentTab=nb;const correctionsElem=document.getElementsByClassName("search-corrections");if(isTypeSearch){removeClass(correctionsElem[0]\x2C"hidden")}else{addClass(correctionsElem[0]\x2C"hidden")}}else if(nb!==0){printTab(0)}}function buildUrl(search\x2CfilterCrates){let extra="?search="+encodeURIComponent(search);if(filterCrates!==null){extra+="&filter-crate="+encodeURIComponent(filterCrates)}return getNakedUrl()+extra+window.location.hash}function getFilterCrates(){const elem=document.getElementById("crate-search");if(elem&&elem.value!=="all crates"&&window.searchIndex.has(elem.value)){return elem.value}return null}function nextTab(direction){const next=(searchState.currentTab+direction+3)%searchState.focusedByTab.length;searchState.focusedByTab[searchState.currentTab]=document.activeElement;printTab(next);focusSearchResult()}function focusSearchResult(){const target=searchState.focusedByTab[searchState.currentTab]||document.querySelectorAll(".search-results.active a").item(0)||document.querySelectorAll("#search-tabs button").item(searchState.currentTab);searchState.focusedByTab[searchState.currentTab]=null;if(target){target.focus()}}async function addTab(array\x2Cquery\x2Cdisplay){const extraClass=display?" active":"";const output=document.createElement(array.length===0&&query.error===null?"div":"ul"\x2C);if(array.length>0){output.className="search-results "+extraClass;const lis=Promise.all(array.map(async item=>{const name=item.name;const type=itemTypes[item.ty];const longType=longItemTypes[item.ty];const typeName=longType.length!==0?`${longType}`:"?";const link=document.createElement("a");link.className="result-"+type;link.href=item.href;const resultName=document.createElement("span");resultName.className="result-name";resultName.insertAdjacentHTML("beforeend"\x2C`<span class="typename">${typeName}</span>`);link.appendChild(resultName);let alias=" ";if(item.is_alias){alias=` <div class="alias">\\\n<b>${item.alias}</b><i class="grey">&nbsp;- see&nbsp;</i>\\\n</div>`}resultName.insertAdjacentHTML("beforeend"\x2C`<div class="path">${alias}\\\n${item.displayPath}<span class="${type}">${name}</span>\\\n</div>`);const description=document.createElement("div");description.className="desc";description.insertAdjacentHTML("beforeend"\x2Citem.desc);if(item.displayTypeSignature){const{type\x2CmappedNames\x2CwhereClause}=await item.displayTypeSignature;const displayType=document.createElement("div");type.forEach((value\x2Cindex)=>{if(index%2!==0){const highlight=document.createElement("strong");highlight.appendChild(document.createTextNode(value));displayType.appendChild(highlight)}else{displayType.appendChild(document.createTextNode(value))}});if(mappedNames.size>0||whereClause.size>0){let addWhereLineFn=()=>{const line=document.createElement("div");line.className="where";line.appendChild(document.createTextNode("where"));displayType.appendChild(line);addWhereLineFn=()=>{}};for(const[qname\x2Cname]of mappedNames){if(name===qname){continue}addWhereLineFn();const line=document.createElement("div");line.className="where";line.appendChild(document.createTextNode(`    ${qname} matches `));const lineStrong=document.createElement("strong");lineStrong.appendChild(document.createTextNode(name));line.appendChild(lineStrong);displayType.appendChild(line)}for(const[name\x2CinnerType]of whereClause){if(innerType.length<=1){continue}addWhereLineFn();const line=document.createElement("div");line.className="where";line.appendChild(document.createTextNode(`    ${name}: `));innerType.forEach((value\x2Cindex)=>{if(index%2!==0){const highlight=document.createElement("strong");highlight.appendChild(document.createTextNode(value));line.appendChild(highlight)}else{line.appendChild(document.createTextNode(value))}});displayType.appendChild(line)}}displayType.className="type-signature";link.appendChild(displayType)}link.appendChild(description);return link}));lis.then(lis=>{for(const li of lis){output.appendChild(li)}})}else if(query.error===null){output.className="search-failed"+extraClass;output.innerHTML="No results :(<br/>"+"Try on <a href=\\"https://duckduckgo.com/?q="+encodeURIComponent("rust "+query.userQuery)+"\\">DuckDuckGo</a>?<br/><br/>"+"Or try looking in one of these:<ul><li>The <a "+"href=\\"https://doc.rust-lang.org/reference/index.html\\">Rust Reference</a> "+" for technical details about the language.</li><li><a "+"href=\\"https://doc.rust-lang.org/rust-by-example/index.html\\">Rust By "+"Example</a> for expository code examples.</a></li><li>The <a "+"href=\\"https://doc.rust-lang.org/book/index.html\\">Rust Book</a> for "+"introductions to language features and the language itself.</li><li><a "+"href=\\"https://docs.rs\\">Docs.rs</a> for documentation of crates released on"+" <a href=\\"https://crates.io/\\">crates.io</a>.</li></ul>"}return output}function makeTabHeader(tabNb\x2Ctext\x2CnbElems){const fmtNbElems=nbElems<10?`\\u{2007}(${nbElems})\\u{2007}\\u{2007}`:nbElems<100?`\\u{2007}(${nbElems})\\u{2007}`:`\\u{2007}(${nbElems})`;if(searchState.currentTab===tabNb){return"<button class=\\"selected\\">"+text+"<span class=\\"count\\">"+fmtNbElems+"</span></button>"}return"<button>"+text+"<span class=\\"count\\">"+fmtNbElems+"</span></button>"}async function showResults(results\x2Cgo_to_first\x2CfilterCrates){const search=searchState.outputElement();if(go_to_first||(results.others.length===1&&getSettingValue("go-to-only-result")==="true")){window.onunload=()=>{};searchState.removeQueryParameters();const elem=document.createElement("a");elem.href=results.others[0].href;removeClass(elem\x2C"active");document.body.appendChild(elem);elem.click();return}if(results.query===undefined){results.query=DocSearch.parseQuery(searchState.input.value)}currentResults=results.query.userQuery;let currentTab=searchState.currentTab;if((currentTab===0&&results.others.length===0)||(currentTab===1&&results.in_args.length===0)||(currentTab===2&&results.returned.length===0)){if(results.others.length!==0){currentTab=0}else if(results.in_args.length){currentTab=1}else if(results.returned.length){currentTab=2}}let crates="";if(rawSearchIndex.size>1){crates="<div class=\\"sub-heading\\"> in&nbsp;<div id=\\"crate-search-div\\">"+"<select id=\\"crate-search\\"><option value=\\"all crates\\">all crates</option>";for(const c of rawSearchIndex.keys()){crates+=`<option value="${c}" ${c === filterCrates && "selected"}>${c}</option>`}crates+="</select></div></div>"}let output=`<div class="main-heading">\\\n        <h1 class="search-results-title">Results</h1>${crates}</div>`;if(results.query.error!==null){const error=results.query.error;error.forEach((value\x2Cindex)=>{value=value.split("<").join("&lt;").split(">").join("&gt;");if(index%2!==0){error[index]=`<code>${value.replaceAll(" "\x2C "&nbsp;")}</code>`}else{error[index]=value}});output+=`<h3 class="error">Query parser error: "${error.join("")}".</h3>`;output+="<div id=\\"search-tabs\\">"+makeTabHeader(0\x2C"In Names"\x2Cresults.others.length)+"</div>";currentTab=0}else if(results.query.foundElems<=1&&results.query.returned.length===0){output+="<div id=\\"search-tabs\\">"+makeTabHeader(0\x2C"In Names"\x2Cresults.others.length)+makeTabHeader(1\x2C"In Parameters"\x2Cresults.in_args.length)+makeTabHeader(2\x2C"In Return Types"\x2Cresults.returned.length)+"</div>"}else{const signatureTabTitle=results.query.elems.length===0?"In Function Return Types":results.query.returned.length===0?"In Function Parameters":"In Function Signatures";output+="<div id=\\"search-tabs\\">"+makeTabHeader(0\x2CsignatureTabTitle\x2Cresults.others.length)+"</div>";currentTab=0}if(results.query.correction!==null){const orig=results.query.returned.length>0?results.query.returned[0].name:results.query.elems[0].name;output+="<h3 class=\\"search-corrections\\">"+`Type "${orig}" not found. `+"Showing results for closest type name "+`"${results.query.correction}" instead.</h3>`}if(results.query.proposeCorrectionFrom!==null){const orig=results.query.proposeCorrectionFrom;const targ=results.query.proposeCorrectionTo;output+="<h3 class=\\"search-corrections\\">"+`Type "${orig}" not found and used as generic parameter. `+`Consider searching for "${targ}" instead.</h3>`}const[ret_others\x2Cret_in_args\x2Cret_returned]=await Promise.all([addTab(results.others\x2Cresults.query\x2CcurrentTab===0)\x2CaddTab(results.in_args\x2Cresults.query\x2CcurrentTab===1)\x2CaddTab(results.returned\x2Cresults.query\x2CcurrentTab===2)\x2C]);const resultsElem=document.createElement("div");resultsElem.id="results";resultsElem.appendChild(ret_others);resultsElem.appendChild(ret_in_args);resultsElem.appendChild(ret_returned);search.innerHTML=output;if(searchState.rustdocToolbar){search.querySelector(".main-heading").appendChild(searchState.rustdocToolbar)}const crateSearch=document.getElementById("crate-search");if(crateSearch){crateSearch.addEventListener("input"\x2CupdateCrate)}search.appendChild(resultsElem);searchState.showResults(search);const elems=document.getElementById("search-tabs").childNodes;searchState.focusedByTab=[];let i=0;for(const elem of elems){const j=i;elem.onclick=()=>printTab(j);searchState.focusedByTab.push(null);i+=1}printTab(currentTab)}function updateSearchHistory(url){if(!browserSupportsHistoryApi()){return}const params=searchState.getQueryStringParams();if(!history.state&&!params.search){history.pushState(null\x2C""\x2Curl)}else{history.replaceState(null\x2C""\x2Curl)}}async function search(forced){const query=DocSearch.parseQuery(searchState.input.value.trim());let filterCrates=getFilterCrates();if(!forced&&query.userQuery===currentResults){if(query.userQuery.length>0){putBackSearch()}return}searchState.setLoadingSearch();const params=searchState.getQueryStringParams();if(filterCrates===null&&params["filter-crate"]!==undefined){filterCrates=params["filter-crate"]}searchState.title="\\""+query.userQuery+"\\" Search - Rust";updateSearchHistory(buildUrl(query.userQuery\x2CfilterCrates));await showResults(await docSearch.execQuery(query\x2CfilterCrates\x2Cwindow.currentCrate)\x2Cparams.go_to_first\x2CfilterCrates)}function onSearchSubmit(e){e.preventDefault();searchState.clearInputTimeout();search()}function putBackSearch(){const search_input=searchState.input;if(!searchState.input){return}if(search_input.value!==""&&!searchState.isDisplayed()){searchState.showResults();if(browserSupportsHistoryApi()){history.replaceState(null\x2C""\x2CbuildUrl(search_input.value\x2CgetFilterCrates()))}document.title=searchState.title}}function registerSearchEvents(){const params=searchState.getQueryStringParams();if(searchState.input.value===""){searchState.input.value=params.search||""}const searchAfter500ms=()=>{searchState.clearInputTimeout();if(searchState.input.value.length===0){searchState.hideResults()}else{searchState.timeout=setTimeout(search\x2C500)}};searchState.input.onkeyup=searchAfter500ms;searchState.input.oninput=searchAfter500ms;document.getElementsByClassName("search-form")[0].onsubmit=onSearchSubmit;searchState.input.onchange=e=>{if(e.target!==document.activeElement){return}searchState.clearInputTimeout();setTimeout(search\x2C0)};searchState.input.onpaste=searchState.input.onchange;searchState.outputElement().addEventListener("keydown"\x2Ce=>{if(e.altKey||e.ctrlKey||e.shiftKey||e.metaKey){return}if(e.which===38){const previous=document.activeElement.previousElementSibling;if(previous){previous.focus()}else{searchState.focus()}e.preventDefault()}else if(e.which===40){const next=document.activeElement.nextElementSibling;if(next){next.focus()}const rect=document.activeElement.getBoundingClientRect();if(window.innerHeight-rect.bottom<rect.height){window.scrollBy(0\x2Crect.height)}e.preventDefault()}else if(e.which===37){nextTab(-1);e.preventDefault()}else if(e.which===39){nextTab(1);e.preventDefault()}});searchState.input.addEventListener("keydown"\x2Ce=>{if(e.which===40){focusSearchResult();e.preventDefault()}});searchState.input.addEventListener("focus"\x2C()=>{putBackSearch()});searchState.input.addEventListener("blur"\x2C()=>{searchState.input.placeholder=searchState.input.origPlaceholder});if(browserSupportsHistoryApi()){const previousTitle=document.title;window.addEventListener("popstate"\x2Ce=>{const params=searchState.getQueryStringParams();document.title=previousTitle;currentResults=null;if(params.search&&params.search.length>0){searchState.input.value=params.search;e.preventDefault();search()}else{searchState.input.value="";searchState.hideResults()}})}window.onpageshow=()=>{const qSearch=searchState.getQueryStringParams().search;if(searchState.input.value===""&&qSearch){searchState.input.value=qSearch}search()}}function updateCrate(ev){if(ev.target.value==="all crates"){const query=searchState.input.value.trim();updateSearchHistory(buildUrl(query\x2Cnull))}currentResults=null;search(true)}function initSearch(searchIndx){rawSearchIndex=searchIndx;if(typeof window!=="undefined"){docSearch=new DocSearch(rawSearchIndex\x2CROOT_PATH\x2CsearchState);registerSearchEvents();if(window.searchState.getQueryStringParams().search){search()}}else if(typeof exports!=="undefined"){docSearch=new DocSearch(rawSearchIndex\x2CROOT_PATH\x2CsearchState);exports.docSearch=docSearch;exports.parseQuery=DocSearch.parseQuery}}if(typeof exports!=="undefined"){exports.initSearch=initSearch}if(typeof window!=="undefined"){window.initSearch=initSearch;if(window.searchIndex!==undefined){initSearch(window.searchIndex)}}else{initSearch(new Map())}class ParametricDescription{constructor(w\x2Cn\x2CminErrors){this.w=w;this.n=n;this.minErrors=minErrors}isAccept(absState){const state=Math.floor(absState/(this.w+1));const offset=absState%(this.w+1);return this.w-offset+this.minErrors[state]<=this.n}getPosition(absState){return absState%(this.w+1)}getVector(name\x2CcharCode\x2Cpos\x2Cend){let vector=0;for(let i=pos;i<end;i+=1){vector=vector<<1;if(name.charCodeAt(i)===charCode){vector|=1}}return vector}unpack(data\x2Cindex\x2CbitsPerValue){const bitLoc=(bitsPerValue*index);const dataLoc=bitLoc>>5;const bitStart=bitLoc&31;if(bitStart+bitsPerValue<=32){return((data[dataLoc]>>bitStart)&this.MASKS[bitsPerValue-1])}else{const part=32-bitStart;return ~~(((data[dataLoc]>>bitStart)&this.MASKS[part-1])+((data[1+dataLoc]&this.MASKS[bitsPerValue-part-1])<<part))}}}ParametricDescription.prototype.MASKS=new Int32Array([0x1\x2C0x3\x2C0x7\x2C0xF\x2C0x1F\x2C0x3F\x2C0x7F\x2C0xFF\x2C0x1FF\x2C0x3F\x2C0x7FF\x2C0xFFF\x2C0x1FFF\x2C0x3FFF\x2C0x7FFF\x2C0xFFFF\x2C0x1FFFF\x2C0x3FFFF\x2C0x7FFFF\x2C0xFFFFF\x2C0x1FFFFF\x2C0x3FFFFF\x2C0x7FFFFF\x2C0xFFFFFF\x2C0x1FFFFFF\x2C0x3FFFFFF\x2C0x7FFFFFF\x2C0xFFFFFFF\x2C0x1FFFFFFF\x2C0x3FFFFFFF\x2C0x7FFFFFFF\x2C0xFFFFFFFF\x2C]);class Lev2TParametricDescription extends ParametricDescription{transition(absState\x2Cposition\x2Cvector){let state=Math.floor(absState/(this.w+1));let offset=absState%(this.w+1);if(position===this.w){if(state<3){const loc=Math.imul(vector\x2C3)+state;offset+=this.unpack(this.offsetIncrs0\x2Cloc\x2C1);state=this.unpack(this.toStates0\x2Cloc\x2C2)-1}}else if(position===this.w-1){if(state<5){const loc=Math.imul(vector\x2C5)+state;offset+=this.unpack(this.offsetIncrs1\x2Cloc\x2C1);state=this.unpack(this.toStates1\x2Cloc\x2C3)-1}}else if(position===this.w-2){if(state<13){const loc=Math.imul(vector\x2C13)+state;offset+=this.unpack(this.offsetIncrs2\x2Cloc\x2C2);state=this.unpack(this.toStates2\x2Cloc\x2C4)-1}}else if(position===this.w-3){if(state<28){const loc=Math.imul(vector\x2C28)+state;offset+=this.unpack(this.offsetIncrs3\x2Cloc\x2C2);state=this.unpack(this.toStates3\x2Cloc\x2C5)-1}}else if(position===this.w-4){if(state<45){const loc=Math.imul(vector\x2C45)+state;offset+=this.unpack(this.offsetIncrs4\x2Cloc\x2C3);state=this.unpack(this.toStates4\x2Cloc\x2C6)-1}}else{if(state<45){const loc=Math.imul(vector\x2C45)+state;offset+=this.unpack(this.offsetIncrs5\x2Cloc\x2C3);state=this.unpack(this.toStates5\x2Cloc\x2C6)-1}}if(state===-1){return-1}else{return Math.imul(state\x2Cthis.w+1)+offset}}constructor(w){super(w\x2C2\x2Cnew Int32Array([0\x2C1\x2C2\x2C0\x2C1\x2C-1\x2C0\x2C-1\x2C0\x2C-1\x2C0\x2C-1\x2C0\x2C-1\x2C-1\x2C-1\x2C-1\x2C-1\x2C-2\x2C-1\x2C-1\x2C-2\x2C-1\x2C-2\x2C-1\x2C-1\x2C-1\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C-2\x2C]))}}Lev2TParametricDescription.prototype.toStates0=new Int32Array([0xe\x2C]);Lev2TParametricDescription.prototype.offsetIncrs0=new Int32Array([0x0\x2C]);Lev2TParametricDescription.prototype.toStates1=new Int32Array([0x1a688a2c\x2C]);Lev2TParametricDescription.prototype.offsetIncrs1=new Int32Array([0x3e0\x2C]);Lev2TParametricDescription.prototype.toStates2=new Int32Array([0x70707054\x2C0xdc07035\x2C0x3dd3a3a\x2C0x2323213a\x2C0x15435223\x2C0x22545432\x2C0x5435\x2C]);Lev2TParametricDescription.prototype.offsetIncrs2=new Int32Array([0x80000\x2C0x55582088\x2C0x55555555\x2C0x55\x2C]);Lev2TParametricDescription.prototype.toStates3=new Int32Array([0x1c0380a4\x2C0x700a570\x2C0xca529c0\x2C0x180a00\x2C0xa80af180\x2C0xc5498e60\x2C0x5a546398\x2C0x8c4300e8\x2C0xac18c601\x2C0xd8d43501\x2C0x863500ad\x2C0x51976d6a\x2C0x8ca0180a\x2C0xc3501ac2\x2C0xb0c5be16\x2C0x76dda8a5\x2C0x18c4519\x2C0xc41294a\x2C0xe248d231\x2C0x1086520c\x2C0xce31ac42\x2C0x13946358\x2C0x2d0348c4\x2C0x6732d494\x2C0x1ad224a5\x2C0xd635ad4b\x2C0x520c4139\x2C0xce24948\x2C0x22110a52\x2C0x58ce729d\x2C0xc41394e3\x2C0x941cc520\x2C0x90e732d4\x2C0x4729d224\x2C0x39ce35ad\x2C]);Lev2TParametricDescription.prototype.offsetIncrs3=new Int32Array([0x80000\x2C0xc0c830\x2C0x300f3c30\x2C0x2200fcff\x2C0xcaa00a08\x2C0x3c2200a8\x2C0xa8fea00a\x2C0x55555555\x2C0x55555555\x2C0x55555555\x2C0x55555555\x2C0x55555555\x2C0x55555555\x2C0x55555555\x2C]);Lev2TParametricDescription.prototype.toStates4=new Int32Array([0x801c0144\x2C0x1453803\x2C0x14700038\x2C0xc0005145\x2C0x1401\x2C0x14\x2C0x140000\x2C0x0\x2C0x510000\x2C0x6301f007\x2C0x301f00d1\x2C0xa186178\x2C0xc20ca0c3\x2C0xc20c30\x2C0xc30030c\x2C0xc00c00cd\x2C0xf0c00c30\x2C0x4c054014\x2C0xc30944c3\x2C0x55150c34\x2C0x8300550\x2C0x430c0143\x2C0x50c31\x2C0xc30850c\x2C0xc3143000\x2C0x50053c50\x2C0x5130d301\x2C0x850d30c2\x2C0x30a08608\x2C0xc214414\x2C0x43142145\x2C0x21450031\x2C0x1400c314\x2C0x4c143145\x2C0x32832803\x2C0x28014d6c\x2C0xcd34a0c3\x2C0x1c50c76\x2C0x1c314014\x2C0x430c30c3\x2C0x1431\x2C0xc300500\x2C0xca00d303\x2C0xd36d0e40\x2C0x90b0e400\x2C0xcb2abb2c\x2C0x70c20ca1\x2C0x2c32ca2c\x2C0xcd2c70cb\x2C0x31c00c00\x2C0x34c2c32c\x2C0x5583280\x2C0x558309b7\x2C0x6cd6ca14\x2C0x430850c7\x2C0x51c51401\x2C0x1430c714\x2C0xc3087\x2C0x71451450\x2C0xca00d30\x2C0xc26dc156\x2C0xb9071560\x2C0x1cb2abb2\x2C0xc70c2144\x2C0xb1c51ca1\x2C0x1421c70c\x2C0xc51c00c3\x2C0x30811c51\x2C0x24324308\x2C0xc51031c2\x2C0x70820820\x2C0x5c33830d\x2C0xc33850c3\x2C0x30c30c30\x2C0xc30c31c\x2C0x451450c3\x2C0x20c20c20\x2C0xda0920d\x2C0x5145914f\x2C0x36596114\x2C0x51965865\x2C0xd9643653\x2C0x365a6590\x2C0x51964364\x2C0x43081505\x2C0x920b2032\x2C0x2c718b28\x2C0xd7242249\x2C0x35cb28b0\x2C0x2cb3872c\x2C0x972c30d7\x2C0xb0c32cb2\x2C0x4e1c75c\x2C0xc80c90c2\x2C0x62ca2482\x2C0x4504171c\x2C0xd65d9610\x2C0x33976585\x2C0xd95cb5d\x2C0x4b5ca5d7\x2C0x73975c36\x2C0x10308138\x2C0xc2245105\x2C0x41451031\x2C0x14e24208\x2C0xc35c3387\x2C0x51453851\x2C0x1c51c514\x2C0xc70c30c3\x2C0x20451450\x2C0x14f1440c\x2C0x4f0da092\x2C0x4513d41\x2C0x6533944d\x2C0x1350e658\x2C0xe1545055\x2C0x64365a50\x2C0x5519383\x2C0x51030815\x2C0x28920718\x2C0x441c718b\x2C0x714e2422\x2C0x1c35cb28\x2C0x4e1c7387\x2C0xb28e1c51\x2C0x5c70c32c\x2C0xc204e1c7\x2C0x81c61440\x2C0x1c62ca24\x2C0xd04503ce\x2C0x85d63944\x2C0x39338e65\x2C0x8e154387\x2C0x364b5ca3\x2C0x38739738\x2C]);Lev2TParametricDescription.prototype.offsetIncrs4=new Int32Array([0x10000000\x2C0xc00000\x2C0x60061\x2C0x400\x2C0x0\x2C0x80010008\x2C0x249248a4\x2C0x8229048\x2C0x2092\x2C0x6c3603\x2C0xb61b6c30\x2C0x6db6036d\x2C0xdb6c0\x2C0x361b0180\x2C0x91b72000\x2C0xdb11b71b\x2C0x6db6236\x2C0x1008200\x2C0x12480012\x2C0x24924906\x2C0x48200049\x2C0x80410002\x2C0x24000900\x2C0x4924a489\x2C0x10822492\x2C0x20800125\x2C0x48360\x2C0x9241b692\x2C0x6da4924\x2C0x40009268\x2C0x241b010\x2C0x291b4900\x2C0x6d249249\x2C0x49493423\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x2492\x2C]);Lev2TParametricDescription.prototype.toStates5=new Int32Array([0x801c0144\x2C0x1453803\x2C0x14700038\x2C0xc0005145\x2C0x1401\x2C0x14\x2C0x140000\x2C0x0\x2C0x510000\x2C0x4e00e007\x2C0xe0051\x2C0x3451451c\x2C0xd015000\x2C0x30cd0000\x2C0xc30c30c\x2C0xc30c30d4\x2C0x40c30c30\x2C0x7c01c014\x2C0xc03458c0\x2C0x185e0c07\x2C0x2830c286\x2C0x830c3083\x2C0xc30030\x2C0x33430c\x2C0x30c3003\x2C0x70051030\x2C0x16301f00\x2C0x8301f00d\x2C0x30a18617\x2C0xc20ca0c\x2C0x431420c3\x2C0xb1450c51\x2C0x14314315\x2C0x4f143145\x2C0x34c05401\x2C0x4c30944c\x2C0x55150c3\x2C0x30830055\x2C0x1430c014\x2C0xc00050c3\x2C0xc30850\x2C0xc314300\x2C0x150053c5\x2C0x25130d30\x2C0x5430d30c\x2C0xc0354154\x2C0x300d0c90\x2C0x1cb2cd0c\x2C0xc91cb0c3\x2C0x72c30cb2\x2C0x14f1cb2c\x2C0xc34c0540\x2C0x34c30944\x2C0x82182214\x2C0x851050c2\x2C0x50851430\x2C0x1400c50c\x2C0x30c5085\x2C0x50c51450\x2C0x150053c\x2C0xc25130d3\x2C0x8850d30\x2C0x1430a086\x2C0x450c2144\x2C0x51cb1c21\x2C0x1c91c70c\x2C0xc71c314b\x2C0x34c1cb1\x2C0x6c328328\x2C0xc328014d\x2C0x76cd34a0\x2C0x1401c50c\x2C0xc31c3140\x2C0x31430c30\x2C0x14\x2C0x30c3005\x2C0xa0ca00d3\x2C0x535b0c\x2C0x4d2830ca\x2C0x514369b3\x2C0xc500d01\x2C0x5965965a\x2C0x30d46546\x2C0x6435030c\x2C0x8034c659\x2C0xdb439032\x2C0x2c390034\x2C0xcaaecb24\x2C0x30832872\x2C0xcb28b1c\x2C0x4b1c32cb\x2C0x70030033\x2C0x30b0cb0c\x2C0xe40ca00d\x2C0x400d36d0\x2C0xb2c90b0e\x2C0xca1cb2ab\x2C0xa2c70c20\x2C0x6575d95c\x2C0x4315b5ce\x2C0x95c53831\x2C0x28034c5d\x2C0x9b705583\x2C0xa1455830\x2C0xc76cd6c\x2C0x40143085\x2C0x71451c51\x2C0x871430c\x2C0x450000c3\x2C0xd3071451\x2C0x1560ca00\x2C0x560c26dc\x2C0xb35b2851\x2C0xc914369\x2C0x1a14500d\x2C0x46593945\x2C0xcb2c939\x2C0x94507503\x2C0x328034c3\x2C0x9b70558\x2C0xe41c5583\x2C0x72caaeca\x2C0x1c308510\x2C0xc7147287\x2C0x50871c32\x2C0x1470030c\x2C0xd307147\x2C0xc1560ca0\x2C0x1560c26d\x2C0xabb2b907\x2C0x21441cb2\x2C0x38a1c70c\x2C0x8e657394\x2C0x314b1c93\x2C0x39438738\x2C0x43083081\x2C0x31c22432\x2C0x820c510\x2C0x830d7082\x2C0x50c35c33\x2C0xc30c338\x2C0xc31c30c3\x2C0x50c30c30\x2C0xc204514\x2C0x890c90c2\x2C0x31440c70\x2C0xa8208208\x2C0xea0df0c3\x2C0x8a231430\x2C0xa28a28a2\x2C0x28a28a1e\x2C0x1861868a\x2C0x48308308\x2C0xc3682483\x2C0x14516453\x2C0x4d965845\x2C0xd4659619\x2C0x36590d94\x2C0xd969964\x2C0x546590d9\x2C0x20c20541\x2C0x920d20c\x2C0x5914f0da\x2C0x96114514\x2C0x65865365\x2C0xe89d3519\x2C0x99e7a279\x2C0x9e89e89e\x2C0x81821827\x2C0xb2032430\x2C0x18b28920\x2C0x422492c7\x2C0xb28b0d72\x2C0x3872c35c\x2C0xc30d72cb\x2C0x32cb2972\x2C0x1c75cb0c\x2C0xc90c204e\x2C0xa2482c80\x2C0x24b1c62c\x2C0xc3a89089\x2C0xb0ea2e42\x2C0x9669a31c\x2C0xa4966a28\x2C0x59a8a269\x2C0x8175e7a\x2C0xb203243\x2C0x718b2892\x2C0x4114105c\x2C0x17597658\x2C0x74ce5d96\x2C0x5c36572d\x2C0xd92d7297\x2C0xe1ce5d70\x2C0xc90c204\x2C0xca2482c8\x2C0x4171c62\x2C0x5d961045\x2C0x976585d6\x2C0x79669533\x2C0x964965a2\x2C0x659689e6\x2C0x308175e7\x2C0x24510510\x2C0x451031c2\x2C0xe2420841\x2C0x5c338714\x2C0x453851c3\x2C0x51c51451\x2C0xc30c31c\x2C0x451450c7\x2C0x41440c20\x2C0xc708914\x2C0x82105144\x2C0xf1c58c90\x2C0x1470ea0d\x2C0x61861863\x2C0x8a1e85e8\x2C0x8687a8a2\x2C0x3081861\x2C0x24853c51\x2C0x5053c368\x2C0x1341144f\x2C0x96194ce5\x2C0x1544d439\x2C0x94385514\x2C0xe0d90d96\x2C0x5415464\x2C0x4f1440c2\x2C0xf0da0921\x2C0x4513d414\x2C0x533944d0\x2C0x350e6586\x2C0x86082181\x2C0xe89e981d\x2C0x18277689\x2C0x10308182\x2C0x89207185\x2C0x41c718b2\x2C0x14e24224\x2C0xc35cb287\x2C0xe1c73871\x2C0x28e1c514\x2C0xc70c32cb\x2C0x204e1c75\x2C0x1c61440c\x2C0xc62ca248\x2C0x90891071\x2C0x2e41c58c\x2C0xa31c70ea\x2C0xe86175e7\x2C0xa269a475\x2C0x5e7a57a8\x2C0x51030817\x2C0x28920718\x2C0xf38718b\x2C0xe5134114\x2C0x39961758\x2C0xe1ce4ce\x2C0x728e3855\x2C0x5ce0d92d\x2C0xc204e1ce\x2C0x81c61440\x2C0x1c62ca24\x2C0xd04503ce\x2C0x85d63944\x2C0x75338e65\x2C0x5d86075e\x2C0x89e69647\x2C0x75e76576\x2C]);Lev2TParametricDescription.prototype.offsetIncrs5=new Int32Array([0x10000000\x2C0xc00000\x2C0x60061\x2C0x400\x2C0x0\x2C0x60000008\x2C0x6b003080\x2C0xdb6ab6db\x2C0x2db6\x2C0x800400\x2C0x49245240\x2C0x11482412\x2C0x104904\x2C0x40020000\x2C0x92292000\x2C0xa4b25924\x2C0x9649658\x2C0xd80c000\x2C0xdb0c001b\x2C0x80db6d86\x2C0x6db01b6d\x2C0xc0600003\x2C0x86000d86\x2C0x6db6c36d\x2C0xddadb6ed\x2C0x300001b6\x2C0x6c360\x2C0xe37236e4\x2C0x46db6236\x2C0xdb6c\x2C0x361b018\x2C0xb91b7200\x2C0x6dbb1b71\x2C0x6db763\x2C0x20100820\x2C0x61248001\x2C0x92492490\x2C0x24820004\x2C0x8041000\x2C0x92400090\x2C0x24924830\x2C0x555b6a49\x2C0x2080012\x2C0x20004804\x2C0x49252449\x2C0x84112492\x2C0x4000928\x2C0x240201\x2C0x92922490\x2C0x58924924\x2C0x49456\x2C0x120d8082\x2C0x6da4800\x2C0x69249249\x2C0x249a01b\x2C0x6c04100\x2C0x6d240009\x2C0x92492483\x2C0x24d5adb4\x2C0x60208001\x2C0x92000483\x2C0x24925236\x2C0x6846da49\x2C0x10400092\x2C0x241b0\x2C0x49291b49\x2C0x636d2492\x2C0x92494935\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C0x49249249\x2C0x92492492\x2C0x24924924\x2C]);class Lev1TParametricDescription extends ParametricDescription{transition(absState\x2Cposition\x2Cvector){let state=Math.floor(absState/(this.w+1));let offset=absState%(this.w+1);if(position===this.w){if(state<2){const loc=Math.imul(vector\x2C2)+state;offset+=this.unpack(this.offsetIncrs0\x2Cloc\x2C1);state=this.unpack(this.toStates0\x2Cloc\x2C2)-1}}else if(position===this.w-1){if(state<3){const loc=Math.imul(vector\x2C3)+state;offset+=this.unpack(this.offsetIncrs1\x2Cloc\x2C1);state=this.unpack(this.toStates1\x2Cloc\x2C2)-1}}else if(position===this.w-2){if(state<6){const loc=Math.imul(vector\x2C6)+state;offset+=this.unpack(this.offsetIncrs2\x2Cloc\x2C2);state=this.unpack(this.toStates2\x2Cloc\x2C3)-1}}else{if(state<6){const loc=Math.imul(vector\x2C6)+state;offset+=this.unpack(this.offsetIncrs3\x2Cloc\x2C2);state=this.unpack(this.toStates3\x2Cloc\x2C3)-1}}if(state===-1){return-1}else{return Math.imul(state\x2Cthis.w+1)+offset}}constructor(w){super(w\x2C1\x2Cnew Int32Array([0\x2C1\x2C0\x2C-1\x2C-1\x2C-1]))}}Lev1TParametricDescription.prototype.toStates0=new Int32Array([0x2\x2C]);Lev1TParametricDescription.prototype.offsetIncrs0=new Int32Array([0x0\x2C]);Lev1TParametricDescription.prototype.toStates1=new Int32Array([0xa43\x2C]);Lev1TParametricDescription.prototype.offsetIncrs1=new Int32Array([0x38\x2C]);Lev1TParametricDescription.prototype.toStates2=new Int32Array([0x12180003\x2C0xb45a4914\x2C0x69\x2C]);Lev1TParametricDescription.prototype.offsetIncrs2=new Int32Array([0x558a0000\x2C0x5555\x2C]);Lev1TParametricDescription.prototype.toStates3=new Int32Array([0x900c0003\x2C0xa1904864\x2C0x45a49169\x2C0x5a6d196a\x2C0x9634\x2C]);Lev1TParametricDescription.prototype.offsetIncrs3=new Int32Array([0xa0fc0000\x2C0x5555ba08\x2C0x55555555\x2C])
code-source-info,0x7b3c71a1316,121,0,91517,C0O0C4O91517,,
code-creation,JS,10,115133,0x7b3c71a5b5e,1499, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:1,0x7b3c71a1290,~
code-source-info,0x7b3c71a5b5e
tick,0x7ee8191499a9,115174,1,0x7ee81a634430,3,0x7ee81bf0da80,0x8b517fe5c0d,0x8b517fe5674,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fe6dca,0x8b517fe6c3e,0x7b3c718fac8,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,115312,0x7b3c71a7576,159,initSearch /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:6:6206,0x7b3c71a1de8,~
code-source-info,0x7b3c71a7576,121,78875,79263,C0O78888C2O78902C8O78914C15O78946C22O78970C27O78985C30O78995C36O78956C44O78955C50O79008C53O79008C56O79031C60O79041C65O79053C70O79053C75O79075C81O79084C84O79084C89O79099C95O79132C102O79156C107O79171C110O79181C116O79142C124O79141C130O79194C135O79212C137O79211C141O79222C146O79241C149O79251C153O79240C158O79262,,
code-creation,JS,10,115373,0x7b3c71a7c26,364,DocSearch /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:21022,0x7b3c71a24b8,~
code-source-info,0x7b3c71a7c
code-creation,JS,10,115440,0x7b3c71a82a6,112,buildTypeMapIndex /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22185,0x7b3c71a2508,~
code-source-info,0x7b3c71a82a6,121,22184,22474,C0O22203C2O22210C11O22230C12O22241C13O22250C18O22264C23O22264C30O22290C35O22304C40O22304C46O22314C51O22328C53O22345C57O22327C61O22366C65O22368C66O22388C71O22402C76O22412C81O22426C86O22430C93O22436C99O22449C103O22426C109O22463C111O22472,,
code-creation,JS,10,115511,0x7b3c71a8916,14,NameTrie /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18640,0x7b3c71a22d8,~
code-source-info,0x7b3c71a8916,121,18639,18675,C0O18642C2O18655C6O18659C8O18671C13O18674,,
tick,0x7ee81c483c20,115689,0,0x0,2,0x7ee81c5678d0,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c71a5e89,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x8b517fe6dca,0x8b517fe6c3e,0x7b3c718fac8,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,115837,0x7b3c71a9506,3847,buildIndex /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25990,0x7b3c71a2648,~
code-source-info,0x7b3c71a
code-creation,JS,11,115999,0x7ee79be54880,744,buildTypeMapIndex /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22185,0x7b3c71a2508,^
code-source-info,0x7ee79be54880,121,22184,22474,,,
code-creation,JS,11,116037,0x7ee79be54b80,2740,basename node:path:1337:11,0x1537ab9b1998,^
code-source-info,0x7ee79be54b80,33,40387,42806,,,
code-creation,JS,11,116045,0x7ee79be55680,132, /home/user/rustdoc-js-profile/src/tester.js:221:55,0x7b3c718f6a0,^
code-source-info,0x7ee79be55680,119,8595,8624,,,
code-creation,JS,11,116056,0x7ee79be55740,664,normalizeRequirableId node:internal/bootstrap/realm:301:31,0x168b8b4a93a0,^
code-source-info,0x7ee79be55740,9,9688,10012,,,
code-creation,JS,11,116067,0x7ee79be55a00,604,splitRoot node:fs:2608:33,0x2563a95a6d98,^
code-source-info,0x7ee79be55a00,45,69370,69562,,,
code-creation,JS,11,116076,0x7ee79be55c80,452,isURL node:internal/url:763:15,0x1537ab9a41e8,^
code-source-info,0x7ee79be55c80,30,21751,21862,,,
code-creation,JS,11,116083,0x7ee79be55e80,180,toPathIfFileURL node:internal/url:1553:25,0x1537ab9a4628,^
code-source-info,0x7ee79be55e80,30,46484,46597,,,
code-creation,JS,10,116162,0x7b3c71aba5e,25,VlqHexDecoder /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15455,0x7b3c71a1f18,~
code-source-info,0x7b3c71aba5e,121,15454,15537,C0O15468C2O15479C6O15487C8O15496C12O15502C13O15513C17O15516C19O15533C24O15536,,
code-creation,JS,10,116224,0x7b3c71abef6,161,next /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15992,0x7b3c71a2008,~
code-source-info,0x7b3c71abef6,121,15991,16288,C0O16007C5O16014C10O16030C15O16014C21O16038C23O16042C30O16049C35O16054C42O16065C46O16081C53O16095C56O16093C59O16099C60O16100C62O16104C67O16111C74O16122C78O16138C85O16138C90O16145C91O16164C96O16174C101O16174C106O16164C112O16189C117O16202C122O16202C127O16226C132O16239C139O16245C144O16255C149O16268C154O16268C158O16274C160O16287,,
code-creation,JS,10,116280,0x7b3c71ac176,325,decode /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15715,0x7b3c71a1fb8,~
code-source-info,0x7b3c71ac176,121,15714,15987,C0O15723C2O15736C7O15743C12O15759C17O15743C23O15767C25O15771C30O15779C37O15790C41O15806C46O15806C50O15818C51O15826C53O15826C58O15831C60O15835C66O15842C69O15839C73O15848C80O15859C84O15870C89O15877C94O15893C99O15877C105O15819C109O15901C111O15905C117O15912C120O15909C124O15936C133O15938C145O15942C152O15936C169O15924C206O15929C301O15947C308O15958C312O15962C318O15974C324O15986,,
code-creation,JS,10,116312,0x7b3c71ac3ee,3, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:27319,0x7b3c71a8bd8,~
code-source-info,0x7b3c71ac3ee,121,27318,27328,C0O27324C2O27328,,
code-creation,JS,10,116427,0x7b3c71ac5c6,869,RoaringBitmap /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:16321,0x7b3c71a2058,~
code-source-info,0x7b3c71ac5c
code-creation,JS,10,116487,0x7b3c71acc66,85,get node:internal/util:617:17,0x2bf7c8030ba8,~
code-source-info,0x7b3c71acc66,16,17148,17332,C0O17159C19O17175C22O17167C31O17163C39O17186C45O17231C54O17253C56O17252C62O17247C68O17267C73O17271C76O17267C80O17303C84O17326,,
code-creation,JS,10,116514,0x7b3c71ace06,37,set node:internal/util:606:17,0x2bf7c8030b58,~
code-source-info,0x7b3c71ace06,16,16902,17033,C0O16918C11O16939C16O16947C26O17011C30O16918C36O17032,,
code-creation,JS,10,116582,0x7b3c71acfee,123,atob node:buffer:1260:14,0x305ee1eb29f0,~
code-source-info,0x7b3c71acfee,25,37012,37647,C0O37012C2O37038C8O37045C13O37058C23O37064C28O37058C29O37117C36O37126C38O37117C43O37139C69O37197C80O37203C85O37197C86O37315C97O37321C102O37315C103O37529C114O37535C119O37529C120O37627C122O37641,,
code-creation,JS,10,116687,0x7b3c71ad796,26,insert /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18682,0x7b3c71a2328,~
code-source-info,0x7b3c71ad796,121,18681,18743,C0O18706C19O18706C25O18742,,
code-creation,JS,10,116736,0x7b3c71ad8d6,201,insertSubstring /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18759,0x7b3c71a2378,~
code-source-info,0x7b3c71ad8d6,121,18758,19236,C0O18800C5O18807C7O18818C12O18829C17O18837C22O18837C29O18865C34O18865C40O18890C42O18904C49O18912C54O18941C61O18949C67O18959C72O18965C78O18985C85O18997C89O19008C91O19013C93O19024C98O19045C105O19063C111O19074C115O19045C122O19091C127O19091C134O19117C139O19117C147O19132C150O19150C155O19150C161O19170C166O19170C171O19189C178O19218C194O19189C200O19235,,
tick,0x7ee819a9995a,116769,0,0x0,3,0x7ee81c5678d0,0x7b3c71ad7a9,0x7b3c71a9803,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,116838,0x7b3c71adbbe,86,contains /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:17739,0x7b3c71a20a8,~
code-source-info,0x7b3c71adbbe,121,17738,17915,C0O17759C2O17767C6O17784C8O17792C19O17810C21O17819C26O17824C30O17813C35O17844C42O17848C48O17851C53O17871C60O17881C64O17885C69O17885C74O17900C75O17833C80O17800C84O17902C85O17914,,
code-creation,JS,10,116892,0x7b3c71add8e,18,buildFunctionSearchTypeCallback /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:26045,0x7b3c71a8b88,~
code-source-info,0x7b3c71add8e,121,26044,27037,C0O26044C13O26069C17O27036,,
code-creation,JS,10,117003,0x7b3c71ae12e,343, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:26077,0x7b3c71adce8,~
code-source-info,0x7b3c71ae12e,121,26076,27036,C0O26097C1O26118C6O26124C7O26135C8O26154C10O26174C13O26180C15O26187C17O26194C19O26222C26O26248C38O26261C45O26299C55O26261C71O26343C76O26355C83O26396C93O26355C99O26455C106O26461C111O26465C113O26493C120O26519C132O26532C139O26570C149O26532C165O26614C170O26626C177O26667C187O26626C195O26710C198O26739C201O26769C206O26786C209O26789C211O26789C216O26810C223O26840C233O26843C245O26861C252O26899C262O26861C280O26931C287O26972C297O26931C303O26810C308O26794C313O26776C317O27000C324O27007C330O27014C336O27021C342O27035,,
code-creation,JS,10,117038,0x7b3c71ae3e6,3, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:28301,0x7b3c71a8c28,~
code-source-info,0x7b3c71ae3e6,121,28300,28310,C0O28306C2O28310,,
code-creation,JS,10,117135,0x7b3c71aeb76,90,decodeList /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15548,0x7b3c71a1f68,~
code-source-info,0x7b3c71aeb76,121,15547,15708,C0O15561C5O15568C10O15584C15O15568C21O15602C24O15612C26O15612C31O15624C36O15634C41O15634C46O15624C51O15651C56O15658C61O15674C66O15658C72O15605C76O15682C83O15693C87O15697C89O15707,,
code-creation,JS,10,117177,0x7b3c71aed76,53,buildItemSearchTypeAll /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22497,0x7b3c71a2558,~
code-source-info,0x7b3c71aed76,121,22496,22642,C0O22496C17O22538C23O22544C28O22553C38O22553C48O22621C52O22641,,
code-creation,JS,10,117198,0x7b3c71aeebe,23, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22558,0x7b3c71aecb8,~
code-source-info,0x7b3c71aeebe,121,22557,22614,C0O22568C3O22568C17O22568C22O22614,,
code-creation,JS,10,117331,0x7b3c71af45e,1236,buildItemSearchType /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22662,0x7b3c71a25a8,~
code-source-info,0x7b3c71af45e,121,22661,24690,C0O22661C20O22723C22O22745C25O22767C28O22773C30O22783C32O22792C34O22801C40O22828C43O22843C47O22857C52O22878C56O22892C63O22916C65O22930C69O22948C73O22962C81O22989C94O22962C100O23036C108O23042C115O23062C120O23078C127O23084C132O23088C139O23109C144O23125C156O23125C165O23097C173O23320C177O23334C182O23358C183O23358C185O23365C186O23377C191O23381C199O23392C207O23413C215O23449C221O23458C227O23387C231O23489C232O23501C237O23507C245O23564C251O23573C257O23513C261O23615C267O23639C270O23629C274O23652C278O23657C284O23680C290O23657C297O23698C301O23714C305O23719C311O23738C323O23760C326O23750C331O23764C337O23738C343O23770C351O23778C361O23801C364O23791C369O23805C377O23818C385O23831C393O23851C403O23861C409O23870C413O23894C423O23776C425O23915C429O23920C435O23931C445O23942C451O23931C457O23946C459O23959C465O23968C475O23984C481O23993C485O23974C490O24004C500O24022C504O24012C509O24035C515O24044C527O24044C534O24082C538O24101C542O24097C546O24116C552O24125C562O24139C568O24148C572O24129C577O24157C587O24175C591O24165C596O24192C598O24217C604O24226C610O24226C637O24210C668O24210C688O24207C729O24209C848O24246C854O24253C860O24262C866O24262C871O24246C873O24269C877O24277C879O24286C883O24292C885O24296C890O24305C900O24317C904O24311C909O24327C921O24327C928O24352C934O24359C940O24368C946O24368C954O24382C956O24386C961O24393C963O24402C969O24197C1045O24409C1049O24416C1053O24435C1057O24431C1061O24451C1071O24463C1075O24453C1080O24470C1090O24484C1094O24474C1099O24493C1109O24511C1113O24501C1118O24524C1128O24542C1132O24532C1137O24555C1147O24567C1151O24557C1156O24574C1166O24588C1170O24578C1175O24597C1185O24616C1189O24606C1194O24627C1196O24636C1197O24638C1201O24643C1207O24654C1217O24665C1227O24654C1233O24676C1235O24689,,
code-creation,JS,10,117509,0x7b3c71b01d6,884,buildFunctionTypeFingerprint /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:24719,0x7b3c71a25f8,~
code-source-info,0x7b3c71b01d
code-creation,JS,10,117575,0x7b3c71b0806,125,hashint1 /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25094,0x7b3c71aff50,~
code-source-info,0x7b3c71b0806,121,25093,25262,C0O25097C2O25101C4O25100C6O25103C19O25118C22O25115C27O25124C29O25129C35O25145C38O25142C43O25156C45O25155C47O25158C60O25173C63O25170C68O25182C70O25181C75O25184C81O25199C84O25196C89O25208C91O25207C96O25210C102O25225C105O25222C110O25230C112O25239C118O25255C121O25252C124O25261,,
code-creation,JS,10,117620,0x7b3c71b09a6,77,hashint2 /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25279,0x7b3c71affa0,~
code-source-info,0x7b3c71b09a6,121,25278,25362,C0O25282C2O25284C7O25289C10O25286C15O25300C26O25310C37O25319C48O25324C52O25331C62O25331C70O25356C73O25353C76O25361,,
code-creation,JS,11,117745,0x7ee79be55f80,2320,decode /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15715,0x7b3c71a1fb8,^
code-source-info,0x7ee79be55f80,121,15714,15987,,,
code-creation,JS,11,117757,0x7ee79be568c0,136,NameTrie /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18640,0x7b3c71a22d8,^
code-source-info,0x7ee79be568c0,121,18639,18675,,,
code-creation,JS,11,117771,0x7ee79be56980,1192,insertSubstring /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18759,0x7b3c71a2378,^
code-source-info,0x7ee79be56980,121,18758,19236,,,
code-creation,JS,11,117784,0x7ee79be56e40,668,decodeList /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15548,0x7b3c71a1f68,^
code-source-info,0x7ee79be56e40,121,15547,15708,,,
tick,0x7ee81be15e03,117834,0,0x0,0,0x7b3c71af929,0x7b3c71aeecf,0x7ee81bd9320d,0x7b3c71aed9c,0x7b3c71af4bc,0x7b3c71aeecf,0x7ee81bd9320d,0x7b3c71aed9c,0x7b3c71ae18b,0x7b3c71abf60,0x7b3c71a9bfc,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,117855,0x7b3c71b131e,22, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:24051,0x7b3c71af028,~
code-source-info,0x7b3c71b131e,121,24050,24079,C0O24075C5O24064C12O24072C18O24075C21O24079,,
code-creation,JS,11,118134,0x7ee79be57100,5956,buildFunctionTypeFingerprint /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:24719,0x7b3c71a25f8,^
code-source-info,0x7ee79be57100,121,24718,25979,,,
code-creation,JS,11,118150,0x7ee79be58880,592,hashint1 /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25094,0x7b3c71aff50,^
code-source-info,0x7ee79be58880,121,25093,25262,,,
code-creation,JS,11,118160,0x7ee79be58b00,396,hashint2 /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25279,0x7b3c71affa0,^
code-source-info,0x7ee79be58b00,121,25278,25362,,,
code-creation,JS,11,118167,0x7ee79be58cc0,152,insert /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18682,0x7b3c71a2328,^
code-source-info,0x7ee79be58cc0,121,18681,18743,,,
code-creation,JS,11,118174,0x7ee79be58d80,148, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22558,0x7b3c71aecb8,^
code-source-info,0x7ee79be58d80,121,22557,22614,,,
code-creation,JS,11,118188,0x7ee79be58e40,1016,next /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15992,0x7b3c71a2008,^
code-source-info,0x7ee79be58e40,121,15991,16288,,,
code-creation,JS,10,118379,0x7b3c71b26ce,14,RoaringBitmapArray /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18268,0x7b3c71a2198,~
code-source-info,0x7b3c71b26ce,121,18267,18333,C0O18287C2O18303C6O18316C8O18326C13O18332,,
code-creation,JS,11,118491,0x7ee79be59280,5628,RoaringBitmap /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:16321,0x7b3c71a2058,^
code-source-info,0x7ee79be59280,121,16320,17730,,,
code-creation,JS,11,118508,0x7ee79be5a8c0,480,buildItemSearchTypeAll /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22497,0x7b3c71a2558,^
code-source-info,0x7ee79be5a8c0,121,22496,22642,,,
code-creation,JS,10,118578,0x7b3c71b325e,14,RoaringBitmapRun /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:17951,0x7b3c71a20f8,~
code-source-info,0x7b3c71b325e,121,17950,18007,C0O17967C2O17980C6O17990C8O18000C13O18006,,
code-creation,JS,10,118665,0x7b3c71b346e,113,contains /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18016,0x7b3c71a2148,~
code-source-info,0x7b3c71b346e,121,18015,18230,C0O18036C4O18044C8O18057C10O18060C12O18060C17O18086C24O18091C28O18101C35O18108C38O18106C41O18111C44O18094C48O18133C55O18140C58O18138C62O18150C69O18157C72O18155C75O18160C78O18143C82O18165C84O18173C91O18195C94O18187C99O18204C100O18215C101O18064C107O18047C111O18217C112O18229,,
tick,0x7ee81c37ebb6,118906,0,0x0,0,0x7ee81c577880,0x7b3c71a99b5,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,11,119067,0x7ee79be5aac0,20816,buildIndex /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25990,0x7b3c71a2648,^
code-source-info,0x7ee79be5aac0,121,25989,31364,,,
code-creation,JS,11,119085,0x7ee79be5fc40,808,contains /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18016,0x7b3c71a2148,^
code-source-info,0x7ee79be5fc40,121,18015,18230,,,
code-creation,JS,11,119408,0x7ee79be5ff80,8492,buildItemSearchType /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:22662,0x7b3c71a25a8,^
code-source-info,0x7ee79be5ff80,121,22661,24690,,,
code-creation,JS,11,119420,0x7ee79be620c0,44, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:28301,0x7b3c71a8c28,^
code-source-info,0x7ee79be620c0,121,28300,28310,,,
code-creation,JS,11,119431,0x7ee79be62100,592,contains /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:17739,0x7b3c71a20a8,^
code-source-info,0x7ee79be62100,121,17738,17915,,,
tick,0x7ee81bd10529,119979,0,0x0,0,0x7ee79be56d96,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be58d3c,0x7ee79be5eca7,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
new,MemoryChunk,0x567d700000,262144
new,MemoryChunk,0x1ec4dfac0000,262144
new,MemoryChunk,0x1d5a31d00000,262144
tick,0x7ee81c161be9,121062,0,0x0,1
tick,0x7ee81bdbfc8f,122136,0,0x0,0,0x7ee79be5754a,0x7ee79be57b66,0x7ee79be5daa0,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,13,122948,0x7ee79be62380,904,contains /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18016,0x7b3c71a2148,*
code-source-info,0x7ee79be62380,121,18015,18230,C0O18015C48O18036C81O18044C94O18060C102O18086C106O18091C132O18106C148O18173C156O18111C160O18094C163O18138C179O18155C195O18173C218O18160C222O18143C225O18195C228O18187C246O18047C327O18060C336O18086C346O18091C396O18108C408O18106C425O18111C428O18094C430O18140C442O18138C459O18157C471O18155C489O18173C497O18160C501O18143C504O18195C507O18187C523O18064C535O18047C550O18229C583O18215C592O18015C646O18047,,
tick,0x7ee81bcf3df4,123216,0,0x0,0,0x7ee79be56bc3,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be58d3c,0x7ee79be5eca7,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
new,MemoryChunk,0x23a5c5ac0000,262144
new,MemoryChunk,0x1e520d6c0000,262144
new,MemoryChunk,0x3ad387940000,262144
tick,0x7ee81bcf3df9,124291,0,0x0,0,0x7ee79be56bc3,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be58d3c,0x7ee79be5eca7,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819aa2da9,125377,0,0x0,1
new,MemoryChunk,0xf0024280000,262144
new,MemoryChunk,0xc9532300000,262144
new,MemoryChunk,0x32a774c00000,262144
new,MemoryChunk,0x258156e80000,262144
new,MemoryChunk,0x3baba0fc0000,262144
new,MemoryChunk,0x349840000,262144
new,MemoryChunk,0x1bb167ac0000,262144
new,MemoryChunk,0x1266ff880000,262144
new,MemoryChunk,0x1c2469b80000,262144
new,MemoryChunk,0x35b20700000,262144
new,MemoryChunk,0x68f76440000,262144
new,MemoryChunk,0x36eb14ac0000,262144
new,MemoryChunk,0xe5ff7840000,262144
new,MemoryChunk,0x121b89e00000,262144
new,MemoryChunk,0x2cafe9a40000,262144
new,MemoryChunk,0x13f67a0c0000,262144
new,MemoryChunk,0x1506b4cc0000,262144
new,MemoryChunk,0x31433a000000,262144
new,MemoryChunk,0x15cd0f5c0000,262144
tick,0x7ee81bcf3e01,126619,0,0x0,0,0x7ee79be56bc3,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be58d3c,0x7ee79be5eca7,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,13,126988,0x7ee79be62740,208,hashint2 /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25279,0x7b3c71affa0,*
code-source-info,0x7ee79be62740,121,25278,25362,C0O25278C52O25284C69O25289C75O25284C77O25286C79O25300C86O25310C89O25319C96O25331C102O25356C107O25353C109O25361C142O25278,,
tick,0x7ee81bd104a0,127533,0,0x0,0,0x7ee79be56d96,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be56e0e,0x7ee79be58d3c,0x7ee79be5eca7,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee81bd49ef4,128575,0,0x0,0,0x7ee79be589b0,0x7ee79be57402,0x7ee79be5d639,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819b1d9bd,129682,0,0x0,4,0x7ee81c571010,0x7ee79be627ff,0x7ee79be57423,0x7ee79be5d639,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,13,129755,0x7ee79be62840,2576,insertSubstring /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18759,0x7b3c71a2378,*
code-source-info,0x7ee79be62840,121,18758,19236,C0O18758C48O18800C82O18818C96O18800C100O18904C108O18818C135O18865C378O18904C415O18912C532O18949C573O18959C608O19074C613O18965C722O18642I0C742O18655I0C772O18659I0C802O18671I0C810O18997C924O19024C942O19063C947O19045C1077O19091C1160O19117C1257O19132C1294O19150C1349O19170C1478O19189C1559O18829C1596O18837C1670O19235C1703O18758C1758O18865C1832O18912C1955O18997C2163O19170C2228O18959C2286O18837,F0O18965,S0x7b3c71a22d8
code-creation,JS,13,130094,0x7ee79be63300,236,hashint1 /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:25094,0x7b3c71aff50,*
code-source-info,0x7ee79be63300,121,25093,25262,C0O25093C52O25101C69O25118C75O25115C82O25145C87O25129C93O25142C95O25173C100O25170C107O25199C112O25184C118O25196C120O25222C127O25255C132O25239C138O25252C140O25261C173O25093,,
tick,0x7ee81c142de6,130762,0,0x0,0,0x7ee81c571970,0x7ee81bd5cdb5,0x7ee79be5e708,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819b1d9bd,131871,0,0x0,4,0x7ee81c570e40,0x7ee79be62685,0x7ee79be6228c,0x7ee79be5ee07,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819b1d9bd,132917,0,0x0,4,0x7ee81c570e40,0x7ee79be62685,0x7ee79be6228c,0x7ee79be5ee07,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819b1d9bd,133989,0,0x0,4,0x7ee81c570e40,0x7ee79be62685,0x7ee79be6228c,0x7ee79be5ee07,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,13,134042,0x7ee79be63440,2272,buildFunctionTypeFingerprint /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:24719,0x7b3c71a25f8,*
code-source-info,0x7ee79bex7b3c71affa0S0x7b3c71aff50
tick,0x7ee819b7c188,135111,0,0x0,0,0x7b3c71ae19f,0x7ee79be5910a,0x7ee79be5d350,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,135338,0x7b3c71ba656,224, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:23130,0x7b3c71aefd8,~
code-source-info,0x7b3c71ba656,121,23129,23312,C0O23168C20O23145C57O23155C152O23176C162O23188C178O23188C184O23244C198O23253C212O23253C223O23311,,
tick,0x7ee81bdb0218,136167,0,0x0,0,0x7ee79be58dfe,0x7ee81bd9320d,0x7ee79be5aa54,0x7ee79be60273,0x7ee79be58dfe,0x7ee81bd9320d,0x7ee79be5aa54,0x7b3c71ae18b,0x7ee79be5910a,0x7ee79be5d350,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,11,136240,0x7ee79be63dc0,1512, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:23130,0x7b3c71aefd8,^
code-source-info,0x7ee79be63dc0,121,23129,23312,,,
code-creation,JS,11,136256,0x7ee79be643c0,180, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:24051,0x7b3c71af028,^
code-source-info,0x7ee79be643c0,121,24050,24079,,,
code-creation,JS,11,136279,0x7ee79be644c0,2128, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:26077,0x7b3c71adce8,^
code-source-info,0x7ee79be644c0,121,26076,27036,,,
code-creation,JS,11,136294,0x7ee79be64d40,176,VlqHexDecoder /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15455,0x7b3c71a1f18,^
code-source-info,0x7ee79be64d40,121,15454,15537,,,
new,MemoryChunk,0x1193bb140000,262144
new,MemoryChunk,0x4e496740000,262144
new,MemoryChunk,0x223e3df40000,262144
new,MemoryChunk,0x2b0700200000,262144
new,MemoryChunk,0x1d5f73240000,262144
tick,0x7ee819aa2da9,137966,0,0x0,1
tick,0x7ee79be5d9a6,138329,0,0x0,0,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee81bd127ed,139410,0,0x0,0,0x7ee79be56401,0x7ee79be56f68,0x7ee79be560cc,0x7ee79be590f0,0x7ee79be5d350,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,140610,0x1d5f73258776,69,contains /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18342,0x7b3c71a21e8,~
code-source-info,0x1d5f73258776,121,18341,18489,C0O18362C4O18373C8O18386C10O18389C12O18389C17O18415C24O18420C28O18430C35O18437C38O18435C41O18440C44O18423C48O18445C50O18453C55O18463C56O18474C57O18393C63O18376C67O18476C68O18488,,
tick,0x7ee81bee1eb0,140646,0,0x0,3,0x7ee81c5678d0,0x7ee79be6228c,0x7ee79be5c042,0x7b3c71a7d87,0x7b3c71a75ea,0x7b3c718fade,0x7b3c718e3c0,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,141447,0x1d5f7325c3be,42,Writable.write node:internal/streams/writable:502:36,0xcb902b792c0,~
code-source-info,0x1d5f7325c3be,96,15402,15585,C0O15428C11O15490C14O15509C17O15533C32O15540C41O15583,,
code-creation,JS,10,141583,0x1d5f7325c5de,411,_write node:internal/streams/writable:451:16,0xcb902b78800,~
code-source-info,0x1d5f7325c5de
code-creation,JS,10,141704,0x1d5f7325ca3e,472,writeOrBuffer node:internal/streams/writable:546:23,0xcb902b78850,~
code-source-info,0x1d5f7325ca3e
code-creation,JS,10,141748,0x1d5f7325ce06,26,Socket._write node:net:965:35,0x8b517ffb448,~
code-source-info,0x1d5f7325ce06,80,25222,25295,C0O25252C19O25252C25O25294,,
code-creation,JS,10,141834,0x1d5f7325d09e,217,Socket._writeGeneric node:net:923:42,0x8b517ffb300,~
code-source-info,0x1d5f7325d09e,80,24181,25085,C0O24181C21O24383C37O24401C41O24419C45O24431C49O24453C53O24474C66O24474C72O24700C83O24700C89O24728C90O24735C91O24742C92O24760C96O24770C98O24792C102O24811C108O24826C115O24833C118O24829C124O24826C128O24859C129O24872C130O24885C135O24885C139O24907C141O24914C145O24930C161O24936C169O24978C188O24984C194O25034C200O25045C204O25050C207O25077C211O25071C216O25084,,
code-creation,JS,10,141885,0x1d5f7325d356,46,_unrefTimer node:net:507:52,0x8b517ffa4c0,~
code-source-info,0x1d5f7325d356,80,14079,14189,C0O14099C5O14107C9O14138C11O14144C13O14143C18O14161C20O14163C22O14162C26O14173C31O14173C35O14123C40O14086C45O14188,,
code-creation,JS,10,141923,0x1d5f7325d476,55,writeGeneric node:internal/stream_base_commons:148:22,0x3f3f8b68d2a0,~
code-source-info,0x1d5f7325d476,101,3651,3835,C0O3694C5O3715C7O3714C11O3694C17O3744C29O3744C35O3784C47O3784C52O3822C54O3833,,
code-creation,JS,10,141947,0x1d5f7325deae,47,createWriteWrap node:internal/stream_base_commons:110:25,0x3f3f8b68d200,~
code-source-info,0x1d5f7325deae,101,2773,2987,C0O2808C5O2808C11O2828C13O2839C17O2851C19O2866C23O2887C24O2897C28O2908C29O2918C33O2925C34O2936C38O2946C40O2959C44O2974C46O2985,,
code-creation,JS,10,142026,0x1d5f7325e2c6,215,handleWriteReq node:internal/stream_base_commons:46:24,0x3f3f8b68d160,~
code-source-info,0x1d5f7325e2c6,101,1224,2056,C0O1258C5O1277C80O1347C85O1347C92O1377C99O1397C101O1396C106O1426C108O1437C112O1451C114O1462C115O1527C120O1527C126O1556C127O1612C132O1612C138O1639C139O1678C144O1678C150O1706C151O1803C156O1803C162O1830C163O1871C168O1878C173O1878C180O1925C185O1925C192O1957C199O1977C201O1976C206O2006C208O2017C212O2033C214O2044,,
code-creation,JS,10,142095,0x1d5f7325e50e,94,afterWriteDispatched node:internal/stream_base_commons:156:30,0x3f3f8b68d2f0,~
code-source-info,0x1d5f7325e50e,101,3866,4144,C0O3885C2O3897C7O3913C9O3912C12O3895C16O3931C18O3945C23O3961C25O3960C30O3941C34O3985C35O3993C40O4004C42O4018C48O4051C58O4014C64O4011C68O4059C69O4072C75O4092C83O4127C88O4127C93O4143,,
code-creation,JS,10,142218,0x1d5f7325e7ce,766,onwrite node:internal/streams/writable:613:17,0xcb902b78940,~
code-source-info,0x1d5f7325e7ce
code-creation,JS,10,142264,0x1d5f7325ed66,61,set node:internal/streams/writable:260:8,0xcb902b78f30,~
code-source-info,0x1d5f7325ed66,96,8339,8500,C0O8355C2O8360C7O8375C11O8390C15O8411C17O8416C26O8427C31O8424C37O8460C39O8465C48O8477C50O8476C55O8473C60O8499,,
code-creation,JS,10,142397,0x1d5f7325f1a6,602,doSearch /home/user/rustdoc-js-profile/src/tester.js:227:33,0x7b3c718f6f0,~
code-source-info,0x1d5f7325f1a
code-creation,JS,10,142492,0x1d5f7325f9c6,444,parseQuery /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:31382,0x7b3c71a2698,~
code-source-info,0x1d5f7325f9c6,121,31381,34275,C0O31381C27O33671C32O33671C37O33677C51O33678C59O33721C64O33739C74O33814C81O33836C89O33866C94O33920C116O33906C146O33906C149O33927C153O33927C157O33896C227O33981C249O33967C279O33967C282O33991C286O33991C290O33957C373O34039C378O34065C380O34076C384O34081C386O34093C387O34104C393O34151C400O34161C403O34138C407O34187C412O34193C417O34206C422O34215C426O34199C429O34180C433O34251C437O34238C441O34262C443O34274,,
code-creation,JS,10,142636,0x1d5f732601ce,32,newParsedQuery /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:31980,0x1d5f7325f740,~
code-source-info,0x1d5f732601ce,121,31979,32212,C0O31991C7O31998C11O32195C20O32191C31O32211,,
code-creation,JS,10,142760,0x1d5f73260ad6,598,parseInput /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:32232,0x1d5f7325f790,~
code-source-info,0x1d5f73260ad
code-creation,JS,10,142794,0x1d5f73260f46,21,isEndCharacter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2221,0x7b3c71a13e8,~
code-source-info,0x1d5f73260f46,121,2220,2255,C0O2224C3O2239C8O2239C16O2249C20O2254,,
code-creation,JS,10,142850,0x1d5f7326120e,221,getFilteredNextElem /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2951,0x7b3c71a15c8,~
code-source-info,0x1d5f7326120e,121,2950,3785,C0O3013C5O3032C10O3054C14O3041C20O3058C28O3067C34O3093C38O3093C39O3135C54O3135C59O3200C64O3222C68O3209C74O3226C82O3235C88O3276C94O3295C102O3368C109O3378C118O3295C119O3398C125O3404C130O3410C134O3410C135O3466C141O3481C145O3481C146O3550C151O3550C156O3556C159O3556C164O3644C168O3628C172O3663C179O3678C183O3682C190O3704C194O3708C195O3727C199O3734C214O3734C220O3784,,
code-creation,JS,10,143058,0x1d5f73261cce,1598,getNextElem /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:6055,0x7b3c71a1668,~
code-source-info,0x1d5f73261cce,121,6054,10140,C0O6108C3O6111C7O6111C11O6161C16O6169C18O6173C22O6181C28O6201C34O6223C38O6210C43O6181C52O6228C57O6247C60O6260C63O6282C66O6305C72O6327C76O6314C83O6331C88O6339C91O6351C94O6361C97O6382C104O6397C108O6423C124O6423C131O6407C136O6503C141O6544C146O6556C147O6578C151O6584C152O6607C156O6630C177O6623C208O6623C211O6647C217O6667C233O6716C254O6732C260O6667C261O6613C333O6739C335O6746C342O6756C344O6781C352O6787C361O6818C368O6831C373O6818C380O6841C382O6848C387O6866C395O6872C401O6886C406O6890C414O6894C419O6903C420O6911C427O6925C431O6943C438O6956C443O6943C450O6966C456O6998C461O7014C473O7054C483O7067C489O7014C490O7098C497O7120C501O7124C505O7141C512O7166C516O7176C526O7202C534O7208C540O7220C544O7181C551O7176C558O7253C564O7275C568O7262C575O7279C580O7302C586O7333C594O7343C599O7359C609O7423C619O7359C620O7454C621O7476C625O7482C632O7497C636O7519C642O7541C646O7528C650O7559C652O7553C657O7573C663O7589C667O7576C672O7597C679O7612C683O7630C689O7652C693O7639C697O7546C701O7672C704O7690C710O7700C716O7718C722O7734C726O7737C731O7700C741O7740C746O7759C760O7764C766O7764C773O7759C778O7816C785O7831C789O7849C795O7871C799O7858C803O7889C805O7883C810O7903C816O7919C820O7906C825O7927C832O7942C836O7960C842O7982C846O7969C850O7876C854O7987C858O7991C864O8022C870O8038C874O8025C879O8046C895O8046C900O8113C914O8118C922O8152C926O8118C933O8113C940O8200C948O8209C955O8216C959O8224C961O8241C967O8250C980O8250C985O8312C989O8315C995O8323C999O8327C1004O8375C1010O8391C1014O8378C1019O8411C1025O8433C1029O8420C1036O8437C1041O8445C1043O8453C1048O8460C1052O8460C1053O8499C1060O8514C1064O8518C1081O8518C1088O8585C1094O8601C1098O8588C1103O8621C1109O8643C1113O8630C1120O8647C1125O8655C1127O8663C1132O8670C1136O8670C1137O8724C1143O8737C1147O8737C1148O8776C1155O8791C1159O8824C1164O8835C1165O8857C1169O8863C1186O8863C1191O8910C1195O8910C1199O8938C1203O8941C1209O8969C1216O8984C1220O8988C1224O8988C1228O9016C1244O9016C1249O9095C1253O9101C1256O9085C1269O9117C1273O9116C1279O9162C1292O9167C1306O9206C1314O9167C1321O9162C1326O9257C1328O9279C1332O9291C1336O9308C1340O9308C1344O9336C1346O9344C1351O9360C1358O9366C1363O9372C1364O9378C1365O9394C1371O9416C1375O9403C1382O9420C1387O9443C1393O9456C1397O9456C1398O9505C1402O9523C1406O9523C1407O9607C1413O9617C1419O9617C1427O9633C1433O9634C1438O9641C1440O9648C1445O9656C1449O9656C1450O9729C1460O9729C1467O9744C1471O9744C1472O9812C1482O9812C1489O9828C1493O9828C1494O9901C1504O9901C1511O9916C1515O9916C1516O9980C1524O10005C1530O10010C1536O10003C1542O10031C1552O10085C1558O10095C1564O10095C1584O10036C1591O10031C1597O10139,,
code-creation,JS,10,143122,0x1d5f732626ee,58,skipWhitespace /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2449,0x7b3c71a14d8,~
code-source-info,0x1d5f732626ee,121,2448,2599,C0O2480C5O2496C10O2506C14O2483C19O2534C24O2556C28O2543C32O2561C34O2565C39O2573C41O2579C48O2594C52O2462C57O2598,,
code-creation,JS,10,143202,0x1d5f73262b4e,441,getIdentEndPosition /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:13496,0x7b3c71a17f8,~
code-source-info,0x1d5f73262b4e
code-creation,JS,10,143239,0x1d5f73262efe,61,consumeIdent /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15199,0x7b3c71a18e8,~
code-source-info,0x1d5f73262efe,121,15198,15371,C0O15212C5O15246C9O15233C13O15274C18O15284C25O15290C28O15284C34O15303C36O15313C42O15335C46O15339C53O15328C57O15346C58O15357C59O15358C60O15370,,
code-creation,JS,10,143369,0x1d5f7326342e,13,isPathSeparator /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15396,0x7b3c71a1938,~
code-source-info,0x1d5f7326342e,121,15395,15423,C0O15399C2O15407C9O15416C12O15422,,
code-creation,RegExp,3,143445,0x7ee79be64e00,1436,\\p{ID_Start}\\p{ID_Continue}*|_\\p{ID_Continue}+
code-creation,JS,10,143898,0x1d5f73264096,918,createQueryElement /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:10425,0x7b3c71a1708,~
code-source-info,0x1d5f
code-creation,JS,10,144012,0x1d5f732647fe,10, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:11468,0x1d5f73263a80,~
code-source-info,0x1d5f732647fe,121,11467,11485,C0O11472C5O11472C9O11485,,
code-creation,JS,10,144076,0x1d5f73264c36,13,isSeparatorCharacter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2285,0x7b3c71a1438,~
code-source-info,0x1d5f73264c36,121,2284,2312,C0O2288C2O2296C9O2305C12O2311,,
code-creation,JS,10,144099,0x1d5f73264d36,36,isReturnArrow /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2335,0x7b3c71a1488,~
code-source-info,0x1d5f73264d36,121,2334,2425,C0O2367C5O2377C10O2395C15O2411C19O2414C23O2377C32O2417C35O2424,,
code-creation,JS,10,144234,0x1d5f7326544e,846,getItemsBefore /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:3809,0x7b3c71a1618,~
code-source-info,0x1d5f7326544e
tick,0x7ee81c87ee94,144320,0,0x0,0,0x7ee81c585e60,0x7ee81bdd82f5,0x1d5f7326416c,0x1d5f732622fe,0x1d5f73261244,0x1d5f7326565f,0x1d5f73260d0f,0x1d5f7325fa1f,0x1d5f7325f1cf,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,RegExp,3,144335,0x7ee79be653c0,964,::\\s*::
code-creation,RegExp,3,144361,0x7ee79be657c0,1496,(?:::\\s*)|(?:\\s+(?:::\\s*)?)
code-creation,JS,10,144448,0x1d5f73265d7e,447,convertTypeFilterOnElem /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:31575,0x1d5f7325f6f0,~
code-source-info,0x1d5f73265d7e,121,31574,31956,C0O31589C6O31628C11O31639C13O31652C18O31664C21O31686C24O31702C28O31701C34O31736C38O31752C40O31751C44O31791C66O31777C96O31777C99O31801C103O31801C107O31767C174O31862C179O31871C184O31871C206O31842C236O31842C239O31905C260O31891C291O31891C294O31918C298O31918C302O31881C378O31832C446O31955,,
code-creation,JS,10,145057,0x1d5f73266d46,857,execQuery /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:34291,0x7b3c71a2738,~
code-source-info,0x1d5f73266d
code-creation,JS,10,145391,0x1d5f73267956,1640,innerRunQuery /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59713,0x1d5f73266a00,~
code-source-info,0x1d5f
tick,0x7ee819b7cc30,145443,0,0x0,3,0x7ee81c5678d0,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,145467,0x1d5f73268376,13, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59758,0x1d5f732675a8,~
code-source-info,0x1d5f73268376,121,59757,59793,C0O59778C5O59787C9O59772C12O59793,,
code-creation,JS,10,145487,0x1d5f73268466,13, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59826,0x1d5f732675f8,~
code-source-info,0x1d5f73268466,121,59825,59861,C0O59846C5O59855C9O59840C12O59861,,
code-creation,JS,10,145646,0x1d5f732687de,1411,convertNameToId /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59964,0x1d5f73267648,~
code-source-info,0x1d5f732687de,121,59963,62097,C0O60007C6O60016C12O60016C17O60030C23O60038C29O60052C35O60052C44O60071C52O60090C58O60104C64O60104C71O60120C77O60133C83O60146C89O60160C95O60160C102O60176C106O60140C112O60185C118O60201C124O60226C126O60245C130O60260C134O60277C137O60318C143O60318C170O60309C201O60309C221O60290C263O60295C303O60296C309O60299C388O60344C393O60349C407O60383C417O60353C430O60423C438O60442C445O60400C452O60349C460O60461C462O60468C469O60487C471O60485C478O60505C482O60519C484O60531C486O60538C493O60561C498O60568C500O60577C503O60586C506O60601C511O60280C587O60617C591O60634C599O60656C603O60667C605O60674C609O60690C621O60713C629O60723C634O60732C642O60742C647O60754C653O60763C660O60769C665O60780C671O60789C678O60793C683O60805C693O60818C695O60815C700O60830C706O60848C712O60857C718O60848C725O60878C727O60886C731O60901C737O60910C743O60901C748O60885C754O60935C756O60945C760O60960C764O60964C767O60943C769O60942C773O60968C779O60983C785O60992C791O61016C797O60983C803O61028C811O61038C816O61050C822O61069C830O61075C835O61102C840O61107C846O61118C852O61137C856O61143C861O61107C867O61176C871O61193C874O61233C880O61219C886O61233C892O61233C919O61206C950O61206C953O61252C959O61275C971O61252C977O61312C979O61319C986O61336C991O61355C993O61362C1000O61385C1005O61392C1007O61401C1010O61416C1015O61196C1087O61432C1089O61444C1094O61451C1100O61490C1104O61484C1108O61495C1116O61526C1120O61538C1124O61554C1126O61553C1130O61573C1136O61582C1143O61588C1148O61597C1158O61610C1160O61607C1165O61622C1181O61672C1191O61639C1195O61741C1222O61727C1253O61727C1256O61751C1262O61751C1266O61717C1338O61792C1343O61796C1348O61802C1354O61812C1360O61821C1366O61821C1372O61802C1379O61831C1391O61832C1400O61788C1405O61787C1410O62096,,
tick,0x7ee819b1d9bd,146482,0,0x0,4,0x7ee81c570e40,0x7ee81bdbfd25,0x7ee79be574a1,0x1d5f73267aeb,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819b1d9bd,147578,0,0x0,4,0x7ee81c570e40,0x7ee81bdbfd25,0x7ee79be574a1,0x1d5f73267aeb,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,13,148150,0x7ee79be65dc0,7916,decode /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15715,0x7b3c71a1fb8,*
code-source-info,0x7ee79be65dcx7b3c71a1f68
tick,0x7ee819b7c2c5,148583,0,0x0,4,0x7ee81c570e40,0x7ee81bdbfd25,0x7ee79be574a1,0x1d5f73267aeb,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819b1d9bd,149720,0,0x0,4,0x7ee81c570e40,0x7ee81bdbfd25,0x7ee79be574a1,0x1d5f73267aeb,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,13,150295,0x7ee79be67d80,8428,decodeList /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15548,0x7b3c71a1f68,*
code-source-info,0x7ee79be67dx7b3c71a1fb8
tick,0x7ee819b1d9bd,150842,0,0x0,4,0x7ee81c570e40,0x7ee81bdbfd25,0x7ee79be574a1,0x1d5f73267aeb,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
tick,0x7ee819b1d9bd,151915,0,0x0,4,0x7ee81c570e40,0x7ee81bdbfd25,0x7ee79be574a1,0x1d5f73267aeb,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,13,152888,0x7ee79be69f40,3420,buildFunctionTypeFingerprint /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:24719,0x7b3c71a25f8,*
code-source-info,0x7ee79be69fx7b3c71affa0S0x7b3c71aff50
tick,0x7ee819b2620b,153085,0,0x0,0,0x7ee81c570e40,0x7ee81bdbfd25,0x7ee79be574a1,0x1d5f73267aeb,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,153274,0x1d5f7326d84e,240,handleArgs /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:58691,0x1d5f732666e0,~
code-source-info,0x1d5f7326d84e,121,58690,59293,C0O58690C9O58708C22O58743C31O58748C39O58771C45O58777C46O58783C47O58798C57O58826C67O58841C72O58798C78O58859C80O58878C81O58884C82O58896C91O58902C93O58900C98O58931C102O58922C107O58941C108O58947C109O58948C117O58975C122O58980C132O58999C140O59009C145O59014C159O58952C166O59167C167O59173C168O59191C172O59196C177O59208C188O59196C194O59190C198O59229C206O59256C215O59275C219O59282C233O59229C239O59292,,
code-creation,JS,10,153353,0x1d5f7326db66,533,compareTypeFingerprints /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59324,0x1d5f732669b0,~
code-source-info,0x1d5f7326db66,121,59323,59691,C0O59361C3O59366C10O59396C13O59389C17O59410C20O59415C27O59446C30O59449C33O59438C37O59463C40O59468C47O59499C50O59502C53O59491C57O59525C77O59512C116O59516C155O59520C255O59561C264O59565C276O59573C288O59581C295O59561C312O59548C351O59552C390O59556C490O59587C492O59595C499O59608C506O59621C511O59629C512O59640C513O59641C516O59653C523O59684C526O59687C529O59676C532O59690,,
code-creation,JS,11,153458,0x7ee79be6ad40,3844,compareTypeFingerprints /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59324,0x1d5f732669b0,^
code-source-info,0x7ee79be6ad40,121,59323,59691,,,
code-creation,JS,11,153478,0x7ee79be6bc80,556,contains /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:18342,0x7b3c71a21e8,^
code-source-info,0x7ee79be6bc80,121,18341,18489,,,
code-creation,JS,11,153489,0x7ee79be6bec0,116,get node:net:2367:6,0x8b517ffbcb0,^
code-source-info,0x7ee79be6bec0,80,66061,66089,,,
code-creation,JS,10,153853,0x1d5f7326ec1e,3159,unifyFunctionTypes /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:43798,0x1d5f73266410,~
code-source-info,0x1d5f7326ec1e
code-creation,JS,10,153996,0x1d5f7326febe,582,unifyFunctionTypeIsMatchCandidate /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:51519,0x1d5f73266870,~
code-source-info,0x1d5f7326febe
code-creation,JS,10,154053,0x1d5f7327035e,116,typePassesFilter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:56164,0x1d5f732665f0,~
code-source-info,0x1d5f7327035e,121,56163,56498,C0O56177C4O56188C6O56186C13O56210C18O56218C19O56230C20O56241C29O56250C33O56257C42O56273C76O56298C78O56309C81O56333C82O56342C84O56353C91O56370C94O56384C95O56395C97O56406C104O56426C107O56446C108O56458C110O56469C113O56484C114O56485C115O56497,,
code-creation,JS,10,154086,0x1d5f732704fe,59, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59033,0x1d5f7326d730,~
code-source-info,0x1d5f732704fe,121,59032,59161,C0O59040C8O59070C13O59075C23O59094C31O59107C36O59112C45O59131C53O59047C58O59160,,
tick,0x7ee81c494264,154140,0,0x0,2,0x7ee81c5678d0,0x1d5f7326f092,0x1d5f73270533,0x1d5f7326ee50,0x1d5f7326d8ed,0x1d5f73267fae,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,154178,0x1d5f73270686,227,unifyFunctionTypeIsUnboxCandidate /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:53926,0x1d5f73266500,~
code-source-info,0x1d5f73270686,121,53925,54432,C0O53977C4O53995C6O53993C11O54011C12O54023C13O54034C19O54036C24O54040C28O54057C29O54069C30O54070C33O54112C37O54104C39O54115C42O54102C58O54077C63O54162C64O54178C70O54197C75O54206C81O54212C86O54223C91O54232C97O54236C102O54277C106O54277C113O54289C117O54295C122O54307C127O54316C132O54316C137O54295C143O54325C148O54326C153O54326C201O54335C219O54342C224O54418C225O54419C226O54431,,
code-creation,JS,10,154232,0x1d5f73270916,154,checkIfInList /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:54455,0x1d5f73266550,~
code-source-info,0x1d5f73270916,121,54454,54607,C0O54517C17O54508C45O54508C48O54523C68O54526C75O54581C82O54498C152O54594C153O54606,,
code-creation,JS,10,154280,0x1d5f73270bbe,248,checkType /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:54624,0x1d5f732668c0,~
code-source-info,0x1d5f73270bbe,121,54623,55137,C0O54668C4O54686C6O54684C11O54702C12O54714C13O54722C19O54724C24O54733C30O54735C35O54744C40O54760C46O54766C51O54776C56O54785C62O54791C67O54802C72O54811C78O54817C83O54827C88O54836C94O54840C99O54851C104O54860C110O54864C115O54875C123O54885C127O54877C132O54916C140O54926C144O54918C149O54948C157O54958C161O54950C166O54994C171O55004C175O54996C183O55030C188O55045C193O55008C198O55048C199O55054C211O55081C224O55087C228O55105C242O55061C247O55135,,
code-creation,JS,10,154366,0x1d5f73270e1e,2, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:55112,0x1d5f73270a50,~
code-source-info,0x1d5f73270e1e,121,55111,55119,C0O55115C1O55119,,
code-creation,JS,10,154497,0x1d5f732713c6,327,checkTypeMgensForConflict /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:55171,0x1d5f73266910,~
code-source-info,0x1d5f732713c6,121,55170,55317,C0O55178C4O55189C5O55200C6O55215C10O55215C16O55247C33O55243C61O55243C78O55235C117O55240C226O55265C231O55265C238O55275C245O55296C250O55296C255O55225C325O55305C326O55316,,
code-creation,JS,10,154654,0x1d5f73271a1e,110,addIntoResults /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:58358,0x1d5f73266690,~
code-source-info,0x1d5f73271a1e,121,58357,58671,C0O58414C2O58421C9O58445C14O58463C19O58463C26O58497C31O58497C37O58519C43O58540C50O58544C55O58552C56O58558C57O58568C62O58572C69O58583C75O58592C82O58623C92O58642C98O58657C102O58568C109O58670,,
code-creation,JS,11,154984,0x7ee79be6bf80,11184,innerRunQuery /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59713,0x1d5f73266a00,^
code-source-info,0x7ee79be6bf80,121,59712,64456,,,
code-creation,JS,11,155014,0x7ee79be6eb40,1600,handleArgs /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:58691,0x1d5f732666e0,^
code-source-info,0x7ee79be6eb40,121,58690,59293,,,
tick,0x7ee81bd4add4,155217,0,0x0,0,0x1d5f7326ee8b,0x1d5f7326f1be,0x1d5f73270533,0x1d5f7326ee50,0x7ee79be6efbb,0x7ee79be6ea7f,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,11,155423,0x7ee79be6f1c0,19116,unifyFunctionTypes /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:43798,0x1d5f73266410,^
code-source-info,0x7ee79be6f1c0,121,43797,48674,,,
code-creation,JS,11,155444,0x7ee79be73c80,924,typePassesFilter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:56164,0x1d5f732665f0,^
code-source-info,0x7ee79be73c80,121,56163,56498,,,
code-creation,JS,11,155468,0x7ee79be74040,2584,checkTypeMgensForConflict /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:55171,0x1d5f73266910,^
code-source-info,0x7ee79be74040,121,55170,55317,,,
code-creation,JS,11,155476,0x7ee79be74a80,48, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:55112,0x1d5f73270a50,^
code-source-info,0x7ee79be74a80,121,55111,55119,,,
code-creation,JS,11,155485,0x7ee79be74ac0,376, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59033,0x1d5f7326d730,^
code-source-info,0x7ee79be74ac0,121,59032,59161,,,
code-creation,JS,11,155896,0x7ee79be74c80,4240,unifyFunctionTypeIsMatchCandidate /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:51519,0x1d5f73266870,^
code-source-info,0x7ee79be74c80,121,51518,52786,,,
code-creation,JS,11,155924,0x7ee79be75d40,1248,checkIfInList /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:54455,0x1d5f73266550,^
code-source-info,0x7ee79be75d40,121,54454,54607,,,
code-creation,JS,11,155941,0x7ee79be76240,1584,unifyFunctionTypeIsUnboxCandidate /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:53926,0x1d5f73266500,^
code-source-info,0x7ee79be76240,121,53925,54432,,,
code-creation,JS,11,155952,0x7ee79be76880,732,addIntoResults /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:58358,0x1d5f73266690,^
code-source-info,0x7ee79be76880,121,58357,58671,,,
new,MemoryChunk,0x28df9c140000,262144
new,MemoryChunk,0x70f93c00000,262144
new,MemoryChunk,0x19a0db00000,262144
new,MemoryChunk,0x4173c980000,262144
new,MemoryChunk,0xaa5e1340000,262144
new,MemoryChunk,0x1b180400000,262144
new,MemoryChunk,0x164bec600000,262144
tick,0x7ee81bd3f71d,157969,0,0x0,0,0x7ee79be6b4fb,0x7ee79be6ed78,0x7ee79be6ea7f,0x1d5f73266e33,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,158292,0x1d5f732751be,301,sortResults /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42339,0x1d5f73266820,~
code-source-info,0x1d5f732751be,121,42338,43769,C0O42338C29O42395C34O42407C38O42395C40O42443C45O42455C50O42465C55O42465C59O42443C61O42497C64O42528C69O42528C91O42510C119O42510C122O42538C127O42555C132O42574C136O42566C139O42549C143O42578C148O42595C153O42614C157O42606C161O42618C165O42589C169O42635C174O42635C179O42500C243O42660C253O42660C258O43723C265O43730C278O43768,,
code-creation,JS,10,158417,0x1d5f7327558e,440,transformResults /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:36398,0x1d5f73266780,~
code-source-info,0x1d5f7327558e
code-creation,JS,10,158621,0x1d5f73275c26,619, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42666,0x1d5f73275060,~
code-source-info,0x1d5f73275c
code-creation,JS,11,158754,0x7ee79be76b80,3924, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42666,0x1d5f73275060,^
code-source-info,0x7ee79be76b80,121,42665,43721,,,
code-creation,JS,11,158803,0x7ee79be77b00,1676,checkType /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:54624,0x1d5f732668c0,^
code-source-info,0x7ee79be77b00,121,54623,55137,,,
tick,0x7ee819b7c2c5,158816,0,0x0,0,0x7ee81c571240,0x1d5f73275e90,0x7ee81be08491,0x1d5f732752bb,0x1d5f73266ea1,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,11,158860,0x7ee79be781c0,2296,sortResults /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42339,0x1d5f73266820,^
code-source-info,0x7ee79be781c0,121,42338,43769,,,
code-creation,JS,10,159108,0x1d5f7327698e,762,buildHrefAndPath /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:34634,0x1d5f73266730,~
code-source-info,0x1d5f7327698e
code-creation,JS,10,159204,0x1d5f73276fb6,67,pathSplitter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:36240,0x1d5f732663c0,~
code-source-info,0x1d5f73276fb6,121,36239,36374,C0O36256C3O36270C17O36270C23O36264C27O36310C35O36310C42O36341C49O36353C53O36359C57O36341C63O36362C64O36363C66O36373,,
code-creation,JS,10,159429,0x1d5f73277bbe,505,formatDisplayTypeSignature /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37101,0x1d5f732667d0,~
code-source-info,0x1d5f73277bbe
code-creation,JS,10,159483,0x1d5f73278146,72, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37309,0x1d5f73277628,~
code-source-info,0x1d5f73278146,121,37308,37483,C0O37323C8O37355C13O37360C23O37379C31O37392C36O37397C41O37410C51O37332C59O37331C65O37466C71O37482,,
code-creation,JS,10,159517,0x1d5f732782a6,10, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37424,0x1d5f73278080,~
code-source-info,0x1d5f732782a6,121,37423,37461,C0O37434C2O37439C8O37449C9O37460,,
code-creation,JS,10,159576,0x1d5f732783be,130,remapQuery /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37965,0x1d5f732776c8,~
code-source-info,0x1d5f732783be,121,37964,38205,C0O37989C6O37991C11O37995C19O38024C23O38013C27O38038C31O38027C35O38056C40O38065C46O38071C51O38085C56O38094C63O38102C66O38094C71O38127C76O38136C82O38140C87O38158C92O38167C97O38167C101O38167C103O38177C108O38177C113O38183C120O38192C123O38184C129O38204,,
code-creation,JS,10,159629,0x1d5f7327859e,129,onEachBtwn /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:177,0x7b3c71a1348,~
code-source-info,0x1d5f7327859e,121,176,287,C0O208C2O232C19O223C47O223C50O237C54O250C58O274C63O213C128O286,,
code-creation,JS,10,159650,0x1d5f73278716,16,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42056,0x1d5f73277858,~
code-source-info,0x1d5f73278716,121,42055,42083,C0O42063C7O42078C10O42063C15O42083,,
code-creation,JS,10,159775,0x1d5f73278d96,1159,writeFn /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:40182,0x1d5f73277808,~
code-source-info,0x1d5f73278d
code-creation,JS,10,159852,0x1d5f732795b6,104,pushText /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:38301,0x1d5f73277718,~
code-source-info,0x1d5f732795b6,121,38300,38499,C0O38331C4O38337C10O38352C16O38340C21O38372C29O38372C36O38396C42O38402C47O38417C53O38437C61O38437C66O38453C74O38453C79O38476C83O38482C91O38494C98O38485C103O38498,,
tick,0x7ee819b1d9bd,159887,0,0x0,3,0x7ee81c5678d0,0x1d5f73279032,0x1d5f73278720,0x1d5f732785d8,0x1d5f73277d53,0x1d5f732756d0,0x1d5f732752c7,0x1d5f73266ea1,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,159907,0x1d5f73279726,16,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42203,0x1d5f73277930,~
code-source-info,0x1d5f73279726,121,42202,42230,C0O42210C7O42225C10O42210C15O42230,,
code-creation,JS,10,159931,0x1d5f7327980e,18,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:41849,0x1d5f732789f0,~
code-source-info,0x1d5f7327980e,121,41848,41876,C0O41855C12O41855C17O41876,,
code-creation,JS,11,160309,0x7ee79be78b00,8600,writeFn /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:40182,0x1d5f73277808,^
code-source-info,0x7ee79be78b00,121,40181,42020,,,
code-creation,JS,11,160329,0x7ee79be7acc0,756,pushText /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:38301,0x1d5f73277718,^
code-source-info,0x7ee79be7acc0,121,38300,38499,,,
code-creation,JS,11,160348,0x7ee79be7b000,1072,onEachBtwn /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:177,0x7b3c71a1348,^
code-source-info,0x7ee79be7b000,121,176,287,,,
code-creation,JS,11,160611,0x7ee79be7b440,3240,transformResults /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:36398,0x1d5f73266780,^
code-source-info,0x7ee79be7b440,121,36397,37067,,,
code-creation,JS,11,160633,0x7ee79be7c100,908,remapQuery /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37965,0x1d5f732776c8,^
code-source-info,0x7ee79be7c100,121,37964,38205,,,
code-creation,JS,11,160643,0x7ee79be7c4c0,424,pathSplitter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:36240,0x1d5f732663c0,^
code-source-info,0x7ee79be7c4c0,121,36239,36374,,,
code-creation,JS,11,160651,0x7ee79be7c680,168, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37424,0x1d5f73278080,^
code-source-info,0x7ee79be7c680,121,37423,37461,,,
code-creation,JS,11,160663,0x7ee79be7c740,572, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37309,0x1d5f73277628,^
code-source-info,0x7ee79be7c740,121,37308,37483,,,
code-creation,JS,11,160672,0x7ee79be7c9c0,200,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42056,0x1d5f73277858,^
code-source-info,0x7ee79be7c9c0,121,42055,42083,,,
code-creation,JS,11,160679,0x7ee79be7cac0,164,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:41849,0x1d5f732789f0,^
code-source-info,0x7ee79be7cac0,121,41848,41876,,,
code-creation,JS,11,160691,0x7ee79be7cb80,200,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42203,0x1d5f73277930,^
code-source-info,0x7ee79be7cb80,121,42202,42230,,,
code-creation,JS,11,160924,0x7ee79be7cc80,4776,buildHrefAndPath /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:34634,0x1d5f73266730,^
code-source-info,0x7ee79be7cc80,121,34633,36217,,,
tick,0x7ee819b1d9bd,160959,0,0x0,0,0x7ee81c571240,0x1d5f73276c87,0x7ee79be7b71f,0x1d5f732752c7,0x1d5f73266ea1,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,11,160984,0x7ee79be7df40,4200,formatDisplayTypeSignature /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:37101,0x1d5f732667d0,^
code-source-info,0x7ee79be7df40,121,37100,42319,,,
code-creation,JS,10,161750,0x1d5f7327bfa6,448,writeHof /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:38516,0x1d5f73277768,~
code-source-info,0x1d5f7327bfa6,121,38515,39218,C0O38556C5O38565C15O38574C20O38565C30O38621C35O38630C40O38630C45O38654C55O38654C60O38716C62O38742C79O38732C107O38732C110O38753C114O38768C125O38768C130O38815C132O38831C137O38831C142O38722C208O38854C218O38879C224O38885C239O38854C244O38943C251O38949C256O38953C266O38953C271O38999C273O39036C290O39026C318O39026C321O39047C325O39062C336O39062C341O39109C343O39125C348O39125C353O39016C419O39161C426O39167C431O39171C441O39171C447O39217,,
code-creation,JS,10,161938,0x1d5f7327c726,502,writeSpecialPrimitive /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:39248,0x1d5f732777b8,~
code-source-info,0x1d5f7327c
code-creation,JS,10,161990,0x1d5f7327cb3e,32,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:39915,0x1d5f7327c3e0,~
code-source-info,0x1d5f7327cb3e,121,39914,39978,C0O39944C7O39937C13O39956C25O39956C31O39977,,
code-creation,JS,10,162035,0x1d5f7327cc86,37, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:39980,0x1d5f7327c468,~
code-source-info,0x1d5f7327cc86,121,39979,40061,C0O39986C14O40017C18O40040C31O39986C36O40061,,
tick,0x7ee81c1d31d0,162154,0,0x0,3,0x7ee81c5678d0,0x7ee79be7b1a2,0x7ee79be7a8cf,0x1d5f7327cb57,0x7ee79be7b1a2,0x1d5f7327c8ef,0x7ee79be7a36a,0x7ee79be7ca73,0x7ee79be7b1a2,0x7ee79be7ed68,0x7ee79be7bd23,0x1d5f732752c7,0x1d5f73266ea1,0x1d5f7325f1dc,0x7b3c718e456,0x7b3c718cf80,0x8b517fe57fd,0x8b517fe297d,0x8b517fe1a36,0x8b517fd3096,0x7b3c718b02f,0x365dd3df62e7
code-creation,JS,10,162175,0x1d5f7327d076,558,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:41095,0x1d5f73278918,~
code-source-info,0x1d5f7327d
code-creation,JS,10,162234,0x1d5f7327d4a6,21, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42085,0x1d5f732778e0,~
code-source-info,0x1d5f7327d4a6,121,42084,42132,C0O42088C12O42127C15O42088C20O42132,,
code-creation,JS,10,162261,0x1d5f7327d59e,18,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:40590,0x1d5f73278840,~
code-source-info,0x1d5f7327d59e,121,40589,40618,C0O40597C9O40612C12O40597C17O40618,,
code-creation,JS,10,162309,0x1d5f7327d6a6,16,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:39601,0x1d5f7327c308,~
code-source-info,0x1d5f7327d6a6,121,39600,39630,C0O39608C10O39608C15O39630,,
code-creation,JS,10,162341,0x1d5f7327d7ce,23, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:41878,0x1d5f73278a78,~
code-source-info,0x1d5f7327d7ce,121,41877,41927,C0O41881C17O41881C22O41927,,
new,MemoryChunk,0x7ee79be80000,262144
code-creation,JS,11,162704,0x7ee79be83040,344, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:39980,0x1d5f7327c468,^
code-source-info,0x7ee79be83040,121,39979,40061,,,
code-creation,JS,11,162721,0x7ee79be831c0,316,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:39915,0x1d5f7327c3e0,^
code-source-info,0x7ee79be831c0,121,39914,39978,,,
code-creation,JS,11,162730,0x7ee79be83340,240, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:42085,0x1d5f732778e0,^
code-source-info,0x7ee79be83340,121,42084,42132,,,
code-creation,JS,11,162764,0x7ee79be83440,3616,writeSpecialPrimitive /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:39248,0x1d5f732777b8,^
code-source-info,0x7ee79be83440,121,39247,40166,,,
code-creation,JS,10,162956,0x1d5f7327e286,32,createQueryResults /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:34442,0x1d5f73266370,~
code-source-info,0x1d5f7327e286,121,34441,34610,C0O34503C7O34520C13O34547C19O34573C25O34596C31O34609,,
code-creation,JS,10,163114,0x1d5f7327e876,1288,handleAliases /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:56808,0x1d5f73266960,~
code-source-info,0x1d5f7327e
tick,0x7ee81c1ee309,163215,0,0x0,3,0x7ee81c5678d0,0x7ee81bd9320d,0x1d5f73267031,0x7ee81bd16d43
code-creation,JS,10,163220,0x1d5f7327f17e,414, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:65049,0x1d5f73266a50,~
code-source-info,0x1d5f7327f17e,121,65048,65286,C10O65048C18O65073C22O65087C27O65096C37O65096C43O65087C56O65073C82O65253C87O65253C109O65244C137O65244C156O65236C197O65238C308O65264C310O65281C313O65275C317O65226C391O65285,,
code-creation,JS,10,163255,0x1d5f7327f49e,64, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:65101,0x1d5f7327f028,~
code-source-info,0x1d5f7327f49e,121,65100,65223,C0O65109C3O65121C8O65142C13O65153C18O65142C24O65159C29O65176C34O65160C48O65194C53O65206C58O65206C63O65222,,
code-creation,JS,10,163367,0x1d5f7327f8de,203,loadDesc /home/user/rustdoc-js-profile/src/tester.js:165:33,0x7b3c718f360,~
code-source-info,0x1d5f7327f8de,119,6283,7152,C4O6283C36O6285C42O6296C82O6322C87O6336C93O6372C98O6396C109O6392C114O6390C118O7082C123O7098C135O7082C160O7082C162O7119C169O7130C180O7142,,
code-creation,JS,10,163412,0x1d5f7327fbc6,155, /home/user/rustdoc-js-profile/src/tester.js:167:49,0x1d5f7327f7c8,~
code-source-info,0x1d5f7327fbc6,119,6404,7040,C0O6404C19O6447C28O6465C32O6507C38O6507C40O6552C43O6558C58O6575C77O6584C87O6552C89O6626C96O6629C105O6666C117O6692C120O6702C137O6711C147O6629C154O7039,,
code-creation,JS,10,163496,0x28df9c179446,276,readFile node:fs:363:18,0x2563a95a4e30,~
code-source-info,0x28df9c179446,45,9320,10266,C0O9320C9O9350C18O9374C28O9374C33O9410C40O9431C45O9420C52O9482C60O9482C65O9575C75O9537C81O9588C85O9607C91O9607C95O9605C99O9663C105O9702C109O9692C113O9728C119O9744C124O9752C134O9752C140O9873C141O9880C142O9888C147O9913C152O9892C159O9936C160O9943C161O9967C168O9989C176O9967C182O10014C192O10021C196O10019C198O10060C205O10060C211O10083C213O10095C217O10108C221O10123C225O10146C232O10154C241O10159C244O10170C252O10170C269O10154C275O10265,,
code-creation,Eval,10,163682,0x28df9c1799be,5, node:internal/fs/read/context:1:1,0x28df9c179798,~
script-source,122,node:internal/fs/read/context,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  MathMin\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  constants: {\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n  }\x2C\n} = require('internal/fs/utils');\n\nconst { Buffer } = require('buffer');\n\nconst { FSReqCallback\x2C close\x2C read } = internalBinding('fs');\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n} = require('internal/errors');\n\nfunction readFileAfterRead(err\x2C bytesRead) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  context.pos += bytesRead;\n\n  if (context.pos === context.size || bytesRead === 0) {\n    context.close();\n  } else {\n    if (context.size === 0) {\n      // Unknown size\x2C just read until we don't get bytes.\n      const buffer = bytesRead === kReadFileUnknownBufferLength ?\n        context.buffer : context.buffer.slice(0\x2C bytesRead);\n      ArrayPrototypePush(context.buffers\x2C buffer);\n    }\n    context.read();\n  }\n}\n\nfunction readFileAfterClose(err) {\n  const context = this.context;\n  const callback = context.callback;\n  let buffer = null;\n\n  if (context.err || err)\n    return callback(aggregateTwoErrors(err\x2C context.err));\n\n  try {\n    if (context.size === 0)\n      buffer = Buffer.concat(context.buffers\x2C context.pos);\n    else if (context.pos < context.size)\n      buffer = context.buffer.slice(0\x2C context.pos);\n    else\n      buffer = context.buffer;\n\n    if (context.encoding)\n      buffer = buffer.toString(context.encoding);\n  } catch (err) {\n    return callback(err);\n  }\n\n  callback(null\x2C buffer);\n}\n\nclass ReadFileContext {\n  constructor(callback\x2C encoding) {\n    this.fd = undefined;\n    this.isUserFd = undefined;\n    this.size = 0;\n    this.callback = callback;\n    this.buffers = null;\n    this.buffer = null;\n    this.pos = 0;\n    this.encoding = encoding;\n    this.err = null;\n    this.signal = undefined;\n  }\n\n  read() {\n    let buffer;\n    let offset;\n    let length;\n\n    if (this.signal?.aborted) {\n      return this.close(\n        new AbortError(undefined\x2C { cause: this.signal?.reason }));\n    }\n    if (this.size === 0) {\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\n      offset = 0;\n      length = kReadFileUnknownBufferLength;\n      this.buffer = buffer;\n    } else {\n      buffer = this.buffer;\n      offset = this.pos;\n      length = MathMin(kReadFileBufferLength\x2C this.size - this.pos);\n    }\n\n    const req = new FSReqCallback();\n    req.oncomplete = readFileAfterRead;\n    req.context = this;\n\n    read(this.fd\x2C buffer\x2C offset\x2C length\x2C -1\x2C req);\n  }\n\n  close(err) {\n    if (this.isUserFd) {\n      process.nextTick(function tick(context) {\n        ReflectApply(readFileAfterClose\x2C { context }\x2C [null]);\n      }\x2C this);\n      return;\n    }\n\n    const req = new FSReqCallback();\n    req.oncomplete = readFileAfterClose;\n    req.context = this;\n    this.err = err;\n\n    close(this.fd\x2C req);\n  }\n}\n\nmodule.exports = ReadFileContext;\n
code-source-info,0x28df9c1799be,122,0,2902,C0O0C4O2902,,
code-creation,JS,10,163741,0x28df9c179e16,196, node:internal/fs/read/context:1:1,0x28df9c179938,~
code-source-info,0x28df9c179e16,122,0,2902,C0O0C54O25C60O47C66O58C72O183C75O183C80O111C85O117C91O144C97O233C100O233C105O222C111O292C114O292C119O261C125O276C131O283C137O364C140O364C145O326C151O340C188O2868C190O2883C195O2901,,
code-creation,JS,10,163845,0x28df9c17a5fe,54,ReadFileContext node:internal/fs/read/context:72:14,0x28df9c179a90,~
code-source-info,0x28df9c17a5fe,122,1566,1844,C0O1593C1O1601C5O1618C6O1632C10O1649C11O1659C15O1668C17O1682C21O1698C22O1711C26O1723C27O1735C31O1747C32O1756C36O1765C38O1779C42O1795C43O1804C47O1816C48O1828C53O1843,,
code-creation,JS,10,163900,0x28df9c17aefe,65,checkAborted node:fs:341:22,0x2563a95a4de0,~
code-source-info,0x28df9c17aefe,45,8818,8970,C0O8841C7O8851C16O8868C18O8881C23O8892C38O8918C51O8877C57O8868C61O8936C62O8948C63O8955C64O8968,,
code-creation,JS,10,164246,0x28df9c17b1f6,75,readFileAfterOpen node:fs:295:27,0x2563a95a4d40,~
code-source-info,0x28df9c17b1f6,45,7661,7915,C0O7696C5O7708C9O7731C14O7731C19O7750C20O7757C21O7765C23O7776C27O7797C32O7797C38O7820C40O7835C44O7858C46O7870C50O7883C55O7891C68O7891C74O7914,,
tick,0x7ee81c3ec555,164286,0,0x0,0,0x7ee81c198ca0,0x28df9c17b20d
code-creation,JS,10,164723,0x28df9c17b4c6,162,readFileAfterStat node:fs:311:27,0x2563a95a4d90,~
code-source-info,0x28df9c17b4c6,45,7943,8795,C0O7981C5O7993C9O8021C14O8021C19O8032C20O8272C25O8305C28O8287C40O8321C47O8285C54O8333C56O8344C58O8342C63O8364C70O8370C77O8422C82O8422C87O8433C91O8451C92O8460C97O8629C99O8645C105O8670C107O8687C110O8694C115O8694C120O8685C137O8760C145O8760C150O8771C151O8786C156O8786C161O8794,,
code-creation,JS,10,164789,0x28df9c17b8e6,33,allocUnsafeSlow node:buffer:411:50,0x305ee1eb2d10,~
code-source-info,0x28df9c17b8e6,25,11958,12050,C0O11969C12O12001C18O11969C23O12016C28O12023C32O12048,,
code-creation,JS,10,164838,0x28df9c17ba1e,177, node:internal/validators:175:40,0x307edb925da8,~
code-source-info,0x28df9c17ba1e,15,4717,5163,C19O4760C25O4795C41O4801C46O4795C47O4853C54O4879C66O4911C83O4958C86O4958C92O4985C110O5054C136O5086C151O5130C169O4991C174O4985C176O5162,,
code-creation,JS,10,164915,0x28df9c17bc86,215,read node:internal/fs/read/context:85:7,0x28df9c179ae0,~
code-source-info,0x28df9c17bc86,122,1852,2523,C0O1865C2O1881C4O1897C6O1919C13O1925C22O1956C29O1975C34O1986C39O2011C49O2017C62O1971C68O1956C73O2030C74O2050C80O2055C85O2070C90O2086C97O2102C100O2086C106O2139C108O2157C113O2202C115O2214C121O2257C126O2285C131O2296C138O2313C141O2341C146O2353C150O2346C154O2305C160O2382C165O2382C171O2407C173O2422C177O2447C179O2459C183O2472C188O2482C208O2472C214O2522,,
tick,0x7ee819b26eab,166598,0,0x0,1
new,MemoryChunk,0x27159ad80000,262144
new,MemoryChunk,0x2b95d6c0000,262144
new,MemoryChunk,0x3bfd79980000,262144
new,MemoryChunk,0x17cb84280000,262144
new,MemoryChunk,0x1715dd040000,262144
new,MemoryChunk,0x2d8e8a740000,262144
new,MemoryChunk,0x302ec4300000,262144
new,MemoryChunk,0x17c94ebc0000,262144
new,MemoryChunk,0x84e97f40000,262144
new,MemoryChunk,0x29f315c00000,262144
new,MemoryChunk,0x34118c2c0000,262144
new,MemoryChunk,0x2e6e9a580000,262144
new,MemoryChunk,0x9834c40000,262144
new,MemoryChunk,0xa76da7c0000,262144
new,MemoryChunk,0x461d5e00000,262144
new,MemoryChunk,0x161992180000,262144
new,MemoryChunk,0x1c56a2600000,262144
new,MemoryChunk,0xee7719c0000,262144
new,MemoryChunk,0x64cdc380000,262144
new,MemoryChunk,0x218be7e80000,262144
new,MemoryChunk,0xb387d240000,262144
new,MemoryChunk,0x2975af500000,262144
new,MemoryChunk,0xe42688c0000,262144
new,MemoryChunk,0x3adcf5800000,262144
new,MemoryChunk,0x355f54b00000,262144
new,MemoryChunk,0x2f9f3a000000,262144
new,MemoryChunk,0x390fb3900000,262144
new,MemoryChunk,0x258085480000,262144
new,MemoryChunk,0x138c7ba80000,262144
new,MemoryChunk,0xd30cea40000,262144
new,MemoryChunk,0xf829eb80000,262144
new,MemoryChunk,0x39abc2f00000,262144
tick,0x7ee81c14e3eb,167733,0,0x0,1
delete,MemoryChunk,0x164bec600000
delete,MemoryChunk,0x1b180400000
delete,MemoryChunk,0xaa5e1340000
code-creation,JS,10,168333,0x307edb909196,136,readFileAfterRead node:internal/fs/read/context:25:27,0x28df9c1799f0,~
code-source-info,0x307edb909196,122,419,930,C0O461C5O473C9O501C14O501C19O512C20O516C27O531C30O528C34O557C39O573C43O561C49O591C54O612C59O612C65O648C71O653C76O742C78O756C80O752C85O803C91O820C96O827C103O827C110O854C115O881C120O854C125O917C130O917C135O929,,
code-creation,JS,10,168409,0x307edb9093e6,73,close node:internal/fs/read/context:112:8,0x28df9c179b30,~
code-source-info,0x307edb9093e6,122,2532,2864,C0O2553C6O2571C9O2579C19O2579C25O2698C26O2705C27O2729C32O2729C38O2754C40O2769C44O2795C46O2807C50O2819C52O2828C56O2840C61O2851C66O2840C72O2863,,
code-creation,JS,10,168606,0x307edb909616,183,readFileAfterClose node:internal/fs/read/context:46:28,0x28df9c179a40,~
code-source-info,0x307edb909616,122,959,1527,C0O990C5O1026C10O1051C12O1072C20O1079C22O1088C24O1104C27O1136C32O1104C38O1095C42O1142C46O1168C52O1173C57O1186C62O1202C67O1217C72O1234C77O1202C86O1261C91O1275C95O1265C100O1304C105O1311C112O1328C117O1311C126O1366C131O1391C137O1423C142O1440C147O1423C156O1414C166O1473C169O1480C173O1494C174O1502C176O1502C182O1526,,
code-creation,JS,10,168655,0x307edb909846,86, /home/user/rustdoc-js-profile/src/tester.js:173:25,0x1d5f7327fac8,~
code-source-info,0x307edb909846,119,6744,6998,C0O6744C13O6789C17O6832C25O6832C31O6914C39O6924C47O6924C80O6914C85O6997,,
code-creation,JS,10,168713,0x307edb9099be,162,toString node:buffer:811:46,0x305ee1eb4800,~
code-source-info,0x307edb9099be,25,23951,24513,C0O23951C2O23992C8O23999C13O24024C20O24042C25O24024C31O24050C32O24075C37O24086C38O24096C43O24106C48O24124C50O24134C55O24146C57O24156C58O24168C65O24183C71O24212C76O24223C83O24245C90O24258C92O24266C97O24280C99O24290C100O24294C104O24338C109O24338C115O24360C116O24376C119O24376C124O24404C126O24431C133O24437C138O24431C139O24487C156O24487C161O24511,,
tick,0x7ee81a48d410,168813,0,0x0,3,0x7ee81c5678d0,0x307edb909a35,0x307edb909875,0x307edb9096c6
code-creation,JS,10,168833,0xcb902b7adae,499,getEncodingOps node:buffer:706:24,0x305ee1eb27c0,~
code-source-info,0xcb902b7adae
code-creation,JS,10,168878,0xcb902b7b1ae,12,slice node:buffer:621:12,0x305ee1eb2f68,~
code-source-info,0xcb902b7b1ae,25,17391,17437,C0O17416C5O17416C11O17437,,
code-creation,Eval,10,169019,0x2563a95ac78e,25, :1:1,0x2563a95ac6a8,~
script-source,123,<unknown>,searchState.loadedDescShard("embedded_hal"\x2C 0\x2C "A Hardware Abstraction Layer (HAL) for embedded systems\\nType for the <code>duty</code> methods\\nA single PWM channel / pin\\nAnalog-digital conversion traits\\nBlocking API\\nController Area Network\\nDigital I/O\\nDisables a PWM <code>channel</code>\\nEnables a PWM <code>channel</code>\\nImplementation of <code>core::fmt::Write</code> for the HAL\u2019s \u2026\\nReturns the current duty cycle\\nReturns the maximum duty cycle value\\nThe prelude is a collection of all the traits in this crate\\nSerial interface\\nSets a new duty cycle\\nSerial Peripheral Interface\\nTimers\\nTraits for interactions with a processors watchdog timer.\\nBlocking CAN API\\nDelays\\nBlocking I2C API\\nBlocking hardware random number generator\\nBlocking serial API\\nBlocking SPI API\\nA blocking CAN interface that is able to transmit and \u2026\\nAssociated error type.\\nAssociated frame type.\\nBlocks until a frame was received or an error occured.\\nPuts a frame in the transmit buffer. Blocks until space is \u2026\\nMillisecond delay\\nMicrosecond delay\\nPauses execution for <code>ms</code> milliseconds\\nPauses execution for <code>us</code> microseconds\\nAddress mode (7-bit / 10-bit)\\nError type\\nError type\\nError type\\nError type\\nError type\\nError type\\nError type\\nTransactional I2C operation.\\nBlocking read\\nRead data into the provided buffer\\n7-bit address mode type\\n10-bit address mode type\\nTransactional I2C interface.\\nTransactional I2C interface (iterator version).\\nBlocking write\\nWrite data from the provided buffer\\nBlocking write (iterator version)\\nBlocking write (iterator version) + read\\nBlocking write + read\\nExecute the provided operations on the I2C bus.\\nExecute the provided operations on the I2C bus (iterator \u2026\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nReads enough bytes from slave with <code>address</code> to fill <code>buffer</code>\\nWrites bytes to slave with address <code>address</code>\\nWrites bytes to slave with address <code>address</code>\\nWrites bytes to slave with address <code>address</code> and then reads \u2026\\nWrites bytes to slave with address <code>address</code> and then reads \u2026\\nThe type of error that can occur when writing\\nWrite half of a serial interface (blocking variant)\\nBlock until the serial interface has sent all buffered \u2026\\nWrites a slice\x2C blocking until everything has been written\\nBlocking serial write\\nMarker trait to opt into default blocking write \u2026\\nError type\\nError type\\nAssociated error type\\nOperation for transactional SPI trait\\nTransactional trait allows multiple actions to be executed \u2026\\nBlocking transfer\\nWrite data out while reading data into the provided buffer\\nBlocking write\\nWrite data from the provided buffer\x2C discarding read data\\nExecute the provided transactions\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nBlocking transfer\\nSends <code>words</code> to the slave. Returns the <code>words</code> received from \u2026\\nBlocking write\\nSends <code>words</code> to the slave\x2C ignoring all the incoming words\\nDefault implementation of <code>blocking::spi::Transfer&lt;W&gt;</code> for \u2026\\nDefault implementation of <code>blocking::spi::Write&lt;W&gt;</code> for \u2026\\nAn ACK  error shall be detected by a transmitter whenever \u2026\\nA bit error is detected at that bit time when the bit \u2026\\nCalculated CRC sequence does not equal the received one.\\nCAN error\\nCAN error kind\\nExtended 29-bit Identifier (<code>0..=0x1FFF_FFFF</code>).\\nExtended 29-bit CAN Identifier (<code>0..=1FFF_FFFF</code>).\\nA form error shall be detected when a fixed-form bit field \u2026\\nA CAN2.0 Frame\\nA CAN Identifier (standard or extended).\\nCAN ID <code>0x7FF</code>\x2C the lowest priority.\\nCAN ID <code>0x1FFFFFFF</code>\x2C the lowest priority.\\nA different error occurred. The original error may contain \u2026\\nThe peripheral receive buffer was overrun.\\nStandard 11-bit Identifier (<code>0..=0x7FF</code>).\\nStandard 11-bit CAN Identifier (<code>0..=0x7FF</code>).\\nA stuff error is detected at the bit time of the sixth \u2026\\nCAN ID <code>0</code>\x2C the highest priority.\\nCAN ID <code>0</code>\x2C the highest priority.\\nReturns this CAN Identifier as a raw 16-bit integer.\\nReturns this CAN Identifier as a raw 32-bit integer.\\nReturns the frame data (0..8 bytes in length).\\nReturns the data length code (DLC) which is in the range \u2026\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the frame identifier.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nReturns true if this frame is a data frame.\\nReturns true if this frame is a extended frame.\\nReturns true if this frame is a remote frame.\\nReturns true if this frame is a standard frame.\\nConvert error to a generic CAN error kind\\nNon-blocking CAN API\\nCreates a new frame.\\nTries to create a <code>StandardId</code> from a raw 16-bit integer.\\nTries to create a <code>ExtendedId</code> from a raw 32-bit integer.\\nCreates a new remote frame (RTR bit set).\\nCreates a new <code>StandardId</code> without checking if it is inside \u2026\\nCreates a new <code>ExtendedId</code> without checking if it is inside \u2026\\nReturns the Base ID part of this extended identifier.\\nA CAN interface that is able to transmit and receive \u2026\\nAssociated error type.\\nAssociated frame type.\\nReturns a received frame if available.\\nPuts a frame in the transmit buffer to be sent on the bus.\\nDigital I/O\\nv1 compatibility wrappers\\nDigital I/O\\nv2 compatibility shims\\nSingle digital push-pull output pin\\nDrives the pin high\\nDrives the pin low\\nWrapper to allow fallible <code>v2::OutputPin</code> traits to be \u2026\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nCreate a new OldOutputPin wrapper around a <code>v2::OutputPin</code>\\nError type\\nHigh pin state\\nLow pin state\\nSingle digital push-pull output pin\\nDigital output pin state\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nDrives the pin high\\nDrives the pin low\\nDrives the pin high or low depending on the provided value\\nRead error\\nWrite error\\nRead half of a serial interface\\nWrite half of a serial interface\\nEnsures that none of the previously written words are \u2026\\nReads a single word from the serial interface\\nWrites a single word to the serial interface\\nData in \u201ccaptured\u201d on the first clock transition\\nData in \u201ccaptured\u201d on the second clock transition\\nAn enumeration of SPI errors\\nFull duplex (master mode)\\nClock signal high when idle\\nClock signal low when idle\\nHelper for CPOL = 0\x2C CPHA = 0\\nHelper for CPOL = 0\x2C CPHA = 1\\nHelper for CPOL = 1\x2C CPHA = 0\\nHelper for CPOL = 1\x2C CPHA = 1\\nSPI mode\\nClock phase\\nClock polarity\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nClock phase\\nClock polarity\\nReads the word stored in the shift register\\nSends a word to the slave\\nTrait for cancelable countdowns.\\nA count down timer\\nError returned when a countdown can\u2019t be canceled.\\nMarker trait that indicates that a timer is periodic\\nThe unit of time used by this timer\\nTries to cancel this countdown.\\nStarts a new count down\\nNon-blockingly \u201cwaits\u201d until the count down finishes")
code-source-info,0x2563a95ac78e,123,0,7377,C0O0C5O12C18O12C24O7377,,
code-creation,JS,10,169179,0x2563a95ac8ce,48,loadedDescShard /home/user/rustdoc-js-profile/src/tester.js:186:34,0x7b3c718f430,~
code-source-info,0x2563a95ac8ce,119,7187,7336,C0O7271C5O7282C10O7282C18O7292C22O7299C27O7313C35O7313C41O7300C47O7335,,
code-creation,Eval,10,169260,0x2563a95ad43e,25, :1:1,0x2563a95ad358,~
script-source,124,<unknown>,searchState.loadedDescShard("critical_section"\x2C 0\x2C "critical-section\\nCritical section token.\\nMethods required for a critical section implementation.\\nA mutex based on critical sections.\\nRaw\x2C transparent \u201crestore state\u201d.\\nOpaque \u201crestore state\u201d.\\nAcquire a critical section in the current thread.\\nAcquire the critical section.\\nBorrows the data for the duration of the critical section.\\nBorrow the data and call <code>RefCell::borrow</code>\\nBorrow the data and call <code>RefCell::borrow_mut</code>\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nGets a mutable reference to the contained value when the \u2026\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nUnwraps the contained value\x2C consuming the mutex.\\nCreate an invalid\x2C dummy  <code>RestoreState</code>.\\nCreates a new mutex.\\nCreates a critical section token.\\nRelease the critical section.\\nRelease the critical section.\\nBorrow the data and call <code>RefCell::replace</code>\\nBorrow the data and call <code>RefCell::replace_with</code>\\nSet the critical section implementation.\\nBorrow the data and call <code>RefCell::take</code>\\nExecute closure <code>f</code> in a critical section.")
code-source-info,0x2563a95ad43e,124,0,1260,C0O0C5O12C18O12C24O1260,,
code-creation,JS,10,169444,0x2563a95ae3fe,30,arrayToCode /home/user/rustdoc-js-profile/src/tester.js:4:21,0x7b3c718c9a8,~
code-source-info,0x2563a95ae3fe,119,77,259,C0O104C10O104C16O247C24O248C29O257,,
code-creation,JS,10,169474,0x2563a95ae546,61, /home/user/rustdoc-js-profile/src/tester.js:5:22,0x2563a95ae348,~
code-source-info,0x2563a95ae546,119,108,246,C0O150C8O150C14O165C22O166C29O185C31O199C37O203C47O217C53O225C60O240,,
code-creation,JS,10,169528,0x2563a95ae72e,169, /home/user/rustdoc-js-profile/src/tester.js:247:38,0x1d5f7325ef60,~
code-source-info,0x2563a95ae72e,119,9904,10023,C0O9904C20O9906C57O9912C152O9961C164O9981C168O9989,,
code-creation,JS,11,169681,0x7ee79be43040,352, /home/user/rustdoc-js-profile/src/tester.js:5:22,0x2563a95ae348,^
code-source-info,0x7ee79be43040,119,108,246,,,
code-creation,JS,11,169702,0x7ee79be431c0,208,pushText.name /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:40590,0x1d5f73278840,^
code-source-info,0x7ee79be431c0,121,40589,40618,,,
code-creation,JS,11,169713,0x7ee79be432c0,100,get node:internal/bootstrap/node:379:8,0x305ee1ea4130,^
code-source-info,0x7ee79be432c0,12,13085,13118,,,
code-creation,JS,11,169725,0x7ee79be43340,404, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:65101,0x1d5f7327f028,^
code-source-info,0x7ee79be43340,121,65100,65223,,,
code-creation,JS,11,169738,0x7ee79be43500,316, node:internal/fs/utils:693:42,0x1537ab99cec8,^
code-source-info,0x7ee79be43500,29,19041,19176,,,
code-creation,JS,11,169789,0x7ee79be43680,3036, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:65049,0x1d5f73266a50,^
code-source-info,0x7ee79be43680,121,65048,65286,,,
tick,0x7ee81c1f1015,169890,0,0x0,0,0x7ee81c5711f0,0x1d5f7325f382,0x7ee81bd16d43
code-creation,JS,11,169905,0x7ee79be44280,4516,doSearch /home/user/rustdoc-js-profile/src/tester.js:227:33,0x7b3c718f6f0,^
code-source-info,0x7ee79be44280,119,8841,10574,,,
code-creation,JS,10,170316,0x2563a95af506,203, /home/user/rustdoc-js-profile/src/tester.js:251:42,0x1d5f7325efb0,~
code-source-info,0x2563a95af506,119,10160,10444,C0O10160C20O10162C57O10168C152O10227C158O10234C163O10283C165O10293C166O10368C175O10379C188O10388C202O10410,,
code-creation,RegExp,3,170750,0x7ee79be45440,964,::\\s*::
code-creation,RegExp,3,170784,0x7ee79be84280,1496,(?:::\\s*)|(?:\\s+(?:::\\s*)?)
code-creation,JS,10,170903,0x2563a95b042e,101,sortQ /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:64091,0x1d5f73267698,~
code-source-info,0x2563a95b042e,121,64090,64272,C0O64109C5O64118C11O64124C16O64132C21O64141C27O64145C31O64161C36O64170C42O64176C47O64184C52O64193C58O64197C62O64202C64O64207C69O64214C71O64223C74O64226C75O64238C81O64240C85O64254C91O64256C95O64259C97O64268C100O64271,,
tick,0x7ee81bcdec6d,170955,0,0x0,0,0x7ee81be08491,0x7ee79be6e89a,0x1d5f73266e33,0x7ee79be4446b,0x7b3c718e456,0x7ee81bd16d43
code-creation,JS,10,171517,0x168b8b490a16,343, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:46675,0x1d5f7326e668,~
code-source-info,0x168b8b490a16,121,46674,47284,C0O46689C5O46699C10O46708C16O46714C25O46720C28O46730C33O46739C39O46745C46O46751C49O46758C54O46767C60O46771C69O46777C72O46787C77O46796C83O46800C88O46806C93O46813C97O46837C98O46853C105O46884C112O46891C128O46853C134O46942C136O46956C137O46968C138O47003C143O47060C165O47032C193O47032C196O47067C205O47120C208O47130C236O47083C244O47082C250O47194C256O47221C258O47241C264O47258C271O47022C341O47271C342O47283,,
tick,0x7ee81c88c0a0,172027,0,0x0,0,0x7ee81c571240,0x2563a95af5d0,0x7ee81bd1587f,0x7ee79be44eea,0x7ee81bd16d43
code-creation,JS,11,172037,0x7ee79be84880,1464, /home/user/rustdoc-js-profile/src/tester.js:251:42,0x1d5f7325efb0,^
code-source-info,0x7ee79be84880,119,10160,10444,,,
code-creation,JS,11,172062,0x7ee79be84e80,1236, /home/user/rustdoc-js-profile/src/tester.js:247:38,0x1d5f7325ef60,^
code-source-info,0x7ee79be84e80,119,9904,10023,,,
code-creation,JS,11,172070,0x7ee79be85380,200,arrayToCode /home/user/rustdoc-js-profile/src/tester.js:4:21,0x7b3c718c9a8,^
code-source-info,0x7ee79be85380,119,77,259,,,
code-creation,JS,11,172077,0x7ee79be85480,164,isEndCharacter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2221,0x7b3c71a13e8,^
code-source-info,0x7ee79be85480,121,2220,2255,,,
code-creation,JS,11,172085,0x7ee79be85540,204, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:41878,0x1d5f73278a78,^
code-source-info,0x7ee79be85540,121,41877,41927,,,
code-creation,JS,11,172105,0x7ee79be85640,1628,loadDesc /home/user/rustdoc-js-profile/src/tester.js:165:33,0x7b3c718f360,^
code-source-info,0x7ee79be85640,119,6283,7152,,,
code-creation,RegExp,3,172252,0x7ee79be85cc0,844,\\r|\\n|\\t
tick,0x7ee81bcd5e46,173102,0,0x0,0,0x7ee79be6efbb,0x7ee79be6ea7f,0x1d5f73266e33,0x7ee79be4446b,0x7b3c718e456,0x7ee81bd16d43
tick,0x7ee819b1d9bd,174261,0,0x0,4,0x7ee81c570e40,0x7ee81bd52db8,0x7ee79be7b9a9,0x7ee79be789f4,0x1d5f73266ea1,0x7ee79be4446b,0x7b3c718e456,0x7ee81bd16d43
code-creation,JS,13,174968,0x7ee79be86040,1840,compareTypeFingerprints /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:59324,0x1d5f732669b0,*
code-source-info,0x7ee79be86040,121,59323,59691,C0O59323C52O59361C60O59366C94O59396C126O59389C177O59449C189O59438C209O59502C221O59491C241O59525C265O59512C406O59516C573O59520C685O59565C702O59573C718O59581C734O59520C741O59556C748O59565C750O59556C757O59595C767O59573C770O59608C782O59581C785O59621C796O59581C800O59573C804O59565C808O59641C816O59653C840O59687C850O59676C889O59690C934O59640C943O59323C997O59512C1166O59516C1338O59520C1489O59565C1527O59573C1555O59581C1638O59690,,
tick,0x7ee81bd1a995,175332,0,0x0,0,0x7ee79be7ed68,0x7ee79be7bd23,0x7ee79be789f4,0x1d5f73266ea1,0x7ee79be4446b,0x7b3c718e456,0x7ee81bd16d43
code-creation,Eval,10,175934,0x307edb91433e,25, :1:1,0x307edb914258,~
script-source,125,<unknown>,searchState.loadedDescShard("cortex_m"\x2C 0\x2C "Low level access to Cortex-M processors\\nMiscellaneous assembly instructions\\nA delay driver based on SysTick.\\nInterrupts\\nMacro for sending a formatted string through an ITM channel\\nMacro for sending a formatted string through an ITM \u2026\\nInstrumentation Trace Macrocell\\nCore peripherals.\\nProcessor core registers\\nMacro to create a mutable reference to a statically \u2026\\nData Memory Barrier\\nData Synchronization Barrier\\nInstruction Synchronization Barrier\\nA no-operation. Useful to prevent delay loops from being \u2026\\nSystem timer (SysTick) as a delay provider.\\nDelay using the Cortex-M systick for a certain duration\x2C \u2026\\nDelay using the Cortex-M systick for a certain duration\x2C \u2026\\nReleases the system timer (SysTick) resource.\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nConfigures the system timer (SysTick) as a delay provider.\\nConfigures the system timer (SysTick) as a delay provider \u2026\\nTrait for enums of external interrupt numbers.\\nReturn the interrupt number associated with this variant.\\nA wrapper type that aligns its contents on a 4-Byte \u2026\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nWrites a 4-byte aligned <code>buffer</code> to an ITM port.\\nWrites <code>buffer</code> to an ITM port.\\nWrites <code>fmt::Arguments</code> to the ITM <code>port</code>\\nWrites a string to the ITM <code>port</code>\\nCache and branch predictor maintenance operations\\nCache and branch predictor maintenance operations. Not \u2026\\nCPUID\\nCPUID\\nDebug Control Block\\nDebug Control Block\\nData Watchpoint and Trace unit\\nData Watchpoint and Trace unit\\nFlash Patch and Breakpoint unit\\nFlash Patch and Breakpoint unit. Not available on Armv6-M.\\nFloating Point Unit\\nFloating Point Unit.\\nImplementation Control Block.\\nImplementation Control Block.\\nInstrumentation Trace Macrocell\\nInstrumentation Trace Macrocell. Not available on Armv6-M \u2026\\nMemory Protection Unit\\nMemory Protection Unit\\nNested Vector Interrupt Controller\\nNested Vector Interrupt Controller\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nPointer to the register block\\nCore peripherals\\nSecurity Attribution Unit\\nSecurity Attribution Unit\\nSystem Control Block\\nSystem Control Block\\nSysTick: System Timer\\nSysTick: System Timer\\nTrace Port Interface Unit\\nTrace Port Interface Unit. Not available on Armv6-M.\\nBranch predictor invalidate all\\nReturns log2 of the number of words in the smallest cache \u2026\\nReturns log2 of the number of words in the smallest cache \u2026\\nReturns the number of sets and ways in the selected cache\\nCache and branch predictor maintenance operations\\nCleans the entire D-cache.\\nCleans D-cache by address.\\nCleans an object from the D-cache.\\nCleans a slice from D-cache.\\nCleans and invalidates the entire D-cache.\\nCleans and invalidates D-cache by address.\\nClears current value to 0\\nSet the PENDSTCLR bit in the ICSR register which will \u2026\\nSet the PENDSVCLR bit in the ICSR register which will \u2026\\nClear the SLEEPDEEP bit in the SCR register\\nClear the SLEEPONEXIT bit in the SCR register\\nConfigures the ITM with the passed ITMSettings.\\nGet the CPI count\\nCPUID\\nReturns the current clock cycle count\\nReturns <code>true</code> if the cycle counter is enabled\\nReturns whether the D-cache is currently enabled.\\nDebug Control Block\\nD-cache clean and invalidate by MVA to PoC\\nD-cache clean and invalidate by set-way\\nD-cache clean by MVA to PoC\\nD-cache clean by MVA to PoU\\nD-cache clean by set-way\\nD-cache invalidate by MVA to PoC\\nD-cache invalidate by set-way\\nDisable the exception\\nDisables counter\\nDisables the cycle counter\\nDisables D-cache if currently enabled.\\nDisables the <code>DebugMonitor</code> exception\\nDisables exception tracing\\nDisables I-cache if currently enabled.\\nDisables SysTick interrupt\\nDisables TRACE. See <code>DCB::enable_trace()</code> for more details\\nData Watchpoint and Trace unit\\nEnable the exception\\nWhether to enable the formatter. If disabled\x2C only ITM and \u2026\\nEnables counter\\nEnables the cycle counter\\nEnables D-cache if currently disabled.\\nEnables the <code>DebugMonitor</code> exception\\nEnables exception tracing\\nEnables I-cache if currently disabled.\\nEnables SysTick interrupt\\nWhether to periodically generate PC samples\\nEnables TRACE. This is for example required by the \u2026\\nGet the total cycles spent in exception processing\\nGet the folded instruction count\\nFlash Patch and Breakpoint unit\\nFloating Point Unit\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nGets clock source\\nGets current value\\nReturns the current clock cycle count\\nReturns the NVIC priority of <code>interrupt</code>\\nReturns the hardware priority of <code>system_handler</code>\\nGets reload value\\nReturns the reload value with which the counter would wrap \u2026\\nReturns <code>true</code> if the implementation supports a cycle counter\\nReturns <code>true</code> if the the implementation supports sampling \u2026\\nReturns <code>true</code> if the implementation includes external match \u2026\\nReturns <code>true</code> if the implementation the profiling counters\\nChecks if an external reference clock is available\\nChecks if the counter wrapped (underflowed) since the last \u2026\\nReturns whether the I-cache is currently enabled.\\nImplementation Control Block\\nI-cache invalidate all to PoU\\nI-cache invalidate by MVA to PoU\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nInvalidates D-cache by address.\\nInvalidates an object from the D-cache.\\nInvalidates a slice from the D-cache.\\nInvalidates the entire I-cache.\\nIs <code>interrupt</code> active or pre-empted and stacked\\nChecks if counter is enabled\\nIs there a debugger attached? (see note)\\nChecks if <code>interrupt</code> is enabled\\nCheck if an exception is enabled\\nChecks if SysTick interrupt is enabled\\nChecks if <code>interrupt</code> is pending\\nCheck if PENDSTSET bit in the ICSR register is set meaning \u2026\\nCheck if PENDSVSET bit in the ICSR register is set meaning \u2026\\nChecks if the calibration value is precise\\nInstrumentation Trace Macrocell\\nGet the additional cycles required to execute all load or \u2026\\nDisables <code>interrupt</code>\\nMemory Protection Unit\\nNumber of comparators implemented\\nNested Vector Interrupt Controller\\nForces <code>interrupt</code> into pending state\\nRequest an IRQ in software\\nSystem Control Block\\nSelects the current CCSIDR\\nSets clock source\\nSet the CPI count\\nSet the cycle count\\nSet the exception count\\nSet the folded instruction count\\nSet the lsu count\\nSet the PENDSTSET bit in the ICSR register which will pend \u2026\\nSet the PENDSVSET bit in the ICSR register which will pend \u2026\\nSets the \u201cpriority\u201d of <code>interrupt</code> to <code>prio</code>\\nSets the hardware priority of <code>system_handler</code> to <code>prio</code>\\nSets reload value\\nSet the sleep count\\nSet the SLEEPDEEP bit in the SCR register\\nSet the SLEEPONEXIT bit in the SCR register\\nSets the prescaler value for a wanted baud rate of the \u2026\\nSets the used protocol for the trace output.\\nGet the total number of cycles that the processor is \u2026\\nUnchecked version of <code>Peripherals::take</code>\\nReads the supported trace output modes and the minimum \u2026\\nInitiate a system reset request to reset the MCU\\nSysTick: System Timer\\nReturns all the core peripherals <em>once</em>\\nTrace Port Interface Unit;\\nThe used protocol for the trace output. Return <code>None</code> if an \u2026\\nRemoves the software lock on the DWT\\nRemoves the software lock on the ITM.\\nEnables <code>interrupt</code>\\nClears <code>interrupt</code>\u2019s pending state\\nReturns the active exception number\\nRegister block\\nBranch predictor invalidate all\\nD-cache clean and invalidate by MVA to PoC\\nD-cache clean and invalidate by set-way\\nD-cache clean by MVA to PoC\\nD-cache clean by MVA to PoU\\nD-cache clean by set-way\\nD-cache invalidate by MVA to PoC\\nD-cache invalidate by set-way\\nReturns the argument unchanged.\\nI-cache invalidate all to PoU\\nI-cache invalidate by MVA to PoU\\nCalls <code>U::from(self)</code>.\\nType of cache to select on CSSELR writes.\\nSelect DCache or unified cache\\nSelect ICache\\nRegister block\\nAuxiliary Feature (not present on Cortex-M0 variants)\\nCPUID base\\nCache Size ID (only present on Cortex-M7)\\nCache Level ID (only present on Cortex-M7)\\nCache Size Selection (only present on Cortex-M7)\\nCache Type (only present on Cortex-M7)\\nDebug Feature (not present on Cortex-M0 variants)\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nInstruction Set Attribute (not present on Cortex-M0 \u2026\\nMemory Model Feature (not present on Cortex-M0 variants)\\nProcessor Feature (not present on Cortex-M0 variants)\\nRegister block\\nDebug Core Register Data\\nDebug Core Register Selector\\nDebug Exception and Monitor Control\\nDebug Halting Control and Status\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nWhether the comparator should match on read\x2C write or \u2026\\nEmit only trace address packet.\\nCompare accessed memory addresses.\\nEmit trace address and data value packets.\\nComparator\\nSettings for address matching\\nThe available functions of a DWT comparator.\\nGenerate a <code>CMPMATCH[N]</code> event.\\nControl register.\\nCompare cycle count &amp; target value.\\nSettings for cycle count matching\\nEmit only trace data value packet.\\nPossible error values returned on Comparator::configure.\\nThe sequence of packet(s) or events that should be \u2026\\nComparator FUNCTIONn register.\\nInvalid combination of AccessType and EmitOption.\\nEmit only trace PC value packet\\nEmit trace PC value and data value packets.\\nGenerate packet only when matched address is read from.\\nGenerate packet when matched address is both read from and \u2026\\nRegister block\\nGenerate a watchpoint debug event. Either halts execution \u2026\\nGenerate packet only when matched address is written to.\\nWhether to match on read\x2C write or read/write operations.\\nThe address to match against.\\nComparators\\nComparator\\nThe cycle count value to compare against.\\nConfigure the function of the comparator\\nCPI Count\\nControl\\nCycle Count\\nWhat sequence of packet(s) to emit on comparator match.\\nThe function selection used. See Table C1-15 for DWT cycle \u2026\\nException Overhead Count\\nFolded-instruction Count\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nComparator Function\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nLock Access\\nLock Status\\nLSU Count\\nComparator Mask\\nThe address mask to match against.\\nProgram Counter Sample\\nSleep Count\\nRegister block\\nComparator\\nControl\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nLock Access\\nLock Status\\nRemap\\nRegister block\\nFloating Point Context Address\\nFloating Point Context Control\\nFloating Point Default Status Control\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nMedia and FP Feature\\nRegister block\\nAuxiliary Control Register\\nReturns the argument unchanged.\\nInterrupt Controller Type Register\\nCalls <code>U::from(self)</code>.\\nClock timestamp counters using the asynchronous clock from \u2026\\nDisable local timestamps.\\nDisable global timestamps.\\nEnable local timestamps and use no prescaling.\\nEnable local timestamps and set the prescaler to divide the\\nEnable local timestamps and set the prescaler to divide the\\nEnable local timestamps and set the prescaler to divide the\\nGenerate a global timestamp approximately every 128 cycles.\\nGenerate a global timestamp approximately every 8921 \u2026\\nGenerate a global timestamp after every packet\x2C if the \u2026\\nThe possible global timestamp options.\\nAvailable settings for the ITM peripheral.\\nThe possible local timestamp options.\\nRegister block\\nStimulus Port\\nClock timestamp counters using the system processor clock.\\nTrace Control Register.\\nThe possible clock sources for timestamp counters.\\nThe trace bus ID to use when multi-trace sources are in \u2026\\nWhether to enable ITM.\\nWhether DWT packets should be forwarded to ITM.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nThe global timestamp options that should be applied.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nReturns <code>true</code> if the stimulus port is ready to accept more \u2026\\nLock Access\\nThe local timestamp options that should be applied.\\nLock Status\\nStimulus Port\\nTrace Control\\nTrace Enable\\nThe clock that should increase timestamp counters.\\nTrace Privilege\\nWrites an <code>u16</code> payload into the stimulus port\\nWrites an <code>u32</code> payload into the stimulus port\\nWrites an <code>u8</code> payload into the stimulus port\\nRegister block for ARMv7-M\\nType\\nControl\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nRegion Attribute and Size\\nAlias 1 of RASR\\nAlias 2 of RASR\\nAlias 3 of RASR\\nRegion Base Address\\nAlias 1 of RBAR\\nAlias 2 of RBAR\\nAlias 3 of RBAR\\nRegion Number\\nRegister block\\nReturns the argument unchanged.\\nInterrupt Active Bit (not present on Cortex-M0 variants)\\nInterrupt Clear-Enable\\nInterrupt Clear-Pending\\nCalls <code>U::from(self)</code>.\\nInterrupt Priority\\nInterrupt Set-Enable\\nInterrupt Set-Pending\\nSoftware Trigger Interrupt\\nBus fault interrupt (not present on Cortex-M0 variants)\\nBus fault interrupt (not present on Cortex-M0 variants)\\nDebug monitor interrupt (not present on Cortex-M0 variants)\\nDebug monitor interrupt (not present on Cortex-M0 variants)\\nProcessor core exceptions (internal interrupts)\\nProcessor core exception (internal interrupts)\\nHard fault interrupt\\nDevice specific exception (external interrupts)\\nMemory management interrupt (not present on Cortex-M0 \u2026\\nMemory management interrupt (not present on Cortex-M0 \u2026\\nNon maskable interrupt\\nPend SV interrupt\\nPend SV interrupt\\nRegister block\\nSV call interrupt\\nSV call interrupt\\nSecure fault interrupt (only on ARMv8-M)\\nSecure fault interrupt (only on ARMv8-M)\\nSystem Tick interrupt\\nSystem Tick interrupt\\nSystem handlers\x2C exceptions with configurable priority\\nThread mode\\nUsage fault interrupt (not present on Cortex-M0 variants)\\nUsage fault interrupt (not present on Cortex-M0 variants)\\nActive exception number\\nAuxiliary Fault Status (not present on Cortex-M0 variants)\\nApplication Interrupt and Reset Control\\nBusFault Address (not present on Cortex-M0 variants)\\nConfiguration and Control\\nConfigurable Fault Status (not present on Cortex-M0 \u2026\\nCoprocessor Access Control (not present on Cortex-M0 \u2026\\nDebug Fault Status (not present on Cortex-M0 variants)\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nConverts a vector number into <code>VectActive</code>\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nHardFault Status (not present on Cortex-M0 variants)\\nInterrupt Control and State\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nReturns the IRQ number of this <code>Exception</code>\\nMemManage Fault Address (not present on Cortex-M0 variants)\\nSystem Control\\nSystem Handler Control and State\\nSystem Handler Priority (word accessible only on Cortex-M0 \u2026\\nVector Table Offset (not present on Cortex-M0 variants)\\nInterrupt number. This number is always within half open \u2026\\nCore-provided clock\\nExternal reference clock\\nRegister block\\nSysTick clock source\\nCalibration Value\\nControl and Status\\nCurrent Value\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nReload Value\\nAsynchronous SWO\x2C using Manchester encoding\\nAsynchronous SWO\x2C using NRZ encoding\\nFormatter and flush control register.\\nParallel trace port mode\\nRegister block\\nThe SWO options supported by the TPIU\x2C and the mimimum \u2026\\nSelected pin protocol register.\\nThe available protocols for the trace output.\\nTPIU Type Register.\\nTPIU Type\\nAsynchronous Clock Prescaler\\nCurrent Parallel Port Size\\nFormatter and Flush Control\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nLock Access\\nLock Status\\nWhether Manchester encoding is supported for SWO.\\nThe minimum implemented FIFO queue size of the TPIU for \u2026\\nWhether UART/NRZ encoding is supported for SWO.\\nWhether parallel trace port operation is supported.\\nSelected Pin Control\\nSupported Parallel Port Sizes\\nTries to convert from a <code>TXMODE</code> field value. Fails if the \u2026\\nApplication Program Status Register\\nBase Priority Mask Register\\nBase Priority Mask Register (conditional write)\\nControl register\\nFault Mask Register\\nLink register\\nMain Stack Pointer\\nProgram counter\\nPriority mask register\\nProcess Stack Pointer\\nApplication Program Status Register\\nReturns the contents of the register as raw bits\\nCarry or borrow flag\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nNegative flag\\nDSP overflow and saturation flag\\nOverflow flag\\nZero flag\\nFloating-point context active.\\nControl register\\nWhether context floating-point is currently active\\nMSP is the current stack pointer\\nNo floating-point context active\\nThread mode privilege level\\nPrivileged\\nPSP is the current stack pointer\\nCurrently active stack pointer\\nUnprivileged\\nReturns the contents of the register as raw bits\\nWhether context floating-point is currently active\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nCreates a <code>Control</code> value from raw bits.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nIs a floating-point context active?\\nIs MSP the current stack pointer?\\nIs a floating-point context not active?\\nIs in privileged thread mode?\\nIs PSP the current stack pointer?\\nIs in unprivileged thread mode?\\nThread mode privilege level\\nSets the FPCA value.\\nSets the thread mode privilege level value (nPRIV).\\nSets the SPSEL value.\\nCurrently active stack pointer\\nActive\\nAll exceptions are \u2026\\nInactive\x2C expect for NMI\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nAll exceptions are active\\nAll exceptions\x2C except for NMI\x2C are inactive\\nActive\\nInactive\\nAll exceptions with configurable priority are \u2026\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nAll exceptions with configurable priority are active\\nAll exceptions with configurable priority are inactive")
code-source-info,0x307edb91433e,125,0,20922,C0O0C5O12C18O12C24O20922,,
code-creation,Eval,10,176337,0x307edb9146e6,25, :1:1,0x307edb914600,~
script-source,126,<unknown>,searchState.loadedDescShard("vcell"\x2C 0\x2C "Just like <code>Cell</code> but with volatile read / write operations\\nJust like <code>Cell</code> but with volatile read / write operations\\nReturns a raw pointer to the underlying data in the cell\\nReturns the argument unchanged.\\nReturns a copy of the contained value\\nCalls <code>U::from(self)</code>.\\nCreates a new <code>VolatileCell</code> containing the given value\\nSets the contained value")
code-source-info,0x307edb9146e6,126,0,442,C0O0C5O12C18O12C24O442,,
code-creation,Eval,10,176399,0x307edb914cfe,25, :1:1,0x307edb914c18,~
script-source,127,<unknown>,searchState.loadedDescShard("void"\x2C 0\x2C "Void\\nExtensions to <code>Result&lt;Void\x2C E&gt;</code>\\nExtensions to <code>Result&lt;T\x2C Void&gt;</code>\\nThe empty type for cases which can\u2019t occur.\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nA safe version of <code>intrinsincs::unreachable</code>.\\nGet the value out of a wrapper.\\nGet the error out of a wrapper.")
code-source-info,0x307edb914cfe,127,0,383,C0O0C5O12C18O12C24O383,,
code-creation,Eval,10,176568,0x307edb9153a6,25, :1:1,0x307edb9152c0,~
script-source,128,<unknown>,searchState.loadedDescShard("volatile_register"\x2C 0\x2C "Volatile access to memory mapped hardware registers\\nRead-Only register\\nRead-Write register\\nWrite-Only register\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nReturns the argument unchanged.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nCalls <code>U::from(self)</code>.\\nPerforms a read-modify-write operation\\nReads the value of the register\\nReads the value of the register\\nWrites a <code>value</code> into the register\\nWrites <code>value</code> into the register")
code-source-info,0x307edb9153a6,128,0,570,C0O0C5O12C18O12C24O570,,
tick,0x7ee81c0aa930,176859,0,0x0,0,0x7ee81c58a430,0x7ee81bd5d432,0x2563a95ac8f1,0x307edb914d10,0x307edb909896,0x307edb9096c6
code-creation,JS,11,177096,0x7ee79be867c0,488,consumeIdent /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:15199,0x7b3c71a18e8,^
code-source-info,0x7ee79be867c0,121,15198,15371,,,
code-creation,JS,11,177110,0x7ee79be869c0,100,get /home/user/rustdoc-js-profile/node_modules/0x/lib/preload/redir-stdout.js:19:10,0x3f3f8b6b66c0,^
code-source-info,0x7ee79be869c0,112,392,404,,,
code-creation,JS,11,177121,0x7ee79be86a40,336,createWriteWrap node:internal/stream_base_commons:110:25,0x3f3f8b68d200,^
code-source-info,0x7ee79be86a40,101,2773,2987,,,
code-creation,JS,11,177130,0x7ee79be86bc0,328,writeGeneric node:internal/stream_base_commons:148:22,0x3f3f8b68d2a0,^
code-source-info,0x7ee79be86bc0,101,3651,3835,,,
code-creation,JS,11,177138,0x7ee79be86d40,156,Socket._write node:net:965:35,0x8b517ffb448,^
code-source-info,0x7ee79be86d40,80,25222,25295,,,
code-creation,JS,11,177155,0x7ee79be86e00,524,skipWhitespace /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2449,0x7b3c71a14d8,^
code-source-info,0x7ee79be86e00,121,2448,2599,,,
code-creation,JS,11,177164,0x7ee79be87040,72,isInt32 node:internal/validators:43:17,0x307edb925ad8,^
code-source-info,0x7ee79be87040,15,1085,1128,,,
code-creation,JS,11,177181,0x7ee79be870c0,1108,getOptions node:internal/fs/utils:321:20,0x2bf7c803f520,^
code-source-info,0x7ee79be870c0,29,7410,8017,,,
code-creation,JS,11,177191,0x7ee79be87540,492,_unrefTimer node:net:507:52,0x8b517ffa4c0,^
code-source-info,0x7ee79be87540,80,14079,14189,,,
code-creation,JS,11,177207,0x7ee79be87740,872,afterWriteDispatched node:internal/stream_base_commons:156:30,0x3f3f8b68d2f0,^
code-source-info,0x7ee79be87740,101,3866,4144,,,
code-creation,JS,11,177217,0x7ee79be87ac0,308,Writable.write node:internal/streams/writable:502:36,0xcb902b792c0,^
code-source-info,0x7ee79be87ac0,96,15402,15585,,,
code-creation,JS,11,177227,0x7ee79be87c40,564,set node:internal/streams/writable:260:8,0xcb902b78f30,^
code-source-info,0x7ee79be87c40,96,8339,8500,,,
tick,0x7ee81c1c32cc,177531,0,0x0,3,0x7ee81c5678d0,0x7ee79be70695,0x7ee79be74c23,0x7ee79be6f4a9,0x7ee79be6efbb,0x7ee79be6ea7f,0x1d5f73266e33,0x7ee79be4446b,0x7b3c718e456,0x7ee81bd16d43
code-creation,JS,10,177562,0x307edb91673e,1233,unifyGenericTypes /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:48701,0x1d5f73266460,~
code-source-info,0x307edb91673e
code-creation,JS,11,178090,0x7ee79be87ec0,3328,_write node:internal/streams/writable:451:16,0xcb902b78800,^
code-source-info,0x7ee79be87ec0,96,13982,15365,,,
code-creation,JS,11,178138,0x7ee79be88c00,3980,writeOrBuffer node:internal/streams/writable:546:23,0xcb902b78850,^
code-source-info,0x7ee79be88c00,96,16561,17743,,,
code-creation,JS,11,178691,0x7ee79be89bc0,6036,onwrite node:internal/streams/writable:613:17,0xcb902b78940,^
code-source-info,0x7ee79be89bc0,96,18587,21177,,,
code-creation,JS,11,178738,0x7ee79be8b380,1656,Socket._writeGeneric node:net:923:42,0x8b517ffb300,^
code-source-info,0x7ee79be8b380,80,24181,25085,,,
code-creation,JS,11,178751,0x7ee79be8ba40,116,isSeparatorCharacter /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:2285,0x7b3c71a1438,^
code-source-info,0x7ee79be8ba40,121,2284,2312,,,
code-creation,JS,11,178762,0x7ee79be8bb00,88, /home/user/rustdoc-js-profile/tmp/cortex-m/toolchain_new/doc/static.files/search-d358be07.js:1:11468,0x1d5f73263a80,^
code-source-info,0x7ee79be8bb00,121,11467,11485,,,
tick,0x7ee81c21c8b5,178778,0,0x0,0,0x7ee81c571240,0x1d5f7325eacb,0x7ee79be87a8c,0x7ee79be86cee,0x1d5f7325d15a,0x7ee79be86dc1,0x7ee79be8982a,0x7ee79be88bad,0x7ee79be87bc0,0x7b3c718e4de,0x7ee81bd16d43
code-creation,JS,10,178913,0x307edb9181ee,15, /home/user/rustdoc-js-profile/src/tester.js:357:9,0x7b3c718cd60,~
code-source-info,0x307edb9181ee,119,13739,13759,C0O13752C4O13752C9O13752C14O13759,,
code-creation,JS,10,178974,0x307edb91831e,162,exit node:internal/process/per_thread:175:16,0x1537ab9bf208,~
code-source-info,0x307edb91831e,28,4789,5889,C0O4789C2O4832C10O4832C15O4810C20O4874C25O4882C33O4882C39O4933C45O4940C50O4955C57O4972C61O4991C66O5004C72O5022C78O5039C82O5053C87O5061C100O5082C110O5094C113O5061C119O5306C124O5314C134O5333C144O5345C147O5314C152O5879C157O5879C161O5888,,
code-creation,JS,10,179090,0x307edb918546,322,removeListener node:events:681:28,0x305ee1ea7c28,~
code-source-info,0x307edb
code-creation,JS,10,179148,0x307edb918866,151, node:internal/validators:93:3,0x307edb925c68,~
code-source-info,0x307edb918866,15,2420,2801,C12O2440C25O2470C32O2503C38O2540C54O2546C59O2540C60O2599C65O2604C71O2634C87O2640C92O2634C93O2693C95O2703C102O2718C107O2731C117O2770C130O2783C143O2737C148O2731C150O2800,,
code-creation,JS,10,179177,0x307edb918a06,21,get node:internal/bootstrap/node:100:8,0x19f2a9a75068,~
code-source-info,0x307edb918a06,12,3833,3880,C0O3844C9O3858C11O3857C17O3868C20O3874,,
code-creation,JS,10,179192,0x307edb918af6,5,get node:internal/bootstrap/node:113:8,0x19f2a9a75108,~
code-source-info,0x307edb918af6,12,4089,4122,C0O4100C4O4116,,
tick,0x7ee819aa2da7,179848,1,0x7ee81a69ff00,6,0x7ee81bf0da80,0x307edb9183b1,0x307edb9181f7
tick,0x7ee819aa2da7,180876,1,0x7ee81a69ff00,6,0x7ee81bf0da80,0x307edb9183b1,0x307edb9181f7
tick,0x7ee819ab4ab0,181937,1,0x7ee81a69ff00,6,0x7ee81bf0da80,0x307edb9183b1,0x307edb9181f7
